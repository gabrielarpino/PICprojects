MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877                 ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1
  0000003C            00034                 Location2 
  0000003D            00035                 NumH
  0000003E            00036                 NumL
  0000003F            00037                 TenK
  00000040            00038                 Thou
  00000041            00039                 Hund
  00000042            00040                 Tens
  00000043            00041                 Ones
  00000044            00042                 distanceMoved
  00000045            00043                 isColumnThere
  00000046            00044                 frontstickerValues
  00000047            00045                 backstickerValues
  00000048            00046                 frontbinCounter
  00000049            00047                 backbinCounter
  0000004A            00048                 binCounter
                      00049         endc    
                      00050 
                      00051         ;Declare constants for pin assignments (LCD on PORTD)
                      00052                 #define RS      PORTD,2
                      00053                 #define E       PORTD,3
                      00054                 #define IR1     PORTA,0
                      00055                 #define IR2     PORTA,1
                      00056                 #define US      PORTA,2
                      00057                 #define DCMotor PORTA,3
                      00058                 
                      00059 ;distanceMoved  equ     b'0'
                      00060 
                      00061          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00062          goto      init       ;Just jump to the main code section.
                      00063          
                      00064          ;ORG      0x100        ;this command is sketchy
                      00065          
                      00066 
                      00067 Key      macro  value, subroutine
                      00068          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00069          andlw          0x0F
                      00070          xorlw          value
                      00071          btfsc          STATUS, Z
                      00072          call           subroutine
                      00073         endm
                      00074 
                      00075 Rotation macro  value
                      00076          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00077          andlw          0x0F
                      00078          xorlw          value
                      00079          btfsc          STATUS, Z
                      00080          call           ShiftLeft
                      00081         endm
                      00082 
                      00083 ;***************************************
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00084 ; Delay: ~160us macro
                      00085 ;***************************************
                      00086 LCD_DELAY macro
                      00087         movlw   0xFF
                      00088         movwf   lcd_d1
                      00089         decfsz  lcd_d1,f
                      00090         goto    $-1
                      00091         endm
                      00092         
                      00093 ;***************************************
                      00094 ; Display macro
                      00095 ;***************************************
                      00096 Display macro   Message
                      00097                 local   loop_
                      00098                 local   end_
                      00099                 clrf    Table_Counter
                      00100                 clrw            
                      00101 loop_   movf    Table_Counter,W
                      00102                 call    Message
                      00103                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00104                 btfsc   STATUS,Z
                      00105                         goto    end_
                      00106                 call    WR_DATA
                      00107                 incf    Table_Counter,F
                      00108                 goto    loop_
                      00109 end_
                      00110                 endm
                      00111                 
                      00112 ;*******************************************************
                      00113 ;******             BCD                 ****************
                      00114 ;*******************************************************
                      00115         
                      00116 ;---------------- Binary (16-bit) to BCD -----------------------
                      00117 ;
                      00118 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00119 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00120                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00121 ;
                      00122 ; Uses variables
                      00123 ; NumH, NumL
                      00124 ; TenK, Thou, Hund, Tens, Ones
                      00125                 
                      00126 ;BCD    macro   NumH, NumL
                      00127 
0001                  00128 bin16_BCD
0001   0E3D           00129         swapf   NumH, W
0002   390F           00130         andlw   0x0F
0003   3EF0           00131         addlw   0xF0
0004   00C0           00132         movwf   Thou 
0005   07C0           00133         addwf   Thou, F 
0006   3EE2           00134         addlw   0xE2 
0007   00C1           00135         movwf   Hund 
0008   3E32           00136         addlw   0x32 
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009   00C3           00137         movwf   Ones 
                      00138 
000A   083D           00139         movf    NumH, W 
000B   390F           00140         andlw   0x0F 
000C   07C1           00141         addwf   Hund, F 
000D   07C1           00142         addwf   Hund, F 
000E   07C3           00143         addwf   Ones, F 
000F   3EE9           00144         addlw   0xE9 
0010   00C2           00145         movwf   Tens 
0011   07C2           00146         addwf   Tens, F 
0012   07C2           00147         addwf   Tens, F 
                      00148 
0013   0E3E           00149         swapf   NumL, W 
0014   390F           00150         andlw   0x0F 
0015   07C2           00151         addwf   Tens, F 
0016   07C3           00152         addwf   Ones, F 
                      00153 
0017   0DC2           00154         rlf    Tens, F 
0018   0DC3           00155         rlf    Ones, F 
0019   09C3           00156         comf    Ones, F 
001A   0DC3           00157         rlf    Ones, F 
                      00158 
001B   083E           00159         movf    NumL, W 
001C   390F           00160         andlw   0x0F 
001D   07C3           00161         addwf   Ones, F 
001E   0DC0           00162         rlf    Thou,F 
                      00163 
001F   3007           00164         movlw   0x07 
0020   00BF           00165         movwf   TenK 
                      00166 
0021   300A           00167         movlw   0x0A
0022                  00168 Lb1
0022   03C2           00169         decf    Tens, F 
0023   07C3           00170         addwf   Ones, F 
0024   1C03           00171         btfss   STATUS, C 
0025   2???           00172         goto            Lb1 
0026                  00173 Lb2
0026   03C1           00174         decf    Hund, F 
0027   07C2           00175         addwf   Tens, F 
0028   1C03           00176         btfss   STATUS,C 
0029   2???           00177         goto            Lb2 
002A                  00178 Lb3
002A   03C0           00179         decf    Thou, F 
002B   07C1           00180         addwf   Hund, F 
002C   1C03           00181         btfss   STATUS,C
002D   2???           00182         goto            Lb3 
002E                  00183 Lb4
002E   03BF           00184         decf    TenK, F 
002F   07C0           00185         addwf   Thou, F 
0030   1C03           00186         btfss   STATUS,C 
0031   2???           00187         goto            Lb4 
                      00188 
0032   3400           00189         retlw   0
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0033   0008           00190         return
                      00191 ;endm
                      00192 
                      00193 ;***************************************
                      00194 ; Initialize
                      00195 ;***************************************
0034                  00196 init
0034   018B           00197          clrf      INTCON         ; No interrupts
                      00198 
0035   1683           00199          bsf       STATUS,RP0     ; select bank 1
0036   0185           00200          clrf      TRISA          ; All port A is output
0037   30F2           00201          movlw     b'11110010'    ; Set required keypad inputs
0038   0086           00202          movwf     TRISB
0039   0187           00203          clrf      TRISC          ; All port C is output
003A   0188           00204          clrf      TRISD          ; All port D is output
                      00205          
                      00206                   ;Set SDA and SCL to high-Z first as required for I2C
003B   1607           00207                  bsf       TRISC,4                
003C   1587           00208                  bsf       TRISC,3
                      00209 
003D   1283           00210          bcf       STATUS,RP0     ; select bank 0
003E   0185           00211          clrf      PORTA
003F   0186           00212          clrf      PORTB
0040   0187           00213          clrf      PORTC
0041   0188           00214          clrf      PORTD
                      00215          
                      00216         ;Set up I2C for communication
                      00217                  
0042   2???           00218         call       i2c_common_setup
                      00219 ;*******************************************************************************
                      00220         ; UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00221         ;rtc_resetAll
                      00222         ;call set_rtc_time
                      00223 ;*******************************************************************************
                      00224                  
                      00225                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00226                  ;call     set_rtc_time
                      00227           
0043   2???           00228          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00229           ;A/D converter attempt
                      00230          
0044   1303           00231          bcf    STATUS,RP1
0045   1683           00232          bsf    STATUS,RP0      ;Select bank 1
                      00233          
0046   1405           00234          bsf    IR1             ;makes RA0 an input
0047   1283           00235          bcf    STATUS,RP0      ; go back to bank 0
                      00236          
0048   1507           00237         bsf     PORTC,2         ; gives RC2 5 volts
                      00238          
                      00239         ; Set ADCON1 to use RA0 as analog input
                      00240         
                      00241         
0049   1683           00242         bsf     STATUS,RP0      ;Select bank 1
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004A   3006           00243         movlw   b'00000110'     ;left justified, all inputs digital
004B   009F           00244         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00245 
                      00246         ;ADCON0
004C   1283           00247         bcf     STATUS,RP0
004D   30C5           00248         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
004E   009F           00249         movwf   ADCON0
                      00250         
                      00251 ;***************************************************
                      00252 ; Initialize variables and Displays
                      00253 ;****************************************************   
                      00254         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
004F   01B3               M                 clrf    Table_Counter
0050   0103               M                 clrw            
0051   0833               M loop_   movf    Table_Counter,W
0052   2???               M                 call    Welcome_Msg
0053   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0054   1903               M                 btfsc   STATUS,Z
0055   2???               M                         goto    end_
0056   2???               M                 call    WR_DATA
0057   0AB3               M                 incf    Table_Counter,F
0058   2???               M                 goto    loop_
0059                      M end_
                      00255         
                      00256         
0059   3000           00257         movlw   b'0'
005A   00C8           00258         movwf   frontbinCounter         ;initialize binCounter with zero
005B   3000           00259         movlw   b'0'
005C   00C9           00260         movwf   backbinCounter          ;initialize binCounter with zero
                      00261         
                      00262 ;***************************************
                      00263 ; Number to Printable
                      00264 ;***************************************
                      00265 PrintNumber macro       number
                      00266         ;movf       number ,W
                      00267         movfw       number
                      00268         call        DectoChar
                      00269         call        WR_DATA
                      00270         endm
                      00271 
                      00272 ; white and black sticker labels at bottom
                      00273         
                      00274 
                      00275 ;*******************************************************************************************************
                            *******************************************
                      00276 ;                                                                 MAIN CODE
                      00277 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
005D                  00278 Main    
                      00279 
                      00280 ; WAIT FOR INITIAL INPUT
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005D   2???           00281     goto    KeypadandLCD     ;calls initial form of keypad and LCD, where  robot is waiting for input to
                             begin 
                      00282         
                      00283     
005E   3000           00284     movlw   b'0000'
005F   00C8           00285     movwf   frontbinCounter         ;testing with value of 5 bins
0060   00C9           00286     movwf   backbinCounter    
                      00287     
                      00288     
                      00289     
                      00290     
                      00291     
                      00292 ;    goto    getTimeRTC     ; gets time from RTC clock
                      00293 ;       
                      00294 ;;   MOTOR ON
                      00295 ;       
                      00296 ;    bsf        DCMotor             ; begin forward movement, set appropriate bit to 1  
                      00297 ;    movlw   b'1'
                      00298 ;    addwf  distanceMoved,f     ; increments distanceMoved by 1 (will experimentally find binary value f
                            or 4 m)
                      00299 ;    
                      00300 ;;   CHECK COLUMN
                      00301 ;    
                      00302 ;    call    ChooseIR1          ;selects IR1 for data conversion
                      00303 ;    call    pollColumnSensor   ;checks to see if column present
                      00304 ;    btfss   isColumnThere,0
                      00305 ;    goto    Main
                      00306 ;    
                      00307 ;;   CHECK IF AT THE END OF BUCKET LINE
                      00308 ;    
                      00309 ;    call    pollUSsensor       ; call ultrasonic sensor
                      00310 ;    btfsc   nothingAhead,0     ;   checks if there is nothing ahead
                      00311 ;    goto    Finalize
                      00312 ;    
                      00313 ;;   CHECK IF CONTAINER IS THERE
                      00314 ;    
                      00315 ;    btfss   withinDetectionRange,0  ; checks whether container ahead is within detection range
                      00316 ;    goto    Main
                      00317 ;   call start arm motor
                      00318 ;   call other motor
                      00319 ;    call    frontscanContainer     ; label to begin container scanning
                      00320 ;    call    backscanContainer      ; label to begin container scanning
                      00321 ;    movlw  b'1'
                      00322 ;    addwf   frontbinCounter,f      ;increment the bin counters
                      00323 ;    addwf   backbinCounter,f
0061   2???           00324     goto    Main
                      00325 
                      00326 
                      00327                 
                      00328 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00329 
                      00330 ;*************************************
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00331 ;       Keypad and LCD forms        
                      00332 ;*************************************
                      00333         
                      00334         
                      00335         
0062   1C86           00336 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0063   2???           00337                 goto            $-1 
                      00338 
0064   0E06           00339                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0065   390F           00340                 andlw           0x0F
0066   00B9           00341                 movwf           temp
                      00342                 Key     0x00, OperationDisplay
0067   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0068   390F               M          andlw          0x0F
0069   3A00               M          xorlw          0x00
006A   1903               M          btfsc          STATUS, Z
006B   2???               M          call           OperationDisplay
                      00343                 ;Key    0x00, goback
                      00344                 Key     0x01, LCDConversion
006C   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
006D   390F               M          andlw          0x0F
006E   3A01               M          xorlw          0x01
006F   1903               M          btfsc          STATUS, Z
0070   2???               M          call           LCDConversion
                      00345                 Rotation        0x03
0071   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0072   390F               M          andlw          0x0F
0073   3A03               M          xorlw          0x03
0074   1903               M          btfsc          STATUS, Z
0075   2???               M          call           ShiftLeft
                      00346                 Key     0x04, BinsDisplay
0076   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0077   390F               M          andlw          0x0F
0078   3A04               M          xorlw          0x04
0079   1903               M          btfsc          STATUS, Z
007A   2???               M          call           BinsDisplay
                      00347                 Key     0x05, StickerDisplay
007B   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
007C   390F               M          andlw          0x0F
007D   3A05               M          xorlw          0x05
007E   1903               M          btfsc          STATUS, Z
007F   2???               M          call           StickerDisplay
                      00348                 Key     0x06, BinLocationsDisplay
0080   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0081   390F               M          andlw          0x0F
0082   3A06               M          xorlw          0x06
0083   1903               M          btfsc          STATUS, Z
0084   2???               M          call           BinLocationsDisplay
                      00349                 Key     0x08, OperationTimeDisplay
0085   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0086   390F               M          andlw          0x0F
0087   3A08               M          xorlw          0x08
0088   1903               M          btfsc          STATUS, Z
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0089   2???               M          call           OperationTimeDisplay
                      00350                 Key     0x09, RTCDisplay
008A   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008B   390F               M          andlw          0x0F
008C   3A09               M          xorlw          0x09
008D   1903               M          btfsc          STATUS, Z
008E   2???               M          call           RTCDisplay
008F   1886           00351                 btfsc           PORTB,1     ;Wait until key is released
0090   2???           00352                 goto            $-1
0091   2???           00353                 goto            KeypadandLCD
                      00354                 
0092                  00355 goback
0092   0008           00356                 return  
                      00357                 
                      00358                 
                      00359 ;*********************************************************
                      00360 ; A to D conversion with LCD display for IR sensor
                      00361 ;*********************************************************
                      00362 
0093                  00363 LCDConversion
0093   1507           00364         bsf     PORTC,2         ; gives RC2 5 volts     
                      00365                 
0094   151F           00366         bsf     ADCON0,2                ;start conversion and wait for it to complete
0095   191F           00367         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
0096   2???           00368         goto    $-1
                      00369         
0097   081E           00370         movf    ADRESH, W
0098   00BD           00371         movwf   NumH
0099   081E           00372         movf    ADRESL, W
009A   00BE           00373         movwf   NumL
                      00374                 
009B   2???           00375         call            bin16_BCD
009C   2???           00376         call            ClrLCD
                      00377         PrintNumber     TenK
                          M         ;movf       number ,W
009D   083F               M         movfw       TenK
009E   2???               M         call        DectoChar
009F   2???               M         call        WR_DATA
                      00378         PrintNumber     Thou
                          M         ;movf       number ,W
00A0   0840               M         movfw       Thou
00A1   2???               M         call        DectoChar
00A2   2???               M         call        WR_DATA
                      00379         PrintNumber     Hund
                          M         ;movf       number ,W
00A3   0841               M         movfw       Hund
00A4   2???               M         call        DectoChar
00A5   2???               M         call        WR_DATA
                      00380         PrintNumber     Tens
                          M         ;movf       number ,W
00A6   0842               M         movfw       Tens
00A7   2???               M         call        DectoChar
00A8   2???               M         call        WR_DATA
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00381         PrintNumber     Ones
                          M         ;movf       number ,W
00A9   0843               M         movfw       Ones
00AA   2???               M         call        DectoChar
00AB   2???               M         call        WR_DATA
00AC   2???           00382         call            HalfS
00AD   2???           00383         call            HalfS
00AE   1107           00384         bcf     PORTC,2         ; gives RC2 5 volts
00AF   2???           00385         goto    LCDConversion
                      00386 
                      00387 ;****************************
                      00388 ;       Choose IR1
                      00389 ;****************************
                      00390         
00B0                  00391 ChooseIR1
                      00392         
00B0   1405           00393         bsf     IR1             ;makes RA0 an input
00B1   30C5           00394         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
00B2   009F           00395         movwf   ADCON0
                      00396         
00B3   0008           00397         return
                      00398         
                      00399 ;****************************
                      00400 ;       Choose IR2
                      00401 ;****************************
                      00402         
00B4                  00403 ChooseIR2
                      00404         
00B4   1485           00405         bsf     IR2             ;makes RA0 an input
00B5   30CD           00406         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
00B6   009F           00407         movwf   ADCON0
                      00408         
00B7   0008           00409         return
                      00410         
                      00411         
                      00412 ;****************************************************
                      00413 ;   ScanFrontContainer
                      00414 ;****************************************************
                      00415         
00B8                  00416 ScanFrontContainer
                      00417         ; A to d conversion
                      00418         
00B8   151F           00419         bsf     ADCON0,2                ;start conversion and wait for it to complete
00B9   191F           00420         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
00BA   2???           00421         goto    $-1
                      00422         
00BB   081E           00423         movf    ADRESH, W
00BC   00BD           00424         movwf   NumH
00BD   081E           00425         movf    ADRESL, W
00BE   00BE           00426         movwf   NumL
                      00427         
                      00428 ;       btfss   ADRESH,2                ;test bit 2 of ADRESH, the bit that we believe will distinguish 
                            black and white (need to experiment)
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00429 ;       bsf     frontstickerValues,frontbinCounter              ;if is set, means that colour is white
                      00430 ;       btfsc   ADRESH,2
                      00431 ;       bcf     frontstickerValues,frontbinCounter    ; modifies the bits in the stickervalues
                      00432         
                      00433         ;display on screen for troubleshooting purposes
                      00434         
                      00435 ;       call            bin16_BCD
                      00436 ;       call            ClrLCD
                      00437 ;       PrintNumber     TenK
                      00438 ;       PrintNumber     Thou
                      00439 ;       PrintNumber     Hund
                      00440 ;       PrintNumber     Tens
                      00441 ;       PrintNumber     Ones    
00BF   2???           00442         call            HalfS
00C0   2???           00443         call            HalfS
                      00444         
00C1   0008           00445         return
                      00446         
                      00447 ;****************************************************
                      00448 ;   ScanBackContainer
                      00449 ;****************************************************
                      00450         
00C2                  00451 ScanBackContainer
                      00452         ; A to d conversion
                      00453         
00C2   151F           00454         bsf     ADCON0,2                ;start conversion and wait for it to complete
00C3   191F           00455         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
00C4   2???           00456         goto    $-1
                      00457         
00C5   081E           00458         movf    ADRESH, W
00C6   00BD           00459         movwf   NumH
00C7   081E           00460         movf    ADRESL, W
00C8   00BE           00461         movwf   NumL
                      00462         
                      00463 ;       btfss   ADRESH,2                ;test bit 2 of ADRESH, the bit that we believe will distinguish 
                            black and white (need to experiment)
                      00464 ;       bsf     backstickerValues,backbinCounter                ;if is set, means that colour is white
                      00465 ;       btfsc   ADRESH,2
Warning[202]: Argument out of range.  Least significant bits used.
00C9   10C7           00466         bcf     backstickerValues,backbinCounter    ; modifies the bits in the stickervalues
                      00467         
                      00468         ;display on screen for troubleshooting purposes
                      00469         
                      00470 ;       call            bin16_BCD
                      00471 ;       call            ClrLCD
                      00472 ;       PrintNumber     TenK
                      00473 ;       PrintNumber     Thou
                      00474 ;       PrintNumber     Hund
                      00475 ;       PrintNumber     Tens
                      00476 ;       PrintNumber     Ones    
00CA   2???           00477         call            HalfS
00CB   2???           00478         call            HalfS
                      00479         
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CC   0008           00480         return
                      00481 
                      00482 ;*********************************************
                      00483 ; Keypad Modules
                      00484 ;*******************************************
                      00485          
                      00486 
00CD                  00487 OperationDisplay
00CD   2???           00488         call        Clear_Display
                      00489         
                      00490         
                      00491         
00CE   2???           00492         call        ScanFrontContainer
00CF   2???           00493         call        ScanBackContainer
00D0   2???           00494         call        ScanFrontContainer
00D1   2???           00495         call        ScanBackContainer
00D2   2???           00496         call        ScanFrontContainer
00D3   2???           00497         call        ScanBackContainer
00D4   2???           00498         call        ScanFrontContainer
00D5   2???           00499         call        ScanBackContainer
                      00500         
00D6   2???           00501         call        Clear_Display
                      00502         Display     WantResults
  0000                    M                 local   loop_
  0000                    M                 local   end_
00D7   01B3               M                 clrf    Table_Counter
00D8   0103               M                 clrw            
00D9   0833               M loop_   movf    Table_Counter,W
00DA   2???               M                 call    WantResults
00DB   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00DC   1903               M                 btfsc   STATUS,Z
00DD   2???               M                         goto    end_
00DE   2???               M                 call    WR_DATA
00DF   0AB3               M                 incf    Table_Counter,F
00E0   2???               M                 goto    loop_
00E1                      M end_
00E1   2???           00503         call        Switch_Lines
                      00504         Display     WantRotate
  0000                    M                 local   loop_
  0000                    M                 local   end_
00E2   01B3               M                 clrf    Table_Counter
00E3   0103               M                 clrw            
00E4   0833               M loop_   movf    Table_Counter,W
00E5   2???               M                 call    WantRotate
00E6   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00E7   1903               M                 btfsc   STATUS,Z
00E8   2???               M                         goto    end_
00E9   2???               M                 call    WR_DATA
00EA   0AB3               M                 incf    Table_Counter,F
00EB   2???               M                 goto    loop_
00EC                      M end_
                      00505         
00EC   0008           00506         return
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00507         
00ED                  00508 ListDisplay
00ED   2???           00509         call        Clear_Display
                      00510         Display     Results1
  0000                    M                 local   loop_
  0000                    M                 local   end_
00EE   01B3               M                 clrf    Table_Counter
00EF   0103               M                 clrw            
00F0   0833               M loop_   movf    Table_Counter,W
00F1   2???               M                 call    Results1
00F2   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00F3   1903               M                 btfsc   STATUS,Z
00F4   2???               M                         goto    end_
00F5   2???               M                 call    WR_DATA
00F6   0AB3               M                 incf    Table_Counter,F
00F7   2???               M                 goto    loop_
00F8                      M end_
00F8   2???           00511         call        Switch_Lines
                      00512         Display     Results2
  0000                    M                 local   loop_
  0000                    M                 local   end_
00F9   01B3               M                 clrf    Table_Counter
00FA   0103               M                 clrw            
00FB   0833               M loop_   movf    Table_Counter,W
00FC   2???               M                 call    Results2
00FD   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00FE   1903               M                 btfsc   STATUS,Z
00FF   2???               M                         goto    end_
0100   2???               M                 call    WR_DATA
0101   0AB3               M                 incf    Table_Counter,F
0102   2???               M                 goto    loop_
0103                      M end_
                      00513         
0103   0008           00514         return
                      00515                 
0104                  00516 BinsDisplay
0104   2???           00517         call        Clear_Display
                      00518         Display     Bins
  0000                    M                 local   loop_
  0000                    M                 local   end_
0105   01B3               M                 clrf    Table_Counter
0106   0103               M                 clrw            
0107   0833               M loop_   movf    Table_Counter,W
0108   2???               M                 call    Bins
0109   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
010A   1903               M                 btfsc   STATUS,Z
010B   2???               M                         goto    end_
010C   2???               M                 call    WR_DATA
010D   0AB3               M                 incf    Table_Counter,F
010E   2???               M                 goto    loop_
010F                      M end_
                      00519                 
010F   0008           00520         return
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00521         
0110                  00522 StickerDisplay
0110   2???           00523         call        Clear_Display
                      00524 
                      00525 ;       movlw       b'0000000'
                      00526 ;       movwf       stickerValues
                      00527 ;       movlw       b'1111111'
                      00528 ;       movwf       backstickerValues
                      00529         
0111   3000           00530         movlw   b'0000'
0112   00C8           00531         movwf   frontbinCounter     ;testing with value of 5 bins
0113   00C9           00532         movwf   backbinCounter 
                      00533         
0114   2???           00534         call        ScanFrontContainer
0115   1C46           00535         btfss       frontstickerValues,0        ; check the ith bucket value and if it is clear,
0116   2???           00536         call        PrintBlackSticker   ; print a black sticker on the thing
0117   1846           00537         btfsc       frontstickerValues,0
0118   2???           00538         call        PrintWhiteSticker
                      00539         ;call       Switch_Lines
0119   2???           00540         call        ScanBackContainer
011A   1C47           00541         btfss       backstickerValues,0 ; check the ith bucket value and if it is clear,
011B   2???           00542         call        PrintBlackSticker   ; print a black sticker on the thing
011C   1847           00543         btfsc       backstickerValues,0
011D   2???           00544         call        PrintWhiteSticker
                      00545         ;call       Switch_Lines
                      00546         
                      00547 ;       decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00548 ;       goto        $+2
                      00549 ;       return
                      00550         
011E   3001           00551         movlw   b'0001'
011F   00C8           00552         movwf   frontbinCounter     ;testing with value of 5 bins
0120   00C9           00553         movwf   backbinCounter
                      00554         
                      00555         
                      00556         
0121   2???           00557         call        ScanFrontContainer
0122   1CC6           00558         btfss       frontstickerValues,1        ; check the ith bucket value and if it is clear,
0123   2???           00559         call        PrintBlackSticker   ; print a black sticker on the thing
0124   18C6           00560         btfsc       frontstickerValues,1
0125   2???           00561         call        PrintWhiteSticker
                      00562         ;call       Switch_Lines
0126   2???           00563         call        ScanBackContainer
0127   1CC7           00564         btfss       backstickerValues,1 ; check the ith bucket value and if it is clear,
0128   2???           00565         call        PrintBlackSticker   ; print a black sticker on the thing
0129   18C7           00566         btfsc       backstickerValues,1
012A   2???           00567         call        PrintWhiteSticker
                      00568         ;call       Switch_Lines
                      00569         
                      00570 ;       decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00571 ;       goto        $+2
                      00572 ;       return
                      00573         
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012B   3002           00574         movlw   b'0010'
012C   00C8           00575         movwf   frontbinCounter     ;testing with value of 5 bins
012D   00C9           00576         movwf   backbinCounter
                      00577         
                      00578         
012E   2???           00579         call        ScanFrontContainer
012F   1D46           00580         btfss       frontstickerValues,2        ; check the ith bucket value and if it is clear,
0130   2???           00581         call        PrintBlackSticker   ; print a black sticker on the thing
0131   1946           00582         btfsc       frontstickerValues,2
0132   2???           00583         call        PrintWhiteSticker
                      00584         ;call       Switch_Lines
0133   2???           00585         call        ScanBackContainer
0134   1D47           00586         btfss       backstickerValues,2 ; check the ith bucket value and if it is clear,
0135   2???           00587         call        PrintBlackSticker   ; print a black sticker on the thing
0136   1947           00588         btfsc       backstickerValues,2
0137   2???           00589         call        PrintWhiteSticker
                      00590         ;call       Switch_Lines
                      00591         
                      00592 ;       movlw   b'0011'
                      00593 ;       movwf   frontbinCounter     ;testing with value of 5 bins
                      00594 ;       movwf   backbinCounter
                      00595 ;       
                      00596 ;;      decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00597 ;;      goto        $+2
                      00598 ;;      return
                      00599 ;;      
                      00600 ;       call        ScanFrontContainer
                      00601 ;       btfss       frontstickerValues,3        ; check the ith bucket value and if it is clear,
                      00602 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00603 ;       btfsc       frontstickerValues,3
                      00604 ;       call        PrintWhiteSticker
                      00605 ;       ;call       Switch_Lines
                      00606 ;       call        ScanBackContainer
                      00607 ;       btfss       backstickerValues,3 ; check the ith bucket value and if it is clear,
                      00608 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00609 ;       btfsc       backstickerValues,3
                      00610 ;       call        PrintWhiteSticker
                      00611 ;       ;call       Switch_Lines
                      00612 ;               
                      00613 ;       movlw   b'0100'
                      00614 ;       movwf   frontbinCounter     ;testing with value of 5 bins
                      00615 ;       movwf   backbinCounter
                      00616 ;       
                      00617 ;;      
                      00618 ;;      decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00619 ;;      goto        $+2
                      00620 ;;      return
                      00621 ;;      
                      00622 ;       btfss       frontstickerValues,4        ; check the ith bucket value and if it is clear,
                      00623 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00624 ;       btfsc       frontstickerValues,4
                      00625 ;       call        PrintWhiteSticker
                      00626 ;       ;call       Switch_Lines
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00627 ;       btfss       backstickerValues,4 ; check the ith bucket value and if it is clear,
                      00628 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00629 ;       btfsc       backstickerValues,4
                      00630 ;       call        PrintWhiteSticker
                      00631 ;       ;call       Switch_Lines
                      00632 
                      00633         
                      00634 ;       decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00635 ;       goto        $+2
                      00636 ;       return
                      00637 ;       
                      00638 ;       btfss       frontstickerValues,5        ; check the ith bucket value and if it is clear,
                      00639 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00640 ;       btfsc       frontstickerValues,5
                      00641 ;       call        PrintWhiteSticker
                      00642 ;       ;call       Switch_Lines
                      00643 ;       btfss       backstickerValues,5 ; check the ith bucket value and if it is clear,
                      00644 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00645 ;       btfsc       backstickerValues,5
                      00646 ;       call        PrintWhiteSticker
                      00647 ;       ;call       Switch_Lines
                      00648 ;       
                      00649 ;       decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00650 ;       goto        $+2
                      00651 ;       return
                      00652 ;       
                      00653 ;       btfss       frontstickerValues,6        ; check the ith bucket value and if it is clear,
                      00654 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00655 ;       btfsc       frontstickerValues,6
                      00656 ;       call        PrintWhiteSticker
                      00657 ;       ;call       Switch_Lines
                      00658 ;       btfss       backstickerValues,6 ; check the ith bucket value and if it is clear,
                      00659 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00660 ;       btfsc       backstickerValues,6
                      00661 ;       call        PrintWhiteSticker
                      00662 ;       ;call       Switch_Lines
                      00663 ;       
                      00664 ;       decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00665 ;       goto        $+2
                      00666 ;       return
                      00667         
0138   0008           00668         return
                      00669         
0139                  00670 BinLocationsDisplay
0139   2???           00671         call        Clear_Display
                      00672         Display     BinLocations
  0000                    M                 local   loop_
  0000                    M                 local   end_
013A   01B3               M                 clrf    Table_Counter
013B   0103               M                 clrw            
013C   0833               M loop_   movf    Table_Counter,W
013D   2???               M                 call    BinLocations
013E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013F   1903               M                 btfsc   STATUS,Z
0140   2???               M                         goto    end_
0141   2???               M                 call    WR_DATA
0142   0AB3               M                 incf    Table_Counter,F
0143   2???               M                 goto    loop_
0144                      M end_
                      00673                 
0144   0008           00674         return
                      00675 
0145                  00676 OperationTimeDisplay
0145   2???           00677         call        Clear_Display
                      00678         Display     OperationTime
  0000                    M                 local   loop_
  0000                    M                 local   end_
0146   01B3               M                 clrf    Table_Counter
0147   0103               M                 clrw            
0148   0833               M loop_   movf    Table_Counter,W
0149   2???               M                 call    OperationTime
014A   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
014B   1903               M                 btfsc   STATUS,Z
014C   2???               M                         goto    end_
014D   2???               M                 call    WR_DATA
014E   0AB3               M                 incf    Table_Counter,F
014F   2???               M                 goto    loop_
0150                      M end_
                      00679                 
0150   0008           00680         return
                      00681         
0151                  00682 ShiftLeft
0151   3018           00683         movlw           b'00011000'             ;Move to the left
0152   2???           00684         call            WR_INS
0153   0008           00685         return
                      00686 
0154   2???           00687         goto Main
                      00688         
0155                  00689 RTCDisplay
0155   2???           00690         call    show_RTC
                      00691         
0156   1886           00692         btfsc           PORTB,1     ;Wait until data is available from the keypad
0157   0008           00693         return
0158   1886           00694         btfsc           PORTB,1     ;Wait until data is available from the keypad
0159   0008           00695         return
015A   1886           00696         btfsc           PORTB,1     ;Wait until data is available from the keypad
015B   0008           00697         return
015C   1886           00698         btfsc           PORTB,1     ;Wait until data is available from the keypad
015D   0008           00699         return
015E   2???           00700         goto        RTCDisplay
                      00701         
                      00702 ;***************************************
                      00703 ; Look up table
                      00704 ;***************************************
                      00705     
015F                  00706 Welcome_Msg
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00707         
                      00708         ;Change Page
015F   00BA           00709         movwf   Temp
0160   30??           00710         movlw   HIGH Welcome_MsgEntries
0161   008A           00711         movwf   PCLATH
0162   083A           00712         movf    Temp,w
0163   3E??           00713         addlw   LOW Welcome_MsgEntries
0164   1803           00714         btfsc   STATUS,C
0165   0A8A           00715             incf    PCLATH,f
0166   0082           00716         movwf   PCL     
0167   0782           00717         addwf    PCL,F
0168                  00718 Welcome_MsgEntries
0168   3450 3472 3465 00719         dt        "Press 1 to start robot", 0
       3473 3473 3420 
       3431 3420 3474 
       346F 3420 3473 
       3474 3461 3472 
       3474 3420 3472 
       346F 3462 346F 
       3474 3400 
                      00720         
017F                  00721 Operation
                      00722         
                      00723         ;Change Page
017F   00BA           00724         movwf    Temp
0180   30??           00725         movlw   HIGH OperationEntries
0181   008A           00726         movwf   PCLATH
0182   083A           00727         movf    Temp,w
0183   3E??           00728         addlw   LOW OperationEntries
0184   1803           00729         btfsc   STATUS,C
0185   0A8A           00730             incf    PCLATH,f
0186   0082           00731         movwf   PCL
0187   0782           00732         addwf    PCL,F
0188                  00733 OperationEntries
0188   344F 3470 3465 00734         dt        "Operating...",0
       3472 3461 3474 
       3469 346E 3467 
       342E 342E 342E 
       3400 
                      00735 
0195                  00736 WantResults
                      00737         
                      00738         ;Change Page
0195   00BA           00739         movwf    Temp
0196   30??           00740         movlw   HIGH WantResultsEntries
0197   008A           00741         movwf   PCLATH
0198   083A           00742         movf    Temp,w
0199   3E??           00743         addlw   LOW WantResultsEntries
019A   1803           00744         btfsc   STATUS,C
019B   0A8A           00745             incf    PCLATH,f
019C   0082           00746         movwf   PCL
019D   0782           00747         addwf    PCL,F
019E                  00748 WantResultsEntries
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019E   3450 3472 3465 00749         dt        "Press 2 to display results",0
       3473 3473 3420 
       3432 3420 3474 
       346F 3420 3464 
       3469 3473 3470 
       346C 3461 3479 
       3420 3472 3465 
       3473 3475 346C 
       3474 3473 3400 
                      00750 
                      00751 
01B9                  00752 WantRotate
                      00753                 
                      00754         ;Change Page
01B9   00BA           00755         movwf    Temp
01BA   30??           00756         movlw   HIGH WantRotateEntries
01BB   008A           00757         movwf   PCLATH
01BC   083A           00758         movf    Temp,w
01BD   3E??           00759         addlw   LOW WantRotateEntries
01BE   1803           00760         btfsc   STATUS,C
01BF   0A8A           00761             incf    PCLATH,f
01C0   0082           00762         movwf   PCL
01C1   0782           00763         addwf    PCL,F
01C2                  00764 WantRotateEntries
01C2   3450 3472 3465 00765         dt        "Press A to rotate screen",0
       3473 3473 3420 
       3441 3420 3474 
       346F 3420 3472 
       346F 3474 3461 
       3474 3465 3420 
       3473 3463 3472 
       3465 3465 346E 
       3400 
                      00766         
01DB                  00767 Results1 
                      00768                 
                      00769         ;Change Page
01DB   00BA           00770         movwf    Temp
01DC   30??           00771         movlw   HIGH Results1Entries
01DD   008A           00772         movwf   PCLATH
01DE   083A           00773         movf    Temp,w
01DF   3E??           00774         addlw   LOW Results1Entries
01E0   1803           00775         btfsc   STATUS,C
01E1   0A8A           00776             incf    PCLATH,f
01E2   0082           00777         movwf   PCL
01E3   0782           00778         addwf    PCL,F
01E4                  00779 Results1Entries 
01E4   3434 343A 3420 00780         dt        "4: number of bins, 5: sticker status",0
       346E 3475 346D 
       3462 3465 3472 
       3420 346F 3466 
       3420 3462 3469 
       346E 3473 342C 
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3420 3435 343A 
       3420 3473 3474 
       3469 3463 346B 
       3465 3472 3420 
       3473 3474 3461 
       3474 3475 3473 
       3400 
                      00781         
0209                  00782 Results2
                      00783         
                      00784         ;Change Page
0209   00BA           00785         movwf    Temp
020A   30??           00786         movlw   HIGH Results2Entries
020B   008A           00787         movwf   PCLATH
020C   083A           00788         movf    Temp,w
020D   3E??           00789         addlw   LOW Results2Entries
020E   1803           00790         btfsc   STATUS,C
020F   0A8A           00791             incf    PCLATH,f
0210   0082           00792         movwf   PCL     
0211   0782           00793         addwf    PCL,F
0212                  00794 Results2Entries 
0212   3436 343A 3420 00795         dt        "6: bin locations, 7: operation time",0
       3462 3469 346E 
       3420 346C 346F 
       3463 3461 3474 
       3469 346F 346E 
       3473 342C 3420 
       3437 343A 3420 
       346F 3470 3465 
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
       346D 3465 3400 
                      00796         
0236                  00797 Bins
                      00798         ;Change Page
0236   00BA           00799         movwf    Temp
0237   30??           00800         movlw   HIGH BinsEntries
0238   008A           00801         movwf   PCLATH
0239   083A           00802         movf    Temp,w
023A   3E??           00803         addlw   LOW BinsEntries
023B   1803           00804         btfsc   STATUS,C
023C   0A8A           00805             incf    PCLATH,f
023D   0082           00806         movwf   PCL     
023E   0782           00807         addwf    PCL,F
023F                  00808 BinsEntries
023F   3434 3420 3462 00809         dt        "4 bins in total",0
       3469 346E 3473 
       3420 3469 346E 
       3420 3474 346F 
       3474 3461 346C 
       3400 
                      00810         
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

024F                  00811 StickerStatus
                      00812         
                      00813         ;Change Page
024F   00BA           00814         movwf    Temp
0250   30??           00815         movlw   HIGH StickerStatusEntries
0251   008A           00816         movwf   PCLATH
0252   083A           00817         movf    Temp,w
0253   3E??           00818         addlw   LOW StickerStatusEntries
0254   1803           00819         btfsc   STATUS,C
0255   0A8A           00820             incf    PCLATH,f
0256   0082           00821         movwf   PCL     
0257   0782           00822         addwf    PCL,F
0258                  00823 StickerStatusEntries
0258   3442 3442 3457 00824         dt        "BBWBWWWB",0
       3442 3457 3457 
       3457 3442 3400 
                      00825         
0261                  00826 BinLocations
                      00827         ;Change Page
0261   00BA           00828         movwf    Temp
0262   30??           00829         movlw   HIGH BinLocationsEntries
0263   008A           00830         movwf   PCLATH
0264   083A           00831         movf    Temp,w
0265   3E??           00832         addlw   LOW BinLocationsEntries
0266   1803           00833         btfsc   STATUS,C
0267   0A8A           00834             incf    PCLATH,f
0268   0082           00835         movwf   PCL     
0269   0782           00836         addwf    PCL,F
026A                  00837 BinLocationsEntries
026A   344E 346F 3474 00838         dt        "Not receiving anything",0
       3420 3472 3465 
       3463 3465 3469 
       3476 3469 346E 
       3467 3420 3461 
       346E 3479 3474 
       3468 3469 346E 
       3467 3400 
                      00839         
0281                  00840 OperationTime
                      00841         ;Change Page
0281   00BA           00842         movwf    Temp
0282   30??           00843         movlw   HIGH OperationTimeEntries
0283   008A           00844         movwf   PCLATH
0284   083A           00845         movf    Temp,w
0285   3E??           00846         addlw   LOW OperationTimeEntries
0286   1803           00847         btfsc   STATUS,C
0287   0A8A           00848             incf    PCLATH,f
0288   0082           00849         movwf   PCL     
0289   0782           00850         addwf    PCL,F
028A                  00851 OperationTimeEntries
028A   3454 3441 344B 00852         dt        "TAKING IN 5 VOLTS",0
       3449 344E 3447 
       3420 3449 344E 
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3420 3435 3420 
       3456 344F 344C 
       3454 3453 3400 
                      00853         
029C                  00854 ReceivedInput
                      00855         ;Change Page
029C   00BA           00856         movwf    Temp
029D   30??           00857         movlw   HIGH ReceivedInputEntries
029E   008A           00858         movwf   PCLATH
029F   083A           00859         movf    Temp,w
02A0   3E??           00860         addlw   LOW ReceivedInputEntries
02A1   1803           00861         btfsc   STATUS,C
02A2   0A8A           00862             incf    PCLATH,f
02A3   0082           00863         movwf   PCL     
02A4   0782           00864         addwf    PCL,F
02A5                  00865 ReceivedInputEntries
02A5   3474 3461 346B 00866         dt        "takin in large value",0
       3469 346E 3420 
       3469 346E 3420 
       346C 3461 3472 
       3467 3465 3420 
       3476 3461 346C 
       3475 3465 3400 
                      00867         
02BA                  00868 SmallValueInput
                      00869         ;Change Page
02BA   00BA           00870         movwf    Temp
02BB   30??           00871         movlw   HIGH SmallValueInputEntries
02BC   008A           00872         movwf   PCLATH
02BD   083A           00873         movf    Temp,w
02BE   3E??           00874         addlw   LOW SmallValueInputEntries
02BF   1803           00875         btfsc   STATUS,C
02C0   0A8A           00876             incf    PCLATH,f
02C1   0082           00877         movwf   PCL     
02C2   0782           00878         addwf    PCL,F
02C3                  00879 SmallValueInputEntries
02C3   3473 346D 3461 00880         dt        "small value",0
       346C 346C 3420 
       3476 3461 346C 
       3475 3465 3400 
                      00881         
02CF                  00882 DectoChar
                      00883         
                      00884         ;Change Page
02CF   00BA           00885         movwf   Temp
02D0   30??           00886         movlw   HIGH DectoCharEntries
02D1   008A           00887         movwf   PCLATH
02D2   083A           00888         movf    Temp,w
02D3   3E??           00889         addlw   LOW DectoCharEntries
02D4   1803           00890         btfsc   STATUS,C
02D5   0A8A           00891             incf    PCLATH,f
02D6   0082           00892         movwf   PCL     
02D7   0782           00893         addwf    PCL,F
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D8                  00894 DectoCharEntries
02D8   3430 3431 3432 00895         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      00896         
02E3                  00897 StickerColours
                      00898         
                      00899         ;Change Page
02E3   00BA           00900         movwf   Temp
02E4   30??           00901         movlw   HIGH StickerColoursEntries
02E5   008A           00902         movwf   PCLATH
02E6   083A           00903         movf    Temp,w
02E7   3E??           00904         addlw   LOW StickerColoursEntries
02E8   1803           00905         btfsc   STATUS,C
02E9   0A8A           00906             incf    PCLATH,f
02EA   0082           00907         movwf   PCL     
02EB   0782           00908         addwf    PCL,F
02EC                  00909 StickerColoursEntries
02EC   3442 3457 3400 00910         dt        "BW",  0
                      00911         
                      00912 
                      00913 ;***************************************
                      00914 ; LCD control
                      00915 ;***************************************
02EF                  00916 Switch_Lines
02EF   30C0           00917                 movlw   B'11000000'
02F0   2???           00918                 call    WR_INS
02F1   0008           00919                 return
                      00920 
02F2                  00921 Clear_Display
02F2   3001           00922                 movlw   B'00000001'
02F3   2???           00923                 call    WR_INS
02F4   0008           00924                 return
                      00925 
                      00926 ;***************************************
                      00927 ; Delay 0.5s
                      00928 ;***************************************
02F5                  00929 HalfS   
  0000                00930         local   HalfS_0
02F5   3088           00931       movlw 0x88
02F6   00B0           00932       movwf COUNTH
02F7   30BD           00933       movlw 0xBD
02F8   00B1           00934       movwf COUNTM
02F9   3003           00935       movlw 0x03
02FA   00B2           00936       movwf COUNTL
                      00937 
02FB                  00938 HalfS_0
02FB   0BB0           00939       decfsz COUNTH, f
02FC   2???           00940       goto   $+2
02FD   0BB1           00941       decfsz COUNTM, f
02FE   2???           00942       goto   $+2
02FF   0BB2           00943       decfsz COUNTL, f
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0300   2???           00944       goto   HalfS_0
                      00945 
0301   2???           00946       goto $+1
0302   0000           00947       nop
0303   0000           00948       nop
0304   0008           00949                 return
                      00950 
                      00951     
                      00952 ;************************************
                      00953 ; RTC Sublabels
                      00954 ;************************************
                      00955     
0305                  00956 show_RTC
                      00957                 ;clear LCD screen
0305   3001           00958                 movlw   b'00000001'
0306   2???           00959                 call    WR_INS
                      00960 
                      00961                 ;Get year
0307   3032           00962                 movlw   "2"                             ;First line shows 20**/**/**
0308   2???           00963                 call    WR_DATA
0309   3030           00964                 movlw   "0"
030A   2???           00965                 call    WR_DATA
                      00966                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
030B   3006               M         movlw   0x06
030C   1283 1303          M         banksel 0x73
030E   00F3               M         movwf   0x73
030F   2???               M         call    read_rtc
0310   1283 1303          M         banksel 0x75
0312   0875               M         movf    0x75,w
0313   2???               M         call    rtc_convert   
0314   0877           00967                 movfw   0x77
0315   2???           00968                 call    WR_DATA
0316   0878           00969                 movfw   0x78
0317   2???           00970                 call    WR_DATA
                      00971 
0318   302F           00972                 movlw   "/"
0319   2???           00973                 call    WR_DATA
                      00974 
                      00975                 ;Get month
                      00976                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
031A   3005               M         movlw   0x05
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031B   1283 1303          M         banksel 0x73
031D   00F3               M         movwf   0x73
031E   2???               M         call    read_rtc
031F   1283 1303          M         banksel 0x75
0321   0875               M         movf    0x75,w
0322   2???               M         call    rtc_convert   
0323   0877           00977                 movfw   0x77
0324   2???           00978                 call    WR_DATA
0325   0878           00979                 movfw   0x78
0326   2???           00980                 call    WR_DATA
                      00981 
0327   302F           00982                 movlw   "/"
0328   2???           00983                 call    WR_DATA
                      00984 
                      00985                 ;Get day
                      00986                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0329   3004               M         movlw   0x04
032A   1283 1303          M         banksel 0x73
032C   00F3               M         movwf   0x73
032D   2???               M         call    read_rtc
032E   1283 1303          M         banksel 0x75
0330   0875               M         movf    0x75,w
0331   2???               M         call    rtc_convert   
0332   0877           00987                 movfw   0x77
0333   2???           00988                 call    WR_DATA
0334   0878           00989                 movfw   0x78
0335   2???           00990                 call    WR_DATA
                      00991 
0336   30C0           00992                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
0337   2???           00993                 call    WR_INS
                      00994 
                      00995                 ;Get hour
                      00996                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0338   3002               M         movlw   0x02
0339   1283 1303          M         banksel 0x73
033B   00F3               M         movwf   0x73
033C   2???               M         call    read_rtc
033D   1283 1303          M         banksel 0x75
033F   0875               M         movf    0x75,w
0340   2???               M         call    rtc_convert   
0341   0877           00997                 movfw   0x77
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0342   2???           00998                 call    WR_DATA
0343   0878           00999                 movfw   0x78
0344   2???           01000                 call    WR_DATA
0345   303A           01001                 movlw                   ":"
0346   2???           01002                 call    WR_DATA
                      01003 
                      01004                 ;Get minute             
                      01005                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0347   3001               M         movlw   0x01
0348   1283 1303          M         banksel 0x73
034A   00F3               M         movwf   0x73
034B   2???               M         call    read_rtc
034C   1283 1303          M         banksel 0x75
034E   0875               M         movf    0x75,w
034F   2???               M         call    rtc_convert   
0350   0877           01006                 movfw   0x77
0351   2???           01007                 call    WR_DATA
0352   0878           01008                 movfw   0x78
0353   2???           01009                 call    WR_DATA         
0354   303A           01010                 movlw                   ":"
0355   2???           01011                 call    WR_DATA
                      01012                 
                      01013                 ;Get seconds
                      01014                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0356   3000               M         movlw   0x00
0357   1283 1303          M         banksel 0x73
0359   00F3               M         movwf   0x73
035A   2???               M         call    read_rtc
035B   1283 1303          M         banksel 0x75
035D   0875               M         movf    0x75,w
035E   2???               M         call    rtc_convert   
035F   0877           01015                 movfw   0x77
0360   2???           01016                 call    WR_DATA
0361   0878           01017                 movfw   0x78
0362   2???           01018                 call    WR_DATA
                      01019                 
0363   2???           01020                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
                      01021                 ;goto   show_RTC                ;use return instead to check for key press
0364   0008           01022                 return
                      01023 
                      01024 ;***************************************
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01025 ; Setup RTC with time defined by user
                      01026 ;***************************************
0365                  01027 set_rtc_time
                      01028 
                      01029                 rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0365   1283 1303          M         banksel         0x74
0367   01F4               M         clrf            0x74
0368   1283 1303          M         banksel         0x73
036A   01F3               M         clrf            0x73
036B   2???               M     call        write_rtc               ;Write 0 to Seconds
036C   1283 1303          M         banksel         0x73
036E   0AF3               M     incf        0x73                    ;Set register address to 1
036F   2???               M         call            write_rtc
0370   1283 1303          M         banksel         0x73
0372   0AF3               M     incf        0x73                    ;Set register address to 2
0373   2???               M         call            write_rtc
0374   1283 1303          M         banksel         0x73
0376   0AF3               M     incf        0x73                    ;Set register address to 3
0377   2???               M         call            write_rtc
0378   1283 1303          M         banksel         0x73
037A   0AF3               M     incf        0x73                    ;Set register address to 4
037B   2???               M         call            write_rtc
037C   1283 1303          M         banksel         0x73
037E   0AF3               M     incf        0x73                    ;Set register address to 5
037F   2???               M         call            write_rtc
0380   1283 1303          M         banksel         0x73
0382   0AF3               M     incf        0x73                    ;Set register address to 6
0383   2???               M         call            write_rtc
                      01030 
                      01031                 rtc_set 0x00,   B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0384   1283 1303          M         banksel 0x73
0386   3000               M         movlw   0x00
0387   00F3               M         movwf   0x73
0388   1283 1303          M         banksel 0x74
038A   3080               M         movlw   B'10000000'
038B   00F4               M         movwf   0x74    
038C   2???               M         call    write_rtc
                      01032 
                      01033                 ;set time 
                      01034                 rtc_set 0x06,   B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

038D   1283 1303          M         banksel 0x73
038F   3006               M         movlw   0x06
0390   00F3               M         movwf   0x73
0391   1283 1303          M         banksel 0x74
0393   3016               M         movlw   B'00010110'
0394   00F4               M         movwf   0x74    
0395   2???               M         call    write_rtc
                      01035                 rtc_set 0x05,   B'00000010'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0396   1283 1303          M         banksel 0x73
0398   3005               M         movlw   0x05
0399   00F3               M         movwf   0x73
039A   1283 1303          M         banksel 0x74
039C   3002               M         movlw   B'00000010'
039D   00F4               M         movwf   0x74    
039E   2???               M         call    write_rtc
                      01036                 rtc_set 0x04,   B'00010110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
039F   1283 1303          M         banksel 0x73
03A1   3004               M         movlw   0x04
03A2   00F3               M         movwf   0x73
03A3   1283 1303          M         banksel 0x74
03A5   3016               M         movlw   B'00010110'
03A6   00F4               M         movwf   0x74    
03A7   2???               M         call    write_rtc
                      01037                 rtc_set 0x03,   B'00100001'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03A8   1283 1303          M         banksel 0x73
03AA   3003               M         movlw   0x03
03AB   00F3               M         movwf   0x73
03AC   1283 1303          M         banksel 0x74
03AE   3021               M         movlw   B'00100001'
03AF   00F4               M         movwf   0x74    
03B0   2???               M         call    write_rtc
                      01038                 rtc_set 0x02,   B'00000001'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03B1   1283 1303          M         banksel 0x73
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B3   3002               M         movlw   0x02
03B4   00F3               M         movwf   0x73
03B5   1283 1303          M         banksel 0x74
03B7   3001               M         movlw   B'00000001'
03B8   00F4               M         movwf   0x74    
03B9   2???               M         call    write_rtc
                      01039                 rtc_set 0x01,   B'00110101'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03BA   1283 1303          M         banksel 0x73
03BC   3001               M         movlw   0x01
03BD   00F3               M         movwf   0x73
03BE   1283 1303          M         banksel 0x74
03C0   3035               M         movlw   B'00110101'
03C1   00F4               M         movwf   0x74    
03C2   2???               M         call    write_rtc
                      01040                 rtc_set 0x00,   B'01010000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03C3   1283 1303          M         banksel 0x73
03C5   3000               M         movlw   0x00
03C6   00F3               M         movwf   0x73
03C7   1283 1303          M         banksel 0x74
03C9   3050               M         movlw   B'01010000'
03CA   00F4               M         movwf   0x74    
03CB   2???               M         call    write_rtc
03CC   0008           01041                 return
                      01042 
                      01043 
                      01044 ;***************************************
                      01045 ; Delay 1s
                      01046 ;***************************************
03CD                  01047 OneS
  0000                01048                 local   OneS_0
03CD   3010           01049       movlw 0x10
03CE   00B0           01050       movwf COUNTH
03CF   307A           01051       movlw 0x7A
03D0   00B1           01052       movwf COUNTM
03D1   3006           01053       movlw 0x06
03D2   00B2           01054       movwf COUNTL
                      01055 
03D3                  01056 OneS_0
03D3   0BB0           01057       decfsz COUNTH, f
03D4   2???           01058       goto   $+2
03D5   0BB1           01059       decfsz COUNTM, f
03D6   2???           01060       goto   $+2
03D7   0BB2           01061       decfsz COUNTL, f
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D8   2???           01062       goto   OneS_0
                      01063 
03D9   2???           01064       goto $+1
03DA   0000           01065       nop
03DB   0000           01066       nop
03DC   0008           01067                 return
                      01068 
                      01069 ;***************************************
                      01070 ; Print sticker values
                      01071 ;***************************************
03DD                  01072 PrintBlackSticker
03DD   3000           01073         movlw       b'0'
03DE   2???           01074         call        StickerColours
03DF   2???           01075         call        WR_DATA
03E0   0008           01076         return
                      01077 
03E1                  01078 PrintWhiteSticker
03E1   3001           01079         movlw       b'1'
03E2   2???           01080         call        StickerColours
03E3   2???           01081         call        WR_DATA
03E4   0008           01082         return
                      01083         
                      01084 ;***************************************
                      01085 ; Number to Colour
                      01086 ;***************************************
                      01087 PrintCol macro  number
                      01088         movlw       0x80
                      01089         call        WR_INS
                      01090         call        lcdLongDelay
                      01091         movf        number ,W
                      01092         call        BinCol
                      01093         call        WR_DATA
                      01094         endm            
                      01095 
                      01096     
3F72                  01097         END
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
BinLocations                      00000261
BinLocationsDisplay               00000139
BinLocationsEntries               0000026A
Bins                              00000236
BinsDisplay                       00000104
BinsEntries                       0000023F
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
ChooseIR1                         000000B0
ChooseIR2                         000000B4
Clear_Display                     000002F2
ClrLCD                            00000000
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DCMotor                           PORTA,3
D_A                               00000005
D_NOT_A                           00000005
DectoChar                         000002CF
DectoCharEntries                  000002D8
Display                           
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000002F5
Hund                              00000041
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

InitLCD                           00000000
Key                               
KeypadandLCD                      00000062
LCDConversion                     00000093
LCD_DELAY                         
Lb1                               00000022
Lb2                               00000026
Lb3                               0000002A
Lb4                               0000002E
ListDisplay                       000000ED
Location1                         0000003B
Location2                         0000003C
Main                              0000005D
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              0000003D
NumL                              0000003E
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              000003CD
Ones                              00000043
Operation                         0000017F
OperationDisplay                  000000CD
OperationEntries                  00000188
OperationTime                     00000281
OperationTimeDisplay              00000145
OperationTimeEntries              0000028A
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PrintBlackSticker                 000003DD
PrintCol                          
PrintNumber                       
PrintWhiteSticker                 000003E1
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        00000155
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
ReceivedInput                     0000029C
ReceivedInputEntries              000002A5
Results1                          000001DB
Results1Entries                   000001E4
Results2                          00000209
Results2Entries                   00000212
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ScanBackContainer                 000000C2
ScanFrontContainer                000000B8
ShiftLeft                         00000151
SmallValueInput                   000002BA
SmallValueInputEntries            000002C3
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

StickerColours                    000002E3
StickerColoursEntries             000002EC
StickerDisplay                    00000110
StickerStatus                     0000024F
StickerStatusEntries              00000258
Switch_Lines                      000002EF
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              0000003F
Tens                              00000042
Thou                              00000040
UA                                00000001
US                                PORTA,2
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
WantResults                       00000195
WantResultsEntries                0000019E
WantRotate                        000001B9
WantRotateEntries                 000001C2
Welcome_Msg                       0000015F
Welcome_MsgEntries                00000168
Z                                 00000002
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_0063                      00000063
_.org_0_0090                      00000090
_.org_0_0096                      00000096
_.org_0_00BA                      000000BA
_.org_0_00C4                      000000C4
_.org_0_02FC                      000002FC
_.org_0_02FE                      000002FE
_.org_0_0301                      00000301
_.org_0_03D4                      000003D4
_.org_0_03D6                      000003D6
_.org_0_03D9                      000003D9
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
backbinCounter                    00000049
backstickerValues                 00000047
bin16_BCD                         00000001
MPASM 5.65                          MAIN.ASM   2-23-2016  15:44:17         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

binCounter                        0000004A
com                               00000037
dat                               00000038
distanceMoved                     00000044
frontbinCounter                   00000048
frontstickerValues                00000046
goback                            00000092
i2c_common_setup                  00000000
init                              00000034
isColumnThere                     00000045
lcd_d1                            00000035
lcd_d2                            00000036
lcd_tmp                           00000034
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      00000365
show_RTC                          00000305
temp                              00000039
write_rtc                         00000000

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :     0 reported,    16 suppressed

