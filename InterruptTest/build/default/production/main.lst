MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877                 ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018         
                      00019         
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1
  0000003C            00034                 Location2 
  0000003D            00035                 NumH
  0000003E            00036                 NumL
  0000003F            00037                 TenK
  00000040            00038                 Thou
  00000041            00039                 Hund
  00000042            00040                 Tens
  00000043            00041                 Ones
  00000044            00042                 distanceMoved
  00000045            00043                 isColumnThere
  00000046            00044                 frontstickerValues
  00000047            00045                 backstickerValues
  00000048            00046                 frontbinCounter
  00000049            00047                 backbinCounter
  0000004A            00048                 binCounter
                      00049         endc    
                      00050 
                      00051         ;Declare constants for pin assignments (LCD on PORTD)
                      00052                 #define RS      PORTD,2
                      00053                 #define E       PORTD,3
                      00054                 #define IR1     PORTA,0
                      00055                 #define IR2     PORTA,1
                      00056                 #define US      PORTA,2
                      00057                 #define DCMotor PORTA,3
                      00058                 
                      00059 ;distanceMoved  equ     b'0'
                      00060                 
                      00061 
                      00062  
                      00063 
                      00064         ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00065         goto      init       ;Just jump to the main code section.
                      00066          
                      00067 
                      00068            ORG 000H
                      00069 
0000   2???           00070             GOTO KeypadandLCD
                      00071 
                      00072             ORG 004H
                      00073 
0004   2???           00074             GOTO INT_SERV
                      00075             
                      00076 ;***************************************
                      00077 ; Number to Printable
                      00078 ;***************************************
                      00079 PrintNumber macro       number
                      00080         ;movf       number ,W
                      00081         movfw       number
                      00082         call        DectoChar
                      00083         call        WR_DATA
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00084         endm
                      00085 
                      00086 ; white and black sticker labels at bottom
                      00087             
0005                  00088 INT_SERV:
                      00089     
0005   188B           00090      btfsc INTCON, INTF
                      00091      PrintNumber    0x2
                          M         ;movf       number ,W
0006   0802               M         movfw       0x2
0007   2???               M         call        DectoChar
0008   2???               M         call        WR_DATA
0009   108B           00092      BCF INTCON, INTF    ; clear the appropriate flag
                      00093      
000A   0009           00094      RETFIE
                      00095      
                      00096      
                      00097          ;ORG      0x100        ;this command is sketchy
                      00098          
                      00099 
                      00100 Key      macro  value, subroutine
                      00101          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00102          andlw          0x0F
                      00103          xorlw          value
                      00104          btfsc          STATUS, Z
                      00105          call           subroutine
                      00106         endm
                      00107 
                      00108 Rotation macro  value
                      00109          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00110          andlw          0x0F
                      00111          xorlw          value
                      00112          btfsc          STATUS, Z
                      00113          call           ShiftLeft
                      00114         endm
                      00115 
                      00116 ;***************************************
                      00117 ; Delay: ~160us macro
                      00118 ;***************************************
                      00119 LCD_DELAY macro
                      00120         movlw   0xFF
                      00121         movwf   lcd_d1
                      00122         decfsz  lcd_d1,f
                      00123         goto    $-1
                      00124         endm
                      00125         
                      00126 ;***************************************
                      00127 ; Display macro
                      00128 ;***************************************
                      00129 Display macro   Message
                      00130                 local   loop_
                      00131                 local   end_
                      00132                 clrf    Table_Counter
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00133                 clrw            
                      00134 loop_   movf    Table_Counter,W
                      00135                 call    Message
                      00136                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00137                 btfsc   STATUS,Z
                      00138                         goto    end_
                      00139                 call    WR_DATA
                      00140                 incf    Table_Counter,F
                      00141                 goto    loop_
                      00142 end_
                      00143                 endm
                      00144                 
                      00145 ;*******************************************************
                      00146 ;******             BCD                 ****************
                      00147 ;*******************************************************
                      00148         
                      00149 ;---------------- Binary (16-bit) to BCD -----------------------
                      00150 ;
                      00151 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00152 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00153                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00154 ;
                      00155 ; Uses variables
                      00156 ; NumH, NumL
                      00157 ; TenK, Thou, Hund, Tens, Ones
                      00158                 
                      00159 ;BCD    macro   NumH, NumL
                      00160 
000B                  00161 bin16_BCD
000B   0E3D           00162         swapf   NumH, W
000C   390F           00163         andlw   0x0F
000D   3EF0           00164         addlw   0xF0
000E   00C0           00165         movwf   Thou 
000F   07C0           00166         addwf   Thou, F 
0010   3EE2           00167         addlw   0xE2 
0011   00C1           00168         movwf   Hund 
0012   3E32           00169         addlw   0x32 
0013   00C3           00170         movwf   Ones 
                      00171 
0014   083D           00172         movf    NumH, W 
0015   390F           00173         andlw   0x0F 
0016   07C1           00174         addwf   Hund, F 
0017   07C1           00175         addwf   Hund, F 
0018   07C3           00176         addwf   Ones, F 
0019   3EE9           00177         addlw   0xE9 
001A   00C2           00178         movwf   Tens 
001B   07C2           00179         addwf   Tens, F 
001C   07C2           00180         addwf   Tens, F 
                      00181 
001D   0E3E           00182         swapf   NumL, W 
001E   390F           00183         andlw   0x0F 
001F   07C2           00184         addwf   Tens, F 
0020   07C3           00185         addwf   Ones, F 
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00186 
0021   0DC2           00187         rlf    Tens, F 
0022   0DC3           00188         rlf    Ones, F 
0023   09C3           00189         comf    Ones, F 
0024   0DC3           00190         rlf    Ones, F 
                      00191 
0025   083E           00192         movf    NumL, W 
0026   390F           00193         andlw   0x0F 
0027   07C3           00194         addwf   Ones, F 
0028   0DC0           00195         rlf    Thou,F 
                      00196 
0029   3007           00197         movlw   0x07 
002A   00BF           00198         movwf   TenK 
                      00199 
002B   300A           00200         movlw   0x0A
002C                  00201 Lb1
002C   03C2           00202         decf    Tens, F 
002D   07C3           00203         addwf   Ones, F 
002E   1C03           00204         btfss   STATUS, C 
002F   2???           00205         goto            Lb1 
0030                  00206 Lb2
0030   03C1           00207         decf    Hund, F 
0031   07C2           00208         addwf   Tens, F 
0032   1C03           00209         btfss   STATUS,C 
0033   2???           00210         goto            Lb2 
0034                  00211 Lb3
0034   03C0           00212         decf    Thou, F 
0035   07C1           00213         addwf   Hund, F 
0036   1C03           00214         btfss   STATUS,C
0037   2???           00215         goto            Lb3 
0038                  00216 Lb4
0038   03BF           00217         decf    TenK, F 
0039   07C0           00218         addwf   Thou, F 
003A   1C03           00219         btfss   STATUS,C 
003B   2???           00220         goto            Lb4 
                      00221 
003C   3400           00222         retlw   0
003D   0008           00223         return
                      00224 ;endm
                      00225 
                      00226 ;***************************************
                      00227 ; Initialize
                      00228 ;***************************************
003E                  00229 init
003E   018B           00230          clrf      INTCON         ; No interrupts
                      00231 
003F   1683           00232          bsf       STATUS,RP0     ; select bank 1
0040   0185           00233          clrf      TRISA          ; All port A is output
0041   30F3           00234          movlw     b'11110011'    ; Set required keypad inputs
0042   0086           00235          movwf     TRISB
0043   0187           00236          clrf      TRISC          ; All port C is output
0044   0188           00237          clrf      TRISD          ; All port D is output
                      00238          
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00239                   ;Set SDA and SCL to high-Z first as required for I2C
0045   1607           00240                  bsf       TRISC,4                
0046   1587           00241                  bsf       TRISC,3
                      00242 
0047   1283           00243          bcf       STATUS,RP0     ; select bank 0
0048   0185           00244          clrf      PORTA
0049   0186           00245          clrf      PORTB
004A   0187           00246          clrf      PORTC
004B   0188           00247          clrf      PORTD
                      00248          
                      00249         ;Set up I2C for communication
                      00250                  
004C   2???           00251         call       i2c_common_setup
                      00252 ;*******************************************************************************
                      00253         ; UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00254         ;rtc_resetAll
                      00255         ;call set_rtc_time
                      00256 ;*******************************************************************************
                      00257                  
                      00258                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00259                  ;call     set_rtc_time
                      00260           
004D   2???           00261          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00262           ;A/D converter attempt
                      00263          
004E   1303           00264          bcf    STATUS,RP1
004F   1683           00265          bsf    STATUS,RP0      ;Select bank 1
                      00266          
0050   1405           00267          bsf    IR1             ;makes RA0 an input
0051   1283           00268          bcf    STATUS,RP0      ; go back to bank 0
                      00269          
0052   1507           00270         bsf     PORTC,2         ; gives RC2 5 volts
                      00271          
                      00272         ; Set ADCON1 to use RA0 as analog input
                      00273         
                      00274         
0053   1683           00275         bsf     STATUS,RP0      ;Select bank 1
0054   3006           00276         movlw   b'00000110'     ;left justified, all inputs digital
0055   009F           00277         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00278 
                      00279         ;ADCON0
0056   1283           00280         bcf     STATUS,RP0
0057   30C5           00281         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
0058   009F           00282         movwf   ADCON0
                      00283         
                      00284               
                      00285         
0059   1701           00286      BSF OPTION_REG, INTEDG   ; interrupt on positive
005A   108B           00287      BCF INTCON, INTF    ; clear interrupt flag
005B   160B           00288      BSF INTCON, INTE    ; mask for external interrupts
005C   178B           00289      BSF INTCON, GIE     ; enable interrupts
                      00290         
                      00291 ;***************************************************
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00292 ; Initialize variables and Displays
                      00293 ;****************************************************   
                      00294         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
005D   01B3               M                 clrf    Table_Counter
005E   0103               M                 clrw            
005F   0833               M loop_   movf    Table_Counter,W
0060   2???               M                 call    Welcome_Msg
0061   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0062   1903               M                 btfsc   STATUS,Z
0063   2???               M                         goto    end_
0064   2???               M                 call    WR_DATA
0065   0AB3               M                 incf    Table_Counter,F
0066   2???               M                 goto    loop_
0067                      M end_
                      00295         
                      00296         
0067   3000           00297         movlw   b'0'
0068   00C8           00298         movwf   frontbinCounter         ;initialize binCounter with zero
0069   3000           00299         movlw   b'0'
006A   00C9           00300         movwf   backbinCounter          ;initialize binCounter with zero
                      00301         
                      00302 
                      00303         
                      00304 
                      00305 ;*******************************************************************************************************
                            *******************************************
                      00306 ;                                                                 MAIN CODE
                      00307 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
006B                  00308 MAIN    
                      00309 
                      00310 ; WAIT FOR INITIAL INPUT
006B   2???           00311     goto    KeypadandLCD     ;calls initial form of keypad and LCD, where  robot is waiting for input to
                             begin 
                      00312         
                      00313     
006C   3000           00314     movlw   b'0000'
006D   00C8           00315     movwf   frontbinCounter         ;testing with value of 5 bins
006E   00C9           00316     movwf   backbinCounter    
                      00317     
                      00318     
                      00319     
                      00320     
                      00321     
                      00322 ;    goto    getTimeRTC     ; gets time from RTC clock
                      00323 ;       
                      00324 ;;   MOTOR ON
                      00325 ;       
                      00326 ;    bsf        DCMotor             ; begin forward movement, set appropriate bit to 1  
                      00327 ;    movlw   b'1'
                      00328 ;    addwf  distanceMoved,f     ; increments distanceMoved by 1 (will experimentally find binary value f
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            or 4 m)
                      00329 ;    
                      00330 ;;   CHECK COLUMN
                      00331 ;    
                      00332 ;    call    ChooseIR1          ;selects IR1 for data conversion
                      00333 ;    call    pollColumnSensor   ;checks to see if column present
                      00334 ;    btfss   isColumnThere,0
                      00335 ;    goto    Main
                      00336 ;    
                      00337 ;;   CHECK IF AT THE END OF BUCKET LINE
                      00338 ;    
                      00339 ;    call    pollUSsensor       ; call ultrasonic sensor
                      00340 ;    btfsc   nothingAhead,0     ;   checks if there is nothing ahead
                      00341 ;    goto    Finalize
                      00342 ;    
                      00343 ;;   CHECK IF CONTAINER IS THERE
                      00344 ;    
                      00345 ;    btfss   withinDetectionRange,0  ; checks whether container ahead is within detection range
                      00346 ;    goto    Main
                      00347 ;   call start arm motor
                      00348 ;   call other motor
                      00349 ;    call    frontscanContainer     ; label to begin container scanning
                      00350 ;    call    backscanContainer      ; label to begin container scanning
                      00351 ;    movlw  b'1'
                      00352 ;    addwf   frontbinCounter,f      ;increment the bin counters
                      00353 ;    addwf   backbinCounter,f
006F   2???           00354     goto    MAIN
                      00355 
                      00356 
                      00357                 
                      00358 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00359 
                      00360 ;*************************************
                      00361 ;       Keypad and LCD forms        
                      00362 ;*************************************
                      00363         
                      00364         
                      00365         
0070   1C86           00366 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0071   2???           00367                 goto            $-1 
                      00368 
0072   0E06           00369                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0073   390F           00370                 andlw           0x0F
0074   00B9           00371                 movwf           temp
0075   1605           00372                 bsf             PORTA,4
                      00373                 Key     0x00, OperationDisplay
0076   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0077   390F               M          andlw          0x0F
0078   3A00               M          xorlw          0x00
0079   1903               M          btfsc          STATUS, Z
007A   2???               M          call           OperationDisplay
                      00374                 ;Key    0x00, goback
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00375                 Key     0x01, LCDConversion
007B   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
007C   390F               M          andlw          0x0F
007D   3A01               M          xorlw          0x01
007E   1903               M          btfsc          STATUS, Z
007F   2???               M          call           LCDConversion
                      00376                 Rotation        0x03
0080   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0081   390F               M          andlw          0x0F
0082   3A03               M          xorlw          0x03
0083   1903               M          btfsc          STATUS, Z
0084   2???               M          call           ShiftLeft
                      00377                 Key     0x04, BinsDisplay
0085   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0086   390F               M          andlw          0x0F
0087   3A04               M          xorlw          0x04
0088   1903               M          btfsc          STATUS, Z
0089   2???               M          call           BinsDisplay
                      00378                 Key     0x05, StickerDisplay
008A   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008B   390F               M          andlw          0x0F
008C   3A05               M          xorlw          0x05
008D   1903               M          btfsc          STATUS, Z
008E   2???               M          call           StickerDisplay
                      00379                 Key     0x06, BinLocationsDisplay
008F   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0090   390F               M          andlw          0x0F
0091   3A06               M          xorlw          0x06
0092   1903               M          btfsc          STATUS, Z
0093   2???               M          call           BinLocationsDisplay
                      00380                 Key     0x08, OperationTimeDisplay
0094   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0095   390F               M          andlw          0x0F
0096   3A08               M          xorlw          0x08
0097   1903               M          btfsc          STATUS, Z
0098   2???               M          call           OperationTimeDisplay
                      00381                 Key     0x09, RTCDisplay
0099   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009A   390F               M          andlw          0x0F
009B   3A09               M          xorlw          0x09
009C   1903               M          btfsc          STATUS, Z
009D   2???               M          call           RTCDisplay
009E   1886           00382                 btfsc           PORTB,1     ;Wait until key is released
009F   2???           00383                 goto            $-1
00A0   2???           00384                 goto            KeypadandLCD
                      00385                 
00A1                  00386 goback
00A1   0008           00387                 return  
                      00388                 
                      00389                 
                      00390 ;*********************************************************
                      00391 ; A to D conversion with LCD display for IR sensor
                      00392 ;*********************************************************
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00393 
00A2                  00394 LCDConversion
00A2   1507           00395         bsf     PORTC,2         ; gives RC2 5 volts     
                      00396                 
00A3   151F           00397         bsf     ADCON0,2                ;start conversion and wait for it to complete
00A4   191F           00398         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
00A5   2???           00399         goto    $-1
                      00400         
00A6   081E           00401         movf    ADRESH, W
00A7   00BD           00402         movwf   NumH
00A8   081E           00403         movf    ADRESL, W
00A9   00BE           00404         movwf   NumL
                      00405                 
00AA   2???           00406         call            bin16_BCD
00AB   2???           00407         call            ClrLCD
                      00408         PrintNumber     TenK
                          M         ;movf       number ,W
00AC   083F               M         movfw       TenK
00AD   2???               M         call        DectoChar
00AE   2???               M         call        WR_DATA
                      00409         PrintNumber     Thou
                          M         ;movf       number ,W
00AF   0840               M         movfw       Thou
00B0   2???               M         call        DectoChar
00B1   2???               M         call        WR_DATA
                      00410         PrintNumber     Hund
                          M         ;movf       number ,W
00B2   0841               M         movfw       Hund
00B3   2???               M         call        DectoChar
00B4   2???               M         call        WR_DATA
                      00411         PrintNumber     Tens
                          M         ;movf       number ,W
00B5   0842               M         movfw       Tens
00B6   2???               M         call        DectoChar
00B7   2???               M         call        WR_DATA
                      00412         PrintNumber     Ones
                          M         ;movf       number ,W
00B8   0843               M         movfw       Ones
00B9   2???               M         call        DectoChar
00BA   2???               M         call        WR_DATA
00BB   2???           00413         call            HalfS
00BC   2???           00414         call            HalfS
00BD   1107           00415         bcf     PORTC,2         ; gives RC2 5 volts
00BE   2???           00416         goto    LCDConversion
                      00417 
                      00418 ;****************************
                      00419 ;       Choose IR1
                      00420 ;****************************
                      00421         
00BF                  00422 ChooseIR1
                      00423         
00BF   1405           00424         bsf     IR1             ;makes RA0 an input
00C0   30C5           00425         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C1   009F           00426         movwf   ADCON0
                      00427         
00C2   0008           00428         return
                      00429         
                      00430 ;****************************
                      00431 ;       Choose IR2
                      00432 ;****************************
                      00433         
00C3                  00434 ChooseIR2
                      00435         
00C3   1485           00436         bsf     IR2             ;makes RA0 an input
00C4   30CD           00437         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
00C5   009F           00438         movwf   ADCON0
                      00439         
00C6   0008           00440         return
                      00441         
                      00442         
                      00443 ;****************************************************
                      00444 ;   ScanFrontContainer
                      00445 ;****************************************************
                      00446         
00C7                  00447 ScanFrontContainer
                      00448         ; A to d conversion
                      00449         
00C7   151F           00450         bsf     ADCON0,2                ;start conversion and wait for it to complete
00C8   191F           00451         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
00C9   2???           00452         goto    $-1
                      00453         
00CA   081E           00454         movf    ADRESH, W
00CB   00BD           00455         movwf   NumH
00CC   081E           00456         movf    ADRESL, W
00CD   00BE           00457         movwf   NumL
                      00458         
                      00459 ;       btfss   ADRESH,2                ;test bit 2 of ADRESH, the bit that we believe will distinguish 
                            black and white (need to experiment)
                      00460 ;       bsf     frontstickerValues,frontbinCounter              ;if is set, means that colour is white
                      00461 ;       btfsc   ADRESH,2
                      00462 ;       bcf     frontstickerValues,frontbinCounter    ; modifies the bits in the stickervalues
                      00463         
                      00464         ;display on screen for troubleshooting purposes
                      00465         
                      00466 ;       call            bin16_BCD
                      00467 ;       call            ClrLCD
                      00468 ;       PrintNumber     TenK
                      00469 ;       PrintNumber     Thou
                      00470 ;       PrintNumber     Hund
                      00471 ;       PrintNumber     Tens
                      00472 ;       PrintNumber     Ones    
00CE   2???           00473         call            HalfS
00CF   2???           00474         call            HalfS
                      00475         
00D0   0008           00476         return
                      00477         
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00478 ;****************************************************
                      00479 ;   ScanBackContainer
                      00480 ;****************************************************
                      00481         
00D1                  00482 ScanBackContainer
                      00483         ; A to d conversion
                      00484         
00D1   151F           00485         bsf     ADCON0,2                ;start conversion and wait for it to complete
00D2   191F           00486         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
00D3   2???           00487         goto    $-1
                      00488         
00D4   081E           00489         movf    ADRESH, W
00D5   00BD           00490         movwf   NumH
00D6   081E           00491         movf    ADRESL, W
00D7   00BE           00492         movwf   NumL
                      00493         
                      00494 ;       btfss   ADRESH,2                ;test bit 2 of ADRESH, the bit that we believe will distinguish 
                            black and white (need to experiment)
                      00495 ;       bsf     backstickerValues,backbinCounter                ;if is set, means that colour is white
                      00496 ;       btfsc   ADRESH,2
                      00497 ;       bcf     backstickerValues,backbinCounter    ; modifies the bits in the stickervalues
                      00498         
                      00499         ;display on screen for troubleshooting purposes
                      00500         
                      00501 ;       call            bin16_BCD
                      00502 ;       call            ClrLCD
                      00503 ;       PrintNumber     TenK
                      00504 ;       PrintNumber     Thou
                      00505 ;       PrintNumber     Hund
                      00506 ;       PrintNumber     Tens
                      00507 ;       PrintNumber     Ones    
00D8   2???           00508         call            HalfS
00D9   2???           00509         call            HalfS
                      00510         
00DA   0008           00511         return
                      00512 
                      00513 ;*********************************************
                      00514 ; Keypad Modules
                      00515 ;*******************************************
                      00516          
                      00517 
00DB                  00518 OperationDisplay
00DB   2???           00519         call        Clear_Display
                      00520         
                      00521         
                      00522         
00DC   2???           00523         call        ScanFrontContainer
00DD   2???           00524         call        ScanBackContainer
00DE   2???           00525         call        ScanFrontContainer
00DF   2???           00526         call        ScanBackContainer
00E0   2???           00527         call        ScanFrontContainer
00E1   2???           00528         call        ScanBackContainer
00E2   2???           00529         call        ScanFrontContainer
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E3   2???           00530         call        ScanBackContainer
                      00531         
00E4   2???           00532         call        Clear_Display
                      00533         Display     WantResults
  0000                    M                 local   loop_
  0000                    M                 local   end_
00E5   01B3               M                 clrf    Table_Counter
00E6   0103               M                 clrw            
00E7   0833               M loop_   movf    Table_Counter,W
00E8   2???               M                 call    WantResults
00E9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00EA   1903               M                 btfsc   STATUS,Z
00EB   2???               M                         goto    end_
00EC   2???               M                 call    WR_DATA
00ED   0AB3               M                 incf    Table_Counter,F
00EE   2???               M                 goto    loop_
00EF                      M end_
00EF   2???           00534         call        Switch_Lines
                      00535         Display     WantRotate
  0000                    M                 local   loop_
  0000                    M                 local   end_
00F0   01B3               M                 clrf    Table_Counter
00F1   0103               M                 clrw            
00F2   0833               M loop_   movf    Table_Counter,W
00F3   2???               M                 call    WantRotate
00F4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00F5   1903               M                 btfsc   STATUS,Z
00F6   2???               M                         goto    end_
00F7   2???               M                 call    WR_DATA
00F8   0AB3               M                 incf    Table_Counter,F
00F9   2???               M                 goto    loop_
00FA                      M end_
                      00536         
00FA   0008           00537         return
                      00538         
00FB                  00539 ListDisplay
00FB   2???           00540         call        Clear_Display
                      00541         Display     Results1
  0000                    M                 local   loop_
  0000                    M                 local   end_
00FC   01B3               M                 clrf    Table_Counter
00FD   0103               M                 clrw            
00FE   0833               M loop_   movf    Table_Counter,W
00FF   2???               M                 call    Results1
0100   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0101   1903               M                 btfsc   STATUS,Z
0102   2???               M                         goto    end_
0103   2???               M                 call    WR_DATA
0104   0AB3               M                 incf    Table_Counter,F
0105   2???               M                 goto    loop_
0106                      M end_
0106   2???           00542         call        Switch_Lines
                      00543         Display     Results2
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
0107   01B3               M                 clrf    Table_Counter
0108   0103               M                 clrw            
0109   0833               M loop_   movf    Table_Counter,W
010A   2???               M                 call    Results2
010B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
010C   1903               M                 btfsc   STATUS,Z
010D   2???               M                         goto    end_
010E   2???               M                 call    WR_DATA
010F   0AB3               M                 incf    Table_Counter,F
0110   2???               M                 goto    loop_
0111                      M end_
                      00544         
0111   0008           00545         return
                      00546                 
0112                  00547 BinsDisplay
0112   2???           00548         call        Clear_Display
                      00549         Display     Bins
  0000                    M                 local   loop_
  0000                    M                 local   end_
0113   01B3               M                 clrf    Table_Counter
0114   0103               M                 clrw            
0115   0833               M loop_   movf    Table_Counter,W
0116   2???               M                 call    Bins
0117   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0118   1903               M                 btfsc   STATUS,Z
0119   2???               M                         goto    end_
011A   2???               M                 call    WR_DATA
011B   0AB3               M                 incf    Table_Counter,F
011C   2???               M                 goto    loop_
011D                      M end_
                      00550                 
011D   0008           00551         return
                      00552         
011E                  00553 StickerDisplay
011E   2???           00554         call        Clear_Display
                      00555 
                      00556 ;       movlw       b'0000000'
                      00557 ;       movwf       stickerValues
                      00558 ;       movlw       b'1111111'
                      00559 ;       movwf       backstickerValues
                      00560         
011F   3000           00561         movlw   b'0000'
0120   00C8           00562         movwf   frontbinCounter     ;testing with value of 5 bins
0121   00C9           00563         movwf   backbinCounter 
                      00564         
0122   2???           00565         call        ScanFrontContainer
0123   1C46           00566         btfss       frontstickerValues,0        ; check the ith bucket value and if it is clear,
0124   2???           00567         call        PrintBlackSticker   ; print a black sticker on the thing
0125   1846           00568         btfsc       frontstickerValues,0
0126   2???           00569         call        PrintWhiteSticker
                      00570         ;call       Switch_Lines
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0127   2???           00571         call        ScanBackContainer
0128   1C47           00572         btfss       backstickerValues,0 ; check the ith bucket value and if it is clear,
0129   2???           00573         call        PrintBlackSticker   ; print a black sticker on the thing
012A   1847           00574         btfsc       backstickerValues,0
012B   2???           00575         call        PrintWhiteSticker
                      00576         ;call       Switch_Lines
                      00577         
                      00578 ;       decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00579 ;       goto        $+2
                      00580 ;       return
                      00581         
012C   3001           00582         movlw   b'0001'
012D   00C8           00583         movwf   frontbinCounter     ;testing with value of 5 bins
012E   00C9           00584         movwf   backbinCounter
                      00585         
                      00586         
                      00587         
012F   2???           00588         call        ScanFrontContainer
0130   1CC6           00589         btfss       frontstickerValues,1        ; check the ith bucket value and if it is clear,
0131   2???           00590         call        PrintBlackSticker   ; print a black sticker on the thing
0132   18C6           00591         btfsc       frontstickerValues,1
0133   2???           00592         call        PrintWhiteSticker
                      00593         ;call       Switch_Lines
0134   2???           00594         call        ScanBackContainer
0135   1CC7           00595         btfss       backstickerValues,1 ; check the ith bucket value and if it is clear,
0136   2???           00596         call        PrintBlackSticker   ; print a black sticker on the thing
0137   18C7           00597         btfsc       backstickerValues,1
0138   2???           00598         call        PrintWhiteSticker
                      00599         ;call       Switch_Lines
                      00600         
                      00601 ;       decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00602 ;       goto        $+2
                      00603 ;       return
                      00604         
0139   3002           00605         movlw   b'0010'
013A   00C8           00606         movwf   frontbinCounter     ;testing with value of 5 bins
013B   00C9           00607         movwf   backbinCounter
                      00608         
                      00609         
013C   2???           00610         call        ScanFrontContainer
013D   1D46           00611         btfss       frontstickerValues,2        ; check the ith bucket value and if it is clear,
013E   2???           00612         call        PrintBlackSticker   ; print a black sticker on the thing
013F   1946           00613         btfsc       frontstickerValues,2
0140   2???           00614         call        PrintWhiteSticker
                      00615         ;call       Switch_Lines
0141   2???           00616         call        ScanBackContainer
0142   1D47           00617         btfss       backstickerValues,2 ; check the ith bucket value and if it is clear,
0143   2???           00618         call        PrintBlackSticker   ; print a black sticker on the thing
0144   1947           00619         btfsc       backstickerValues,2
0145   2???           00620         call        PrintWhiteSticker
                      00621         ;call       Switch_Lines
                      00622         
                      00623 ;       movlw   b'0011'
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00624 ;       movwf   frontbinCounter     ;testing with value of 5 bins
                      00625 ;       movwf   backbinCounter
                      00626 ;       
                      00627 ;;      decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00628 ;;      goto        $+2
                      00629 ;;      return
                      00630 ;;      
                      00631 ;       call        ScanFrontContainer
                      00632 ;       btfss       frontstickerValues,3        ; check the ith bucket value and if it is clear,
                      00633 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00634 ;       btfsc       frontstickerValues,3
                      00635 ;       call        PrintWhiteSticker
                      00636 ;       ;call       Switch_Lines
                      00637 ;       call        ScanBackContainer
                      00638 ;       btfss       backstickerValues,3 ; check the ith bucket value and if it is clear,
                      00639 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00640 ;       btfsc       backstickerValues,3
                      00641 ;       call        PrintWhiteSticker
                      00642 ;       ;call       Switch_Lines
                      00643 ;               
                      00644 ;       movlw   b'0100'
                      00645 ;       movwf   frontbinCounter     ;testing with value of 5 bins
                      00646 ;       movwf   backbinCounter
                      00647 ;       
                      00648 ;;      
                      00649 ;;      decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00650 ;;      goto        $+2
                      00651 ;;      return
                      00652 ;;      
                      00653 ;       btfss       frontstickerValues,4        ; check the ith bucket value and if it is clear,
                      00654 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00655 ;       btfsc       frontstickerValues,4
                      00656 ;       call        PrintWhiteSticker
                      00657 ;       ;call       Switch_Lines
                      00658 ;       btfss       backstickerValues,4 ; check the ith bucket value and if it is clear,
                      00659 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00660 ;       btfsc       backstickerValues,4
                      00661 ;       call        PrintWhiteSticker
                      00662 ;       ;call       Switch_Lines
                      00663 
                      00664         
                      00665 ;       decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00666 ;       goto        $+2
                      00667 ;       return
                      00668 ;       
                      00669 ;       btfss       frontstickerValues,5        ; check the ith bucket value and if it is clear,
                      00670 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00671 ;       btfsc       frontstickerValues,5
                      00672 ;       call        PrintWhiteSticker
                      00673 ;       ;call       Switch_Lines
                      00674 ;       btfss       backstickerValues,5 ; check the ith bucket value and if it is clear,
                      00675 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00676 ;       btfsc       backstickerValues,5
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00677 ;       call        PrintWhiteSticker
                      00678 ;       ;call       Switch_Lines
                      00679 ;       
                      00680 ;       decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00681 ;       goto        $+2
                      00682 ;       return
                      00683 ;       
                      00684 ;       btfss       frontstickerValues,6        ; check the ith bucket value and if it is clear,
                      00685 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00686 ;       btfsc       frontstickerValues,6
                      00687 ;       call        PrintWhiteSticker
                      00688 ;       ;call       Switch_Lines
                      00689 ;       btfss       backstickerValues,6 ; check the ith bucket value and if it is clear,
                      00690 ;       call        PrintBlackSticker   ; print a black sticker on the thing
                      00691 ;       btfsc       backstickerValues,6
                      00692 ;       call        PrintWhiteSticker
                      00693 ;       ;call       Switch_Lines
                      00694 ;       
                      00695 ;       decfsz      frontbinCounter             ;decrements bin counter to know how much to print
                      00696 ;       goto        $+2
                      00697 ;       return
                      00698         
0146   0008           00699         return
                      00700         
0147                  00701 BinLocationsDisplay
0147   2???           00702         call        Clear_Display
                      00703         Display     BinLocations
  0000                    M                 local   loop_
  0000                    M                 local   end_
0148   01B3               M                 clrf    Table_Counter
0149   0103               M                 clrw            
014A   0833               M loop_   movf    Table_Counter,W
014B   2???               M                 call    BinLocations
014C   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
014D   1903               M                 btfsc   STATUS,Z
014E   2???               M                         goto    end_
014F   2???               M                 call    WR_DATA
0150   0AB3               M                 incf    Table_Counter,F
0151   2???               M                 goto    loop_
0152                      M end_
                      00704                 
0152   0008           00705         return
                      00706 
0153                  00707 OperationTimeDisplay
0153   2???           00708         call        Clear_Display
                      00709         Display     OperationTime
  0000                    M                 local   loop_
  0000                    M                 local   end_
0154   01B3               M                 clrf    Table_Counter
0155   0103               M                 clrw            
0156   0833               M loop_   movf    Table_Counter,W
0157   2???               M                 call    OperationTime
0158   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0159   1903               M                 btfsc   STATUS,Z
015A   2???               M                         goto    end_
015B   2???               M                 call    WR_DATA
015C   0AB3               M                 incf    Table_Counter,F
015D   2???               M                 goto    loop_
015E                      M end_
                      00710                 
015E   0008           00711         return
                      00712         
015F                  00713 ShiftLeft
015F   3018           00714         movlw           b'00011000'             ;Move to the left
0160   2???           00715         call            WR_INS
0161   0008           00716         return
                      00717 
0162   2???           00718         goto MAIN
                      00719         
0163                  00720 RTCDisplay
0163   2???           00721         call    show_RTC
                      00722         
0164   1886           00723         btfsc           PORTB,1     ;Wait until data is available from the keypad
0165   0008           00724         return
0166   1886           00725         btfsc           PORTB,1     ;Wait until data is available from the keypad
0167   0008           00726         return
0168   1886           00727         btfsc           PORTB,1     ;Wait until data is available from the keypad
0169   0008           00728         return
016A   1886           00729         btfsc           PORTB,1     ;Wait until data is available from the keypad
016B   0008           00730         return
016C   2???           00731         goto        RTCDisplay
                      00732         
                      00733 ;***************************************
                      00734 ; Look up table
                      00735 ;***************************************
                      00736     
016D                  00737 Welcome_Msg
                      00738         
                      00739         ;Change Page
016D   00BA           00740         movwf   Temp
016E   30??           00741         movlw   HIGH Welcome_MsgEntries
016F   008A           00742         movwf   PCLATH
0170   083A           00743         movf    Temp,w
0171   3E??           00744         addlw   LOW Welcome_MsgEntries
0172   1803           00745         btfsc   STATUS,C
0173   0A8A           00746             incf    PCLATH,f
0174   0082           00747         movwf   PCL     
0175   0782           00748         addwf    PCL,F
0176                  00749 Welcome_MsgEntries
0176   3450 3472 3465 00750         dt        "Press 1 to start robot", 0
       3473 3473 3420 
       3431 3420 3474 
       346F 3420 3473 
       3474 3461 3472 
       3474 3420 3472 
       346F 3462 346F 
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3474 3400 
                      00751         
018D                  00752 Operation
                      00753         
                      00754         ;Change Page
018D   00BA           00755         movwf    Temp
018E   30??           00756         movlw   HIGH OperationEntries
018F   008A           00757         movwf   PCLATH
0190   083A           00758         movf    Temp,w
0191   3E??           00759         addlw   LOW OperationEntries
0192   1803           00760         btfsc   STATUS,C
0193   0A8A           00761             incf    PCLATH,f
0194   0082           00762         movwf   PCL
0195   0782           00763         addwf    PCL,F
0196                  00764 OperationEntries
0196   344F 3470 3465 00765         dt        "Operating...",0
       3472 3461 3474 
       3469 346E 3467 
       342E 342E 342E 
       3400 
                      00766 
01A3                  00767 WantResults
                      00768         
                      00769         ;Change Page
01A3   00BA           00770         movwf    Temp
01A4   30??           00771         movlw   HIGH WantResultsEntries
01A5   008A           00772         movwf   PCLATH
01A6   083A           00773         movf    Temp,w
01A7   3E??           00774         addlw   LOW WantResultsEntries
01A8   1803           00775         btfsc   STATUS,C
01A9   0A8A           00776             incf    PCLATH,f
01AA   0082           00777         movwf   PCL
01AB   0782           00778         addwf    PCL,F
01AC                  00779 WantResultsEntries
01AC   3450 3472 3465 00780         dt        "Press 2 to display results",0
       3473 3473 3420 
       3432 3420 3474 
       346F 3420 3464 
       3469 3473 3470 
       346C 3461 3479 
       3420 3472 3465 
       3473 3475 346C 
       3474 3473 3400 
                      00781 
                      00782 
01C7                  00783 WantRotate
                      00784                 
                      00785         ;Change Page
01C7   00BA           00786         movwf    Temp
01C8   30??           00787         movlw   HIGH WantRotateEntries
01C9   008A           00788         movwf   PCLATH
01CA   083A           00789         movf    Temp,w
01CB   3E??           00790         addlw   LOW WantRotateEntries
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01CC   1803           00791         btfsc   STATUS,C
01CD   0A8A           00792             incf    PCLATH,f
01CE   0082           00793         movwf   PCL
01CF   0782           00794         addwf    PCL,F
01D0                  00795 WantRotateEntries
01D0   3450 3472 3465 00796         dt        "Press A to rotate screen",0
       3473 3473 3420 
       3441 3420 3474 
       346F 3420 3472 
       346F 3474 3461 
       3474 3465 3420 
       3473 3463 3472 
       3465 3465 346E 
       3400 
                      00797         
01E9                  00798 Results1 
                      00799                 
                      00800         ;Change Page
01E9   00BA           00801         movwf    Temp
01EA   30??           00802         movlw   HIGH Results1Entries
01EB   008A           00803         movwf   PCLATH
01EC   083A           00804         movf    Temp,w
01ED   3E??           00805         addlw   LOW Results1Entries
01EE   1803           00806         btfsc   STATUS,C
01EF   0A8A           00807             incf    PCLATH,f
01F0   0082           00808         movwf   PCL
01F1   0782           00809         addwf    PCL,F
01F2                  00810 Results1Entries 
01F2   3434 343A 3420 00811         dt        "4: number of bins, 5: sticker status",0
       346E 3475 346D 
       3462 3465 3472 
       3420 346F 3466 
       3420 3462 3469 
       346E 3473 342C 
       3420 3435 343A 
       3420 3473 3474 
       3469 3463 346B 
       3465 3472 3420 
       3473 3474 3461 
       3474 3475 3473 
       3400 
                      00812         
0217                  00813 Results2
                      00814         
                      00815         ;Change Page
0217   00BA           00816         movwf    Temp
0218   30??           00817         movlw   HIGH Results2Entries
0219   008A           00818         movwf   PCLATH
021A   083A           00819         movf    Temp,w
021B   3E??           00820         addlw   LOW Results2Entries
021C   1803           00821         btfsc   STATUS,C
021D   0A8A           00822             incf    PCLATH,f
021E   0082           00823         movwf   PCL     
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021F   0782           00824         addwf    PCL,F
0220                  00825 Results2Entries 
0220   3436 343A 3420 00826         dt        "6: bin locations, 7: operation time",0
       3462 3469 346E 
       3420 346C 346F 
       3463 3461 3474 
       3469 346F 346E 
       3473 342C 3420 
       3437 343A 3420 
       346F 3470 3465 
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
       346D 3465 3400 
                      00827         
0244                  00828 Bins
                      00829         ;Change Page
0244   00BA           00830         movwf    Temp
0245   30??           00831         movlw   HIGH BinsEntries
0246   008A           00832         movwf   PCLATH
0247   083A           00833         movf    Temp,w
0248   3E??           00834         addlw   LOW BinsEntries
0249   1803           00835         btfsc   STATUS,C
024A   0A8A           00836             incf    PCLATH,f
024B   0082           00837         movwf   PCL     
024C   0782           00838         addwf    PCL,F
024D                  00839 BinsEntries
024D   3434 3420 3462 00840         dt        "4 bins in total",0
       3469 346E 3473 
       3420 3469 346E 
       3420 3474 346F 
       3474 3461 346C 
       3400 
                      00841         
025D                  00842 StickerStatus
                      00843         
                      00844         ;Change Page
025D   00BA           00845         movwf    Temp
025E   30??           00846         movlw   HIGH StickerStatusEntries
025F   008A           00847         movwf   PCLATH
0260   083A           00848         movf    Temp,w
0261   3E??           00849         addlw   LOW StickerStatusEntries
0262   1803           00850         btfsc   STATUS,C
0263   0A8A           00851             incf    PCLATH,f
0264   0082           00852         movwf   PCL     
0265   0782           00853         addwf    PCL,F
0266                  00854 StickerStatusEntries
0266   3442 3442 3457 00855         dt        "BBWBWWWB",0
       3442 3457 3457 
       3457 3442 3400 
                      00856         
026F                  00857 BinLocations
                      00858         ;Change Page
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026F   00BA           00859         movwf    Temp
0270   30??           00860         movlw   HIGH BinLocationsEntries
0271   008A           00861         movwf   PCLATH
0272   083A           00862         movf    Temp,w
0273   3E??           00863         addlw   LOW BinLocationsEntries
0274   1803           00864         btfsc   STATUS,C
0275   0A8A           00865             incf    PCLATH,f
0276   0082           00866         movwf   PCL     
0277   0782           00867         addwf    PCL,F
0278                  00868 BinLocationsEntries
0278   344E 346F 3474 00869         dt        "Not receiving anything",0
       3420 3472 3465 
       3463 3465 3469 
       3476 3469 346E 
       3467 3420 3461 
       346E 3479 3474 
       3468 3469 346E 
       3467 3400 
                      00870         
028F                  00871 OperationTime
                      00872         ;Change Page
028F   00BA           00873         movwf    Temp
0290   30??           00874         movlw   HIGH OperationTimeEntries
0291   008A           00875         movwf   PCLATH
0292   083A           00876         movf    Temp,w
0293   3E??           00877         addlw   LOW OperationTimeEntries
0294   1803           00878         btfsc   STATUS,C
0295   0A8A           00879             incf    PCLATH,f
0296   0082           00880         movwf   PCL     
0297   0782           00881         addwf    PCL,F
0298                  00882 OperationTimeEntries
0298   3454 3441 344B 00883         dt        "TAKING IN 5 VOLTS",0
       3449 344E 3447 
       3420 3449 344E 
       3420 3435 3420 
       3456 344F 344C 
       3454 3453 3400 
                      00884         
02AA                  00885 ReceivedInput
                      00886         ;Change Page
02AA   00BA           00887         movwf    Temp
02AB   30??           00888         movlw   HIGH ReceivedInputEntries
02AC   008A           00889         movwf   PCLATH
02AD   083A           00890         movf    Temp,w
02AE   3E??           00891         addlw   LOW ReceivedInputEntries
02AF   1803           00892         btfsc   STATUS,C
02B0   0A8A           00893             incf    PCLATH,f
02B1   0082           00894         movwf   PCL     
02B2   0782           00895         addwf    PCL,F
02B3                  00896 ReceivedInputEntries
02B3   3474 3461 346B 00897         dt        "takin in large value",0
       3469 346E 3420 
       3469 346E 3420 
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       346C 3461 3472 
       3467 3465 3420 
       3476 3461 346C 
       3475 3465 3400 
                      00898         
02C8                  00899 SmallValueInput
                      00900         ;Change Page
02C8   00BA           00901         movwf    Temp
02C9   30??           00902         movlw   HIGH SmallValueInputEntries
02CA   008A           00903         movwf   PCLATH
02CB   083A           00904         movf    Temp,w
02CC   3E??           00905         addlw   LOW SmallValueInputEntries
02CD   1803           00906         btfsc   STATUS,C
02CE   0A8A           00907             incf    PCLATH,f
02CF   0082           00908         movwf   PCL     
02D0   0782           00909         addwf    PCL,F
02D1                  00910 SmallValueInputEntries
02D1   3473 346D 3461 00911         dt        "small value",0
       346C 346C 3420 
       3476 3461 346C 
       3475 3465 3400 
                      00912         
02DD                  00913 DectoChar
                      00914         
                      00915         ;Change Page
02DD   00BA           00916         movwf   Temp
02DE   30??           00917         movlw   HIGH DectoCharEntries
02DF   008A           00918         movwf   PCLATH
02E0   083A           00919         movf    Temp,w
02E1   3E??           00920         addlw   LOW DectoCharEntries
02E2   1803           00921         btfsc   STATUS,C
02E3   0A8A           00922             incf    PCLATH,f
02E4   0082           00923         movwf   PCL     
02E5   0782           00924         addwf    PCL,F
02E6                  00925 DectoCharEntries
02E6   3430 3431 3432 00926         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      00927         
02F1                  00928 StickerColours
                      00929         
                      00930         ;Change Page
02F1   00BA           00931         movwf   Temp
02F2   30??           00932         movlw   HIGH StickerColoursEntries
02F3   008A           00933         movwf   PCLATH
02F4   083A           00934         movf    Temp,w
02F5   3E??           00935         addlw   LOW StickerColoursEntries
02F6   1803           00936         btfsc   STATUS,C
02F7   0A8A           00937             incf    PCLATH,f
02F8   0082           00938         movwf   PCL     
02F9   0782           00939         addwf    PCL,F
02FA                  00940 StickerColoursEntries
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02FA   3442 3457 3400 00941         dt        "BW",  0
                      00942         
                      00943 
                      00944 ;***************************************
                      00945 ; LCD control
                      00946 ;***************************************
02FD                  00947 Switch_Lines
02FD   30C0           00948                 movlw   B'11000000'
02FE   2???           00949                 call    WR_INS
02FF   0008           00950                 return
                      00951 
0300                  00952 Clear_Display
0300   3001           00953                 movlw   B'00000001'
0301   2???           00954                 call    WR_INS
0302   0008           00955                 return
                      00956 
                      00957 ;***************************************
                      00958 ; Delay 0.5s
                      00959 ;***************************************
0303                  00960 HalfS   
  0000                00961         local   HalfS_0
0303   3088           00962       movlw 0x88
0304   00B0           00963       movwf COUNTH
0305   30BD           00964       movlw 0xBD
0306   00B1           00965       movwf COUNTM
0307   3003           00966       movlw 0x03
0308   00B2           00967       movwf COUNTL
                      00968 
0309                  00969 HalfS_0
0309   0BB0           00970       decfsz COUNTH, f
030A   2???           00971       goto   $+2
030B   0BB1           00972       decfsz COUNTM, f
030C   2???           00973       goto   $+2
030D   0BB2           00974       decfsz COUNTL, f
030E   2???           00975       goto   HalfS_0
                      00976 
030F   2???           00977       goto $+1
0310   0000           00978       nop
0311   0000           00979       nop
0312   0008           00980                 return
                      00981 
                      00982     
                      00983 ;************************************
                      00984 ; RTC Sublabels
                      00985 ;************************************
                      00986     
0313                  00987 show_RTC
                      00988                 ;clear LCD screen
0313   3001           00989                 movlw   b'00000001'
0314   2???           00990                 call    WR_INS
                      00991 
                      00992                 ;Get year
0315   3032           00993                 movlw   "2"                             ;First line shows 20**/**/**
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0316   2???           00994                 call    WR_DATA
0317   3030           00995                 movlw   "0"
0318   2???           00996                 call    WR_DATA
                      00997                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0319   3006               M         movlw   0x06
031A   1283 1303          M         banksel 0x73
031C   00F3               M         movwf   0x73
031D   2???               M         call    read_rtc
031E   1283 1303          M         banksel 0x75
0320   0875               M         movf    0x75,w
0321   2???               M         call    rtc_convert   
0322   0877           00998                 movfw   0x77
0323   2???           00999                 call    WR_DATA
0324   0878           01000                 movfw   0x78
0325   2???           01001                 call    WR_DATA
                      01002 
0326   302F           01003                 movlw   "/"
0327   2???           01004                 call    WR_DATA
                      01005 
                      01006                 ;Get month
                      01007                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0328   3005               M         movlw   0x05
0329   1283 1303          M         banksel 0x73
032B   00F3               M         movwf   0x73
032C   2???               M         call    read_rtc
032D   1283 1303          M         banksel 0x75
032F   0875               M         movf    0x75,w
0330   2???               M         call    rtc_convert   
0331   0877           01008                 movfw   0x77
0332   2???           01009                 call    WR_DATA
0333   0878           01010                 movfw   0x78
0334   2???           01011                 call    WR_DATA
                      01012 
0335   302F           01013                 movlw   "/"
0336   2???           01014                 call    WR_DATA
                      01015 
                      01016                 ;Get day
                      01017                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0337   3004               M         movlw   0x04
0338   1283 1303          M         banksel 0x73
033A   00F3               M         movwf   0x73
033B   2???               M         call    read_rtc
033C   1283 1303          M         banksel 0x75
033E   0875               M         movf    0x75,w
033F   2???               M         call    rtc_convert   
0340   0877           01018                 movfw   0x77
0341   2???           01019                 call    WR_DATA
0342   0878           01020                 movfw   0x78
0343   2???           01021                 call    WR_DATA
                      01022 
0344   30C0           01023                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
0345   2???           01024                 call    WR_INS
                      01025 
                      01026                 ;Get hour
                      01027                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0346   3002               M         movlw   0x02
0347   1283 1303          M         banksel 0x73
0349   00F3               M         movwf   0x73
034A   2???               M         call    read_rtc
034B   1283 1303          M         banksel 0x75
034D   0875               M         movf    0x75,w
034E   2???               M         call    rtc_convert   
034F   0877           01028                 movfw   0x77
0350   2???           01029                 call    WR_DATA
0351   0878           01030                 movfw   0x78
0352   2???           01031                 call    WR_DATA
0353   303A           01032                 movlw                   ":"
0354   2???           01033                 call    WR_DATA
                      01034 
                      01035                 ;Get minute             
                      01036                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0355   3001               M         movlw   0x01
0356   1283 1303          M         banksel 0x73
0358   00F3               M         movwf   0x73
0359   2???               M         call    read_rtc
035A   1283 1303          M         banksel 0x75
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

035C   0875               M         movf    0x75,w
035D   2???               M         call    rtc_convert   
035E   0877           01037                 movfw   0x77
035F   2???           01038                 call    WR_DATA
0360   0878           01039                 movfw   0x78
0361   2???           01040                 call    WR_DATA         
0362   303A           01041                 movlw                   ":"
0363   2???           01042                 call    WR_DATA
                      01043                 
                      01044                 ;Get seconds
                      01045                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0364   3000               M         movlw   0x00
0365   1283 1303          M         banksel 0x73
0367   00F3               M         movwf   0x73
0368   2???               M         call    read_rtc
0369   1283 1303          M         banksel 0x75
036B   0875               M         movf    0x75,w
036C   2???               M         call    rtc_convert   
036D   0877           01046                 movfw   0x77
036E   2???           01047                 call    WR_DATA
036F   0878           01048                 movfw   0x78
0370   2???           01049                 call    WR_DATA
                      01050                 
0371   2???           01051                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
                      01052                 ;goto   show_RTC                ;use return instead to check for key press
0372   0008           01053                 return
                      01054 
                      01055 ;***************************************
                      01056 ; Setup RTC with time defined by user
                      01057 ;***************************************
0373                  01058 set_rtc_time
                      01059 
                      01060                 rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0373   1283 1303          M         banksel         0x74
0375   01F4               M         clrf            0x74
0376   1283 1303          M         banksel         0x73
0378   01F3               M         clrf            0x73
0379   2???               M     call        write_rtc               ;Write 0 to Seconds
037A   1283 1303          M         banksel         0x73
037C   0AF3               M     incf        0x73                    ;Set register address to 1
037D   2???               M         call            write_rtc
037E   1283 1303          M         banksel         0x73
0380   0AF3               M     incf        0x73                    ;Set register address to 2
0381   2???               M         call            write_rtc
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0382   1283 1303          M         banksel         0x73
0384   0AF3               M     incf        0x73                    ;Set register address to 3
0385   2???               M         call            write_rtc
0386   1283 1303          M         banksel         0x73
0388   0AF3               M     incf        0x73                    ;Set register address to 4
0389   2???               M         call            write_rtc
038A   1283 1303          M         banksel         0x73
038C   0AF3               M     incf        0x73                    ;Set register address to 5
038D   2???               M         call            write_rtc
038E   1283 1303          M         banksel         0x73
0390   0AF3               M     incf        0x73                    ;Set register address to 6
0391   2???               M         call            write_rtc
                      01061 
                      01062                 rtc_set 0x00,   B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0392   1283 1303          M         banksel 0x73
0394   3000               M         movlw   0x00
0395   00F3               M         movwf   0x73
0396   1283 1303          M         banksel 0x74
0398   3080               M         movlw   B'10000000'
0399   00F4               M         movwf   0x74    
039A   2???               M         call    write_rtc
                      01063 
                      01064                 ;set time 
                      01065                 rtc_set 0x06,   B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
039B   1283 1303          M         banksel 0x73
039D   3006               M         movlw   0x06
039E   00F3               M         movwf   0x73
039F   1283 1303          M         banksel 0x74
03A1   3016               M         movlw   B'00010110'
03A2   00F4               M         movwf   0x74    
03A3   2???               M         call    write_rtc
                      01066                 rtc_set 0x05,   B'00000010'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03A4   1283 1303          M         banksel 0x73
03A6   3005               M         movlw   0x05
03A7   00F3               M         movwf   0x73
03A8   1283 1303          M         banksel 0x74
03AA   3002               M         movlw   B'00000010'
03AB   00F4               M         movwf   0x74    
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03AC   2???               M         call    write_rtc
                      01067                 rtc_set 0x04,   B'00010110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03AD   1283 1303          M         banksel 0x73
03AF   3004               M         movlw   0x04
03B0   00F3               M         movwf   0x73
03B1   1283 1303          M         banksel 0x74
03B3   3016               M         movlw   B'00010110'
03B4   00F4               M         movwf   0x74    
03B5   2???               M         call    write_rtc
                      01068                 rtc_set 0x03,   B'00100001'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03B6   1283 1303          M         banksel 0x73
03B8   3003               M         movlw   0x03
03B9   00F3               M         movwf   0x73
03BA   1283 1303          M         banksel 0x74
03BC   3021               M         movlw   B'00100001'
03BD   00F4               M         movwf   0x74    
03BE   2???               M         call    write_rtc
                      01069                 rtc_set 0x02,   B'00000001'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03BF   1283 1303          M         banksel 0x73
03C1   3002               M         movlw   0x02
03C2   00F3               M         movwf   0x73
03C3   1283 1303          M         banksel 0x74
03C5   3001               M         movlw   B'00000001'
03C6   00F4               M         movwf   0x74    
03C7   2???               M         call    write_rtc
                      01070                 rtc_set 0x01,   B'00110101'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03C8   1283 1303          M         banksel 0x73
03CA   3001               M         movlw   0x01
03CB   00F3               M         movwf   0x73
03CC   1283 1303          M         banksel 0x74
03CE   3035               M         movlw   B'00110101'
03CF   00F4               M         movwf   0x74    
03D0   2???               M         call    write_rtc
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01071                 rtc_set 0x00,   B'01010000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03D1   1283 1303          M         banksel 0x73
03D3   3000               M         movlw   0x00
03D4   00F3               M         movwf   0x73
03D5   1283 1303          M         banksel 0x74
03D7   3050               M         movlw   B'01010000'
03D8   00F4               M         movwf   0x74    
03D9   2???               M         call    write_rtc
03DA   0008           01072                 return
                      01073 
                      01074 
                      01075 ;***************************************
                      01076 ; Delay 1s
                      01077 ;***************************************
03DB                  01078 OneS
  0000                01079                 local   OneS_0
03DB   3010           01080       movlw 0x10
03DC   00B0           01081       movwf COUNTH
03DD   307A           01082       movlw 0x7A
03DE   00B1           01083       movwf COUNTM
03DF   3006           01084       movlw 0x06
03E0   00B2           01085       movwf COUNTL
                      01086 
03E1                  01087 OneS_0
03E1   0BB0           01088       decfsz COUNTH, f
03E2   2???           01089       goto   $+2
03E3   0BB1           01090       decfsz COUNTM, f
03E4   2???           01091       goto   $+2
03E5   0BB2           01092       decfsz COUNTL, f
03E6   2???           01093       goto   OneS_0
                      01094 
03E7   2???           01095       goto $+1
03E8   0000           01096       nop
03E9   0000           01097       nop
03EA   0008           01098                 return
                      01099 
                      01100 ;***************************************
                      01101 ; Print sticker values
                      01102 ;***************************************
03EB                  01103 PrintBlackSticker
03EB   3000           01104         movlw       b'0'
03EC   2???           01105         call        StickerColours
03ED   2???           01106         call        WR_DATA
03EE   0008           01107         return
                      01108 
03EF                  01109 PrintWhiteSticker
03EF   3001           01110         movlw       b'1'
03F0   2???           01111         call        StickerColours
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F1   2???           01112         call        WR_DATA
03F2   0008           01113         return
                      01114         
                      01115 ;***************************************
                      01116 ; Number to Colour
                      01117 ;***************************************
                      01118 PrintCol macro  number
                      01119         movlw       0x80
                      01120         call        WR_INS
                      01121         call        lcdLongDelay
                      01122         movf        number ,W
                      01123         call        BinCol
                      01124         call        WR_DATA
                      01125         endm            
                      01126 
                      01127     
3F72                  01128         END
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
BinLocations                      0000026F
BinLocationsDisplay               00000147
BinLocationsEntries               00000278
Bins                              00000244
BinsDisplay                       00000112
BinsEntries                       0000024D
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
ChooseIR1                         000000BF
ChooseIR2                         000000C3
Clear_Display                     00000300
ClrLCD                            00000000
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DCMotor                           PORTA,3
D_A                               00000005
D_NOT_A                           00000005
DectoChar                         000002DD
DectoCharEntries                  000002E6
Display                           
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             00000303
Hund                              00000041
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INT_SERV                          00000005
IR1                               PORTA,0
IR2                               PORTA,1
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

IRP                               00000007
InitLCD                           00000000
Key                               
KeypadandLCD                      00000070
LCDConversion                     000000A2
LCD_DELAY                         
Lb1                               0000002C
Lb2                               00000030
Lb3                               00000034
Lb4                               00000038
ListDisplay                       000000FB
Location1                         0000003B
Location2                         0000003C
MAIN                              0000006B
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              0000003D
NumL                              0000003E
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              000003DB
Ones                              00000043
Operation                         0000018D
OperationDisplay                  000000DB
OperationEntries                  00000196
OperationTime                     0000028F
OperationTimeDisplay              00000153
OperationTimeEntries              00000298
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PrintBlackSticker                 000003EB
PrintCol                          
PrintNumber                       
PrintWhiteSticker                 000003EF
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        00000163
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
ReceivedInput                     000002AA
ReceivedInputEntries              000002B3
Results1                          000001E9
Results1Entries                   000001F2
Results2                          00000217
Results2Entries                   00000220
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ScanBackContainer                 000000D1
ScanFrontContainer                000000C7
ShiftLeft                         0000015F
SmallValueInput                   000002C8
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

SmallValueInputEntries            000002D1
StickerColours                    000002F1
StickerColoursEntries             000002FA
StickerDisplay                    0000011E
StickerStatus                     0000025D
StickerStatusEntries              00000266
Switch_Lines                      000002FD
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              0000003F
Tens                              00000042
Thou                              00000040
UA                                00000001
US                                PORTA,2
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
WantResults                       000001A3
WantResultsEntries                000001AC
WantRotate                        000001C7
WantRotateEntries                 000001D0
Welcome_Msg                       0000016D
Welcome_MsgEntries                00000176
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

Z                                 00000002
_.org_2_0071                      00000071
_.org_2_009F                      0000009F
_.org_2_00A5                      000000A5
_.org_2_00C9                      000000C9
_.org_2_00D3                      000000D3
_.org_2_030A                      0000030A
_.org_2_030C                      0000030C
_.org_2_030F                      0000030F
_.org_2_03E2                      000003E2
_.org_2_03E4                      000003E4
_.org_2_03E7                      000003E7
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
backbinCounter                    00000049
backstickerValues                 00000047
MPASM 5.65                          MAIN.ASM   3-1-2016  16:49:08         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

bin16_BCD                         0000000B
binCounter                        0000004A
com                               00000037
dat                               00000038
distanceMoved                     00000044
frontbinCounter                   00000048
frontstickerValues                00000046
goback                            000000A1
i2c_common_setup                  00000000
init                              0000003E
isColumnThere                     00000045
lcd_d1                            00000035
lcd_d2                            00000036
lcd_tmp                           00000034
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      00000373
show_RTC                          00000313
temp                              00000039
write_rtc                         00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    17 suppressed

