MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877                ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 pr2temp
  0000003C            00034                 Location1
  0000003D            00035                 Location2 
  0000003E            00036                 NumH
  0000003F            00037                 NumL
  00000040            00038                 TenK
  00000041            00039                 Thou
  00000042            00040                 Hund
  00000043            00041                 Tens
  00000044            00042                 Ones
  00000045            00043                 Front1          ;51 PC
  00000046            00044                 Front2
  00000047            00045                 Front3
  00000048            00046                 Front4
  00000049            00047                 Front5
  0000004A            00048                 Front6
  0000004B            00049                 Front7
  0000004C            00050                 Back1           ;58 PC
  0000004D            00051                 Back2
  0000004E            00052                 Back3
  0000004F            00053                 Back4
  00000050            00054                 Back5
  00000051            00055                 Back6
  00000052            00056                 Back7
  00000053            00057                 distanceMoved
  00000054            00058                 isColumnThere
  00000055            00059                 isBinThere
  00000056            00060                 frontstickerValues
  00000057            00061                 backstickerValues
  00000058            00062                 binCounter
  00000059            00063                 countdown
  0000005A            00064                 counter
  0000005B            00065                 delay3
                      00066         endc    
                      00067 
                      00068         ;Declare constants for pin assignments (LCD on PORTD)
                      00069                 #define RS      PORTD,2
                      00070                 #define E       PORTD,3
                      00071                 #define IR1     PORTA,0
                      00072                 #define IR2     PORTA,1
                      00073                 #define US      PORTA,2
                      00074                 #define backwardsDCMotor        PORTC,5
                      00075                 #define DCMotor PORTC,6
                      00076                 #define ColMotor PORTC,7
                      00077                 #define UST1    PORTC,2
                      00078                 #define US1E1   PORTA,4
                      00079                 #define UST2    PORTC,3
                      00080                 #define US1E2   PORTA,5
                      00081                 
                      00082                 
                      00083 ;distanceMoved  equ     b'0'
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00084 
                      00085          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00086          goto      init       ;Just jump to the main code section.
                      00087          
                      00088          ;ORG      0x100        ;this command is sketchy
                      00089          
                      00090 ;*******************************************************************************
                      00091 ; MACROS
                      00092 ;*******************************************************************************
                      00093          
                      00094 Key      macro  value, subroutine
                      00095          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00096          andlw          0x0F
                      00097          xorlw          value
                      00098          btfsc          STATUS, Z
                      00099          call           subroutine
                      00100         endm
                      00101 
                      00102 Rotation macro  value
                      00103          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00104          andlw          0x0F
                      00105          xorlw          value
                      00106          btfsc          STATUS, Z
                      00107          call           ShiftLeft
                      00108         endm
                      00109 
                      00110 ;***************************************
                      00111 ; Delay: ~160us macro
                      00112 ;***************************************
                      00113 LCD_DELAY macro
                      00114         movlw   0xFF
                      00115         movwf   lcd_d1
                      00116         decfsz  lcd_d1,f
                      00117         goto    $-1
                      00118         endm
                      00119         
                      00120 ;***************************************
                      00121 ; Display macro
                      00122 ;***************************************
                      00123 Display macro   Message
                      00124                 local   loop_
                      00125                 local   end_
                      00126                 clrf    Table_Counter
                      00127                 clrw            
                      00128 loop_   movf    Table_Counter,W
                      00129                 call    Message
                      00130                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00131                 btfsc   STATUS,Z
                      00132                         goto    end_
                      00133                 call    WR_DATA
                      00134                 incf    Table_Counter,F
                      00135                 goto    loop_
                      00136 end_
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00137                 endm
                      00138                 
                      00139 ;***************************************
                      00140 ; BANK0 macro   [TESTED]
                      00141 ;***************************************
                      00142 BANK0 Macro
                      00143     bcf STATUS,RP0 
                      00144     bcf STATUS,RP1
                      00145     endm
                      00146 ;***************************************
                      00147 ; BANK1 macro   [TESTED]
                      00148 ;***************************************
                      00149 BANK1 Macro
                      00150     bsf STATUS,RP0 
                      00151     bcf STATUS,RP1
                      00152     endm
                      00153         
                      00154 ;***************************************
                      00155 ; BANK2 macro   [TESTED]
                      00156 ;***************************************
                      00157 BANK2 Macro
                      00158     bsf STATUS,RP0 
                      00159     bsf STATUS,RP1
                      00160     endm
                      00161     
                      00162 ;***************************************
                      00163 ; BANK3 macro   [TESTED]
                      00164 ;***************************************
                      00165 BANK3 Macro
                      00166     bcf STATUS,RP0 
                      00167     bsf STATUS,RP1
                      00168     endm
                      00169     
                      00170 ;***************************************
                      00171 ; MOVLF macro   [TESTED]
                      00172 ;***************************************
                      00173 MOVLF   Macro   literal, reg
                      00174     MOVLW  literal      ; move literal into working register
                      00175     MOVWF   reg         ; move working register into reg
                      00176     endm
                      00177 
                      00178 ;***************************************
                      00179 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00180 ;***************************************
                      00181 MOV     Macro   reg1, reg2
                      00182     MOVF  reg1,W        ; move reg1 into working register
                      00183     MOVWF   reg2        ; reg2 <- reg1
                      00184     endm
                      00185     
                      00186 ;***************************************
                      00187 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00188 ;***************************************
                      00189 ADDL    Macro   Destination, reg, literal
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00190     MOVLW  literal      ; move literal into working register
                      00191     ADDWF   reg,W       ; W <- literal + reg
                      00192     MOVWF   Destination ; Destination <- literal + reg
                      00193     endm
                      00194     
                      00195 ;***************************************
                      00196 ; ADD macro, Adds two registers together    [TESTED]
                      00197 ;***************************************
                      00198 ADD     Macro   Destination, reg1, reg2
                      00199     MOVF    reg1,W      ; move literal into working register
                      00200     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00201     MOVWF   Destination ; Destination <- reg1 + reg2
                      00202     endm
                      00203                 
                      00204 ;***************************************
                      00205 ; Number to Printable
                      00206 ;***************************************
                      00207 PrintNumber macro       number
                      00208         ;movf       number ,W
                      00209         movfw       number
                      00210         call        DectoChar
                      00211         call        WR_DATA
                      00212         endm
                      00213         
                      00214 ;***************************************
                      00215 ; Number to Colour
                      00216 ;***************************************
                      00217 PrintCol macro      number
                      00218         movfw       number
                      00219         call        StickerColours
                      00220         call        WR_DATA
                      00221         endm    
                      00222 
                      00223 PrintYN macro       number
                      00224         movfw       number
                      00225         call        ColumnValues
                      00226         call        WR_DATA
                      00227         endm    
                      00228 ;*******************************************************
                      00229 ;******             BCD                 ****************
                      00230 ;*******************************************************
                      00231         
                      00232 ;---------------- Binary (16-bit) to BCD -----------------------
                      00233 ;
                      00234 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00235 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00236                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00237 ;
                      00238 ; Uses variables
                      00239 ; NumH, NumL
                      00240 ; TenK, Thou, Hund, Tens, Ones
                      00241                 
                      00242 ;BCD    macro   NumH, NumL
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00243 
0001                  00244 bin16_BCD
0001   0E3E           00245         swapf   NumH, W
0002   390F           00246         andlw   0x0F
0003   3EF0           00247         addlw   0xF0
0004   00C1           00248         movwf   Thou 
0005   07C1           00249         addwf   Thou, F 
0006   3EE2           00250         addlw   0xE2 
0007   00C2           00251         movwf   Hund 
0008   3E32           00252         addlw   0x32 
0009   00C4           00253         movwf   Ones 
                      00254 
000A   083E           00255         movf    NumH, W 
000B   390F           00256         andlw   0x0F 
000C   07C2           00257         addwf   Hund, F 
000D   07C2           00258         addwf   Hund, F 
000E   07C4           00259         addwf   Ones, F 
000F   3EE9           00260         addlw   0xE9 
0010   00C3           00261         movwf   Tens 
0011   07C3           00262         addwf   Tens, F 
0012   07C3           00263         addwf   Tens, F 
                      00264 
0013   0E3F           00265         swapf   NumL, W 
0014   390F           00266         andlw   0x0F 
0015   07C3           00267         addwf   Tens, F 
0016   07C4           00268         addwf   Ones, F 
                      00269 
0017   0DC3           00270         rlf    Tens, F 
0018   0DC4           00271         rlf    Ones, F 
0019   09C4           00272         comf    Ones, F 
001A   0DC4           00273         rlf    Ones, F 
                      00274 
001B   083F           00275         movf    NumL, W 
001C   390F           00276         andlw   0x0F 
001D   07C4           00277         addwf   Ones, F 
001E   0DC1           00278         rlf    Thou,F 
                      00279 
001F   3007           00280         movlw   0x07 
0020   00C0           00281         movwf   TenK 
                      00282 
0021   300A           00283         movlw   0x0A
0022                  00284 Lb1
0022   03C3           00285         decf    Tens, F 
0023   07C4           00286         addwf   Ones, F 
0024   1C03           00287         btfss   STATUS, C 
0025   2???           00288         goto            Lb1 
0026                  00289 Lb2
0026   03C2           00290         decf    Hund, F 
0027   07C3           00291         addwf   Tens, F 
0028   1C03           00292         btfss   STATUS,C 
0029   2???           00293         goto            Lb2 
002A                  00294 Lb3
002A   03C1           00295         decf    Thou, F 
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002B   07C2           00296         addwf   Hund, F 
002C   1C03           00297         btfss   STATUS,C
002D   2???           00298         goto            Lb3 
002E                  00299 Lb4
002E   03C0           00300         decf    TenK, F 
002F   07C1           00301         addwf   Thou, F 
0030   1C03           00302         btfss   STATUS,C 
0031   2???           00303         goto            Lb4 
                      00304 
0032   3400           00305         retlw   0
0033   0008           00306         return
                      00307 ;endm
                      00308 
                      00309 ;***************************************
                      00310 ; Initialize
                      00311 ;***************************************
0034                  00312 init
0034   018B           00313          clrf      INTCON         ; No interrupts
                      00314 
0035   1683           00315          bsf       STATUS,RP0     ; select bank 1
0036   0185           00316          clrf      TRISA          ; All port A is output
0037   30F2           00317          movlw     b'11110010'    ; Set required keypad inputs
0038   0086           00318          movwf     TRISB
0039   0187           00319          clrf      TRISC          ; All port C is output
003A   0188           00320          clrf      TRISD          ; All port D is output
                      00321          
                      00322                   ;Set SDA and SCL to high-Z first as required for I2C
003B   1607           00323                  bsf       TRISC,4                
003C   1587           00324                  bsf       TRISC,3
                      00325 
003D   1283           00326          bcf       STATUS,RP0     ; select bank 0
003E   0185           00327          clrf      PORTA
003F   0186           00328          clrf      PORTB
0040   0187           00329          clrf      PORTC
0041   0188           00330          clrf      PORTD
                      00331          
                      00332         ;Set up I2C for communication
                      00333                  
0042   2???           00334         call       i2c_common_setup
                      00335 ;*******************************************************************************
                      00336         ; UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00337         ;rtc_resetAll
                      00338         ;call set_rtc_time
                      00339 ;*******************************************************************************
                      00340                  
                      00341                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00342                  ;call     set_rtc_time
                      00343           
0043   2???           00344          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00345           ;A/D converter attempt
                      00346          
0044   1303           00347          bcf    STATUS,RP1
0045   1683           00348          bsf    STATUS,RP0      ;Select bank 1
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00349          
0046   1405           00350          bsf    IR1             ;makes RA0 an input
0047   1283           00351          bcf    STATUS,RP0      ; go back to bank 0
                      00352          
                      00353         ;bsf    PORTC,2         ; gives RC2 5 volts
                      00354          
                      00355         ; Set ADCON1 to use RA0 as analog input
                      00356         
                      00357         
0048   1683           00358         bsf     STATUS,RP0      ;Select bank 1
0049   3006           00359         movlw   b'00000110'     ;left justified, all inputs digital
004A   009F           00360         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00361 
                      00362         ;ADCON0
004B   1283           00363         bcf     STATUS,RP0
004C   30C5           00364         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
004D   009F           00365         movwf   ADCON0
                      00366         
                      00367 ;***************************************************
                      00368 ; Initialize variables and Displays
                      00369 ;****************************************************   
                      00370         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
004E   01B3               M                 clrf    Table_Counter
004F   0103               M                 clrw            
0050   0833               M loop_   movf    Table_Counter,W
0051   2???               M                 call    Welcome_Msg
0052   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0053   1903               M                 btfsc   STATUS,Z
0054   2???               M                         goto    end_
0055   2???               M                 call    WR_DATA
0056   0AB3               M                 incf    Table_Counter,F
0057   2???               M                 goto    loop_
0058                      M end_
0058   2???           00371         call            Switch_Lines
                      00372         Display         Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0059   01B3               M                 clrf    Table_Counter
005A   0103               M                 clrw            
005B   0833               M loop_   movf    Table_Counter,W
005C   2???               M                 call    Welcome_Msg2
005D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
005E   1903               M                 btfsc   STATUS,Z
005F   2???               M                         goto    end_
0060   2???               M                 call    WR_DATA
0061   0AB3               M                 incf    Table_Counter,F
0062   2???               M                 goto    loop_
0063                      M end_
0063   1408           00373                         bsf         PORTD,0
                      00374 
                      00375 
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00376 ;*************************************
                      00377 ;       Keypad and LCD forms        
                      00378 ;*************************************
                      00379         
                      00380         
                      00381         
0064   1C86           00382 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0065   2???           00383                 goto            $-1 
                      00384 
0066   0E06           00385                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0067   390F           00386                 andlw           0x0F
0068   00B9           00387                 movwf           temp
                      00388                 ;Key    0x00, OperationDisplay
                      00389                 Key     0x00, Start
0069   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
006A   390F               M          andlw          0x0F
006B   3A00               M          xorlw          0x00
006C   1903               M          btfsc          STATUS, Z
006D   2???               M          call           Start
                      00390                 Key     0x01, pollColumnSensor
006E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
006F   390F               M          andlw          0x0F
0070   3A01               M          xorlw          0x01
0071   1903               M          btfsc          STATUS, Z
0072   2???               M          call           pollColumnSensor
                      00391                 Key     0x02, DisplayBlackWhite
0073   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0074   390F               M          andlw          0x0F
0075   3A02               M          xorlw          0x02
0076   1903               M          btfsc          STATUS, Z
0077   2???               M          call           DisplayBlackWhite
                      00392                 Rotation        0x03
0078   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0079   390F               M          andlw          0x0F
007A   3A03               M          xorlw          0x03
007B   1903               M          btfsc          STATUS, Z
007C   2???               M          call           ShiftLeft
                      00393                 Key     0x04, DisplayUSSensor
007D   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
007E   390F               M          andlw          0x0F
007F   3A04               M          xorlw          0x04
0080   1903               M          btfsc          STATUS, Z
0081   2???               M          call           DisplayUSSensor
                      00394                 Key     0x05, StickerDisplay
0082   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0083   390F               M          andlw          0x0F
0084   3A05               M          xorlw          0x05
0085   1903               M          btfsc          STATUS, Z
0086   2???               M          call           StickerDisplay
                      00395                 Key     0x06, DisplayBlackWhite
0087   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0088   390F               M          andlw          0x0F
0089   3A06               M          xorlw          0x06
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008A   1903               M          btfsc          STATUS, Z
008B   2???               M          call           DisplayBlackWhite
                      00396                 Key     0x08, pollColumnSensor
008C   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008D   390F               M          andlw          0x0F
008E   3A08               M          xorlw          0x08
008F   1903               M          btfsc          STATUS, Z
0090   2???               M          call           pollColumnSensor
                      00397                 Key     0x09, PWMSTOP
0091   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0092   390F               M          andlw          0x0F
0093   3A09               M          xorlw          0x09
0094   1903               M          btfsc          STATUS, Z
0095   2???               M          call           PWMSTOP
                      00398                 Key     0x0E, PWMSTART
0096   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0097   390F               M          andlw          0x0F
0098   3A0E               M          xorlw          0x0E
0099   1903               M          btfsc          STATUS, Z
009A   2???               M          call           PWMSTART
                      00399                 Key     0x0F, PWMSTOP
009B   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009C   390F               M          andlw          0x0F
009D   3A0F               M          xorlw          0x0F
009E   1903               M          btfsc          STATUS, Z
009F   2???               M          call           PWMSTOP
00A0   1886           00400                 btfsc           PORTB,1     ;Wait until key is released
00A1   2???           00401                 goto            $-1
00A2   2???           00402                 goto            KeypadandLCD
                      00403                 
00A3                  00404 goback
00A3   0008           00405                 return  
                      00406         
                      00407 
                      00408 ;*******************************************************************************************************
                            *******************************************
                      00409 ;                                                                 MAIN CODE
                      00410 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
00A4                  00411 Start
                      00412                 
                      00413 ; WAIT FOR INITIAL INPUT
00A4   3000           00414         movlw   b'00'
00A5   00D8           00415         movwf   binCounter      ;initialize bincounter with 0
00A6   00D3           00416         movwf   distanceMoved   ;initialize distance moved with 0
                      00417 
                      00418 ;    goto    getTimeRTC     ; gets time from RTC clock
                      00419 ;       
                      00420 ;   MOTOR ON
                      00421     
00A7   1707           00422     bsf     DCMotor
00A8   3001           00423     movlw   b'1'
00A9   07D3           00424     addwf   distanceMoved,f
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00425     
                      00426 ;    movlw              0x4
                      00427 ;    subwf              distanceMoved
                      00428 ;    movlw              0x0
                      00429 ;    btfsc              STATUS,C
                      00430 ;    movlw              0x1
                      00431 ;   btfsc               W,0
00AA   19D3           00432     btfsc               distanceMoved,3         ;count seven
00AB   2???           00433     call                MoveBackwards
                      00434 
                      00435 ;    bsf            DCMotor                 ; begin forward movement, set appropriate bit to 1
                      00436 ;    movlw   b'1'
                      00437 ;    addwf  distanceMoved,f     ; increments distanceMoved by 1 (will experimentally find binary value f
                            or 4 m)
                      00438     
                      00439     
                      00440     
                      00441     
                      00442 ;;   CHECK COLUMN
                      00443 
                      00444     ;call    ChooseIR1          ;selects IR1 for data conversion
00AC   2???           00445     call    pollColumnSensor    ;checks to see if column present
00AD   1C54           00446     btfss   isColumnThere,0
00AE   2???           00447     goto    Start
00AF   1307           00448     bcf     DCMotor             ;stops motor from moving forward
00B0   2???           00449     call    HalfS
00B1   1787           00450     bsf     ColMotor            ;starts motor to move arm
00B2   2???           00451     call    HalfS
00B3   2???           00452     call    Clear_Display
                      00453     Display OperationTime
  0000                    M                 local   loop_
  0000                    M                 local   end_
00B4   01B3               M                 clrf    Table_Counter
00B5   0103               M                 clrw            
00B6   0833               M loop_   movf    Table_Counter,W
00B7   2???               M                 call    OperationTime
00B8   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00B9   1903               M                 btfsc   STATUS,Z
00BA   2???               M                         goto    end_
00BB   2???               M                 call    WR_DATA
00BC   0AB3               M                 incf    Table_Counter,F
00BD   2???               M                 goto    loop_
00BE                      M end_
00BE   2???           00454     call    HalfS
00BF   2???           00455     call    HalfS               ;emulates arm movement
00C0   1387           00456     bcf     ColMotor            ;turns off motor to move arm
00C1   2???           00457     goto    Start
                      00458     
                      00459 ;   CHECK IF AT THE END OF BUCKET Line
                      00460     
                      00461 
                      00462     
                      00463     
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00464 ;    call    pollUSsensor       ; call ultrasonic sensor
                      00465 ;    btfsc   nothingAhead,0     ;   checks if there is nothing ahead
                      00466 ;    goto    Finalize
                      00467     
                      00468 ;;   CHECK IF CONTAINER IS THERE
                      00469 ;    
                      00470 ;    btfss   withinDetectionRange,0  ; checks whether container ahead is within detection range
                      00471 ;    goto    Main
                      00472 ;   call start arm motor
                      00473 ;   call other motor
                      00474 ;    call    frontscanContainer     ; label to begin container scanning
                      00475 ;    call    backscanContainer      ; label to begin container scanning
                      00476 ;    movlw  b'1'
                      00477 ;    addwf   frontbinCounter,f      ;increment the bin counters
                      00478 ;    addwf   backbinCounter,f
00C2   2???           00479     goto    Finalize
                      00480     
00C3                  00481 MoveBackwards
                      00482     
00C3   1307           00483     bcf     DCMotor
00C4   1687           00484     bsf     backwardsDCMotor
                      00485     
00C5   2???           00486     goto    Finalize
                      00487     
                      00488     
                      00489     
                      00490 
                      00491 
                      00492                 
                      00493 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00494 
                      00495 ;*********************************************************
                      00496 ; A to D conversion with LCD display for IR sensor
                      00497 ;*********************************************************
                      00498 
00C6                  00499 LCDConversion
                      00500         ;bsf    PORTC,2         ; gives RC2 5 volts     
                      00501                 
00C6   151F           00502         bsf     ADCON0,2                ;start conversion and wait for it to complete
00C7   191F           00503         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
00C8   2???           00504         goto    $-1
                      00505         
00C9   081E           00506         movf    ADRESH, W
00CA   00BE           00507         movwf   NumH
00CB   081E           00508         movf    ADRESL, W
00CC   00BF           00509         movwf   NumL
                      00510         
00CD   2???           00511         call            bin16_BCD
00CE   2???           00512         call            ClrLCD
00CF   1383           00513         bcf             STATUS, IRP
00D0   3043           00514         movlw           0x43
00D1   0804           00515         movfw           FSR
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D2   3000           00516         movlw           0x0
00D3   0B58           00517         decfsz          binCounter, W
00D4   2???           00518         goto    $+2
00D5   0008           00519         return
                      00520         
00D6   0784           00521         addwf           FSR,F
00D7   3003           00522         movlw           0x3
00D8   02C0           00523         subwf           TenK
00D9   3000           00524         movlw           0x0
00DA   1803           00525         btfsc           STATUS,C
00DB   3001           00526         movlw           0x1
00DC   0080           00527         movwf           INDF
                      00528         
                      00529         PrintNumber     TenK
                          M         ;movf       number ,W
00DD   0840               M         movfw       TenK
00DE   2???               M         call        DectoChar
00DF   2???               M         call        WR_DATA
                      00530         PrintNumber     Thou
                          M         ;movf       number ,W
00E0   0841               M         movfw       Thou
00E1   2???               M         call        DectoChar
00E2   2???               M         call        WR_DATA
                      00531         PrintNumber     Hund
                          M         ;movf       number ,W
00E3   0842               M         movfw       Hund
00E4   2???               M         call        DectoChar
00E5   2???               M         call        WR_DATA
                      00532         PrintNumber     Tens
                          M         ;movf       number ,W
00E6   0843               M         movfw       Tens
00E7   2???               M         call        DectoChar
00E8   2???               M         call        WR_DATA
                      00533         PrintNumber     Ones
                          M         ;movf       number ,W
00E9   0844               M         movfw       Ones
00EA   2???               M         call        DectoChar
00EB   2???               M         call        WR_DATA
00EC   2???           00534         call            HalfS
00ED   2???           00535         call            HalfS
                      00536         ;bcf    PORTC,2         ; gives RC2 5 volts
00EE   0008           00537         return
                      00538 
                      00539 ;****************************
                      00540 ;       Choose IR1
                      00541 ;****************************
                      00542         
00EF                  00543 ChooseIR1
                      00544         
00EF   1405           00545         bsf     IR1             ;makes RA0 an input
00F0   30C5           00546         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
00F1   009F           00547         movwf   ADCON0
                      00548         
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F2   0008           00549         return
                      00550         
                      00551 ;****************************
                      00552 ;       Choose IR2
                      00553 ;****************************
                      00554         
00F3                  00555 ChooseIR2
                      00556         
00F3   1485           00557         bsf     IR2             ;makes RA0 an input
00F4   30CD           00558         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
00F5   009F           00559         movwf   ADCON0
                      00560         
00F6   0008           00561         return
                      00562         
                      00563 ;******************************************
                      00564 ;       Sticker Print Modules
                      00565 ;*****************************************
                      00566         
00F7                  00567 ReadStickers
00F7   1507           00568         bsf     PORTC,2         ; gives RC2 5 volts
                      00569         
                      00570         PrintNumber     TenK
                          M         ;movf       number ,W
00F8   0840               M         movfw       TenK
00F9   2???               M         call        DectoChar
00FA   2???               M         call        WR_DATA
                      00571                 
00FB   151F           00572         bsf     ADCON0,2                ;start conversion and wait for it to complete
00FC   191F           00573         btfsc   ADCON0,2                ;                                                               
                                                                                                                            
00FD   2???           00574         goto    $-1
                      00575         
00FE   081E           00576         movf    ADRESH, W
00FF   00BE           00577         movwf   NumH
0100   081E           00578         movf    ADRESL, W
0101   00BF           00579         movwf   NumL
                      00580         
0102   2???           00581         call            Clear_Display
0103   2???           00582         call            bin16_BCD
0104   1383           00583         BCF             STATUS, IRP
0105   3043           00584         movlw           0x43
0106   0804           00585         movfw           FSR
0107   3000           00586         movlw           0x0
0108   0B58           00587         decfsz          binCounter, W
0109   2???           00588         goto    $+3
010A   0008           00589         return
                      00590                         
010B   0784           00591         addwf           FSR,F
010C   3003           00592         movlw           0x3
010D   02C0           00593         subwf           TenK
010E   3000           00594         movlw           0x0
010F   1803           00595         btfsc           STATUS,C
0110   3001           00596         movlw           0x1
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0111   0080           00597         movwf           INDF
                      00598         
                      00599         
                      00600         PrintNumber     Thou
                          M         ;movf       number ,W
0112   0841               M         movfw       Thou
0113   2???               M         call        DectoChar
0114   2???               M         call        WR_DATA
                      00601         PrintNumber     Hund
                          M         ;movf       number ,W
0115   0842               M         movfw       Hund
0116   2???               M         call        DectoChar
0117   2???               M         call        WR_DATA
                      00602         PrintNumber     Tens
                          M         ;movf       number ,W
0118   0843               M         movfw       Tens
0119   2???               M         call        DectoChar
011A   2???               M         call        WR_DATA
                      00603         PrintNumber     Ones
                          M         ;movf       number ,W
011B   0844               M         movfw       Ones
011C   2???               M         call        DectoChar
011D   2???               M         call        WR_DATA
011E   2???           00604         call            HalfS
011F   2???           00605         call            HalfS
                      00606         
                      00607         
0120   1107           00608         bcf     PORTC,2         ; gives RC2 5 volts
0121   2???           00609         goto        ReadStickers
                      00610         
0122                  00611 ReadBW
                      00612         
0122   1507           00613         bsf     PORTC,2         ; gives RC2 5 volts
                      00614                 
0123   151F           00615         bsf     ADCON0,2                ;start conversion and wait for it to complete
0124   191F           00616         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
0125   2???           00617         goto    $-1
                      00618         
0126   081E           00619         movf    ADRESH, W
0127   00BE           00620         movwf   NumH
0128   081E           00621         movf    ADRESL, W
0129   00BF           00622         movwf   NumL
                      00623         
012A   2???           00624         call            Clear_Display
012B   2???           00625         call            bin16_BCD
                      00626         PrintNumber     TenK
                          M         ;movf       number ,W
012C   0840               M         movfw       TenK
012D   2???               M         call        DectoChar
012E   2???               M         call        WR_DATA
                      00627         PrintNumber     Thou
                          M         ;movf       number ,W
012F   0841               M         movfw       Thou
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0130   2???               M         call        DectoChar
0131   2???               M         call        WR_DATA
                      00628         PrintNumber     Hund
                          M         ;movf       number ,W
0132   0842               M         movfw       Hund
0133   2???               M         call        DectoChar
0134   2???               M         call        WR_DATA
                      00629         PrintNumber     Tens
                          M         ;movf       number ,W
0135   0843               M         movfw       Tens
0136   2???               M         call        DectoChar
0137   2???               M         call        WR_DATA
                      00630         PrintNumber     Ones
                          M         ;movf       number ,W
0138   0844               M         movfw       Ones
0139   2???               M         call        DectoChar
013A   2???               M         call        WR_DATA
013B   2???           00631         call            HalfS
013C   2???           00632         call            Clear_Display
                      00633         
                      00634 ;       BCF             STATUS, IRP
                      00635 ;       movlw           0x43
                      00636 ;       movfw           FSR
                      00637 ;       movlw           0x0
                      00638 ;       decfsz          binCounter, W
                      00639 ;       goto    $+3
                      00640 ;       return
                      00641         
                      00642 ;       addwf           FSR,F
013D   3001           00643         movlw           0x1
013E   02C0           00644         subwf           TenK
013F   3000           00645         movlw           0x0
0140   1803           00646         btfsc           STATUS,C
0141   3001           00647         movlw           0x1
                      00648 ;       movwf           INDF
                      00649         
0142   0008           00650         return
                      00651         
0143                  00652 ReadColumn                      ; not using anymore cus apparently column is ultrasonic
                      00653         
0143   1507           00654         bsf     PORTC,2         ; gives RC2 5 volts
                      00655                 
0144   151F           00656         bsf     ADCON0,2                ;start conversion and wait for it to complete
0145   191F           00657         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
0146   2???           00658         goto    $-1
                      00659         
0147   081E           00660         movf    ADRESH, W
0148   00BE           00661         movwf   NumH
0149   081E           00662         movf    ADRESL, W
014A   00BF           00663         movwf   NumL
                      00664         
014B   2???           00665         call            Clear_Display
014C   2???           00666         call            bin16_BCD
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00667         PrintNumber     TenK
                          M         ;movf       number ,W
014D   0840               M         movfw       TenK
014E   2???               M         call        DectoChar
014F   2???               M         call        WR_DATA
                      00668         PrintNumber     Thou
                          M         ;movf       number ,W
0150   0841               M         movfw       Thou
0151   2???               M         call        DectoChar
0152   2???               M         call        WR_DATA
                      00669         PrintNumber     Hund
                          M         ;movf       number ,W
0153   0842               M         movfw       Hund
0154   2???               M         call        DectoChar
0155   2???               M         call        WR_DATA
                      00670         PrintNumber     Tens
                          M         ;movf       number ,W
0156   0843               M         movfw       Tens
0157   2???               M         call        DectoChar
0158   2???               M         call        WR_DATA
                      00671         PrintNumber     Ones
                          M         ;movf       number ,W
0159   0844               M         movfw       Ones
015A   2???               M         call        DectoChar
015B   2???               M         call        WR_DATA
015C   2???           00672         call            HalfS
015D   2???           00673         call            Clear_Display
                      00674         
015E   3001           00675         movlw           0x1
015F   02C0           00676         subwf           TenK                ;check tenK
0160   3000           00677         movlw           0x0
0161   1803           00678         btfsc           STATUS,C
0162   3001           00679         movlw           0x1
                      00680         
0163   0008           00681         return
                      00682         
                      00683 ;***************************************************
                      00684 ;       US Sensor Modules
                      00685 ;***************************************************
                      00686         
0164                  00687 Read1_US
                      00688          
0164   2???           00689         call            Read1_US1 
                      00690          
0165   2???           00691         call            Clear_Display
                      00692         
0166   080F           00693         movf            TMR1H, W
0167   00BE           00694         movwf           NumH
0168   080E           00695         movf            TMR1L, W
0169   00BF           00696         movwf           NumL
                      00697         
016A   2???           00698         call            bin16_BCD
                      00699         
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00700         PrintNumber     TenK
                          M         ;movf       number ,W
016B   0840               M         movfw       TenK
016C   2???               M         call        DectoChar
016D   2???               M         call        WR_DATA
                      00701         PrintNumber     Thou
                          M         ;movf       number ,W
016E   0841               M         movfw       Thou
016F   2???               M         call        DectoChar
0170   2???               M         call        WR_DATA
                      00702         PrintNumber     Hund
                          M         ;movf       number ,W
0171   0842               M         movfw       Hund
0172   2???               M         call        DectoChar
0173   2???               M         call        WR_DATA
                      00703         PrintNumber     Tens
                          M         ;movf       number ,W
0174   0843               M         movfw       Tens
0175   2???               M         call        DectoChar
0176   2???               M         call        WR_DATA
                      00704         PrintNumber     Ones
                          M         ;movf       number ,W
0177   0844               M         movfw       Ones
0178   2???               M         call        DectoChar
0179   2???               M         call        WR_DATA
                      00705         
017A   2???           00706         call            HalfS
                      00707         
017B   2???           00708         call            Clear_Display
                      00709         
017C   3001           00710         movlw           0x1
017D   02C0           00711         subwf           TenK
017E   3001           00712         movlw           0x1
017F   1803           00713         btfsc           STATUS,C
0180   3000           00714         movlw           0x0
                      00715         
                      00716         
0181   0008           00717         return
                      00718         
0182                  00719 Read1_US1
0182   018F           00720                 clrf    TMR1H
0183   018E           00721                 clrf    TMR1L
                      00722                 
0184   1107           00723                 bcf     UST1            ;make sure trigger is clear
0185   2???           00724                 call    DELAY1
                      00725                 ;Delay_5ms
                      00726                 
0186   1507           00727                 bsf     UST1            ;trigger high, bottom sensor
0187   2???           00728                 call    delay10us               ;10us delay
0188   1107           00729                 bcf     UST1            ;trigger low
                      00730                 
0189   1E05           00731                 btfss   US1E1           ;wait for echo to go high
018A   2???           00732                 goto    $-1
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018B   1410           00733                 bsf     T1CON,TMR1ON    ;turn on timer
                      00734                 
018C   1A05           00735                 btfsc   US1E1           ;wait for echo to go low
018D   2???           00736                 goto    $-1
                      00737                 
018E   1010           00738                 bcf     T1CON,TMR1ON    ;turn off timer
018F   0008           00739                 return
                      00740                 
0190                  00741 Read2_US
                      00742          
0190   2???           00743         call            Read2_US1 
                      00744          
0191   2???           00745         call            Clear_Display
                      00746         
0192   080F           00747         movf            TMR1H, W
0193   00BE           00748         movwf           NumH
0194   080E           00749         movf            TMR1L, W
0195   00BF           00750         movwf           NumL
                      00751         
0196   2???           00752         call            bin16_BCD
                      00753         
                      00754         PrintNumber     TenK
                          M         ;movf       number ,W
0197   0840               M         movfw       TenK
0198   2???               M         call        DectoChar
0199   2???               M         call        WR_DATA
                      00755         PrintNumber     Thou
                          M         ;movf       number ,W
019A   0841               M         movfw       Thou
019B   2???               M         call        DectoChar
019C   2???               M         call        WR_DATA
                      00756         PrintNumber     Hund
                          M         ;movf       number ,W
019D   0842               M         movfw       Hund
019E   2???               M         call        DectoChar
019F   2???               M         call        WR_DATA
                      00757         PrintNumber     Tens
                          M         ;movf       number ,W
01A0   0843               M         movfw       Tens
01A1   2???               M         call        DectoChar
01A2   2???               M         call        WR_DATA
                      00758         PrintNumber     Ones
                          M         ;movf       number ,W
01A3   0844               M         movfw       Ones
01A4   2???               M         call        DectoChar
01A5   2???               M         call        WR_DATA
                      00759         
01A6   2???           00760         call            HalfS
                      00761         
01A7   2???           00762         call            Clear_Display
                      00763         
01A8   3001           00764         movlw           0x1
01A9   02C0           00765         subwf           TenK
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AA   3001           00766         movlw           0x1
01AB   1803           00767         btfsc           STATUS,C
01AC   3000           00768         movlw           0x0
                      00769         
                      00770         
01AD   0008           00771         return
                      00772         
01AE                  00773 Read2_US1
01AE   018F           00774                 clrf    TMR1H
01AF   018E           00775                 clrf    TMR1L
                      00776                 
01B0   1187           00777                 bcf     UST2            ;make sure trigger is clear
01B1   2???           00778                 call    DELAY1
                      00779                 ;Delay_5ms
                      00780                 
01B2   1587           00781                 bsf     UST2            ;trigger high, bottom sensor
01B3   2???           00782                 call    delay10us               ;10us delay
01B4   1187           00783                 bcf     UST2            ;trigger low
                      00784                 
01B5   1E85           00785                 btfss   US1E2           ;wait for echo to go high
01B6   2???           00786                 goto    $-1
01B7   1410           00787                 bsf     T1CON,TMR1ON    ;turn on timer
                      00788                 
01B8   1A85           00789                 btfsc   US1E2           ;wait for echo to go low
01B9   2???           00790                 goto    $-1
                      00791                 
01BA   1010           00792                 bcf     T1CON,TMR1ON    ;turn off timer
01BB   0008           00793                 return
                      00794         
                      00795 
                      00796 ;*********************************************
                      00797 ; Keypad Modules
                      00798 ;*******************************************
                      00799          
                      00800 
01BC                  00801 Finalize
01BC   2???           00802         call        Clear_Display
                      00803         Display     WantResults
  0000                    M                 local   loop_
  0000                    M                 local   end_
01BD   01B3               M                 clrf    Table_Counter
01BE   0103               M                 clrw            
01BF   0833               M loop_   movf    Table_Counter,W
01C0   2???               M                 call    WantResults
01C1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01C2   1903               M                 btfsc   STATUS,Z
01C3   2???               M                         goto    end_
01C4   2???               M                 call    WR_DATA
01C5   0AB3               M                 incf    Table_Counter,F
01C6   2???               M                 goto    loop_
01C7                      M end_
01C7   2???           00804         call        Switch_Lines
                      00805         Display     WantRotate
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
01C8   01B3               M                 clrf    Table_Counter
01C9   0103               M                 clrw            
01CA   0833               M loop_   movf    Table_Counter,W
01CB   2???               M                 call    WantRotate
01CC   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01CD   1903               M                 btfsc   STATUS,Z
01CE   2???               M                         goto    end_
01CF   2???               M                 call    WR_DATA
01D0   0AB3               M                 incf    Table_Counter,F
01D1   2???               M                 goto    loop_
01D2                      M end_
                      00806         
                      00807         
01D2   2???           00808         goto        KeypadandLCD
                      00809         
01D3                  00810 ListDisplay
01D3   2???           00811         call        Clear_Display
                      00812         Display     Results1
  0000                    M                 local   loop_
  0000                    M                 local   end_
01D4   01B3               M                 clrf    Table_Counter
01D5   0103               M                 clrw            
01D6   0833               M loop_   movf    Table_Counter,W
01D7   2???               M                 call    Results1
01D8   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01D9   1903               M                 btfsc   STATUS,Z
01DA   2???               M                         goto    end_
01DB   2???               M                 call    WR_DATA
01DC   0AB3               M                 incf    Table_Counter,F
01DD   2???               M                 goto    loop_
01DE                      M end_
01DE   2???           00813         call        Switch_Lines
                      00814         Display     Results2
  0000                    M                 local   loop_
  0000                    M                 local   end_
01DF   01B3               M                 clrf    Table_Counter
01E0   0103               M                 clrw            
01E1   0833               M loop_   movf    Table_Counter,W
01E2   2???               M                 call    Results2
01E3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01E4   1903               M                 btfsc   STATUS,Z
01E5   2???               M                         goto    end_
01E6   2???               M                 call    WR_DATA
01E7   0AB3               M                 incf    Table_Counter,F
01E8   2???               M                 goto    loop_
01E9                      M end_
                      00815         
01E9   0008           00816         return
                      00817                 
01EA                  00818 BinsDisplay
01EA   2???           00819         call        Clear_Display
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00820         Display     Bins
  0000                    M                 local   loop_
  0000                    M                 local   end_
01EB   01B3               M                 clrf    Table_Counter
01EC   0103               M                 clrw            
01ED   0833               M loop_   movf    Table_Counter,W
01EE   2???               M                 call    Bins
01EF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01F0   1903               M                 btfsc   STATUS,Z
01F1   2???               M                         goto    end_
01F2   2???               M                 call    WR_DATA
01F3   0AB3               M                 incf    Table_Counter,F
01F4   2???               M                 goto    loop_
01F5                      M end_
                      00821                 
01F5   0008           00822         return
                      00823         
01F6                  00824 BinLocationsDisplay
01F6   2???           00825         call        Clear_Display
                      00826         Display     BinLocations
  0000                    M                 local   loop_
  0000                    M                 local   end_
01F7   01B3               M                 clrf    Table_Counter
01F8   0103               M                 clrw            
01F9   0833               M loop_   movf    Table_Counter,W
01FA   2???               M                 call    BinLocations
01FB   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01FC   1903               M                 btfsc   STATUS,Z
01FD   2???               M                         goto    end_
01FE   2???               M                 call    WR_DATA
01FF   0AB3               M                 incf    Table_Counter,F
0200   2???               M                 goto    loop_
0201                      M end_
                      00827                 
0201   0008           00828         return
                      00829 
0202                  00830 OperationTimeDisplay
0202   2???           00831         call        Clear_Display
                      00832         Display     OperationTime
  0000                    M                 local   loop_
  0000                    M                 local   end_
0203   01B3               M                 clrf    Table_Counter
0204   0103               M                 clrw            
0205   0833               M loop_   movf    Table_Counter,W
0206   2???               M                 call    OperationTime
0207   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0208   1903               M                 btfsc   STATUS,Z
0209   2???               M                         goto    end_
020A   2???               M                 call    WR_DATA
020B   0AB3               M                 incf    Table_Counter,F
020C   2???               M                 goto    loop_
020D                      M end_
                      00833                 
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020D   0008           00834         return
                      00835         
020E                  00836 ShiftLeft
020E   3018           00837         movlw           b'00011000'             ;Move to the left
020F   2???           00838         call            WR_INS
0210   0008           00839         return
                      00840 
0211   2???           00841         goto    KeypadandLCD
                      00842         
0212                  00843 RTCDisplay
0212   2???           00844         call    show_RTC
                      00845         
0213   1886           00846         btfsc           PORTB,1     ;Wait until data is available from the keypad
0214   0008           00847         return
0215   1886           00848         btfsc           PORTB,1     ;Wait until data is available from the keypad
0216   0008           00849         return
0217   1886           00850         btfsc           PORTB,1     ;Wait until data is available from the keypad
0218   0008           00851         return
0219   1886           00852         btfsc           PORTB,1     ;Wait until data is available from the keypad
021A   0008           00853         return
021B   2???           00854         goto        RTCDisplay
                      00855         
021C                  00856 AddBin
021C   2???           00857         call            Clear_Display
                      00858         
021D   0AD8           00859         incf            binCounter
                      00860         PrintNumber     binCounter
                          M         ;movf       number ,W
021E   0858               M         movfw       binCounter
021F   2???               M         call        DectoChar
0220   2???               M         call        WR_DATA
                      00861         
0221   0008           00862         return
                      00863         
0222                  00864 StickerDisplay
                      00865         
                      00866         ;movlw      0x1
                      00867         ;movwf      Front1
                      00868         
                      00869         
                      00870         
0222   2???           00871         call        Clear_Display
0223   3000           00872         movlw       0x0
0224   00DA           00873         movwf       counter
0225   1383           00874         BCF         STATUS,IRP
0226   3043           00875         movlw       0x43                                ;0x43 is the front1
                      00876                                                         ;0x4A should be the back1       
0227   0084           00877         movwf       FSR
0228   0858           00878         movfw       binCounter
0229   00D9           00879         movwf       countdown
                      00880         PrintNumber     TenK
                          M         ;movf       number ,W
022A   0840               M         movfw       TenK
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022B   2???               M         call        DectoChar
022C   2???               M         call        WR_DATA
022D   2???           00881         call        ReadStickers
                      00882         
022E                  00883 FrontLoop
022E   0A84           00884         INCF        FSR,1
022F   0ADA           00885         incf        counter
                      00886         PrintNumber counter
                          M         ;movf       number ,W
0230   085A               M         movfw       counter
0231   2???               M         call        DectoChar
0232   2???               M         call        WR_DATA
0233   2???           00887         call        HalfS
0234   0800           00888         movfw       INDF
                      00889 
                      00890         PrintCol    W
0235   0800               M         movfw       W
0236   2???               M         call        StickerColours
0237   2???               M         call        WR_DATA
0238   0BD9           00891         decfsz      countdown,F
0239   2???           00892         goto        FrontLoop
023A   0008           00893         return
                      00894         
023B                  00895 DisplayBlackWhite
023B   2???           00896         call            ReadBW  
023C   00C5           00897         movwf           Front1
                      00898         PrintCol        Front1
023D   0845               M         movfw       Front1
023E   2???               M         call        StickerColours
023F   2???               M         call        WR_DATA
0240   2???           00899         call            HalfS
0241   2???           00900         call            HalfS
                      00901         
0242   0008           00902         return
                      00903         
0243                  00904 pollColumnSensor        ;checks to see if column present
                      00905  
0243   2???           00906         call            ReadColumn
0244   00D4           00907         movwf           isColumnThere               ;sets the column bit 1 or 0
                      00908         PrintYN         isColumnThere
0245   0854               M         movfw       isColumnThere
0246   2???               M         call        ColumnValues
0247   2???               M         call        WR_DATA
0248   2???           00909         call            HalfS
0249   2???           00910         call            HalfS
                      00911         
024A   0008           00912         return
                      00913         
024B                  00914 DisplayUSSensor
                      00915         
024B   2???           00916         call            Read1_US
024C   2???           00917         call            ClrLCD
024D   00D5           00918         movwf           isBinThere                  ;sets the bin bit 1 or 0
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00919         PrintYN         isBinThere
024E   0855               M         movfw       isBinThere
024F   2???               M         call        ColumnValues
0250   2???               M         call        WR_DATA
0251   2???           00920         call            HalfS
0252   2???           00921         call            HalfS
                      00922         
0253   0008           00923         return
                      00924         
                      00925         
0254                  00926 PWMSTART        
                      00927         
                      00928         ;************ FIRST PWM ******************************              To stop it, clear CCP1RL and
                            /or CCPR2L 
                      00929     
0254   1683 1303      00930     BANKSEL TRISC
0256   1107           00931     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      00932     
0257   0817           00933     MOVF     CCP1CON,W          ;set CCP1 as PWM
0258   39F0           00934     ANDLW    0xF0
0259   380C           00935     IORLW    0x0C
025A   0097           00936     MOVWF    CCP1CON
                      00937     
                      00938     ;save   pr2 value so that you can zero it after
                      00939     
025B   0812           00940     movfw   PR2
025C   00BB           00941     movwf   pr2temp
                      00942     
                      00943     ;11000011
025D   30C3           00944     MOVLW    b'11000011'        ;set highest PWM value
025E   1683 1303      00945     BANKSEL  PR2                
0260   0092           00946     MOVWF    PR2                
0261   1283 1303      00947     BANKSEL  TMR2               
                      00948     
0263   1492           00949     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      00950     
0264   0195           00951     CLRF    CCPR1L              ;set PWM to zero
                      00952     
0265   1712           00953     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0266   1692           00954     BSF     T2CON, TOUTPS2
0267   1612           00955     BSF     T2CON, TOUTPS1
0268   1592           00956     BSF     T2CON, TOUTPS0
                      00957     
                      00958     ; SET PWM duty cycle
                      00959     ;01001110
0269   1697           00960     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
026A   1617           00961     BSF     CCP1CON, 4
                      00962     MOVLF   B'01101', CCPR1L    
026B   300D               M     MOVLW  B'01101'     ; move literal into working register
026C   0095               M     MOVWF   CCPR1L      ; move working register into reg
026D   1597           00963     BSF     CCP1CON, 3
026E   1517           00964     BSF     CCP1CON, 2
                      00965     
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026F   1512           00966     BSF     T2CON, TMR2ON       ;and start the timer running
                      00967     
                      00968 ;************ SECOND PWM ****************************** 
                      00969     
0270   1683 1303      00970     BANKSEL TRISC
0272   1087           00971     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      00972     
0273   081D           00973     MOVF     CCP2CON,W          ;set CCP2 as PWM
0274   39F0           00974     ANDLW    0xF0
0275   380C           00975     IORLW    0x0C
0276   009D           00976     MOVWF    CCP2CON
                      00977     
                      00978     ;11000011
0277   30C3           00979     MOVLW    b'11000011'        ;set highest PWM value
0278   1683 1303      00980     BANKSEL  PR2                
027A   0092           00981     MOVWF    PR2                
027B   1283 1303      00982     BANKSEL  TMR2               
                      00983     
027D   1492           00984     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      00985     
027E   019B           00986     CLRF    CCPR2L              ;set PWM to zero
                      00987     
027F   1712           00988     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0280   1692           00989     BSF     T2CON, TOUTPS2
0281   1612           00990     BSF     T2CON, TOUTPS1
0282   1592           00991     BSF     T2CON, TOUTPS0
                      00992     
                      00993     ; SET PWM duty cycle
                      00994     ;01001110
0283   169D           00995     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
0284   161D           00996     BSF     CCP2CON, 4
0285   3061           00997     MOVLW   B'01100001'
0286   009B           00998     MOVWF   CCPR2L      
0287   159D           00999     BSF     CCP2CON, 3
0288   151D           01000     BSF     CCP2CON, 2
                      01001     
0289   1512           01002     BSF     T2CON, TMR2ON       ;and start the timer running
028A   1283           01003     BCF     STATUS,RP0
                      01004     
028B   0008           01005     return
                      01006     
028C                  01007 PWMSTOP
                      01008     
028C   0195           01009     clrf   CCPR1L
028D   019B           01010     clrf  CCPR2L
028E   083B           01011     movfw   pr2temp
028F   0092           01012     movwf   PR2
                      01013     
0290   0008           01014     return
                      01015         
                      01016         
                      01017 ;***************************************
                      01018 ; LCD control
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01019 ;***************************************
0291                  01020 Switch_Lines
0291   30C0           01021                 movlw   B'11000000'
0292   2???           01022                 call    WR_INS
0293   0008           01023                 return
                      01024 
0294                  01025 Clear_Display
0294   3001           01026                 movlw   B'00000001'
0295   2???           01027                 call    WR_INS
0296   0008           01028                 return
                      01029 
                      01030 ;***************************************
                      01031 ; Delay 0.5s
                      01032 ;***************************************
0297                  01033 HalfS   
  0000                01034         local   HalfS_0
0297   3088           01035       movlw 0x88
0298   00B0           01036       movwf COUNTH
0299   30BD           01037       movlw 0xBD
029A   00B1           01038       movwf COUNTM
029B   3003           01039       movlw 0x03
029C   00B2           01040       movwf COUNTL
                      01041 
029D                  01042 HalfS_0
029D   0BB0           01043       decfsz COUNTH, f
029E   2???           01044       goto   $+2
029F   0BB1           01045       decfsz COUNTM, f
02A0   2???           01046       goto   $+2
02A1   0BB2           01047       decfsz COUNTL, f
02A2   2???           01048       goto   HalfS_0
                      01049 
02A3   2???           01050       goto $+1
02A4   0000           01051       nop
02A5   0000           01052       nop
02A6   0008           01053                 return
                      01054                 
                      01055 ;***************************************
                      01056 ; Delay: ~ 5ms
                      01057 ;***************************************
02A7                  01058 DELAY1 
                      01059                                 ;4998 cycles
02A7   30E7           01060         movlw   0xE7
02A8   00B5           01061         movwf   lcd_d1
02A9   3004           01062         movlw   0x04
02AA   00B6           01063         movwf   lcd_d2
02AB                  01064 Delay_0
02AB   0BB5           01065         decfsz  lcd_d1, f
02AC   2???           01066         goto    $+2
02AD   0BB6           01067         decfsz  lcd_d2, f
02AE   2???           01068         goto    Delay_0
                      01069 
                      01070                         ;2 cycles
02AF   2???           01071         goto    $+1
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B0   0008           01072         return
                      01073         
                      01074 ;***************************************
                      01075 ; Delay: ~10us
                      01076 ;***************************************
02B1                  01077 delay10us
02B1   3014           01078     movlw       d'20'
02B2   00DB           01079     movwf       delay3
02B3                  01080 Delay10usLoop
02B3   0BDB           01081     decfsz      delay3, f
02B4   2???           01082     goto        Delay10usLoop
02B5   0008           01083     return
                      01084 
                      01085     
                      01086 ;************************************
                      01087 ; RTC Sublabels
                      01088 ;************************************
                      01089     
02B6                  01090 show_RTC
                      01091                 ;clear LCD screen
02B6   3001           01092                 movlw   b'00000001'
02B7   2???           01093                 call    WR_INS
                      01094 
                      01095                 ;Get year
02B8   3032           01096                 movlw   "2"                             ;First line shows 20**/**/**
02B9   2???           01097                 call    WR_DATA
02BA   3030           01098                 movlw   "0"
02BB   2???           01099                 call    WR_DATA
                      01100                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
02BC   3006               M         movlw   0x06
02BD   1283 1303          M         banksel 0x73
02BF   00F3               M         movwf   0x73
02C0   2???               M         call    read_rtc
02C1   1283 1303          M         banksel 0x75
02C3   0875               M         movf    0x75,w
02C4   2???               M         call    rtc_convert   
02C5   0877           01101                 movfw   0x77
02C6   2???           01102                 call    WR_DATA
02C7   0878           01103                 movfw   0x78
02C8   2???           01104                 call    WR_DATA
                      01105 
02C9   302F           01106                 movlw   "/"
02CA   2???           01107                 call    WR_DATA
                      01108 
                      01109                 ;Get month
                      01110                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
02CB   3005               M         movlw   0x05
02CC   1283 1303          M         banksel 0x73
02CE   00F3               M         movwf   0x73
02CF   2???               M         call    read_rtc
02D0   1283 1303          M         banksel 0x75
02D2   0875               M         movf    0x75,w
02D3   2???               M         call    rtc_convert   
02D4   0877           01111                 movfw   0x77
02D5   2???           01112                 call    WR_DATA
02D6   0878           01113                 movfw   0x78
02D7   2???           01114                 call    WR_DATA
                      01115 
02D8   302F           01116                 movlw   "/"
02D9   2???           01117                 call    WR_DATA
                      01118 
                      01119                 ;Get day
                      01120                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
02DA   3004               M         movlw   0x04
02DB   1283 1303          M         banksel 0x73
02DD   00F3               M         movwf   0x73
02DE   2???               M         call    read_rtc
02DF   1283 1303          M         banksel 0x75
02E1   0875               M         movf    0x75,w
02E2   2???               M         call    rtc_convert   
02E3   0877           01121                 movfw   0x77
02E4   2???           01122                 call    WR_DATA
02E5   0878           01123                 movfw   0x78
02E6   2???           01124                 call    WR_DATA
                      01125 
02E7   30C0           01126                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
02E8   2???           01127                 call    WR_INS
                      01128 
                      01129                 ;Get hour
                      01130                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
02E9   3002               M         movlw   0x02
02EA   1283 1303          M         banksel 0x73
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EC   00F3               M         movwf   0x73
02ED   2???               M         call    read_rtc
02EE   1283 1303          M         banksel 0x75
02F0   0875               M         movf    0x75,w
02F1   2???               M         call    rtc_convert   
02F2   0877           01131                 movfw   0x77
02F3   2???           01132                 call    WR_DATA
02F4   0878           01133                 movfw   0x78
02F5   2???           01134                 call    WR_DATA
02F6   303A           01135                 movlw                   ":"
02F7   2???           01136                 call    WR_DATA
                      01137 
                      01138                 ;Get minute             
                      01139                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
02F8   3001               M         movlw   0x01
02F9   1283 1303          M         banksel 0x73
02FB   00F3               M         movwf   0x73
02FC   2???               M         call    read_rtc
02FD   1283 1303          M         banksel 0x75
02FF   0875               M         movf    0x75,w
0300   2???               M         call    rtc_convert   
0301   0877           01140                 movfw   0x77
0302   2???           01141                 call    WR_DATA
0303   0878           01142                 movfw   0x78
0304   2???           01143                 call    WR_DATA         
0305   303A           01144                 movlw                   ":"
0306   2???           01145                 call    WR_DATA
                      01146                 
                      01147                 ;Get seconds
                      01148                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0307   3000               M         movlw   0x00
0308   1283 1303          M         banksel 0x73
030A   00F3               M         movwf   0x73
030B   2???               M         call    read_rtc
030C   1283 1303          M         banksel 0x75
030E   0875               M         movf    0x75,w
030F   2???               M         call    rtc_convert   
0310   0877           01149                 movfw   0x77
0311   2???           01150                 call    WR_DATA
0312   0878           01151                 movfw   0x78
0313   2???           01152                 call    WR_DATA
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01153                 
0314   2???           01154                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
                      01155                 ;goto   show_RTC                ;use return instead to check for key press
0315   0008           01156                 return
                      01157 
                      01158 ;***************************************
                      01159 ; Setup RTC with time defined by user
                      01160 ;***************************************
0316                  01161 set_rtc_time
                      01162 
                      01163                 rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0316   1283 1303          M         banksel         0x74
0318   01F4               M         clrf            0x74
0319   1283 1303          M         banksel         0x73
031B   01F3               M         clrf            0x73
031C   2???               M     call        write_rtc               ;Write 0 to Seconds
031D   1283 1303          M         banksel         0x73
031F   0AF3               M     incf        0x73                    ;Set register address to 1
0320   2???               M         call            write_rtc
0321   1283 1303          M         banksel         0x73
0323   0AF3               M     incf        0x73                    ;Set register address to 2
0324   2???               M         call            write_rtc
0325   1283 1303          M         banksel         0x73
0327   0AF3               M     incf        0x73                    ;Set register address to 3
0328   2???               M         call            write_rtc
0329   1283 1303          M         banksel         0x73
032B   0AF3               M     incf        0x73                    ;Set register address to 4
032C   2???               M         call            write_rtc
032D   1283 1303          M         banksel         0x73
032F   0AF3               M     incf        0x73                    ;Set register address to 5
0330   2???               M         call            write_rtc
0331   1283 1303          M         banksel         0x73
0333   0AF3               M     incf        0x73                    ;Set register address to 6
0334   2???               M         call            write_rtc
                      01164 
                      01165                 rtc_set 0x00,   B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0335   1283 1303          M         banksel 0x73
0337   3000               M         movlw   0x00
0338   00F3               M         movwf   0x73
0339   1283 1303          M         banksel 0x74
033B   3080               M         movlw   B'10000000'
033C   00F4               M         movwf   0x74    
033D   2???               M         call    write_rtc
                      01166 
                      01167                 ;set time 
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01168                 rtc_set 0x06,   B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
033E   1283 1303          M         banksel 0x73
0340   3006               M         movlw   0x06
0341   00F3               M         movwf   0x73
0342   1283 1303          M         banksel 0x74
0344   3016               M         movlw   B'00010110'
0345   00F4               M         movwf   0x74    
0346   2???               M         call    write_rtc
                      01169                 rtc_set 0x05,   B'00000010'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0347   1283 1303          M         banksel 0x73
0349   3005               M         movlw   0x05
034A   00F3               M         movwf   0x73
034B   1283 1303          M         banksel 0x74
034D   3002               M         movlw   B'00000010'
034E   00F4               M         movwf   0x74    
034F   2???               M         call    write_rtc
                      01170                 rtc_set 0x04,   B'00010110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0350   1283 1303          M         banksel 0x73
0352   3004               M         movlw   0x04
0353   00F3               M         movwf   0x73
0354   1283 1303          M         banksel 0x74
0356   3016               M         movlw   B'00010110'
0357   00F4               M         movwf   0x74    
0358   2???               M         call    write_rtc
                      01171                 rtc_set 0x03,   B'00100001'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0359   1283 1303          M         banksel 0x73
035B   3003               M         movlw   0x03
035C   00F3               M         movwf   0x73
035D   1283 1303          M         banksel 0x74
035F   3021               M         movlw   B'00100001'
0360   00F4               M         movwf   0x74    
0361   2???               M         call    write_rtc
                      01172                 rtc_set 0x02,   B'00000001'             ; Hours
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0362   1283 1303          M         banksel 0x73
0364   3002               M         movlw   0x02
0365   00F3               M         movwf   0x73
0366   1283 1303          M         banksel 0x74
0368   3001               M         movlw   B'00000001'
0369   00F4               M         movwf   0x74    
036A   2???               M         call    write_rtc
                      01173                 rtc_set 0x01,   B'00110101'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
036B   1283 1303          M         banksel 0x73
036D   3001               M         movlw   0x01
036E   00F3               M         movwf   0x73
036F   1283 1303          M         banksel 0x74
0371   3035               M         movlw   B'00110101'
0372   00F4               M         movwf   0x74    
0373   2???               M         call    write_rtc
                      01174                 rtc_set 0x00,   B'01010000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0374   1283 1303          M         banksel 0x73
0376   3000               M         movlw   0x00
0377   00F3               M         movwf   0x73
0378   1283 1303          M         banksel 0x74
037A   3050               M         movlw   B'01010000'
037B   00F4               M         movwf   0x74    
037C   2???               M         call    write_rtc
037D   0008           01175                 return
                      01176 
                      01177 
                      01178 ;***************************************
                      01179 ; Delay 1s
                      01180 ;***************************************
037E                  01181 OneS
  0000                01182                 local   OneS_0
037E   3010           01183       movlw 0x10
037F   00B0           01184       movwf COUNTH
0380   307A           01185       movlw 0x7A
0381   00B1           01186       movwf COUNTM
0382   3006           01187       movlw 0x06
0383   00B2           01188       movwf COUNTL
                      01189 
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0384                  01190 OneS_0
0384   0BB0           01191       decfsz COUNTH, f
0385   2???           01192       goto   $+2
0386   0BB1           01193       decfsz COUNTM, f
0387   2???           01194       goto   $+2
0388   0BB2           01195       decfsz COUNTL, f
0389   2???           01196       goto   OneS_0
                      01197 
038A   2???           01198       goto $+1
038B   0000           01199       nop
038C   0000           01200       nop
038D   0008           01201                 return
                      01202 
                      01203 ;***************************************
                      01204 ; Print sticker values
                      01205 ;***************************************
038E                  01206 PrintBlackSticker
038E   3000           01207         movlw       b'0'
038F   2???           01208         call        StickerColours
0390   2???           01209         call        WR_DATA
0391   0008           01210         return
                      01211 
0392                  01212 PrintWhiteSticker
0392   3001           01213         movlw       b'1'
0393   2???           01214         call        StickerColours
0394   2???           01215         call        WR_DATA
0395   0008           01216         return
                      01217         
                      01218 ;***************************************
                      01219 ; Look up table
                      01220 ;***************************************
                      01221     
0396                  01222 Welcome_Msg
                      01223         
                      01224         ;Change Page
0396   00BA           01225         movwf   Temp
0397   30??           01226         movlw   HIGH Welcome_MsgEntries
0398   008A           01227         movwf   PCLATH
0399   083A           01228         movf    Temp,w
039A   3E??           01229         addlw   LOW Welcome_MsgEntries
039B   1803           01230         btfsc   STATUS,C
039C   0A8A           01231             incf    PCLATH,f
039D   0082           01232         movwf   PCL     
039E   0782           01233         addwf    PCL,F
039F                  01234 Welcome_MsgEntries
039F   3431 343A 3420 01235         dt        "1: Start | #/D: PWM | 2: Col Test", 0
       3453 3474 3461 
       3472 3474 3420 
       347C 3420 3423 
       342F 3444 343A 
       3420 3450 3457 
       344D 3420 347C 
       3420 3432 343A 
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3420 3443 346F 
       346C 3420 3454 
       3465 3473 3474 
       3400 
                      01236         
03C1                  01237 Welcome_Msg2
                      01238         
                      01239         ;Change Page
03C1   00BA           01240         movwf   Temp
03C2   30??           01241         movlw   HIGH Welcome_Msg2Entries
03C3   008A           01242         movwf   PCLATH
03C4   083A           01243         movf    Temp,w
03C5   3E??           01244         addlw   LOW Welcome_Msg2Entries
03C6   1803           01245         btfsc   STATUS,C
03C7   0A8A           01246             incf    PCLATH,f
03C8   0082           01247         movwf   PCL     
03C9   0782           01248         addwf    PCL,F
03CA                  01249 Welcome_Msg2Entries
03CA   3433 343A 3420 01250         dt        "3: B/W test | A: Rotate | 4: US test", 0
       3442 342F 3457 
       3420 3474 3465 
       3473 3474 3420 
       347C 3420 3441 
       343A 3420 3452 
       346F 3474 3461 
       3474 3465 3420 
       347C 3420 3434 
       343A 3420 3455 
       3453 3420 3474 
       3465 3473 3474 
       3400 
                      01251         
03EF                  01252 Operation
                      01253         
                      01254         ;Change Page
03EF   00BA           01255         movwf    Temp
03F0   30??           01256         movlw   HIGH OperationEntries
03F1   008A           01257         movwf   PCLATH
03F2   083A           01258         movf    Temp,w
03F3   3E??           01259         addlw   LOW OperationEntries
03F4   1803           01260         btfsc   STATUS,C
03F5   0A8A           01261             incf    PCLATH,f
03F6   0082           01262         movwf   PCL
03F7   0782           01263         addwf    PCL,F
03F8                  01264 OperationEntries
03F8   344F 3470 3465 01265         dt        "Operating...",0
       3472 3461 3474 
       3469 346E 3467 
       342E 342E 342E 
       3400 
                      01266 
0405                  01267 WantResults
                      01268         
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01269         ;Change Page
0405   00BA           01270         movwf    Temp
0406   30??           01271         movlw   HIGH WantResultsEntries
0407   008A           01272         movwf   PCLATH
0408   083A           01273         movf    Temp,w
0409   3E??           01274         addlw   LOW WantResultsEntries
040A   1803           01275         btfsc   STATUS,C
040B   0A8A           01276             incf    PCLATH,f
040C   0082           01277         movwf   PCL
040D   0782           01278         addwf    PCL,F
040E                  01279 WantResultsEntries
040E   3450 3472 3465 01280         dt        "Press 2 to display results",0
       3473 3473 3420 
       3432 3420 3474 
       346F 3420 3464 
       3469 3473 3470 
       346C 3461 3479 
       3420 3472 3465 
       3473 3475 346C 
       3474 3473 3400 
                      01281 
                      01282 
0429                  01283 WantRotate
                      01284                 
                      01285         ;Change Page
0429   00BA           01286         movwf    Temp
042A   30??           01287         movlw   HIGH WantRotateEntries
042B   008A           01288         movwf   PCLATH
042C   083A           01289         movf    Temp,w
042D   3E??           01290         addlw   LOW WantRotateEntries
042E   1803           01291         btfsc   STATUS,C
042F   0A8A           01292             incf    PCLATH,f
0430   0082           01293         movwf   PCL
0431   0782           01294         addwf    PCL,F
0432                  01295 WantRotateEntries
0432   3450 3472 3465 01296         dt        "Press A to rotate screen",0
       3473 3473 3420 
       3441 3420 3474 
       346F 3420 3472 
       346F 3474 3461 
       3474 3465 3420 
       3473 3463 3472 
       3465 3465 346E 
       3400 
                      01297         
044B                  01298 Results1 
                      01299                 
                      01300         ;Change Page
044B   00BA           01301         movwf    Temp
044C   30??           01302         movlw   HIGH Results1Entries
044D   008A           01303         movwf   PCLATH
044E   083A           01304         movf    Temp,w
044F   3E??           01305         addlw   LOW Results1Entries
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0450   1803           01306         btfsc   STATUS,C
0451   0A8A           01307             incf    PCLATH,f
0452   0082           01308         movwf   PCL
0453   0782           01309         addwf    PCL,F
0454                  01310 Results1Entries 
0454   3433 343A 3420 01311         dt        "3: PWM test, 4: Sensor Test",0
       3450 3457 344D 
       3420 3474 3465 
       3473 3474 342C 
       3420 3434 343A 
       3420 3453 3465 
       346E 3473 346F 
       3472 3420 3454 
       3465 3473 3474 
       3400 
                      01312         
0470                  01313 Results2
                      01314         
                      01315         ;Change Page
0470   00BA           01316         movwf    Temp
0471   30??           01317         movlw   HIGH Results2Entries
0472   008A           01318         movwf   PCLATH
0473   083A           01319         movf    Temp,w
0474   3E??           01320         addlw   LOW Results2Entries
0475   1803           01321         btfsc   STATUS,C
0476   0A8A           01322             incf    PCLATH,f
0477   0082           01323         movwf   PCL     
0478   0782           01324         addwf    PCL,F
0479                  01325 Results2Entries 
0479   3436 343A 3420 01326         dt        "6: bin locations, 8: operation time",0
       3462 3469 346E 
       3420 346C 346F 
       3463 3461 3474 
       3469 346F 346E 
       3473 342C 3420 
       3438 343A 3420 
       346F 3470 3465 
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
       346D 3465 3400 
                      01327         
049D                  01328 Bins
                      01329         ;Change Page
049D   00BA           01330         movwf    Temp
049E   30??           01331         movlw   HIGH BinsEntries
049F   008A           01332         movwf   PCLATH
04A0   083A           01333         movf    Temp,w
04A1   3E??           01334         addlw   LOW BinsEntries
04A2   1803           01335         btfsc   STATUS,C
04A3   0A8A           01336             incf    PCLATH,f
04A4   0082           01337         movwf   PCL     
04A5   0782           01338         addwf    PCL,F
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04A6                  01339 BinsEntries
04A6   3434 3420 3462 01340         dt        "4 bins in total",0
       3469 346E 3473 
       3420 3469 346E 
       3420 3474 346F 
       3474 3461 346C 
       3400 
                      01341         
04B6                  01342 StickerStatus
                      01343         
                      01344         ;Change Page
04B6   00BA           01345         movwf    Temp
04B7   30??           01346         movlw   HIGH StickerStatusEntries
04B8   008A           01347         movwf   PCLATH
04B9   083A           01348         movf    Temp,w
04BA   3E??           01349         addlw   LOW StickerStatusEntries
04BB   1803           01350         btfsc   STATUS,C
04BC   0A8A           01351             incf    PCLATH,f
04BD   0082           01352         movwf   PCL     
04BE   0782           01353         addwf    PCL,F
04BF                  01354 StickerStatusEntries
04BF   3442 3442 3457 01355         dt        "BBWBWWWB",0
       3442 3457 3457 
       3457 3442 3400 
                      01356         
04C8                  01357 BinLocations
                      01358         ;Change Page
04C8   00BA           01359         movwf    Temp
04C9   30??           01360         movlw   HIGH BinLocationsEntries
04CA   008A           01361         movwf   PCLATH
04CB   083A           01362         movf    Temp,w
04CC   3E??           01363         addlw   LOW BinLocationsEntries
04CD   1803           01364         btfsc   STATUS,C
04CE   0A8A           01365             incf    PCLATH,f
04CF   0082           01366         movwf   PCL     
04D0   0782           01367         addwf    PCL,F
04D1                  01368 BinLocationsEntries
04D1   3430 342E 3433 01369         dt        "0.35,0.56,0.79",0
       3435 342C 3430 
       342E 3435 3436 
       342C 3430 342E 
       3437 3439 3400 
                      01370         
04E0                  01371 OperationTime
                      01372         ;Change Page
04E0   00BA           01373         movwf    Temp
04E1   30??           01374         movlw   HIGH OperationTimeEntries
04E2   008A           01375         movwf   PCLATH
04E3   083A           01376         movf    Temp,w
04E4   3E??           01377         addlw   LOW OperationTimeEntries
04E5   1803           01378         btfsc   STATUS,C
04E6   0A8A           01379             incf    PCLATH,f
04E7   0082           01380         movwf   PCL     
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04E8   0782           01381         addwf    PCL,F
04E9                  01382 OperationTimeEntries
04E9   344D 346F 3476 01383         dt        "Moving Arm",0
       3469 346E 3467 
       3420 3441 3472 
       346D 3400 
                      01384         
04F4                  01385 ReceivedInput
                      01386         ;Change Page
04F4   00BA           01387         movwf    Temp
04F5   30??           01388         movlw   HIGH ReceivedInputEntries
04F6   008A           01389         movwf   PCLATH
04F7   083A           01390         movf    Temp,w
04F8   3E??           01391         addlw   LOW ReceivedInputEntries
04F9   1803           01392         btfsc   STATUS,C
04FA   0A8A           01393             incf    PCLATH,f
04FB   0082           01394         movwf   PCL     
04FC   0782           01395         addwf    PCL,F
04FD                  01396 ReceivedInputEntries
04FD   3474 3461 346B 01397         dt        "takin in large value",0
       3469 346E 3420 
       3469 346E 3420 
       346C 3461 3472 
       3467 3465 3420 
       3476 3461 346C 
       3475 3465 3400 
                      01398         
0512                  01399 SmallValueInput
                      01400         ;Change Page
0512   00BA           01401         movwf    Temp
0513   30??           01402         movlw   HIGH SmallValueInputEntries
0514   008A           01403         movwf   PCLATH
0515   083A           01404         movf    Temp,w
0516   3E??           01405         addlw   LOW SmallValueInputEntries
0517   1803           01406         btfsc   STATUS,C
0518   0A8A           01407             incf    PCLATH,f
0519   0082           01408         movwf   PCL     
051A   0782           01409         addwf    PCL,F
051B                  01410 SmallValueInputEntries
051B   3473 346D 3461 01411         dt        "small value",0
       346C 346C 3420 
       3476 3461 346C 
       3475 3465 3400 
                      01412         
0527                  01413 DectoChar
                      01414         
                      01415         ;Change Page
0527   00BA           01416         movwf   Temp
0528   30??           01417         movlw   HIGH DectoCharEntries
0529   008A           01418         movwf   PCLATH
052A   083A           01419         movf    Temp,w
052B   3E??           01420         addlw   LOW DectoCharEntries
052C   1803           01421         btfsc   STATUS,C
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

052D   0A8A           01422             incf    PCLATH,f
052E   0082           01423         movwf   PCL     
052F   0782           01424         addwf    PCL,F
0530                  01425 DectoCharEntries
0530   3430 3431 3432 01426         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01427         
053B                  01428 StickerColours
                      01429         
                      01430         ;Change Page
053B   00BA           01431         movwf   Temp
053C   30??           01432         movlw   HIGH StickerColoursEntries
053D   008A           01433         movwf   PCLATH
053E   083A           01434         movf    Temp,w
053F   3E??           01435         addlw   LOW StickerColoursEntries
0540   1803           01436         btfsc   STATUS,C
0541   0A8A           01437             incf    PCLATH,f
0542   0082           01438         movwf   PCL     
0543   0782           01439         addwf    PCL,F
0544                  01440 StickerColoursEntries
0544   3442 3457 3400 01441         dt        "BW",  0
                      01442         
0547                  01443 ColumnValues
                      01444         
                      01445         ;Change Page
0547   00BA           01446         movwf   Temp
0548   30??           01447         movlw   HIGH ColumnValuesEntries
0549   008A           01448         movwf   PCLATH
054A   083A           01449         movf    Temp,w
054B   3E??           01450         addlw   LOW ColumnValuesEntries
054C   1803           01451         btfsc   STATUS,C
054D   0A8A           01452             incf    PCLATH,f
054E   0082           01453         movwf   PCL     
054F   0782           01454         addwf    PCL,F
0550                  01455 ColumnValuesEntries
0550   344E 3459 3400 01456         dt        "NY",  0
                      01457 
                      01458     
3F72                  01459         END
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AddBin                            0000021C
BANK0                             
BANK1                             
BANK2                             
BANK3                             
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
Back1                             0000004C
Back2                             0000004D
Back3                             0000004E
Back4                             0000004F
Back5                             00000050
Back6                             00000051
Back7                             00000052
BinLocations                      000004C8
BinLocationsDisplay               000001F6
BinLocationsEntries               000004D1
Bins                              0000049D
BinsDisplay                       000001EA
BinsEntries                       000004A6
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
ChooseIR1                         000000EF
ChooseIR2                         000000F3
Clear_Display                     00000294
ClrLCD                            00000000
ColMotor                          PORTC,7
ColumnValues                      00000547
ColumnValuesEntries               00000550
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DCMotor                           PORTC,6
DELAY1                            000002A7
D_A                               00000005
D_NOT_A                           00000005
DectoChar                         00000527
DectoCharEntries                  00000530
Delay10usLoop                     000002B3
Delay_0                           000002AB
Display                           
DisplayBlackWhite                 0000023B
DisplayUSSensor                   0000024B
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

FSR                               00000004
Finalize                          000001BC
Front1                            00000045
Front2                            00000046
Front3                            00000047
Front4                            00000048
Front5                            00000049
Front6                            0000004A
Front7                            0000004B
FrontLoop                         0000022E
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             00000297
Hund                              00000042
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Key                               
KeypadandLCD                      00000064
LCDConversion                     000000C6
LCD_DELAY                         
Lb1                               00000022
Lb2                               00000026
Lb3                               0000002A
Lb4                               0000002E
ListDisplay                       000001D3
Location1                         0000003C
Location2                         0000003D
MOV                               
MOVLF                             
MoveBackwards                     000000C3
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              0000003E
NumL                              0000003F
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              0000037E
Ones                              00000044
Operation                         000003EF
OperationEntries                  000003F8
OperationTime                     000004E0
OperationTimeDisplay              00000202
OperationTimeEntries              000004E9
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMSTART                          00000254
PWMSTOP                           0000028C
PrintBlackSticker                 0000038E
PrintCol                          
PrintNumber                       
PrintWhiteSticker                 00000392
PrintYN                           
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        00000212
RX9                               00000006
RX9D                              00000000
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

R_NOT_W                           00000002
R_W                               00000002
Read1_US                          00000164
Read1_US1                         00000182
Read2_US                          00000190
Read2_US1                         000001AE
ReadBW                            00000122
ReadColumn                        00000143
ReadStickers                      000000F7
ReceivedInput                     000004F4
ReceivedInputEntries              000004FD
Results1                          0000044B
Results1Entries                   00000454
Results2                          00000470
Results2Entries                   00000479
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         0000020E
SmallValueInput                   00000512
SmallValueInputEntries            0000051B
Start                             000000A4
StickerColours                    0000053B
StickerColoursEntries             00000544
StickerDisplay                    00000222
StickerStatus                     000004B6
StickerStatusEntries              000004BF
Switch_Lines                      00000291
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000040
Tens                              00000043
Thou                              00000041
UA                                00000001
US                                PORTA,2
US1E1                             PORTA,4
US1E2                             PORTA,5
UST1                              PORTC,2
UST2                              PORTC,3
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
WantResults                       00000405
WantResultsEntries                0000040E
WantRotate                        00000429
WantRotateEntries                 00000432
Welcome_Msg                       00000396
Welcome_Msg2                      000003C1
Welcome_Msg2Entries               000003CA
Welcome_MsgEntries                0000039F
Z                                 00000002
_.org_0_0065                      00000065
_.org_0_00A1                      000000A1
_.org_0_00C8                      000000C8
_.org_0_00D4                      000000D4
_.org_0_00FD                      000000FD
_.org_0_0109                      00000109
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_0125                      00000125
_.org_0_0146                      00000146
_.org_0_018A                      0000018A
_.org_0_018D                      0000018D
_.org_0_01B6                      000001B6
_.org_0_01B9                      000001B9
_.org_0_029E                      0000029E
_.org_0_02A0                      000002A0
_.org_0_02A3                      000002A3
_.org_0_02AC                      000002AC
_.org_0_02AF                      000002AF
_.org_0_0385                      00000385
_.org_0_0387                      00000387
_.org_0_038A                      0000038A
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
MPASM 5.65                          MAIN.ASM   3-5-2016  22:14:01         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

backstickerValues                 00000057
backwardsDCMotor                  PORTC,5
bin16_BCD                         00000001
binCounter                        00000058
com                               00000037
countdown                         00000059
counter                           0000005A
dat                               00000038
delay10us                         000002B1
delay3                            0000005B
distanceMoved                     00000053
frontstickerValues                00000056
goback                            000000A3
i2c_common_setup                  00000000
init                              00000034
isBinThere                        00000055
isColumnThere                     00000054
lcd_d1                            00000035
lcd_d2                            00000036
lcd_tmp                           00000034
pollColumnSensor                  00000243
pr2temp                           0000003B
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      00000316
show_RTC                          000002B6
temp                              00000039
write_rtc                         00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    31 suppressed

