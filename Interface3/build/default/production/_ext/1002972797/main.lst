MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1       ;3B PC
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5       
  00000040            00038                 Location6       ;40 PC
  00000041            00039                 Location7
  00000042            00040                 Front1          ;42 PC7
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ; 49 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7           ;50
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins1                      
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0, LEDcounter1,LEDcounter2,LEDcounter3,LEDcounter4,LEDcounter5,LEDcounter7,LED
                            counter8
  0000006A            00073                 cm
  0000006B            00074                 mm
  0000006C            00075                 m
  0000006D            00076                 distreg
  0000006E            00077                 lcd_d1_2
  0000006F            00078                 count_highs             ;the number of consecutive high counter for the US sensor
                      00079         endc    
                      00080 
                      00081         ;Declare constants for pin assignments (LCD on PORTD)
                      00082                 #define RS      PORTD,2
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083                 #define E       PORTD,3
                      00084                 #define IR1     PORTA,0
                      00085                 #define IR2     PORTA,1
                      00086                 #define ColMotor PORTC,7
                      00087                 #define UST1    PORTD,0
                      00088                 #define US1E1   PORTA,2
                      00089                 #define UST2    PORTD,1
                      00090                 #define US1E2   PORTA,3
                      00091                 #define LED     PORTB,0
                      00092                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00093                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00094                 #define Std1Backwards   PORTC,0
                      00095                 #define Std2Backwards   PORTC,7
                      00096                 #define SwitchWhite             PORTB,2     ; or gated switch to stop motor motion
                      00097                 #define SwitchArm               PORTB,3
                      00098                 #define NOTPWMFWD               PORTC,2
                      00099                 #define NOTPWMBACK              PORTC,1
                      00100                 #define MAX_HIGHS       0x3
                      00101                 ;SHAFTIR is PORTA,4
                      00102                 ;PWMFWD is RC2
                      00103                 ;PWMBACK is RC1
                      00104                 
                      00105                 
                      00106 ;distanceMoved  equ     b'0'
                      00107 
                      00108          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00109          goto      init       ;Just jump to the main code section.
                      00110          
                      00111          ;ORG      0x100        ;this command is sketchy
                      00112 
                      00113 ;*******************************************************************************
                      00114 ; MACROS
                      00115 ;*******************************************************************************
                      00116          
                      00117 Key      macro  value, subroutine
                      00118          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00119          andlw          0x0F
                      00120          xorlw          value
                      00121          btfsc          STATUS, Z
                      00122          call           subroutine
                      00123         endm
                      00124 
                      00125 Rotation macro  value
                      00126          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00127          andlw          0x0F
                      00128          xorlw          value
                      00129          btfsc          STATUS, Z
                      00130          call           ShiftLeft
                      00131         endm
                      00132 
                      00133 ;***************************************
                      00134 ; Delay: ~160us macro
                      00135 ;***************************************
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136 LCD_DELAY macro
                      00137         movlw   0xFF
                      00138         movwf   lcd_d1
                      00139         decfsz  lcd_d1,f
                      00140         goto    $-1
                      00141         endm
                      00142         
                      00143 ;***************************************
                      00144 ; Display macro
                      00145 ;***************************************
                      00146 Display macro   Message
                      00147                 local   loop_
                      00148                 local   end_
                      00149                 clrf    Table_Counter
                      00150                 clrw            
                      00151 loop_   movf    Table_Counter,W
                      00152                 call    Message
                      00153                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00154                 btfsc   STATUS,Z
                      00155                         goto    end_
                      00156                 call    WR_DATA
                      00157                 incf    Table_Counter,F
                      00158                 goto    loop_
                      00159 end_
                      00160                 endm
                      00161                 
                      00162 ;***************************************
                      00163 ; BANK0 macro   [TESTED]
                      00164 ;***************************************
                      00165 BANK0 Macro
                      00166     bcf STATUS,RP0 
                      00167     bcf STATUS,RP1
                      00168     endm
                      00169 ;***************************************
                      00170 ; BANK1 macro   [TESTED]
                      00171 ;***************************************
                      00172 BANK1 Macro
                      00173     bsf STATUS,RP0 
                      00174     bcf STATUS,RP1
                      00175     endm
                      00176         
                      00177 ;***************************************
                      00178 ; BANK2 macro   [TESTED]
                      00179 ;***************************************
                      00180 BANK2 Macro
                      00181     bsf STATUS,RP0 
                      00182     bsf STATUS,RP1
                      00183     endm
                      00184     
                      00185 ;***************************************
                      00186 ; BANK3 macro   [TESTED]
                      00187 ;***************************************
                      00188 BANK3 Macro
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00189     bcf STATUS,RP0 
                      00190     bsf STATUS,RP1
                      00191     endm
                      00192     
                      00193 ;***************************************
                      00194 ; MOVLF macro   [TESTED]
                      00195 ;***************************************
                      00196 MOVLF   Macro   literal, reg
                      00197     MOVLW  literal      ; move literal into working register
                      00198     MOVWF   reg         ; move working register into reg
                      00199     endm
                      00200 
                      00201 ;***************************************
                      00202 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00203 ;***************************************
                      00204 MOV     Macro   reg1, reg2
                      00205     MOVF  reg1,W        ; move reg1 into working register
                      00206     MOVWF   reg2        ; reg2 <- reg1
                      00207     endm
                      00208     
                      00209 ;***************************************
                      00210 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00211 ;***************************************
                      00212 ADDL    Macro   Destination, reg, literal
                      00213     MOVLW  literal      ; move literal into working register
                      00214     ADDWF   reg,W       ; W <- literal + reg
                      00215     MOVWF   Destination ; Destination <- literal + reg
                      00216     endm
                      00217     
                      00218 ;***************************************
                      00219 ; ADD macro, Adds two registers together    [TESTED]
                      00220 ;***************************************
                      00221 ADD     Macro   Destination, reg1, reg2
                      00222     MOVF    reg1,W      ; move literal into working register
                      00223     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00224     MOVWF   Destination ; Destination <- reg1 + reg2
                      00225     endm
                      00226     
                      00227 ;***************************************
                      00228 ; Store_Dist macro --> Stores current
                      00229 ;   distance and stores it in Bin_Dist_reg
                      00230 ;***************************************                
                      00231 Put_Dist_In_Reg macro    Bin_Dist_reg
                      00232         lcall   Dist_Decoder
                      00233         movfw   cm
                      00234         movwf   Bin_Dist_reg
                      00235     endm
                      00236     
                      00237 ;***************************************
                      00238 ; Display_Dist macro --> Takes value in Bin_Dist_reg
                      00239 ;   and converts it into a BCD and prints it
                      00240 ;   To the LCD
                      00241 ;***************************************                
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00242 Display_Dist macro    Bin_Dist_reg
                      00243         clrf    NumL
                      00244         clrf    NumH
                      00245         movfw   Bin_Dist_reg
                      00246         ;movfw  TMR0
                      00247         movwf   NumL
                      00248         call    bin16_BCD
                      00249         PrintNumber     Hund
                      00250         PrintNumber     Tens
                      00251         PrintNumber     Ones
                      00252     endm
                      00253                 
                      00254 ;***************************************
                      00255 ; Number to Printable
                      00256 ;***************************************
                      00257 PrintNumber macro       number
                      00258         ;movf       number ,W
                      00259         movfw       number
                      00260         call        DectoChar
                      00261         call        WR_DATA
                      00262         endm
                      00263         
                      00264 ;***************************************
                      00265 ; Number to Colour
                      00266 ;***************************************
                      00267 PrintCol macro      number
                      00268         movfw       number
                      00269         call        StickerColours
                      00270         call        WR_DATA
                      00271         endm    
                      00272 
                      00273 ;***************************************
                      00274 ;           US READ MACRO
                      00275 ;****************************************
                      00276 ReadUltrasonic macro    trigger, trigger_bit, echo, echo_bit
                      00277     clrf        TMR1H
                      00278     clrf        TMR1L
                      00279 
                      00280     bcf trigger, trigger_bit            ;make sure trigger is clear
                      00281     call lcdLongDelay
                      00282 
                      00283     bsf trigger, trigger_bit    ;trigger high, bottom sensor
                      00284     call lcdLongDelay           ;10us delay
                      00285     bcf trigger, trigger_bit    ;trigger low
                      00286 
                      00287     btfss       echo, echo_bit          ;wait for echo to go high
                      00288     goto        $-1
                      00289     bsf T1CON,TMR1ON    ;turn on timer
                      00290 
                      00291     btfsc       echo, echo_bit          ;wait for echo to go low
                      00292     goto        $-1
                      00293 
                      00294     bcf T1CON,TMR1ON    ;turn off timer
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00295     endm
                      00296         
                      00297 ;*******************************************************
                      00298 ;******             BCD                 ****************
                      00299 ;*******************************************************
                      00300         
                      00301 ;---------------- Binary (16-bit) to BCD -----------------------
                      00302 ;
                      00303 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00304 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00305                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00306 ;
                      00307 ; Uses variables
                      00308 ; NumH, NumL
                      00309 ; TenK, Thou, Hund, Tens, Ones
                      00310                 
                      00311 ;BCD    macro   NumH, NumL
                      00312 
0001                  00313 bin16_BCD
0001   0E51           00314         swapf   NumH, W
0002   390F           00315         andlw   0x0F
0003   3EF0           00316         addlw   0xF0
0004   00D4           00317         movwf   Thou 
0005   07D4           00318         addwf   Thou, F 
0006   3EE2           00319         addlw   0xE2 
0007   00D5           00320         movwf   Hund 
0008   3E32           00321         addlw   0x32 
0009   00D7           00322         movwf   Ones 
                      00323 
000A   0851           00324         movf    NumH, W 
000B   390F           00325         andlw   0x0F 
000C   07D5           00326         addwf   Hund, F 
000D   07D5           00327         addwf   Hund, F 
000E   07D7           00328         addwf   Ones, F 
000F   3EE9           00329         addlw   0xE9 
0010   00D6           00330         movwf   Tens 
0011   07D6           00331         addwf   Tens, F 
0012   07D6           00332         addwf   Tens, F 
                      00333 
0013   0E52           00334         swapf   NumL, W 
0014   390F           00335         andlw   0x0F 
0015   07D6           00336         addwf   Tens, F 
0016   07D7           00337         addwf   Ones, F 
                      00338 
0017   0DD6           00339         rlf    Tens, F 
0018   0DD7           00340         rlf    Ones, F 
0019   09D7           00341         comf    Ones, F 
001A   0DD7           00342         rlf    Ones, F 
                      00343 
001B   0852           00344         movf    NumL, W 
001C   390F           00345         andlw   0x0F 
001D   07D7           00346         addwf   Ones, F 
001E   0DD4           00347         rlf    Thou,F 
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00348 
001F   3007           00349         movlw   0x07 
0020   00D3           00350         movwf   TenK 
                      00351 
0021   300A           00352         movlw   0x0A
0022                  00353 Lb1
0022   03D6           00354         decf    Tens, F 
0023   07D7           00355         addwf   Ones, F 
0024   1C03           00356         btfss   STATUS, C 
0025   2???           00357         goto            Lb1 
0026                  00358 Lb2
0026   03D5           00359         decf    Hund, F 
0027   07D6           00360         addwf   Tens, F 
0028   1C03           00361         btfss   STATUS,C 
0029   2???           00362         goto            Lb2 
002A                  00363 Lb3
002A   03D4           00364         decf    Thou, F 
002B   07D5           00365         addwf   Hund, F 
002C   1C03           00366         btfss   STATUS,C
002D   2???           00367         goto            Lb3 
002E                  00368 Lb4
002E   03D3           00369         decf    TenK, F 
002F   07D4           00370         addwf   Thou, F 
0030   1C03           00371         btfss   STATUS,C 
0031   2???           00372         goto            Lb4 
                      00373 
0032   3400           00374         retlw   0
0033   0008           00375         return
                      00376 ;endm
                      00377 
                      00378 ;***************************************
                      00379 ; Initialize
                      00380 ;***************************************
0034                  00381 init
0034   018B           00382          clrf      INTCON         ; No interrupts
                      00383 
0035   1683           00384          bsf       STATUS,RP0     ; select bank 1
0036   30FF           00385          movlw      0xFF            ; need to make A input
0037   0085           00386          movwf      TRISA          ; All port A is input
0038   30FE           00387          movlw     b'11111110'    ; Set required keypad inputs
0039   0086           00388          movwf     TRISB
003A   0187           00389          clrf      TRISC          ; All port C is output
003B   0188           00390          clrf      TRISD          ; All port D is output
003C   0189           00391          clrf      TRISE        
                      00392          
                      00393                   ;Set SDA and SCL to high-Z first as required for I2C
003D   1607           00394                  bsf       TRISC,4                
003E   1587           00395                  bsf       TRISC,3
                      00396 
003F   1283           00397          bcf       STATUS,RP0     ; select bank 0
0040   0185           00398          clrf      PORTA
0041   0186           00399          clrf      PORTB
0042   0187           00400          clrf      PORTC
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0043   0188           00401          clrf      PORTD
0044   0189           00402          clrf      PORTE
                      00403          
                      00404         ;Set up I2C for communication
                      00405                  
0045   2???           00406         call       i2c_common_setup
                      00407 ;*******************************************************************************
                      00408 ;        UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00409         ;rtc_resetAll                                   ;works
                      00410         ;call set_rtc_time
                      00411 ;*******************************************************************************
                      00412                  
                      00413                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00414                  ;call     set_rtc_time
                      00415           
0046   2???           00416          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00417           ;A/D converter attempt
                      00418          
                      00419 ;        bcf    STATUS,RP1
                      00420 ;        bsf    STATUS,RP0      ;Select bank 1
                      00421 ;        
                      00422 ;        bsf    IR1             ;makes RA0 an input
                      00423 ;        bcf    STATUS,RP0      ; go back to bank 0
                      00424          
                      00425         ; Set ADCON1 to use RA0 as analog input
                      00426         
0047   1303           00427         bcf     STATUS,RP1
0048   1683           00428         bsf     STATUS,RP0      ;Select bank 1
0049   3006           00429         movlw   b'00000110'     ;left justified, all inputs digital
004A   009F           00430         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00431 
                      00432         ;ADCON0
004B   1283           00433         bcf     STATUS,RP0
                      00434         
                      00435         
                      00436         
                      00437 ;***************************************************
                      00438 ; Initialize variables and Displays
                      00439 ;****************************************************
                      00440         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
004C   01B3               M                 clrf    Table_Counter
004D   0103               M                 clrw            
004E   0833               M loop_   movf    Table_Counter,W
004F   2???               M                 call    Welcome_Msg
0050   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0051   1903               M                 btfsc   STATUS,Z
0052   2???               M                         goto    end_
0053   2???               M                 call    WR_DATA
0054   0AB3               M                 incf    Table_Counter,F
0055   2???               M                 goto    loop_
0056                      M end_
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0056   2???           00441         call            Switch_Lines
                      00442         Display         Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0057   01B3               M                 clrf    Table_Counter
0058   0103               M                 clrw            
0059   0833               M loop_   movf    Table_Counter,W
005A   2???               M                 call    Welcome_Msg2
005B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
005C   1903               M                 btfsc   STATUS,Z
005D   2???               M                         goto    end_
005E   2???               M                 call    WR_DATA
005F   0AB3               M                 incf    Table_Counter,F
0060   2???               M                 goto    loop_
0061                      M end_
0061   01E0           00443         clrf            NumOfBins1
0062   01ED           00444         clrf            distreg             ; clear register for distance
0063   2???           00445         call            Init_TMR0           ; Initialize shaft encoder
0064   1408           00446         bsf             PORTD,0
0065   1462           00447         bsf             LEDcounter0,0               ;counter for LED
0066   1463           00448         bsf             LEDcounter1,0               ;forward motor counters
0067   1464           00449         bsf             LEDcounter2,0
0068   1465           00450         bsf             LEDcounter3,0               
0069   1466           00451         bsf             LEDcounter4,0               ;backward motor counters
006A   1467           00452         bsf             LEDcounter5,0       
006B   1468           00453         bsf             LEDcounter7,0               ;pwm counters
006C   1469           00454         bsf             LEDcounter8,0               
                      00455         
006D   1287           00456         bcf             Std1                        ;use this one for negative for when need to move ful
                            l motor                 
006E   1707           00457         bsf             Std2
006F   1007           00458         bcf             Std1Backwards
0070   1787           00459         bsf             Std2Backwards
0071   1507           00460         bsf             PORTC,2             
0072   1487           00461         bsf             PORTC,1                 ; PWM now negative, so start by clearing
                      00462         
                      00463         ;trying to fix the switch bs
0073   1106           00464         bcf             SwitchWhite
0074   1186           00465         bcf             SwitchArm
                      00466 
                      00467 ;*************************************
                      00468 ;       Keypad and LCD forms        
                      00469 ;*************************************
                      00470         
0075   1C86           00471 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0076   2???           00472                 goto            $-1 
                      00473 
0077   0E06           00474                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0078   390F           00475                 andlw           0x0F
0079   00B9           00476                 movwf           temp
                      00477                 
                      00478                 Key     0x00, TOTAL
007A   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007B   390F               M          andlw          0x0F
007C   3A00               M          xorlw          0x00
007D   1903               M          btfsc          STATUS, Z
007E   2???               M          call           TOTAL
                      00479                 Key     0x01, DisplayBlackWhiteIR1
007F   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0080   390F               M          andlw          0x0F
0081   3A01               M          xorlw          0x01
0082   1903               M          btfsc          STATUS, Z
0083   2???               M          call           DisplayBlackWhiteIR1
                      00480                 Key     0x02, DisplayBlackWhiteIR2
0084   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0085   390F               M          andlw          0x0F
0086   3A02               M          xorlw          0x02
0087   1903               M          btfsc          STATUS, Z
0088   2???               M          call           DisplayBlackWhiteIR2
                      00481                 Rotation        0x03
0089   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008A   390F               M          andlw          0x0F
008B   3A03               M          xorlw          0x03
008C   1903               M          btfsc          STATUS, Z
008D   2???               M          call           ShiftLeft
                      00482                 Key     0x04, READBIN
008E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008F   390F               M          andlw          0x0F
0090   3A04               M          xorlw          0x04
0091   1903               M          btfsc          STATUS, Z
0092   2???               M          call           READBIN
                      00483                 Key     0x05, DisplayUSSensor1
0093   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0094   390F               M          andlw          0x0F
0095   3A05               M          xorlw          0x05
0096   1903               M          btfsc          STATUS, Z
0097   2???               M          call           DisplayUSSensor1
                      00484                 Key     0x06, DisplayUSSensor2
0098   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0099   390F               M          andlw          0x0F
009A   3A06               M          xorlw          0x06
009B   1903               M          btfsc          STATUS, Z
009C   2???               M          call           DisplayUSSensor2
                      00485                 Key     0x07, AddBin
009D   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009E   390F               M          andlw          0x0F
009F   3A07               M          xorlw          0x07
00A0   1903               M          btfsc          STATUS, Z
00A1   2???               M          call           AddBin
                      00486                 Key     0x08, Stickers1
00A2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A3   390F               M          andlw          0x0F
00A4   3A08               M          xorlw          0x08
00A5   1903               M          btfsc          STATUS, Z
00A6   2???               M          call           Stickers1
                      00487                 Key     0x09, MOVEFWDFORABIT
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A8   390F               M          andlw          0x0F
00A9   3A09               M          xorlw          0x09
00AA   1903               M          btfsc          STATUS, Z
00AB   2???               M          call           MOVEFWDFORABIT
                      00488                 Key     0x0A, CHECKSWITCH               
00AC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00AD   390F               M          andlw          0x0F
00AE   3A0A               M          xorlw          0x0A
00AF   1903               M          btfsc          STATUS, Z
00B0   2???               M          call           CHECKSWITCH
                      00489                 Key     0x0C, StdRotation2
00B1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B2   390F               M          andlw          0x0F
00B3   3A0C               M          xorlw          0x0C
00B4   1903               M          btfsc          STATUS, Z
00B5   2???               M          call           StdRotation2
                      00490                 Key     0x0D, StdRotation2Backwards
00B6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B7   390F               M          andlw          0x0F
00B8   3A0D               M          xorlw          0x0D
00B9   1903               M          btfsc          STATUS, Z
00BA   2???               M          call           StdRotation2Backwards
                      00491                 Key     0x0E, PWMFWD
00BB   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BC   390F               M          andlw          0x0F
00BD   3A0E               M          xorlw          0x0E
00BE   1903               M          btfsc          STATUS, Z
00BF   2???               M          call           PWMFWD
                      00492                 Key     0x0F, PWMBACK
00C0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C1   390F               M          andlw          0x0F
00C2   3A0F               M          xorlw          0x0F
00C3   1903               M          btfsc          STATUS, Z
00C4   2???               M          call           PWMBACK
00C5   1886           00493                 btfsc           PORTB,1     ;Wait until key is released
00C6   2???           00494                 goto            $-1
00C7   2???           00495                 goto            KeypadandLCD
                      00496                 
00C8                  00497 goback
00C8   0008           00498                 return  
                      00499         
                      00500 
                      00501 ;*******************************************************************************************************
                            *******************************************
                      00502 ;                                                                 MAIN CODE
                      00503 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
                      00504 
00C9                  00505 AVOIDCOLUMN
                      00506     
00C9   1287           00507     bcf     Std1                ;motor will stop move fwd
                      00508     
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA   1307           00509     bcf     Std2                ; start white thing fwd
00CB   2???           00510     call    HalfS
00CC   1D06           00511     btfss   SwitchWhite
00CD   2???           00512     goto    $-1
                      00513    
00CE   1707           00514     bsf     Std2                   ; stop white thing fwd
                      00515     
00CF   2???           00516      call    HalfS
00D0   2???           00517     call    HalfS
00D1   2???           00518      call    HalfS
00D2   2???           00519     call    HalfS
                      00520     
00D3   2???           00521     call    PWMFWD          ;start arm forward
00D4   2???           00522     call    lcdLongDelay
00D5   2???           00523     call    lcdLongDelay
00D6   1D86           00524     btfss   SwitchArm
00D7   2???           00525     goto    $-1
                      00526     
00D8   2???           00527     call    PWMFWD          ;stop arm forward
                      00528     
                      00529 ;-------------------------------------------------
                      00530     
00D9   1687           00531     bsf     Std1                ;move forward until no more column in the way
                      00532     
00DA   2???           00533     call    OneS
00DB   2???           00534     call    OneS
00DC   2???           00535     call    OneS
00DD   2???           00536     call    OneS
00DE   2???           00537     call    OneS
00DF   2???           00538     call    OneS
                      00539 
                      00540     
00E0   2???           00541     call    Read1_US            ;checks to see if column present
                      00542     
00E1   300F           00543     movlw   0xF         ; if column is not present, it'll go back to original form
00E2   028F           00544     subwf   TMR1H
00E3   1C03           00545     btfss   STATUS,C            
00E4   2???           00546     goto    $-6
                      00547     
00E5   1287           00548     bcf     Std1
                      00549     
                      00550     
00E6   2???           00551     call    RETURNFROMCOLUMN
                      00552     
00E7   0008           00553     return 
                      00554     
00E8                  00555 RETURNFROMCOLUMN
                      00556     
00E8   2???           00557     call    PWMBACK         ;start arm BACK
00E9   2???           00558     call    HalfS
00EA   1D86           00559     btfss   SwitchArm
00EB   2???           00560     goto    $-1
                      00561     
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EC   2???           00562     call    PWMBACK         ;stop arm BACK
                      00563     
                      00564     
00ED   2???           00565     call    HalfS
00EE   2???           00566     call    HalfS
                      00567     
00EF   1387           00568     bcf     Std2Backwards
00F0   2???           00569     call    HalfS
00F1   1D06           00570     btfss   SwitchWhite
00F2   2???           00571     goto    $-1 
                      00572     
00F3   1787           00573     bsf     Std2Backwards
                      00574     
00F4   0008           00575     return
                      00576     
                      00577 ;FINDBINA
                      00578 ;    
                      00579 ;    call    FINDBIN
                      00580 ;    call    FINDBIN
                      00581 ;    
                      00582 ;    goto    EXIT
                      00583 ;    
                      00584 ;FINDBIN
                      00585 ;    
                      00586 ;    ;call    set_rtc_time          ; resets RTC clock to zero
                      00587 ;    
                      00588 ;    bsf            Std1        ;move fwd
                      00589 ;
                      00590 ;    call    Read2_US           ;checks to see if bin present
                      00591 ;    
                      00592 ;    movlw   0x10               ; if column is not present, it'll go back to original form
                      00593 ;    subwf   TMR1H
                      00594 ;    btfsc   STATUS,C
                      00595 ;    goto    FINDBIN            ;set LED to know found bin
                      00596     
00F5                  00597 READBIN
                      00598 
                      00599     ;call    HalfS
00F5   1287           00600     bcf     Std1
                      00601     
00F6   2???           00602     call    AddBin              ;adds bin to list
                      00603     
00F7   2???           00604     call    Dist_Decoder        ; stores the distance
                      00605     Put_Dist_In_Reg     distreg
00F8   ???? ???? 2???     M         lcall   Dist_Decoder
00FB   086A               M         movfw   cm
00FC   00ED               M         movwf   distreg
                      00606     Display_Dist        distreg
00FD   01D2               M         clrf    NumL
00FE   01D1               M         clrf    NumH
00FF   086D               M         movfw   distreg
                          M         ;movfw  TMR0
0100   00D2               M         movwf   NumL
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0101   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
0102   0855               M         movfw       Hund
0103   2???               M         call        DectoChar
0104   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
0105   0856               M         movfw       Tens
0106   2???               M         call        DectoChar
0107   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
0108   0857               M         movfw       Ones
0109   2???               M         call        DectoChar
010A   2???               M         call        WR_DATA
010B   2???           00607     call    StoreThisDistance
                      00608     
010C   2???           00609     call    Clear_Display    
                      00610     
                      00611         
010D   2???           00612     call    DisplayBlackWhiteIR1        ;warms up IR
010E   2???           00613     call    DisplayBlackWhiteIR1        ;warms up IR  
010F   2???           00614     call    StoreBW1            ;reads & stores first IR data
                      00615     
                      00616 ;*****THRESHHOLD TEST ON IR 1************
                      00617 ;    nothing in front: 02056
                      00618 ;    black in front: 10000-41000
                      00619 ;    white in front: >60000
                      00620     
                      00621     ;READ 2 ALGORITHM IMPLEMENT HERE
                      00622     
0110   2???           00623     call    HalfS
0111   2???           00624     call    HalfS
0112   2???           00625     call    HalfS
0113   2???           00626     call    HalfS
                      00627     
0114   2???           00628     call    Clear_Display
                      00629     
0115   2???           00630     call    DisplayBlackWhiteIR2        ;warms up IR
0116   2???           00631     call    DisplayBlackWhiteIR2        ;warms up IR
0117   2???           00632     call    StoreBW2
                      00633     
0118   2???           00634     call    HalfS
0119   2???           00635     call    HalfS
                      00636     
011A   1406           00637     bsf     LED
                      00638     
011B   0008           00639     return
                      00640     
011C   2???           00641     goto    EXIT    
                      00642      
                      00643     
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011D                  00644 TOTAL
                      00645     
011D   2???           00646     call    Read1_US            ;warms up us sensors that was weird
011E   2???           00647     call    Read2_US
                      00648    
011F                  00649 TOTAL1
                      00650     
011F   1687           00651     bsf     Std1                ;moving
0120   01EF           00652     clrf    count_highs         ;reset the high value counter
                      00653     
0121                  00654 COLREADINGSTART
0121   2???           00655     call    Read1_US            ;checks to see if column present
                      00656     
                      00657 ;********THRESHOLD CALCULATION FOR COLUMN**************:
                      00658 ;   At around cm from col, reading: 02303
                      00659 ;       So, this will be the max value.
                      00660 ;       To be safe, will minus 02603 from the TMR variables.
                      00661 ;       This means, subtract 0x4 from TMR1H 
                      00662 ;       Value before at integration was 0x14, now trying 0x4
                      00663 ;       THE FOLLOWING CODE COUNTS 3 HIGHS
                      00664     
0122   300F           00665     movlw   0xF         ; if column present, it'll move forward
0123   028F           00666     subwf   TMR1H
0124   1803           00667     btfsc   STATUS,C        
0125   2???           00668     goto    $+7
0126   0AEF           00669     incf    count_highs
0127   3003           00670     movlw   MAX_HIGHS
0128   026F           00671     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
0129   1D03           00672     btfss   STATUS,Z                ; if result is zero, Z bit is set.
012A   2???           00673     goto    COLREADINGSTART
012B   2???           00674     call    AVOIDCOLUMN
                      00675     
012C   01EF           00676     clrf    count_highs         ;reset the high value counter
                      00677     
012D                  00678 BINREADINGSTART
                      00679     
012D   2???           00680     call    Read2_US            ;checks to see if bin present
                      00681     
                      00682 ;********THRESHOLD CALCULATION FOR BIN**************:
                      00683 ;   At around 6cm from white bin, reading: 01103
                      00684 ;       So, this will be the max value.
                      00685 ;       To be safe, will minus 01210 from the TMR variables.
                      00686 ;       This means, subtract 0x4 from TMR1H 
                      00687 ;       Value before at integration was 0x14, now trying 0x4
                      00688 ;       CODE COUNTS 3 HIGHS
                      00689 
                      00690     
012E   3008           00691     movlw   0x8         ; read the bin
012F   028F           00692     subwf   TMR1H
0130   1803           00693     btfsc   STATUS,C
0131   2???           00694     goto    $+8
0132   0AEF           00695     incf    count_highs
0133   2???           00696     call    lcdLongDelay
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0134   3003           00697     movlw   MAX_HIGHS
0135   026F           00698     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
0136   1D03           00699     btfss   STATUS,Z                ; if result is zero, Z bit is set.
0137   2???           00700     goto    BINREADINGSTART
0138   2???           00701     call    DELAYEDREAD
                      00702 
0139   2???           00703     call    BINREADINGSTART
                      00704 
                      00705    
                      00706     
                      00707     
013A                  00708 DELAYEDREAD
                      00709     ;checks to see when the bin sensor is past bin
013A   2???           00710     call    Read2_US            ;checks to see if bin present
013B   3006           00711     movlw   0x6         ; read the bin
013C   028F           00712     subwf   TMR1H
013D   1C03           00713     btfss   STATUS,C
013E   2???           00714     goto    DELAYEDREAD
013F   2???           00715     call    READBIN
0140   1006           00716     bcf     LED                 ; turn off LED After reading
                      00717     
0141                  00718 ENDTHIS   
                      00719     
0141   3001           00720     movlw       0X1                     ;checks if max of 7 bins has been reached
0142   0260           00721     subwf       NumOfBins1,W            
0143   1903           00722     btfsc       STATUS,Z
0144   2???           00723     goto    EXIT
0145   2???           00724     goto TOTAL1
                      00725     
0146                  00726 CHECKSWITCH
                      00727     
                      00728     ;call    Clear_Display
                      00729     ;Display DectoChar
                      00730     
0146   2???           00731     call    PWMFWD
0147   2???           00732     call    DELAY1
0148   2???           00733     call    HalfS
0149   1D86           00734     btfss   SwitchArm
014A   2???           00735     goto    $-1
                      00736    
014B   2???           00737     call    PWMFWD
                      00738  
014C   2???           00739     call    PWMBACK
014D   2???           00740     call    DELAY1
014E   2???           00741     call    HalfS
014F   1D86           00742     btfss   SwitchArm
0150   2???           00743     goto    $-1 
                      00744     
0151   2???           00745     call    PWMBACK
                      00746     
0152   2???           00747     goto    CHECKSWITCH  
                      00748 
                      00749 
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0153                  00750 EXIT
                      00751     
0153   2???           00752     call        Clear_Display
                      00753     ;display final interface for choosing stuff
                      00754     Display     FinalMessage
  0000                    M                 local   loop_
  0000                    M                 local   end_
0154   01B3               M                 clrf    Table_Counter
0155   0103               M                 clrw            
0156   0833               M loop_   movf    Table_Counter,W
0157   2???               M                 call    FinalMessage
0158   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0159   1903               M                 btfsc   STATUS,Z
015A   2???               M                         goto    end_
015B   2???               M                 call    WR_DATA
015C   0AB3               M                 incf    Table_Counter,F
015D   2???               M                 goto    loop_
015E                      M end_
015E   2???           00755     call        Switch_Lines
                      00756     Display     Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
015F   01B3               M                 clrf    Table_Counter
0160   0103               M                 clrw            
0161   0833               M loop_   movf    Table_Counter,W
0162   2???               M                 call    Welcome_Msg2
0163   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0164   1903               M                 btfsc   STATUS,Z
0165   2???               M                         goto    end_
0166   2???               M                 call    WR_DATA
0167   0AB3               M                 incf    Table_Counter,F
0168   2???               M                 goto    loop_
0169                      M end_
                      00757     
0169   1287           00758     bcf         Std1
                      00759     ;bsf                Std1Backwards
                      00760     
016A   2???           00761     goto        EXITDISPLAY
                      00762     
016B                  00763 MOVEFWDFORABIT
                      00764     
016B   1687           00765     bsf         Std1
                      00766     
016C   2???           00767     call        OneS
016D   2???           00768     call        OneS
016E   2???           00769         call    OneS
016F   2???           00770     call        OneS
0170   2???           00771         call    OneS
0171   2???           00772     call        OneS
                      00773     
0172   1287           00774     bcf         Std1
                      00775     
0173   2???           00776     goto        EXITDISPLAY
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00777     
0174   1C86           00778 EXITDISPLAY     btfss           PORTB,1     ;Wait until data is available from the keypad
0175   2???           00779                 goto            $-1 
                      00780 
0176   0E06           00781                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0177   390F           00782                 andlw           0x0F
0178   00B9           00783                 movwf           temp
                      00784                 Key     0x00, show_RTC
0179   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
017A   390F               M          andlw          0x0F
017B   3A00               M          xorlw          0x00
017C   1903               M          btfsc          STATUS, Z
017D   2???               M          call           show_RTC
                      00785                 Key     0x02, Stickers1
017E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
017F   390F               M          andlw          0x0F
0180   3A02               M          xorlw          0x02
0181   1903               M          btfsc          STATUS, Z
0182   2???               M          call           Stickers1
                      00786                 Rotation        0x03
0183   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0184   390F               M          andlw          0x0F
0185   3A03               M          xorlw          0x03
0186   1903               M          btfsc          STATUS, Z
0187   2???               M          call           ShiftLeft
                      00787                 Key     0x04, ShowBins
0188   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0189   390F               M          andlw          0x0F
018A   3A04               M          xorlw          0x04
018B   1903               M          btfsc          STATUS, Z
018C   2???               M          call           ShowBins
                      00788                 Key     0x05, TotalDistance
018D   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
018E   390F               M          andlw          0x0F
018F   3A05               M          xorlw          0x05
0190   1903               M          btfsc          STATUS, Z
0191   2???               M          call           TotalDistance
                      00789                 Key     0x06, Locations
0192   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0193   390F               M          andlw          0x0F
0194   3A06               M          xorlw          0x06
0195   1903               M          btfsc          STATUS, Z
0196   2???               M          call           Locations
                      00790                 Key     0x07, AddBin
0197   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0198   390F               M          andlw          0x0F
0199   3A07               M          xorlw          0x07
019A   1903               M          btfsc          STATUS, Z
019B   2???               M          call           AddBin
019C   1886           00791                 btfsc           PORTB,1     ;Wait until key is released
019D   2???           00792                 goto            $-1
019E   2???           00793                 goto            EXITDISPLAY
                      00794     
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00795     ;show location for every bin
                      00796     
                      00797     
                      00798     ;show number of bins
                      00799     
                      00800     
                      00801     ;show dist travelled
                      00802     
                      00803     
                      00804     ;show time elapsed
                      00805     
                      00806     
                      00807     
019F   2???           00808     goto    EXIT
                      00809     
01A0                  00810 MoveBackwards
                      00811     
01A0   2???           00812     call    PWMSTOP
                      00813     
                      00814         
                      00815 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00816 
                      00817 ;*********************************************************
                      00818 ; A to D conversion with LCD display for IR sensor
                      00819 ;*********************************************************
                      00820         
                      00821 ;******************************************
                      00822 ;       Sticker Print Modules
                      00823 ;*****************************************
                      00824         
01A1                  00825 BWScanModule1
                      00826 
01A1   151F           00827         bsf     ADCON0,2                ;start conversion and wait for it to complete
01A2   191F           00828         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01A3   2???           00829         goto    $-1
                      00830         
01A4   081E           00831         movf    ADRESH, W
01A5   00D1           00832         movwf   NumH
01A6   081E           00833         movf    ADRESL, W
01A7   00D2           00834         movwf   NumL
01A8   2???           00835         call    Clear_Display
01A9   2???           00836         call    bin16_BCD
                      00837         PrintNumber     TenK
                          M         ;movf       number ,W
01AA   0853               M         movfw       TenK
01AB   2???               M         call        DectoChar
01AC   2???               M         call        WR_DATA
                      00838         PrintNumber     Thou
                          M         ;movf       number ,W
01AD   0854               M         movfw       Thou
01AE   2???               M         call        DectoChar
01AF   2???               M         call        WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00839         PrintNumber     Hund
                          M         ;movf       number ,W
01B0   0855               M         movfw       Hund
01B1   2???               M         call        DectoChar
01B2   2???               M         call        WR_DATA
                      00840         PrintNumber     Tens
                          M         ;movf       number ,W
01B3   0856               M         movfw       Tens
01B4   2???               M         call        DectoChar
01B5   2???               M         call        WR_DATA
                      00841         PrintNumber     Ones
                          M         ;movf       number ,W
01B6   0857               M         movfw       Ones
01B7   2???               M         call        DectoChar
01B8   2???               M         call        WR_DATA
01B9   0008           00842         return
01BA                  00843 BWStoreModule1
01BA   1383           00844         BCF     STATUS, IRP
01BB   3042           00845         movlw   0x42
01BC   0084           00846         movwf   FSR
01BD   3000           00847         movlw   0X0
01BE   0360           00848         decf    NumOfBins1,W            ;want bin number to be decreased when back checks it
01BF   0784           00849         addwf   FSR,F
01C0   3052           00850         movlw   0X52                    ; roughly 21000
01C1   02D1           00851         subwf   NumH
01C2   3000           00852         movlw   0x0
01C3   1803           00853         btfsc   STATUS, C
01C4   3001           00854         movlw   0x1
01C5   0080           00855         movwf   INDF
01C6   0008           00856         return  
                      00857         
01C7                  00858 BWScanModule2
                      00859 
01C7   151F           00860         bsf     ADCON0,2                ;start conversion and wait for it to complete
01C8   191F           00861         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01C9   2???           00862         goto    $-1
                      00863         
01CA   081E           00864         movf    ADRESH, W
01CB   00D1           00865         movwf   NumH
01CC   081E           00866         movf    ADRESL, W
01CD   00D2           00867         movwf   NumL
01CE   2???           00868         call    Clear_Display
01CF   2???           00869         call    bin16_BCD
                      00870         PrintNumber     TenK
                          M         ;movf       number ,W
01D0   0853               M         movfw       TenK
01D1   2???               M         call        DectoChar
01D2   2???               M         call        WR_DATA
                      00871         PrintNumber     Thou
                          M         ;movf       number ,W
01D3   0854               M         movfw       Thou
01D4   2???               M         call        DectoChar
01D5   2???               M         call        WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00872         PrintNumber     Hund
                          M         ;movf       number ,W
01D6   0855               M         movfw       Hund
01D7   2???               M         call        DectoChar
01D8   2???               M         call        WR_DATA
                      00873         PrintNumber     Tens
                          M         ;movf       number ,W
01D9   0856               M         movfw       Tens
01DA   2???               M         call        DectoChar
01DB   2???               M         call        WR_DATA
                      00874         PrintNumber     Ones
                          M         ;movf       number ,W
01DC   0857               M         movfw       Ones
01DD   2???               M         call        DectoChar
01DE   2???               M         call        WR_DATA
01DF   0008           00875         return
01E0                  00876 BWStoreModule2
01E0   1383           00877         BCF     STATUS, IRP
01E1   3049           00878         movlw   0x49                    ;number 49 to try to get registers for back of bin
01E2   0084           00879         movwf   FSR
01E3   3000           00880         movlw   0X0
01E4   0360           00881         decf    NumOfBins1,W
01E5   0784           00882         addwf   FSR,F
01E6   3010           00883         movlw   0X10
01E7   02D1           00884         subwf   NumH
01E8   3000           00885         movlw   0x0
01E9   1803           00886         btfsc   STATUS, C
01EA   3001           00887         movlw   0x1
01EB   0080           00888         movwf   INDF
01EC   0008           00889         return  
                      00890         
                      00891 ;***************************************************
                      00892 ;       US Sensor Modules                           [TESTED]
                      00893 ;***************************************************
                      00894         
01ED                  00895 Read1_US                    
                      00896          
                      00897         ;call           Read1_US1 
                      00898          
                      00899         ReadUltrasonic  UST1,US1E1
01ED   018F               M     clrf        TMR1H
01EE   018E               M     clrf        TMR1L
                          M 
01EF   1008               M     bcf PORTD,   0                      ;make sure trigger is clear
01F0   2???               M     call lcdLongDelay
                          M 
01F1   1408               M     bsf PORTD,   0              ;trigger high, bottom sensor
01F2   2???               M     call lcdLongDelay           ;10us delay
01F3   1008               M     bcf PORTD,   0              ;trigger low
                          M 
01F4   1D05               M     btfss       PORTA, 2                ;wait for echo to go high
01F5   2???               M     goto        $-1
01F6   1410               M     bsf T1CON,TMR1ON    ;turn on timer
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
01F7   1905               M     btfsc       PORTA, 2                ;wait for echo to go low
01F8   2???               M     goto        $-1
                          M 
01F9   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00900         
01FA   2???           00901         call            Clear_Display
                      00902         
01FB   080F           00903         movf            TMR1H, W
01FC   00D1           00904         movwf           NumH
01FD   080E           00905         movf            TMR1L, W
01FE   00D2           00906         movwf           NumL
                      00907         
01FF   2???           00908         call            bin16_BCD
                      00909         
                      00910         PrintNumber     TenK
                          M         ;movf       number ,W
0200   0853               M         movfw       TenK
0201   2???               M         call        DectoChar
0202   2???               M         call        WR_DATA
                      00911         PrintNumber     Thou
                          M         ;movf       number ,W
0203   0854               M         movfw       Thou
0204   2???               M         call        DectoChar
0205   2???               M         call        WR_DATA
                      00912 ;       PrintNumber     Hund
                      00913 ;       PrintNumber     Tens
                      00914 ;       PrintNumber     Ones
                      00915         
0206   2???           00916         call            Clear_Display
0207   0008           00917         return
                      00918 
0208                  00919 Read2_US                    
                      00920          
                      00921         ;call           Read2_US1 
                      00922         
                      00923         ReadUltrasonic  UST2,US1E2
0208   018F               M     clrf        TMR1H
0209   018E               M     clrf        TMR1L
                          M 
020A   1088               M     bcf PORTD,   1                      ;make sure trigger is clear
020B   2???               M     call lcdLongDelay
                          M 
020C   1488               M     bsf PORTD,   1              ;trigger high, bottom sensor
020D   2???               M     call lcdLongDelay           ;10us delay
020E   1088               M     bcf PORTD,   1              ;trigger low
                          M 
020F   1D85               M     btfss       PORTA, 3                ;wait for echo to go high
0210   2???               M     goto        $-1
0211   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
0212   1985               M     btfsc       PORTA, 3                ;wait for echo to go low
0213   2???               M     goto        $-1
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0214   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00924          
0215   2???           00925         call            Clear_Display
                      00926         
0216   080F           00927         movf            TMR1H, W
0217   00D1           00928         movwf           NumH
0218   080E           00929         movf            TMR1L, W
0219   00D2           00930         movwf           NumL
                      00931         
021A   2???           00932         call            bin16_BCD
                      00933         
                      00934         PrintNumber     TenK
                          M         ;movf       number ,W
021B   0853               M         movfw       TenK
021C   2???               M         call        DectoChar
021D   2???               M         call        WR_DATA
                      00935         PrintNumber     Thou
                          M         ;movf       number ,W
021E   0854               M         movfw       Thou
021F   2???               M         call        DectoChar
0220   2???               M         call        WR_DATA
                      00936 ;       PrintNumber     Hund
                      00937 ;       PrintNumber     Tens
                      00938 ;       PrintNumber     Ones
                      00939         
                      00940         ;call           HalfS
                      00941         
0221   2???           00942         call            Clear_Display
0222   0008           00943         return
                      00944                 
                      00945 ;*******************************************************
                      00946 ; Dist_Decoder
                      00947 ;   input:  Timer0, cm, mm
                      00948 ;   output: Bin_Dist_reg
                      00949 ;   Desc:   Converts the count in the rotary encoder
                      00950 ;           into physical distance
                      00951 ;*******************************************************
0223                  00952 Dist_Decoder
                      00953         ; Initalize all registers
0223   01EA           00954         clrf    cm              ; Clear regs
0224   01EB           00955         clrf    mm
0225   0801           00956         movfw   TMR0            ; poll encoder for current state
0226   00B9           00957         movwf   temp
                      00958         ; Check if its already zero
0227   0839           00959         movfw   temp
0228   3C00           00960         sublw   D'0'
0229   1903           00961         btfsc   STATUS, Z
022A   0008           00962         return
                      00963         
022B                  00964 Decode_loop                     ; Assume each step is 1.01 cm
                      00965         ; Perform decode
                      00966         ADDL    cm, cm, D'2'
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022B   3002               M     MOVLW  D'2'         ; move literal into working register
022C   076A               M     ADDWF   cm,W        ; W <- literal + reg
022D   00EA               M     MOVWF   cm          ; Destination <- literal + reg
                      00967         ADDL    mm, mm, D'0'
022E   3000               M     MOVLW  D'0'         ; move literal into working register
022F   076B               M     ADDWF   mm,W        ; W <- literal + reg
0230   00EB               M     MOVWF   mm          ; Destination <- literal + reg
0231   03B9           00968         decf    temp
                      00969 
                      00970         ; Test if mm has overflowed! (mm >= 10)
0232   300A           00971         movlw   D'10'           
0233   026B           00972         subwf   mm, w           ; mm - 10 --> w (w = f - w, when d = 0) 
0234   1803           00973         btfsc   STATUS, C       ; Y = mm, w = 10, Y-w
0235   2???           00974         call    mm_overflow     ; Run overflow routine if it did overflow
                      00975 
0236                  00976 Decode_check_done       
                      00977         ; Test if done decoding
0236   0839           00978         movfw   temp
0237   3C00           00979         sublw   D'0'
                      00980         ;movf   temp, F
0238   1D03           00981         btfss   STATUS, Z       
0239   2???           00982         goto    Decode_loop
                      00983 ;       btfss   STATUS, C
                      00984 ;       call    Decode_loop
                      00985         ;Display            StandBy1
                      00986         ;goto       Dist_test
023A   0008           00987         return
                      00988         
023B                  00989 mm_overflow
023B   0AEA           00990         incf    cm              ; cm + 1 --> cm
023C   300A           00991         movlw   D'10'           ; 10 --> w
023D   02EB           00992         subwf   mm, f           ; mm - 10 --> mm (f = f - w, when d = 1) 
023E   2???           00993         goto    Decode_check_done       ; Continue decoding
                      00994         
023F                  00995 StoreThisDistance
023F   1383           00996         BCF     STATUS, IRP
0240   303B           00997         movlw   0x3B                    ;number 56 to try to get location registers in cblock
0241   0084           00998         movwf   FSR
0242   3000           00999         movlw   0X0
0243   0360           01000         decf    NumOfBins1,W
0244   0784           01001         addwf   FSR,F
                      01002         Put_Dist_In_Reg W               ;move the distance into the actual register
0245   ???? ???? 2???     M         lcall   Dist_Decoder
0248   086A               M         movfw   cm
0249   0080               M         movwf   W
024A   0080           01003         movwf   INDF
                      01004         
024B   0008           01005         return
                      01006 ;*********************************************
                      01007 ; Keypad Modules
                      01008 ;*******************************************
                      01009          
                      01010 
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

024C                  01011 ShiftLeft
024C   3018           01012         movlw           b'00011000'             ;Move to the left
024D   2???           01013         call            WR_INS
024E   0008           01014         return
                      01015 
024F   2???           01016         goto    KeypadandLCD
                      01017         
0250                  01018 RTCDisplay
0250   2???           01019         call    show_RTC
                      01020         
0251   1886           01021         btfsc           PORTB,1     ;Wait until data is available from the keypad
0252   0008           01022         return
0253   1886           01023         btfsc           PORTB,1     ;Wait until data is available from the keypad
0254   0008           01024         return
0255   1886           01025         btfsc           PORTB,1     ;Wait until data is available from the keypad
0256   0008           01026         return
0257   1886           01027         btfsc           PORTB,1     ;Wait until data is available from the keypad
0258   0008           01028         return
0259   2???           01029         goto        RTCDisplay
                      01030         
025A                  01031 StoreBW1
025A   1283           01032         bcf     STATUS,RP0
025B   30C5           01033         movlw   b'11000101'             
025C   009F           01034         movwf   ADCON0                  ;choose RA0
                      01035         
025D   2???           01036         call    BWScanModule1   
025E   2???           01037         call    BWStoreModule1
                      01038         
025F   0008           01039         return                          ; why was there not a return here before?
                      01040         
0260                  01041 StoreBW2
0260   1283           01042         bcf     STATUS,RP0
0261   30D5           01043         movlw   b'11010101'             
0262   009F           01044         movwf   ADCON0                  ;choose RA1
                      01045         
0263   2???           01046         call    BWScanModule2
0264   2???           01047         call    BWStoreModule2
                      01048         
0265   0008           01049         return
                      01050         
0266                  01051 AddBin
0266   2???           01052         Call Clear_Display
0267   0AE0           01053         incf    NumOfBins1,F
                      01054         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
0268   0860               M         movfw       NumOfBins1
0269   2???               M         call        DectoChar
026A   2???               M         call        WR_DATA
026B   3007           01055         movlw   0X7                     ;checks if max of 7 bins has been reached
026C   0260           01056         subwf   NumOfBins1,W            
026D   1903           01057         btfsc   STATUS,Z
026E   2???           01058         goto    EXIT
026F   0008           01059         return
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01060         
0270                  01061 ShowBins
                      01062         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
0270   0860               M         movfw       NumOfBins1
0271   2???               M         call        DectoChar
0272   2???               M         call        WR_DATA
                      01063         
0273   0008           01064         return
                      01065         
0274                  01066 Stickers1                   ;TESTED
0274   2???           01067         call            Clear_Display
0275   3000           01068         movlw           0X0
0276   00DF           01069         movwf           counter
0277   1383           01070         BCF             STATUS, IRP
0278   3041           01071         movlw           0x41
0279   0084           01072         movwf           FSR
027A   0860           01073         movfw           NumOfBins1
027B   00DE           01074         movwf           countdown
                      01075         Display         FrontStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
027C   01B3               M                 clrf    Table_Counter
027D   0103               M                 clrw            
027E   0833               M loop_   movf    Table_Counter,W
027F   2???               M                 call    FrontStickers
0280   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0281   1903               M                 btfsc   STATUS,Z
0282   2???               M                         goto    end_
0283   2???               M                 call    WR_DATA
0284   0AB3               M                 incf    Table_Counter,F
0285   2???               M                 goto    loop_
0286                      M end_
0286                  01076 FrontLoop1      
0286   0A84           01077         INCF            FSR,1
0287   0ADF           01078         incf            counter
                      01079         PrintNumber     counter
                          M         ;movf       number ,W
0288   085F               M         movfw       counter
0289   2???               M         call        DectoChar
028A   2???               M         call        WR_DATA
                      01080         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
028B   01B3               M                 clrf    Table_Counter
028C   0103               M                 clrw            
028D   0833               M loop_   movf    Table_Counter,W
028E   2???               M                 call    Colon
028F   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0290   1903               M                 btfsc   STATUS,Z
0291   2???               M                         goto    end_
0292   2???               M                 call    WR_DATA
0293   0AB3               M                 incf    Table_Counter,F
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0294   2???               M                 goto    loop_
0295                      M end_
0295   0800           01081         movfw           INDF
                      01082         PrintCol        W
0296   0800               M         movfw       W
0297   2???               M         call        StickerColours
0298   2???               M         call        WR_DATA
                      01083         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
0299   01B3               M                 clrf    Table_Counter
029A   0103               M                 clrw            
029B   0833               M loop_   movf    Table_Counter,W
029C   2???               M                 call    Spacee
029D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
029E   1903               M                 btfsc   STATUS,Z
029F   2???               M                         goto    end_
02A0   2???               M                 call    WR_DATA
02A1   0AB3               M                 incf    Table_Counter,F
02A2   2???               M                 goto    loop_
02A3                      M end_
02A3   0BDE           01084         decfsz          countdown,F
02A4   2???           01085         goto            FrontLoop1
                      01086         
02A5   2???           01087         call            Switch_Lines
                      01088         
02A6                  01089 Stickers2                       ;TESTED
                      01090         
02A6   3000           01091         movlw           0X0
02A7   00DF           01092         movwf           counter
02A8   1383           01093         BCF             STATUS, IRP
02A9   3048           01094         movlw           0x48
02AA   0084           01095         movwf           FSR
02AB   0860           01096         movfw           NumOfBins1
02AC   00DE           01097         movwf           countdown
                      01098         Display         BackStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02AD   01B3               M                 clrf    Table_Counter
02AE   0103               M                 clrw            
02AF   0833               M loop_   movf    Table_Counter,W
02B0   2???               M                 call    BackStickers
02B1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02B2   1903               M                 btfsc   STATUS,Z
02B3   2???               M                         goto    end_
02B4   2???               M                 call    WR_DATA
02B5   0AB3               M                 incf    Table_Counter,F
02B6   2???               M                 goto    loop_
02B7                      M end_
02B7                  01099 FrontLoop2
02B7   0A84           01100         INCF            FSR,1
02B8   0ADF           01101         incf            counter
                      01102         PrintNumber     counter
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;movf       number ,W
02B9   085F               M         movfw       counter
02BA   2???               M         call        DectoChar
02BB   2???               M         call        WR_DATA
                      01103         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02BC   01B3               M                 clrf    Table_Counter
02BD   0103               M                 clrw            
02BE   0833               M loop_   movf    Table_Counter,W
02BF   2???               M                 call    Colon
02C0   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02C1   1903               M                 btfsc   STATUS,Z
02C2   2???               M                         goto    end_
02C3   2???               M                 call    WR_DATA
02C4   0AB3               M                 incf    Table_Counter,F
02C5   2???               M                 goto    loop_
02C6                      M end_
02C6   0800           01104         movfw           INDF
                      01105         PrintCol        W
02C7   0800               M         movfw       W
02C8   2???               M         call        StickerColours
02C9   2???               M         call        WR_DATA
                      01106         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02CA   01B3               M                 clrf    Table_Counter
02CB   0103               M                 clrw            
02CC   0833               M loop_   movf    Table_Counter,W
02CD   2???               M                 call    Spacee
02CE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02CF   1903               M                 btfsc   STATUS,Z
02D0   2???               M                         goto    end_
02D1   2???               M                 call    WR_DATA
02D2   0AB3               M                 incf    Table_Counter,F
02D3   2???               M                 goto    loop_
02D4                      M end_
02D4   0BDE           01107         decfsz          countdown,F
02D5   2???           01108         goto            FrontLoop2
                      01109         
02D6   0008           01110         return
                      01111         
02D7                  01112 Locations                       ;TESTED
02D7   2???           01113         call            Clear_Display
02D8   3000           01114         movlw           0X0
02D9   00DF           01115         movwf           counter
02DA   1383           01116         BCF             STATUS, IRP
02DB   303A           01117         movlw           0x3A
02DC   0084           01118         movwf           FSR
02DD   0860           01119         movfw           NumOfBins1
02DE   00DE           01120         movwf           countdown
                      01121         Display         Distances
  0000                    M                 local   loop_
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_
02DF   01B3               M                 clrf    Table_Counter
02E0   0103               M                 clrw            
02E1   0833               M loop_   movf    Table_Counter,W
02E2   2???               M                 call    Distances
02E3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02E4   1903               M                 btfsc   STATUS,Z
02E5   2???               M                         goto    end_
02E6   2???               M                 call    WR_DATA
02E7   0AB3               M                 incf    Table_Counter,F
02E8   2???               M                 goto    loop_
02E9                      M end_
02E9   2???           01122         call            Switch_Lines
02EA                  01123 FrontLoop       
02EA   0A84           01124         INCF            FSR,1
02EB   0ADF           01125         incf            counter
                      01126         PrintNumber     counter
                          M         ;movf       number ,W
02EC   085F               M         movfw       counter
02ED   2???               M         call        DectoChar
02EE   2???               M         call        WR_DATA
                      01127         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02EF   01B3               M                 clrf    Table_Counter
02F0   0103               M                 clrw            
02F1   0833               M loop_   movf    Table_Counter,W
02F2   2???               M                 call    Colon
02F3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02F4   1903               M                 btfsc   STATUS,Z
02F5   2???               M                         goto    end_
02F6   2???               M                 call    WR_DATA
02F7   0AB3               M                 incf    Table_Counter,F
02F8   2???               M                 goto    loop_
02F9                      M end_
02F9   0800           01128         movfw           INDF
                      01129         Display_Dist    W
02FA   01D2               M         clrf    NumL
02FB   01D1               M         clrf    NumH
02FC   0800               M         movfw   W
                          M         ;movfw  TMR0
02FD   00D2               M         movwf   NumL
02FE   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
02FF   0855               M         movfw       Hund
0300   2???               M         call        DectoChar
0301   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
0302   0856               M         movfw       Tens
0303   2???               M         call        DectoChar
0304   2???               M         call        WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         PrintNumber     Ones
                          M         ;movf       number ,W
0305   0857               M         movfw       Ones
0306   2???               M         call        DectoChar
0307   2???               M         call        WR_DATA
                      01130         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
0308   01B3               M                 clrf    Table_Counter
0309   0103               M                 clrw            
030A   0833               M loop_   movf    Table_Counter,W
030B   2???               M                 call    Spacee
030C   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
030D   1903               M                 btfsc   STATUS,Z
030E   2???               M                         goto    end_
030F   2???               M                 call    WR_DATA
0310   0AB3               M                 incf    Table_Counter,F
0311   2???               M                 goto    loop_
0312                      M end_
0312   0BDE           01131         decfsz          countdown,F
0313   2???           01132         goto            FrontLoop
                      01133         
0314   0008           01134         return
                      01135         
0315                  01136 TotalDistance
                      01137         
0315   2???           01138     call    Dist_Decoder
                      01139     Put_Dist_In_Reg     distreg
0316   ???? ???? 2???     M         lcall   Dist_Decoder
0319   086A               M         movfw   cm
031A   00ED               M         movwf   distreg
                      01140     Display_Dist        distreg
031B   01D2               M         clrf    NumL
031C   01D1               M         clrf    NumH
031D   086D               M         movfw   distreg
                          M         ;movfw  TMR0
031E   00D2               M         movwf   NumL
031F   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
0320   0855               M         movfw       Hund
0321   2???               M         call        DectoChar
0322   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
0323   0856               M         movfw       Tens
0324   2???               M         call        DectoChar
0325   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
0326   0857               M         movfw       Ones
0327   2???               M         call        DectoChar
0328   2???               M         call        WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01141    
0329   0008           01142     return
                      01143 
                      01144                 
032A                  01145 LEDControlON
                      01146         
032A   1862           01147         btfsc       LEDcounter0,0
032B   2???           01148         goto        $+4
032C   1406           01149         bsf         LED
032D   1462           01150         bsf         LEDcounter0,0
032E   0008           01151         return
                      01152         
                      01153         
032F   1006           01154         bcf         LED
0330   1062           01155         bcf         LEDcounter0,0
0331   0008           01156         return
                      01157         
                      01158         
0332                  01159 DisplayBlackWhiteIR1
                      01160         
0332   30C5           01161         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
0333   009F           01162         movwf   ADCON0  
                      01163                 
0334   2???           01164         call            BWScanModule1   
                      01165 ;       movwf           Front1
                      01166 ;       PrintCol        Front1
                      01167 
0335   0008           01168         return
                      01169         
                      01170         
0336                  01171 DisplayBlackWhiteIR2
                      01172         
0336   30CD           01173         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra as the reader pin
0337   009F           01174         movwf   ADCON0  
                      01175         
0338   2???           01176         call            BWScanModule1   
                      01177 ;       movwf           Front1
                      01178 ;       PrintCol        Front1
                      01179         
0339   0008           01180         return
                      01181 
                      01182         
033A                  01183 DisplayUSSensor1
                      01184         
033A   2???           01185         call            Read1_US
                      01186 ;       call            ClrLCD
                      01187 ;       movwf           isBinThere                  ;sets the bin bit 1 or 0
                      01188 ;       call            HalfS
                      01189 ;       call            HalfS                       ;see if half second removes feedback
                      01190         
                      01191 
                      01192         
033B   2???           01193         goto            DisplayUSSensor1
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01194         
033C                  01195 DisplayUSSensor2
                      01196         
033C   2???           01197         call            Read2_US
                      01198         ;call           ClrLCD
                      01199         ;movwf          isColumnThere               ;sets the bin bit 1 or 0
                      01200         
033D   2???           01201         goto            DisplayUSSensor2
                      01202         
033E                  01203 StdRotation1
                      01204         
033E   1863           01205         btfsc       LEDcounter1,0
033F   2???           01206         goto        $+4
0340   1287           01207         bcf             Std1
0341   1463           01208         bsf         LEDcounter1,0
0342   0008           01209         return
                      01210         
0343   1687           01211         bsf             Std1
0344   1063           01212         bcf         LEDcounter1,0
0345   0008           01213         return
                      01214         
0346                  01215 StdRotation2
                      01216         
                      01217 ;       bcf     Std2
                      01218 ;       
0346   1864           01219         btfsc       LEDcounter2,0
0347   2???           01220         goto        $+4
                      01221         
0348   1307           01222         bcf             Std2
0349   1464           01223         bsf         LEDcounter2,0
034A   0008           01224         return
                      01225         
034B   1D06           01226         btfss       SwitchWhite
034C   1707           01227         bsf         Std2
                      01228         
034D   1707           01229         bsf             Std2
034E   1064           01230         bcf         LEDcounter2,0
                      01231 ;testingrotationfwd     
                      01232 ;       
                      01233 ;       btfsc   Switch
                      01234 ;       bsf     Std2
                      01235 ;       
                      01236 ;       goto    testingrotationfwd
                      01237         
034F   0008           01238         return
                      01239                 
0350                  01240 StdRotation1Backwards
                      01241         
0350   1866           01242         btfsc       LEDcounter4,0
0351   2???           01243         goto        $+4
0352   1407           01244         bsf             Std1Backwards
0353   1466           01245         bsf         LEDcounter4,0
0354   0008           01246         return
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01247         
0355   1007           01248         bcf             Std1Backwards
0356   1066           01249         bcf         LEDcounter4,0
0357   0008           01250         return
                      01251         
0358                  01252 StdRotation2Backwards
                      01253         
                      01254 ;       bcf         Std2Backwards
                      01255         
0358   1867           01256         btfsc       LEDcounter5,0
0359   2???           01257         goto        $+4
035A   1787           01258         bsf             Std2Backwards
035B   1467           01259         bsf         LEDcounter5,0
035C   0008           01260         return
                      01261         
035D   1D06           01262         btfss       SwitchWhite
035E   1707           01263         bsf         Std2
                      01264         
035F   1387           01265         bcf             Std2Backwards
0360   1067           01266         bcf         LEDcounter5,0
0361   0008           01267         return
                      01268         
                      01269 ;testingrotationback    
                      01270 ;       
                      01271 ;       
                      01272 ;       call    Clear_Display
                      01273 ;       btfsc   Switch
                      01274 ;       bsf     Std2Backwards
                      01275 ;       
                      01276 ;       goto    testingrotationback
                      01277         
0362                  01278 PWMFWD  
                      01279         
                      01280     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01281     
                      01282     ;save   pr2 value so that you can zero it after
                      01283     
0362   1868           01284     btfsc           LEDcounter7,0
0363   2???           01285     goto            $+4
0364   0197           01286     clrf            CCP1CON
0365   1468           01287     bsf             LEDcounter7,0
0366   0008           01288     return
                      01289     
0367   1683 1303      01290     BANKSEL TRISC
0369   1107           01291     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01292     
036A   0817           01293     MOVF     CCP1CON,W          ;set CCP1 as PWM
036B   39F0           01294     ANDLW    0xF0
036C   380C           01295     IORLW    0x0C
036D   0097           01296     MOVWF    CCP1CON
                      01297 
036E   0812           01298     movfw   PR2
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036F   00D0           01299     movwf   pr2temp
                      01300     
                      01301     ;11000011
0370   30C3           01302     MOVLW    b'11000011'        ;set highest PWM value
0371   1683 1303      01303     BANKSEL  PR2                
0373   0092           01304     MOVWF    PR2                
0374   1283 1303      01305     BANKSEL  TMR2               
                      01306     
0376   1492           01307     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01308     
0377   0195           01309     CLRF    CCPR1L              ;set PWM to zero
                      01310     
0378   1712           01311     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0379   1692           01312     BSF     T2CON, TOUTPS2
037A   1612           01313     BSF     T2CON, TOUTPS1
037B   1592           01314     BSF     T2CON, TOUTPS0
                      01315     
                      01316     ; SET PWM duty cycle
                      01317     ;01001110
037C   1697           01318     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
037D   1617           01319     BSF     CCP1CON, 4
                      01320     MOVLF   B'01100000', CCPR1L                 ; previous was 01101
037E   3060               M     MOVLW  B'01100000'  ; move literal into working register
037F   0095               M     MOVWF   CCPR1L      ; move working register into reg
0380   1597           01321     BSF     CCP1CON, 3
0381   1517           01322     BSF     CCP1CON, 2
                      01323     
0382   1512           01324     BSF     T2CON, TMR2ON       ;and start the timer running
                      01325  
0383   1068           01326     bcf             LEDcounter7,0
                      01327     
0384   0008           01328     return
                      01329     
0385                  01330 PWMBACK
                      01331     
                      01332     ;************ SECOND PWM - Positive one ******************************
                      01333     
0385   1869           01334     btfsc           LEDcounter8,0
0386   2???           01335     goto            $+4
0387   019D           01336     clrf            CCP2CON
                      01337     ;bcf                    PORTC,1
0388   1469           01338     bsf             LEDcounter8,0
0389   0008           01339     return
                      01340     
                      01341  
                      01342     
038A   1683 1303      01343     BANKSEL TRISC
038C   1087           01344     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01345     
038D   081D           01346     MOVF     CCP2CON,W          ;set CCP2 as PWM
038E   39F0           01347     ANDLW    0xF0
038F   380C           01348     IORLW    0x0C
0390   009D           01349     MOVWF    CCP2CON
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01350     
                      01351     ;11000011
0391   30C3           01352     MOVLW    b'11000011'        ;set highest PWM value
0392   1683 1303      01353     BANKSEL  PR2                
0394   0092           01354     MOVWF    PR2                
0395   1283 1303      01355     BANKSEL  TMR2               
                      01356     
0397   1492           01357     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01358     
0398   019B           01359     CLRF    CCPR2L              ;set PWM to zero
                      01360     
0399   1712           01361     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
039A   1692           01362     BSF     T2CON, TOUTPS2
039B   1612           01363     BSF     T2CON, TOUTPS1
039C   1592           01364     BSF     T2CON, TOUTPS0
                      01365     
                      01366     ; SET PWM duty cycle
                      01367     ;01001110
039D   169D           01368     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
039E   161D           01369     BSF     CCP2CON, 4
039F   3060           01370     MOVLW   B'01100000'                         ; good speed for moving the arm
03A0   009B           01371     MOVWF   CCPR2L      
03A1   159D           01372     BSF     CCP2CON, 3
03A2   151D           01373     BSF     CCP2CON, 2
                      01374     
03A3   1512           01375     BSF     T2CON, TMR2ON       ;and start the timer running
03A4   1283           01376     BCF     STATUS,RP0
                      01377     
                      01378     ;bsf                    PORTC,1
                      01379     
03A5   1069           01380     bcf             LEDcounter8,0
                      01381     
03A6   0008           01382     return
                      01383     
03A7                  01384 PWMSTOP
                      01385     
03A7   0197           01386     clrf   CCP1CON
03A8   019D           01387     clrf   CCP2CON
03A9   0850           01388     movfw   pr2temp
03AA   0092           01389     movwf   PR2
                      01390     
03AB   0008           01391     return
                      01392         
                      01393         
                      01394 ;***************************************
                      01395 ; LCD control
                      01396 ;***************************************
03AC                  01397 Switch_Lines
03AC   30C0           01398                 movlw   B'11000000'
03AD   2???           01399                 call    WR_INS
03AE   0008           01400                 return
                      01401 
03AF                  01402 Clear_Display
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03AF   3001           01403                 movlw   B'00000001'
03B0   2???           01404                 call    WR_INS
03B1   0008           01405                 return
                      01406 
                      01407 ;***************************************
                      01408 ; Delay 0.5s
                      01409 ;***************************************
03B2                  01410 HalfS   
  0000                01411         local   HalfS_0
03B2   3088           01412       movlw 0x88
03B3   00B0           01413       movwf COUNTH
03B4   30BD           01414       movlw 0xBD
03B5   00B1           01415       movwf COUNTM
03B6   3003           01416       movlw 0x03
03B7   00B2           01417       movwf COUNTL
                      01418 
03B8                  01419 HalfS_0
03B8   0BB0           01420       decfsz COUNTH, f
03B9   2???           01421       goto   $+2
03BA   0BB1           01422       decfsz COUNTM, f
03BB   2???           01423       goto   $+2
03BC   0BB2           01424       decfsz COUNTL, f
03BD   2???           01425       goto   HalfS_0
                      01426 
03BE   2???           01427       goto $+1
03BF   0000           01428       nop
03C0   0000           01429       nop
03C1   0008           01430                 return
                      01431                 
                      01432 ;***************************************
                      01433 ;***************************************
                      01434 ; Delay = 0.6 seconds
                      01435 ; Clock frequency = 4 MHz
03C2                  01436 DELAY1
                      01437                         ;599996 cycles
03C2   30D1           01438         movlw   0xD1
03C3   00B5           01439         movwf   lcd_d1
03C4   304F           01440         movlw   0x4F
03C5   00B6           01441         movwf   lcd_d2
03C6   3002           01442         movlw   0x02
03C7   00EE           01443         movwf   lcd_d1_2
03C8                  01444 Delay_0
03C8   0BB5           01445         decfsz  lcd_d1, f
03C9   2???           01446         goto    $+2
03CA   0BB6           01447         decfsz  lcd_d2, f
03CB   2???           01448         goto    $+2
03CC   0BEE           01449         decfsz  lcd_d1_2, f
03CD   2???           01450         goto    Delay_0
                      01451 
                      01452                         ;4 cycles
03CE   0008           01453         return
                      01454         
                      01455 ;0.25s delay    
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01456         
03CF                  01457 DELAY2
                      01458                         ;249998 cycles
03CF   304F           01459         movlw   0x4F
03D0   00B5           01460         movwf   lcd_d1
03D1   30C4           01461         movlw   0xC4
03D2   00B6           01462         movwf   lcd_d2
03D3                  01463 Delay_02
03D3   0BB5           01464         decfsz  lcd_d1, f
03D4   2???           01465         goto    $+2
03D5   0BB6           01466         decfsz  lcd_d2, f
03D6   2???           01467         goto    Delay_0
                      01468 
                      01469                         ;2 cycles
03D7   2???           01470         goto    $+1
                      01471         
Warning[203]: Found opcode in column 1. (return)
03D8   0008           01472 return
                      01473         
                      01474 ;***************************************
                      01475 ;Init_TMR0
                      01476 ;   Input:  RA4
                      01477 ;   Output: TMR0 register
                      01478 ;   desc:   Counts the clock pulses for the
                      01479 ;           rotary encoder
                      01480 ;****************************************
03D9                  01481 Init_TMR0                           ; INITIALIZE TIMER 0   
03D9   1683 1303      01482     BANKSEL OPTION_REG
                      01483     MOVLF   B'00101000', OPTION_REG
03DB   3028               M     MOVLW  B'00101000'  ; move literal into working register
03DC   0081               M     MOVWF   OPTION_REG  ; move working register into reg
                      01484     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01485     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
                      01486     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01487     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01488     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01489     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01490     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01491     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
03DD   1283 1303      01492     BANKSEL TMR0
03DF   0181           01493     CLRF   TMR0                     ; Clear timer 0
03E0   0008           01494     return  
                      01495     
                      01496 ;************************************
                      01497 ; RTC Sublabels
                      01498 ;************************************
                      01499     
03E1                  01500 show_RTC
                      01501                 ;clear LCD screen
03E1   3001           01502                 movlw   b'00000001'
03E2   2???           01503                 call    WR_INS
                      01504 
                      01505                 ;Get year
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E3   3032           01506                 movlw   "2"                             ;First line shows 20**/**/**
03E4   2???           01507                 call    WR_DATA
03E5   3030           01508                 movlw   "0"
03E6   2???           01509                 call    WR_DATA
                      01510                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03E7   3006               M         movlw   0x06
03E8   1283 1303          M         banksel 0x73
03EA   00F3               M         movwf   0x73
03EB   2???               M         call    read_rtc
03EC   1283 1303          M         banksel 0x75
03EE   0875               M         movf    0x75,w
03EF   2???               M         call    rtc_convert   
03F0   0877           01511                 movfw   0x77
03F1   2???           01512                 call    WR_DATA
03F2   0878           01513                 movfw   0x78
03F3   2???           01514                 call    WR_DATA
                      01515 
03F4   302F           01516                 movlw   "/"
03F5   2???           01517                 call    WR_DATA
                      01518 
                      01519                 ;Get month
                      01520                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03F6   3005               M         movlw   0x05
03F7   1283 1303          M         banksel 0x73
03F9   00F3               M         movwf   0x73
03FA   2???               M         call    read_rtc
03FB   1283 1303          M         banksel 0x75
03FD   0875               M         movf    0x75,w
03FE   2???               M         call    rtc_convert   
03FF   0877           01521                 movfw   0x77
0400   2???           01522                 call    WR_DATA
0401   0878           01523                 movfw   0x78
0402   2???           01524                 call    WR_DATA
                      01525 
0403   302F           01526                 movlw   "/"
0404   2???           01527                 call    WR_DATA
                      01528 
                      01529                 ;Get day
                      01530                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0405   3004               M         movlw   0x04
0406   1283 1303          M         banksel 0x73
0408   00F3               M         movwf   0x73
0409   2???               M         call    read_rtc
040A   1283 1303          M         banksel 0x75
040C   0875               M         movf    0x75,w
040D   2???               M         call    rtc_convert   
040E   0877           01531                 movfw   0x77
040F   2???           01532                 call    WR_DATA
0410   0878           01533                 movfw   0x78
0411   2???           01534                 call    WR_DATA
                      01535 
0412   30C0           01536                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
0413   2???           01537                 call    WR_INS
                      01538 
                      01539                 ;Get hour
                      01540                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0414   3002               M         movlw   0x02
0415   1283 1303          M         banksel 0x73
0417   00F3               M         movwf   0x73
0418   2???               M         call    read_rtc
0419   1283 1303          M         banksel 0x75
041B   0875               M         movf    0x75,w
041C   2???               M         call    rtc_convert   
041D   0877           01541                 movfw   0x77
041E   2???           01542                 call    WR_DATA
041F   0878           01543                 movfw   0x78
0420   2???           01544                 call    WR_DATA
0421   303A           01545                 movlw                   ":"
0422   2???           01546                 call    WR_DATA
                      01547 
                      01548                 ;Get minute             
                      01549                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0423   3001               M         movlw   0x01
0424   1283 1303          M         banksel 0x73
0426   00F3               M         movwf   0x73
0427   2???               M         call    read_rtc
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0428   1283 1303          M         banksel 0x75
042A   0875               M         movf    0x75,w
042B   2???               M         call    rtc_convert   
042C   0877           01550                 movfw   0x77
042D   2???           01551                 call    WR_DATA
042E   0878           01552                 movfw   0x78
042F   2???           01553                 call    WR_DATA         
0430   303A           01554                 movlw                   ":"
0431   2???           01555                 call    WR_DATA
                      01556                 
                      01557                 ;Get seconds
                      01558                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0432   3000               M         movlw   0x00
0433   1283 1303          M         banksel 0x73
0435   00F3               M         movwf   0x73
0436   2???               M         call    read_rtc
0437   1283 1303          M         banksel 0x75
0439   0875               M         movf    0x75,w
043A   2???               M         call    rtc_convert   
043B   0877           01559                 movfw   0x77
043C   2???           01560                 call    WR_DATA
043D   0878           01561                 movfw   0x78
043E   2???           01562                 call    WR_DATA
                      01563                 
043F   2???           01564                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
0440   0008           01565                 return
                      01566 
                      01567 ;***************************************
                      01568 ; Setup RTC with time defined by user
                      01569 ;***************************************
0441                  01570 set_rtc_time
                      01571 
                      01572                 ;rtc_resetAll   ;reset rtc
                      01573                 ;works up to here
                      01574 
                      01575                 ;rtc_set        0x00,   B'10000000'
                      01576                 ;works up to here
                      01577                 
                      01578                 ;set time 
                      01579 ;               rtc_set 0x06,   B'00010110'             ; Year
                      01580 ;               ;works up to here
                      01581 ;               rtc_set 0x05,   B'00000011'             ; Month
                      01582 ;               rtc_set 0x04,   B'00100000'             ; Date
                      01583                 ;works up to here
                      01584                 ;rtc_set        0x03,   B'00100010'             ; Day
                      01585                 ;stops working on this one^
                      01586                 ;seems like day is the one that crashes it
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01587                 rtc_set 0x02,   B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0441   1283 1303          M         banksel 0x73
0443   3002               M         movlw   0x02
0444   00F3               M         movwf   0x73
0445   1283 1303          M         banksel 0x74
0447   3000               M         movlw   B'00000000'
0448   00F4               M         movwf   0x74    
0449   2???               M         call    write_rtc
                      01588                 ;works on this one
                      01589                 rtc_set 0x01,   B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
044A   1283 1303          M         banksel 0x73
044C   3001               M         movlw   0x01
044D   00F3               M         movwf   0x73
044E   1283 1303          M         banksel 0x74
0450   3000               M         movlw   B'00000000'
0451   00F4               M         movwf   0x74    
0452   2???               M         call    write_rtc
                      01590                 ;works on this one
                      01591                 rtc_set 0x00,   B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0453   1283 1303          M         banksel 0x73
0455   3000               M         movlw   0x00
0456   00F3               M         movwf   0x73
0457   1283 1303          M         banksel 0x74
0459   3000               M         movlw   B'00000000'
045A   00F4               M         movwf   0x74    
045B   2???               M         call    write_rtc
                      01592                 ;works on this one
045C   0008           01593                 return
                      01594 
                      01595 ;***************************************
                      01596 ; Delay 1s
                      01597 ;***************************************
045D                  01598 OneS
  0000                01599                 local   OneS_0
045D   3010           01600       movlw 0x10
045E   00B0           01601       movwf COUNTH
045F   307A           01602       movlw 0x7A
0460   00B1           01603       movwf COUNTM
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0461   3006           01604       movlw 0x06
0462   00B2           01605       movwf COUNTL
                      01606 
0463                  01607 OneS_0
0463   0BB0           01608       decfsz COUNTH, f
0464   2???           01609       goto   $+2
0465   0BB1           01610       decfsz COUNTM, f
0466   2???           01611       goto   $+2
0467   0BB2           01612       decfsz COUNTL, f
0468   2???           01613       goto   OneS_0
                      01614 
0469   2???           01615       goto $+1
046A   0000           01616       nop
046B   0000           01617       nop
046C   0008           01618                 return
                      01619 
046D                  01620 lcdLongDelay
046D   3014           01621     movlw d'20'
046E   00B6           01622     movwf lcd_d2
046F                  01623 LLD_LOOP
                      01624     LCD_DELAY
046F   30FF               M         movlw   0xFF
0470   00B5               M         movwf   lcd_d1
0471   0BB5               M         decfsz  lcd_d1,f
0472   2???               M         goto    $-1
0473   0BB6           01625     decfsz lcd_d2,f
0474   2???           01626     goto LLD_LOOP
0475   0008           01627     return
                      01628     
                      01629 ;***************************************
                      01630 ; Look up table
                      01631 ;***************************************
                      01632     
0476                  01633 Welcome_Msg
                      01634         
                      01635         ;Change Page
0476   00BA           01636         movwf   Temp
0477   30??           01637         movlw   HIGH Welcome_MsgEntries
0478   008A           01638         movwf   PCLATH
0479   083A           01639         movf    Temp,w
047A   3E??           01640         addlw   LOW Welcome_MsgEntries
047B   1803           01641         btfsc   STATUS,C
047C   0A8A           01642             incf    PCLATH,f
047D   0082           01643         movwf   PCL     
047E   0782           01644         addwf    PCL,F
047F                  01645 Welcome_MsgEntries
047F   3431 343A 3453 01646         dt        "1:Simulation|#/D:PWM|*/0:Std1&Std2|3:B/W", 0
       3469 346D 3475 
       346C 3461 3474 
       3469 346F 346E 
       347C 3423 342F 
       3444 343A 3450 
       3457 344D 347C 
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       342A 342F 3430 
       343A 3453 3474 
       3464 3431 3426 
       3453 3474 3464 
       3432 347C 3433 
       343A 3442 342F 
       3457 3400 
                      01647         
04A8                  01648 Welcome_Msg2
                      01649         
                      01650         ;Change Page
04A8   00BA           01651         movwf   Temp
04A9   30??           01652         movlw   HIGH Welcome_Msg2Entries
04AA   008A           01653         movwf   PCLATH
04AB   083A           01654         movf    Temp,w
04AC   3E??           01655         addlw   LOW Welcome_Msg2Entries
04AD   1803           01656         btfsc   STATUS,C
04AE   0A8A           01657             incf    PCLATH,f
04AF   0082           01658         movwf   PCL     
04B0   0782           01659         addwf    PCL,F
04B1                  01660 Welcome_Msg2Entries
04B1   3435 3444 3469 01661         dt        "5Distance 6Locations", 0
       3473 3474 3461 
       346E 3463 3465 
       3420 3436 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01662         
04C6                  01663 FinalMessage
                      01664         
                      01665         ;Change Page
04C6   00BA           01666         movwf    Temp
04C7   30??           01667         movlw   HIGH FinalMessageEntries
04C8   008A           01668         movwf   PCLATH
04C9   083A           01669         movf    Temp,w
04CA   3E??           01670         addlw   LOW FinalMessageEntries
04CB   1803           01671         btfsc   STATUS,C
04CC   0A8A           01672             incf    PCLATH,f
04CD   0082           01673         movwf   PCL
04CE   0782           01674         addwf    PCL,F
04CF                  01675 FinalMessageEntries
04CF   3431 3454 3469 01676         dt        "1Time 3Stickers 4#Bins",0
       346D 3465 3420 
       3433 3453 3474 
       3469 3463 346B 
       3465 3472 3473 
       3420 3434 3423 
       3442 3469 346E 
       3473 3400 
                      01677         
04E6                  01678 DectoChar
                      01679         
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01680         ;Change Page
04E6   00BA           01681         movwf   Temp
04E7   30??           01682         movlw   HIGH DectoCharEntries
04E8   008A           01683         movwf   PCLATH
04E9   083A           01684         movf    Temp,w
04EA   3E??           01685         addlw   LOW DectoCharEntries
04EB   1803           01686         btfsc   STATUS,C
04EC   0A8A           01687             incf    PCLATH,f
04ED   0082           01688         movwf   PCL     
04EE   0782           01689         addwf    PCL,F
04EF                  01690 DectoCharEntries
04EF   3430 3431 3432 01691         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01692         
04FA                  01693 StickerColours
                      01694         
                      01695         ;Change Page
04FA   00BA           01696         movwf   Temp
04FB   30??           01697         movlw   HIGH StickerColoursEntries
04FC   008A           01698         movwf   PCLATH
04FD   083A           01699         movf    Temp,w
04FE   3E??           01700         addlw   LOW StickerColoursEntries
04FF   1803           01701         btfsc   STATUS,C
0500   0A8A           01702             incf    PCLATH,f
0501   0082           01703         movwf   PCL     
0502   0782           01704         addwf    PCL,F
0503                  01705 StickerColoursEntries
0503   3442 3457 3400 01706         dt        "BW",  0
                      01707         
0506                  01708 FrontStickers
                      01709 
                      01710         ;Change Page
0506   00BA           01711         movwf   Temp
0507   30??           01712         movlw   HIGH FrontStickersEntries
0508   008A           01713         movwf   PCLATH
0509   083A           01714         movf    Temp,w
050A   3E??           01715         addlw   LOW FrontStickersEntries
050B   1803           01716         btfsc   STATUS,C
050C   0A8A           01717             incf    PCLATH,f
050D   0082           01718         movwf   PCL     
050E   0782           01719         addwf    PCL,F
050F                  01720 FrontStickersEntries
050F   3446 3472 346F 01721         dt        "Front",  0
       346E 3474 3400 
                      01722         
0515                  01723 BackStickers
                      01724 
                      01725         ;Change Page
0515   00BA           01726         movwf   Temp
0516   30??           01727         movlw   HIGH BackStickersEntries
0517   008A           01728         movwf   PCLATH
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0518   083A           01729         movf    Temp,w
0519   3E??           01730         addlw   LOW BackStickersEntries
051A   1803           01731         btfsc   STATUS,C
051B   0A8A           01732             incf    PCLATH,f
051C   0082           01733         movwf   PCL     
051D   0782           01734         addwf    PCL,F
051E                  01735 BackStickersEntries
051E   3442 3461 3463 01736         dt        "Back",  0
       346B 3400 
                      01737         
0523                  01738 Spacee
                      01739 
                      01740         ;Change Page
0523   00BA           01741         movwf   Temp
0524   30??           01742         movlw   HIGH SpaceeEntries
0525   008A           01743         movwf   PCLATH
0526   083A           01744         movf    Temp,w
0527   3E??           01745         addlw   LOW SpaceeEntries
0528   1803           01746         btfsc   STATUS,C
0529   0A8A           01747             incf    PCLATH,f
052A   0082           01748         movwf   PCL     
052B   0782           01749         addwf    PCL,F
052C                  01750 SpaceeEntries
052C   3420 3400      01751         dt        " ",  0
                      01752         
052E                  01753 Colon
                      01754 
                      01755         ;Change Page
052E   00BA           01756         movwf   Temp
052F   30??           01757         movlw   HIGH ColonEntries
0530   008A           01758         movwf   PCLATH
0531   083A           01759         movf    Temp,w
0532   3E??           01760         addlw   LOW ColonEntries
0533   1803           01761         btfsc   STATUS,C
0534   0A8A           01762             incf    PCLATH,f
0535   0082           01763         movwf   PCL     
0536   0782           01764         addwf    PCL,F
0537                  01765 ColonEntries
0537   343A 3400      01766         dt        ":",  0
                      01767         
0539                  01768 Distances
                      01769 
                      01770         ;Change Page
0539   00BA           01771         movwf   Temp
053A   30??           01772         movlw   HIGH DistancesEntries
053B   008A           01773         movwf   PCLATH
053C   083A           01774         movf    Temp,w
053D   3E??           01775         addlw   LOW DistancesEntries
053E   1803           01776         btfsc   STATUS,C
053F   0A8A           01777             incf    PCLATH,f
0540   0082           01778         movwf   PCL     
0541   0782           01779         addwf    PCL,F
0542                  01780 DistancesEntries
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0542   3444 3469 3473 01781         dt        "Dist (cm)",  0
       3474 3420 3428 
       3463 346D 3429 
       3400 
                      01782             
3F72                  01783         END
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AVOIDCOLUMN                       000000C9
AddBin                            00000266
BANK0                             
BANK1                             
BANK2                             
BANK3                             
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BINREADINGSTART                   0000012D
BRGH                              00000002
BWScanModule1                     000001A1
BWScanModule2                     000001C7
BWStoreModule1                    000001BA
BWStoreModule2                    000001E0
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BackStickers                      00000515
BackStickersEntries               0000051E
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHECKSWITCH                       00000146
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COLREADINGSTART                   00000121
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Clear_Display                     000003AF
ClrLCD                            00000000
ColMotor                          PORTC,7
Colon                             0000052E
ColonEntries                      00000537
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DELAY1                            000003C2
DELAY2                            000003CF
DELAYEDREAD                       0000013A
D_A                               00000005
D_NOT_A                           00000005
Decode_check_done                 00000236
Decode_loop                       0000022B
DectoChar                         000004E6
DectoCharEntries                  000004EF
Delay_0                           000003C8
Delay_02                          000003D3
Display                           
DisplayBlackWhiteIR1              00000332
DisplayBlackWhiteIR2              00000336
DisplayUSSensor1                  0000033A
DisplayUSSensor2                  0000033C
Display_Dist                      
Dist_Decoder                      00000223
Distances                         00000539
DistancesEntries                  00000542
E                                 PORTD,3
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENDTHIS                           00000141
EXIT                              00000153
EXITDISPLAY                       00000174
F                                 00000001
FERR                              00000002
FSR                               00000004
FinalMessage                      000004C6
FinalMessageEntries               000004CF
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         000002EA
FrontLoop1                        00000286
FrontLoop2                        000002B7
FrontStickers                     00000506
FrontStickersEntries              0000050F
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000003B2
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         000003D9
Key                               
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

KeypadandLCD                      00000075
LCD_DELAY                         
LED                               PORTB,0
LEDControlON                      0000032A
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter7                       00000068
LEDcounter8                       00000069
LLD_LOOP                          0000046F
Lb1                               00000022
Lb2                               00000026
Lb3                               0000002A
Lb4                               0000002E
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
Locations                         000002D7
MAX_HIGHS                         0x3
MOV                               
MOVEFWDFORABIT                    0000016B
MOVLF                             
MoveBackwards                     000001A0
NOTPWMBACK                        PORTC,1
NOTPWMFWD                         PORTC,2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              00000051
NumL                              00000052
NumOfBins1                        00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              0000045D
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

Ones                              00000057
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           00000385
PWMFWD                            00000362
PWMSTOP                           000003A7
PrintCol                          
PrintNumber                       
Put_Dist_In_Reg                   
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READBIN                           000000F5
READ_WRITE                        00000002
RETURNFROMCOLUMN                  000000E8
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        00000250
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          000001ED
Read2_US                          00000208
ReadUltrasonic                    
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         0000024C
ShowBins                          00000270
Spacee                            00000523
SpaceeEntries                     0000052C
Std1                              PORTC,5
Std1Backwards                     PORTC,0
Std2                              PORTC,6
Std2Backwards                     PORTC,7
StdRotation1                      0000033E
StdRotation1Backwards             00000350
StdRotation2                      00000346
StdRotation2Backwards             00000358
StickerColours                    000004FA
StickerColoursEntries             00000503
Stickers1                         00000274
Stickers2                         000002A6
StoreBW1                          0000025A
StoreBW2                          00000260
StoreThisDistance                 0000023F
SwitchArm                         PORTB,3
SwitchWhite                       PORTB,2
Switch_Lines                      000003AC
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTAL                             0000011D
TOTAL1                            0000011F
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
TotalDistance                     00000315
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
Welcome_Msg                       00000476
Welcome_Msg2                      000004A8
Welcome_Msg2Entries               000004B1
Welcome_MsgEntries                0000047F
Z                                 00000002
_.org_0_0076                      00000076
_.org_0_00C6                      000000C6
_.org_0_00CD                      000000CD
_.org_0_00D7                      000000D7
_.org_0_00E4                      000000E4
_.org_0_00EB                      000000EB
_.org_0_00F2                      000000F2
_.org_0_0125                      00000125
_.org_0_0131                      00000131
_.org_0_014A                      0000014A
_.org_0_0150                      00000150
_.org_0_0175                      00000175
_.org_0_019D                      0000019D
_.org_0_01A3                      000001A3
_.org_0_01C9                      000001C9
_.org_0_01F5                      000001F5
_.org_0_01F8                      000001F8
_.org_0_0210                      00000210
_.org_0_0213                      00000213
_.org_0_032B                      0000032B
_.org_0_033F                      0000033F
_.org_0_0347                      00000347
_.org_0_0351                      00000351
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_0359                      00000359
_.org_0_0363                      00000363
_.org_0_0386                      00000386
_.org_0_03B9                      000003B9
_.org_0_03BB                      000003BB
_.org_0_03BE                      000003BE
_.org_0_03C9                      000003C9
_.org_0_03CB                      000003CB
_.org_0_03D4                      000003D4
_.org_0_03D7                      000003D7
_.org_0_0464                      00000464
_.org_0_0466                      00000466
_.org_0_0469                      00000469
_.org_0_0472                      00000472
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
MPASM 5.65                          MAIN.ASM   4-3-2016  19:49:13         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

backstickerValues                 0000005C
bin16_BCD                         00000001
binCounter                        0000005D
cm                                0000006A
com                               00000037
count_highs                       0000006F
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay3                            00000061
distanceMoved                     00000058
distreg                           0000006D
frontstickerValues                0000005B
goback                            000000C8
i2c_common_setup                  00000000
init                              00000034
isBinThere                        0000005A
isColumnThere                     00000059
lcdLongDelay                      0000046D
lcd_d1                            00000035
lcd_d1_2                          0000006E
lcd_d2                            00000036
lcd_tmp                           00000034
m                                 0000006C
mm                                0000006B
mm_overflow                       0000023B
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      00000441
show_RTC                          000003E1
temp                              00000039
write_rtc                         00000000

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :     0 reported,    30 suppressed

