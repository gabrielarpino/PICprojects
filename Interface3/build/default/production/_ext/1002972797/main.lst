MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1       ;3B PC
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5       
  00000040            00038                 Location6       ;40 PC
  00000041            00039                 Location7
  00000042            00040                 Front1          ;42 PC7
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ; 49 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7           ;50
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins1                      
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0, LEDcounter1,LEDcounter2,LEDcounter3,LEDcounter4,LEDcounter5,LEDcounter7,LED
                            counter8
  0000006A            00073                 cm
  0000006B            00074                 mm
  0000006C            00075                 m
  0000006D            00076                 distreg
  0000006E            00077                 lcd_d1_2
                      00078         endc    
                      00079 
                      00080         ;Declare constants for pin assignments (LCD on PORTD)
                      00081                 #define RS      PORTD,2
                      00082                 #define E       PORTD,3
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083                 #define IR1     PORTA,0
                      00084                 #define IR2     PORTA,1
                      00085                 #define ColMotor PORTC,7
                      00086                 #define UST1    PORTD,0
                      00087                 #define US1E1   PORTA,2
                      00088                 #define UST2    PORTD,1
                      00089                 #define US1E2   PORTA,3
                      00090                 #define LED     PORTB,0
                      00091                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00092                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00093                 #define Std1Backwards   PORTC,0
                      00094                 #define Std2Backwards   PORTC,7
                      00095                 #define SwitchYS                PORTB,2     ; or gated switch to stop motor motion
                      00096                 #define SwitchYD                PORTB,3
                      00097                 #define NOTPWMFWD               PORTC,2
                      00098                 #define NOTPWMBACK              PORTC,1
                      00099                 ;SHAFTIR is PORTA,4
                      00100                 ;PWMFWD is RC2
                      00101                 ;PWMBACK is RC1
                      00102                 
                      00103                 
                      00104 ;distanceMoved  equ     b'0'
                      00105 
                      00106          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00107          goto      init       ;Just jump to the main code section.
                      00108          
                      00109          ;ORG      0x100        ;this command is sketchy
                      00110 
                      00111 ;*******************************************************************************
                      00112 ; MACROS
                      00113 ;*******************************************************************************
                      00114          
                      00115 Key      macro  value, subroutine
                      00116          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00117          andlw          0x0F
                      00118          xorlw          value
                      00119          btfsc          STATUS, Z
                      00120          call           subroutine
                      00121         endm
                      00122 
                      00123 Rotation macro  value
                      00124          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00125          andlw          0x0F
                      00126          xorlw          value
                      00127          btfsc          STATUS, Z
                      00128          call           ShiftLeft
                      00129         endm
                      00130 
                      00131 ;***************************************
                      00132 ; Delay: ~160us macro
                      00133 ;***************************************
                      00134 LCD_DELAY macro
                      00135         movlw   0xFF
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136         movwf   lcd_d1
                      00137         decfsz  lcd_d1,f
                      00138         goto    $-1
                      00139         endm
                      00140         
                      00141 ;***************************************
                      00142 ; Display macro
                      00143 ;***************************************
                      00144 Display macro   Message
                      00145                 local   loop_
                      00146                 local   end_
                      00147                 clrf    Table_Counter
                      00148                 clrw            
                      00149 loop_   movf    Table_Counter,W
                      00150                 call    Message
                      00151                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00152                 btfsc   STATUS,Z
                      00153                         goto    end_
                      00154                 call    WR_DATA
                      00155                 incf    Table_Counter,F
                      00156                 goto    loop_
                      00157 end_
                      00158                 endm
                      00159                 
                      00160 ;***************************************
                      00161 ; BANK0 macro   [TESTED]
                      00162 ;***************************************
                      00163 BANK0 Macro
                      00164     bcf STATUS,RP0 
                      00165     bcf STATUS,RP1
                      00166     endm
                      00167 ;***************************************
                      00168 ; BANK1 macro   [TESTED]
                      00169 ;***************************************
                      00170 BANK1 Macro
                      00171     bsf STATUS,RP0 
                      00172     bcf STATUS,RP1
                      00173     endm
                      00174         
                      00175 ;***************************************
                      00176 ; BANK2 macro   [TESTED]
                      00177 ;***************************************
                      00178 BANK2 Macro
                      00179     bsf STATUS,RP0 
                      00180     bsf STATUS,RP1
                      00181     endm
                      00182     
                      00183 ;***************************************
                      00184 ; BANK3 macro   [TESTED]
                      00185 ;***************************************
                      00186 BANK3 Macro
                      00187     bcf STATUS,RP0 
                      00188     bsf STATUS,RP1
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00189     endm
                      00190     
                      00191 ;***************************************
                      00192 ; MOVLF macro   [TESTED]
                      00193 ;***************************************
                      00194 MOVLF   Macro   literal, reg
                      00195     MOVLW  literal      ; move literal into working register
                      00196     MOVWF   reg         ; move working register into reg
                      00197     endm
                      00198 
                      00199 ;***************************************
                      00200 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00201 ;***************************************
                      00202 MOV     Macro   reg1, reg2
                      00203     MOVF  reg1,W        ; move reg1 into working register
                      00204     MOVWF   reg2        ; reg2 <- reg1
                      00205     endm
                      00206     
                      00207 ;***************************************
                      00208 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00209 ;***************************************
                      00210 ADDL    Macro   Destination, reg, literal
                      00211     MOVLW  literal      ; move literal into working register
                      00212     ADDWF   reg,W       ; W <- literal + reg
                      00213     MOVWF   Destination ; Destination <- literal + reg
                      00214     endm
                      00215     
                      00216 ;***************************************
                      00217 ; ADD macro, Adds two registers together    [TESTED]
                      00218 ;***************************************
                      00219 ADD     Macro   Destination, reg1, reg2
                      00220     MOVF    reg1,W      ; move literal into working register
                      00221     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00222     MOVWF   Destination ; Destination <- reg1 + reg2
                      00223     endm
                      00224     
                      00225 ;***************************************
                      00226 ; Store_Dist macro --> Stores current
                      00227 ;   distance and stores it in Bin_Dist_reg
                      00228 ;***************************************                
                      00229 Put_Dist_In_Reg macro    Bin_Dist_reg
                      00230         lcall   Dist_Decoder
                      00231         movfw   cm
                      00232         movwf   Bin_Dist_reg
                      00233     endm
                      00234     
                      00235 ;***************************************
                      00236 ; Display_Dist macro --> Takes value in Bin_Dist_reg
                      00237 ;   and converts it into a BCD and prints it
                      00238 ;   To the LCD
                      00239 ;***************************************                
                      00240 Display_Dist macro    Bin_Dist_reg
                      00241         clrf    NumL
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00242         clrf    NumH
                      00243         movfw   Bin_Dist_reg
                      00244         ;movfw  TMR0
                      00245         movwf   NumL
                      00246         call    bin16_BCD
                      00247         PrintNumber     Hund
                      00248         PrintNumber     Tens
                      00249         PrintNumber     Ones
                      00250     endm
                      00251                 
                      00252 ;***************************************
                      00253 ; Number to Printable
                      00254 ;***************************************
                      00255 PrintNumber macro       number
                      00256         ;movf       number ,W
                      00257         movfw       number
                      00258         call        DectoChar
                      00259         call        WR_DATA
                      00260         endm
                      00261         
                      00262 ;***************************************
                      00263 ; Number to Colour
                      00264 ;***************************************
                      00265 PrintCol macro      number
                      00266         movfw       number
                      00267         call        StickerColours
                      00268         call        WR_DATA
                      00269         endm    
                      00270         
                      00271 ;*******************************************************
                      00272 ;******             BCD                 ****************
                      00273 ;*******************************************************
                      00274         
                      00275 ;---------------- Binary (16-bit) to BCD -----------------------
                      00276 ;
                      00277 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00278 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00279                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00280 ;
                      00281 ; Uses variables
                      00282 ; NumH, NumL
                      00283 ; TenK, Thou, Hund, Tens, Ones
                      00284                 
                      00285 ;BCD    macro   NumH, NumL
                      00286 
0001                  00287 bin16_BCD
0001   0E51           00288         swapf   NumH, W
0002   390F           00289         andlw   0x0F
0003   3EF0           00290         addlw   0xF0
0004   00D4           00291         movwf   Thou 
0005   07D4           00292         addwf   Thou, F 
0006   3EE2           00293         addlw   0xE2 
0007   00D5           00294         movwf   Hund 
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008   3E32           00295         addlw   0x32 
0009   00D7           00296         movwf   Ones 
                      00297 
000A   0851           00298         movf    NumH, W 
000B   390F           00299         andlw   0x0F 
000C   07D5           00300         addwf   Hund, F 
000D   07D5           00301         addwf   Hund, F 
000E   07D7           00302         addwf   Ones, F 
000F   3EE9           00303         addlw   0xE9 
0010   00D6           00304         movwf   Tens 
0011   07D6           00305         addwf   Tens, F 
0012   07D6           00306         addwf   Tens, F 
                      00307 
0013   0E52           00308         swapf   NumL, W 
0014   390F           00309         andlw   0x0F 
0015   07D6           00310         addwf   Tens, F 
0016   07D7           00311         addwf   Ones, F 
                      00312 
0017   0DD6           00313         rlf    Tens, F 
0018   0DD7           00314         rlf    Ones, F 
0019   09D7           00315         comf    Ones, F 
001A   0DD7           00316         rlf    Ones, F 
                      00317 
001B   0852           00318         movf    NumL, W 
001C   390F           00319         andlw   0x0F 
001D   07D7           00320         addwf   Ones, F 
001E   0DD4           00321         rlf    Thou,F 
                      00322 
001F   3007           00323         movlw   0x07 
0020   00D3           00324         movwf   TenK 
                      00325 
0021   300A           00326         movlw   0x0A
0022                  00327 Lb1
0022   03D6           00328         decf    Tens, F 
0023   07D7           00329         addwf   Ones, F 
0024   1C03           00330         btfss   STATUS, C 
0025   2???           00331         goto            Lb1 
0026                  00332 Lb2
0026   03D5           00333         decf    Hund, F 
0027   07D6           00334         addwf   Tens, F 
0028   1C03           00335         btfss   STATUS,C 
0029   2???           00336         goto            Lb2 
002A                  00337 Lb3
002A   03D4           00338         decf    Thou, F 
002B   07D5           00339         addwf   Hund, F 
002C   1C03           00340         btfss   STATUS,C
002D   2???           00341         goto            Lb3 
002E                  00342 Lb4
002E   03D3           00343         decf    TenK, F 
002F   07D4           00344         addwf   Thou, F 
0030   1C03           00345         btfss   STATUS,C 
0031   2???           00346         goto            Lb4 
                      00347 
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0032   3400           00348         retlw   0
0033   0008           00349         return
                      00350 ;endm
                      00351 
                      00352 ;***************************************
                      00353 ; Initialize
                      00354 ;***************************************
0034                  00355 init
0034   018B           00356          clrf      INTCON         ; No interrupts
                      00357 
0035   1683           00358          bsf       STATUS,RP0     ; select bank 1
0036   30FF           00359          movlw      0xFF            ; need to make A input
0037   0085           00360          movwf      TRISA          ; All port A is input
0038   30FE           00361          movlw     b'11111110'    ; Set required keypad inputs
0039   0086           00362          movwf     TRISB
003A   0187           00363          clrf      TRISC          ; All port C is output
003B   0188           00364          clrf      TRISD          ; All port D is output
003C   0189           00365          clrf      TRISE        
                      00366          
                      00367                   ;Set SDA and SCL to high-Z first as required for I2C
003D   1607           00368                  bsf       TRISC,4                
003E   1587           00369                  bsf       TRISC,3
                      00370 
003F   1283           00371          bcf       STATUS,RP0     ; select bank 0
0040   0185           00372          clrf      PORTA
0041   0186           00373          clrf      PORTB
0042   0187           00374          clrf      PORTC
0043   0188           00375          clrf      PORTD
0044   0189           00376          clrf      PORTE
                      00377          
                      00378         ;Set up I2C for communication
                      00379                  
0045   2???           00380         call       i2c_common_setup
                      00381 ;*******************************************************************************
                      00382 ;        UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00383         rtc_resetAll                                    ;works
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0046   1283 1303          M         banksel         0x74
0048   01F4               M         clrf            0x74
0049   1283 1303          M         banksel         0x73
004B   01F3               M         clrf            0x73
004C   2???               M     call        write_rtc               ;Write 0 to Seconds
004D   1283 1303          M         banksel         0x73
004F   0AF3               M     incf        0x73                    ;Set register address to 1
0050   2???               M         call            write_rtc
0051   1283 1303          M         banksel         0x73
0053   0AF3               M     incf        0x73                    ;Set register address to 2
0054   2???               M         call            write_rtc
0055   1283 1303          M         banksel         0x73
0057   0AF3               M     incf        0x73                    ;Set register address to 3
0058   2???               M         call            write_rtc
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0059   1283 1303          M         banksel         0x73
005B   0AF3               M     incf        0x73                    ;Set register address to 4
005C   2???               M         call            write_rtc
005D   1283 1303          M         banksel         0x73
005F   0AF3               M     incf        0x73                    ;Set register address to 5
0060   2???               M         call            write_rtc
0061   1283 1303          M         banksel         0x73
0063   0AF3               M     incf        0x73                    ;Set register address to 6
0064   2???               M         call            write_rtc
0065   2???           00384         call set_rtc_time
                      00385 ;*******************************************************************************
                      00386                  
                      00387                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00388                  ;call     set_rtc_time
                      00389           
0066   2???           00390          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00391           ;A/D converter attempt
                      00392          
                      00393 ;        bcf    STATUS,RP1
                      00394 ;        bsf    STATUS,RP0      ;Select bank 1
                      00395 ;        
                      00396 ;        bsf    IR1             ;makes RA0 an input
                      00397 ;        bcf    STATUS,RP0      ; go back to bank 0
                      00398          
                      00399         ; Set ADCON1 to use RA0 as analog input
                      00400         
0067   1303           00401         bcf     STATUS,RP1
0068   1683           00402         bsf     STATUS,RP0      ;Select bank 1
0069   3006           00403         movlw   b'00000110'     ;left justified, all inputs digital
006A   009F           00404         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00405 
                      00406         ;ADCON0
006B   1283           00407         bcf     STATUS,RP0
                      00408         
                      00409         
                      00410         
                      00411 ;***************************************************
                      00412 ; Initialize variables and Displays
                      00413 ;****************************************************
                      00414         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
006C   01B3               M                 clrf    Table_Counter
006D   0103               M                 clrw            
006E   0833               M loop_   movf    Table_Counter,W
006F   2???               M                 call    Welcome_Msg
0070   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0071   1903               M                 btfsc   STATUS,Z
0072   2???               M                         goto    end_
0073   2???               M                 call    WR_DATA
0074   0AB3               M                 incf    Table_Counter,F
0075   2???               M                 goto    loop_
0076                      M end_
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0076   2???           00415         call            Switch_Lines
                      00416         Display         Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0077   01B3               M                 clrf    Table_Counter
0078   0103               M                 clrw            
0079   0833               M loop_   movf    Table_Counter,W
007A   2???               M                 call    Welcome_Msg2
007B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
007C   1903               M                 btfsc   STATUS,Z
007D   2???               M                         goto    end_
007E   2???               M                 call    WR_DATA
007F   0AB3               M                 incf    Table_Counter,F
0080   2???               M                 goto    loop_
0081                      M end_
0081   01E0           00417         clrf            NumOfBins1
0082   01ED           00418         clrf            distreg             ; clear register for distance
0083   2???           00419         call            Init_TMR0           ; Initialize shaft encoder
0084   1408           00420         bsf             PORTD,0
0085   1462           00421         bsf             LEDcounter0,0               ;counter for LED
0086   1463           00422         bsf             LEDcounter1,0               ;forward motor counters
0087   1464           00423         bsf             LEDcounter2,0
0088   1465           00424         bsf             LEDcounter3,0               
0089   1466           00425         bsf             LEDcounter4,0               ;backward motor counters
008A   1467           00426         bsf             LEDcounter5,0       
008B   1468           00427         bsf             LEDcounter7,0               ;pwm counters
008C   1469           00428         bsf             LEDcounter8,0               
                      00429         
008D   1287           00430         bcf             Std1                        ;use this one for negative for when need to move ful
                            l motor                 
008E   1707           00431         bsf             Std2
008F   1007           00432         bcf             Std1Backwards
0090   1787           00433         bsf             Std2Backwards
0091   1507           00434         bsf             PORTC,2             
0092   1487           00435         bsf             PORTC,1                 ; PWM now negative, so start by clearing        
                      00436 
                      00437 ;*************************************
                      00438 ;       Keypad and LCD forms        
                      00439 ;*************************************
                      00440         
0093   1C86           00441 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0094   2???           00442                 goto            $-1 
                      00443 
0095   0E06           00444                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0096   390F           00445                 andlw           0x0F
0097   00B9           00446                 movwf           temp
                      00447                 
                      00448                 Key     0x00, TOTAL
0098   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0099   390F               M          andlw          0x0F
009A   3A00               M          xorlw          0x00
009B   1903               M          btfsc          STATUS, Z
009C   2???               M          call           TOTAL
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00449                 Key     0x01, DisplayBlackWhiteIR1
009D   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009E   390F               M          andlw          0x0F
009F   3A01               M          xorlw          0x01
00A0   1903               M          btfsc          STATUS, Z
00A1   2???               M          call           DisplayBlackWhiteIR1
                      00450                 Key     0x02, DisplayBlackWhiteIR2
00A2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A3   390F               M          andlw          0x0F
00A4   3A02               M          xorlw          0x02
00A5   1903               M          btfsc          STATUS, Z
00A6   2???               M          call           DisplayBlackWhiteIR2
                      00451                 Rotation        0x03
00A7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A8   390F               M          andlw          0x0F
00A9   3A03               M          xorlw          0x03
00AA   1903               M          btfsc          STATUS, Z
00AB   2???               M          call           ShiftLeft
                      00452                 Key     0x04, RTCDisplay
00AC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00AD   390F               M          andlw          0x0F
00AE   3A04               M          xorlw          0x04
00AF   1903               M          btfsc          STATUS, Z
00B0   2???               M          call           RTCDisplay
                      00453                 Key     0x05, DisplayUSSensor1
00B1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B2   390F               M          andlw          0x0F
00B3   3A05               M          xorlw          0x05
00B4   1903               M          btfsc          STATUS, Z
00B5   2???               M          call           DisplayUSSensor1
                      00454                 Key     0x06, DisplayUSSensor2
00B6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B7   390F               M          andlw          0x0F
00B8   3A06               M          xorlw          0x06
00B9   1903               M          btfsc          STATUS, Z
00BA   2???               M          call           DisplayUSSensor2
                      00455                 Key     0x07, AddBin
00BB   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BC   390F               M          andlw          0x0F
00BD   3A07               M          xorlw          0x07
00BE   1903               M          btfsc          STATUS, Z
00BF   2???               M          call           AddBin
                      00456                 Key     0x08, Stickers1
00C0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C1   390F               M          andlw          0x0F
00C2   3A08               M          xorlw          0x08
00C3   1903               M          btfsc          STATUS, Z
00C4   2???               M          call           Stickers1
                      00457                 Key     0x09, MOVEFWDFORABIT
00C5   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C6   390F               M          andlw          0x0F
00C7   3A09               M          xorlw          0x09
00C8   1903               M          btfsc          STATUS, Z
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C9   2???               M          call           MOVEFWDFORABIT
                      00458                 Key     0x0A, CHECKSWITCH               
00CA   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00CB   390F               M          andlw          0x0F
00CC   3A0A               M          xorlw          0x0A
00CD   1903               M          btfsc          STATUS, Z
00CE   2???               M          call           CHECKSWITCH
                      00459                 Key     0x0C, StdRotation2
00CF   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D0   390F               M          andlw          0x0F
00D1   3A0C               M          xorlw          0x0C
00D2   1903               M          btfsc          STATUS, Z
00D3   2???               M          call           StdRotation2
                      00460                 Key     0x0D, StdRotation2Backwards
00D4   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D5   390F               M          andlw          0x0F
00D6   3A0D               M          xorlw          0x0D
00D7   1903               M          btfsc          STATUS, Z
00D8   2???               M          call           StdRotation2Backwards
                      00461                 Key     0x0E, PWMFWD
00D9   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00DA   390F               M          andlw          0x0F
00DB   3A0E               M          xorlw          0x0E
00DC   1903               M          btfsc          STATUS, Z
00DD   2???               M          call           PWMFWD
                      00462                 Key     0x0F, PWMBACK
00DE   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00DF   390F               M          andlw          0x0F
00E0   3A0F               M          xorlw          0x0F
00E1   1903               M          btfsc          STATUS, Z
00E2   2???               M          call           PWMBACK
00E3   1886           00463                 btfsc           PORTB,1     ;Wait until key is released
00E4   2???           00464                 goto            $-1
00E5   2???           00465                 goto            KeypadandLCD
                      00466                 
00E6                  00467 goback
00E6   0008           00468                 return  
                      00469         
                      00470 
                      00471 ;*******************************************************************************************************
                            *******************************************
                      00472 ;                                                                 MAIN CODE
                      00473 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
                      00474 ;StartInit
                      00475 ;
                      00476 ;    call    set_rtc_time           ; resets RTC clock to zero
                      00477 ;
                      00478 ;    call    LEDCOLUMNTESTWHILEMOVINGFRONT
                      00479 ;StartMove
                      00480 ;
                      00481 ;    call    PWMFWD
                      00482 ;    call    HalfS
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00483 ;    call    HalfS
                      00484 ;    
                      00485 ;TIME
                      00486 ;      
                      00487 ;;     rtc_resetAll                 ; for some reason, resetting the time again breaks it
                      00488 ;;     call   set_rtc_time
                      00489 ;
                      00490 ;    call       show_RTC
                      00491 ;    
                      00492 ;    return
                      00493 ;    
                      00494 ;    
                      00495 ;CHECKCOLUMN
                      00496 ;    
                      00497 ;    bsf            Std1
                      00498 ;    call    HalfS
                      00499 ;    call    HalfS
                      00500 ;
                      00501 ;    call    Read1_US           ;checks to see if column present
                      00502 ;    
                      00503 ;;    movlw   0xff
                      00504 ;;    subwf   TMR1L
                      00505 ;    btfss   W,0
                      00506 ;    goto    CHECKCOLUMN
                      00507 ;    bsf            LED
                      00508 ;    bcf            Std1                ;stops motor from moving forward
                      00509 ;    call    HalfS
                      00510 ;    return
                      00511 ;    
                      00512 ;LEDCOLUMNTESTWHILEMOVINGFRONT
                      00513 ;    
                      00514 ;    ;call    Clear_Display
                      00515 ;    
                      00516 ;    ;call    set_rtc_time          ; resets RTC clock to zero
                      00517 ;    
                      00518 ;    ;call    FINDBIN
                      00519 ;    
                      00520 ;    bsf            Std1                ;moving
                      00521 ;    bcf            LED
                      00522 ;    
                      00523 ;    call    Read1_US           ;checks to see if column present
                      00524 ;    
                      00525 ;    movlw   0x10               ; if column present, it'll move forward
                      00526 ;    subwf   TMR1H
                      00527 ;    btfsc   STATUS,C
                      00528 ;    goto    LEDCOLUMNTESTWHILEMOVINGFRONT
                      00529 ;    bcf            Std1                ;motor will move fwd
                      00530 ;    bcf            LED
                      00531 ;    
                      00532 ;    
                      00533 ;    call    AVOIDCOLUMN
                      00534 ;    
                      00535 ;    
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00536 ;;    bsf           Std1                ;move forward until no more column in the way
                      00537 ;;    bsf           LED
                      00538 ;;    
                      00539 ;;    call    HalfS
                      00540 ;;    call    HalfS
                      00541 ;;    call    HalfS             ;wait til it drives enough forward from column
                      00542 ;;    
                      00543 ;;    call    Read1_US          ;checks to see if column present
                      00544 ;;    
                      00545 ;;    movlw   0x10              ; if column is not present, it'll go back to original form
                      00546 ;;    subwf   TMR1H
                      00547 ;;    btfss   STATUS,C          
                      00548 ;;    goto    $-6
                      00549 ;;    
                      00550 ;;    bcf           Std1
                      00551 ;;    bcf           LED
                      00552 ;    
                      00553 ;    
                      00554 ;    call    RETURNFROMCOLUMN
                      00555 ;    
                      00556 ;    ;call    FINDBIN
                      00557 ;    
                      00558 ;    goto    EXIT
00E7                  00559 AVOIDCOLUMN
                      00560     
00E7   1287           00561     bcf     Std1                ;motor will stop move fwd
00E8   1006           00562     bcf     LED
                      00563     
00E9   1307           00564     bcf     Std2                ; start white thing fwd
00EA   2???           00565     call    DELAY2              ;delat 0.25 s maybe fixes it
00EB   1D06           00566     btfss   SwitchYS
00EC   2???           00567     goto    $-2
                      00568    
00ED   1707           00569     bsf     Std2                   ; stop white thing fwd
                      00570     
00EE   2???           00571      call    HalfS
00EF   2???           00572     call    HalfS
00F0   2???           00573      call    HalfS
00F1   2???           00574     call    HalfS
00F2   2???           00575      call    HalfS
00F3   2???           00576     call    HalfS
00F4   2???           00577      call    HalfS
00F5   2???           00578     call    HalfS
                      00579     
00F6   2???           00580     call    PWMFWD          ;start arm forward
                      00581     
                      00582     ;btfss   SwitchYS
                      00583     ;goto    $-1
                      00584  
00F7   2???           00585     call    HalfS
                      00586     
00F8   2???           00587     call    PWMFWD          ;stop arm forward
                      00588     
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00589 ;-------------------------------------------------
                      00590     
00F9   1687           00591     bsf     Std1                ;move forward until no more column in the way
00FA   1406           00592     bsf     LED
                      00593     
00FB   2???           00594     call    HalfS
00FC   2???           00595     call    HalfS
00FD   2???           00596     call    HalfS               ;wait til it drives enough forward from column
                      00597     
00FE   2???           00598     call    HalfS
00FF   2???           00599     call    HalfS
0100   2???           00600     call    HalfS               ;wait til it drives enough forward from column
0101   2???           00601     call    HalfS
0102   2???           00602     call    HalfS               ;wait til it drives enough forward from column
                      00603     
0103   2???           00604     call    Read1_US            ;checks to see if column present
                      00605     
0104   300F           00606     movlw   0xF         ; if column is not present, it'll go back to original form
0105   028F           00607     subwf   TMR1H
0106   1C03           00608     btfss   STATUS,C            
0107   2???           00609     goto    $-6
                      00610     
0108   1287           00611     bcf     Std1
0109   1006           00612     bcf     LED
                      00613     
                      00614     
010A   2???           00615     call    RETURNFROMCOLUMN
                      00616     
010B   0008           00617     return 
                      00618     
010C                  00619 RETURNFROMCOLUMN
                      00620     
010C   2???           00621     call    PWMBACK         ;start arm backwards
                      00622     
010D   2???           00623     call    DELAY1
                      00624     
010E   2???           00625     call    PWMBACK         ;stop arm backwards
                      00626     
010F   2???           00627     call    HalfS
0110   2???           00628     call    HalfS
0111   2???           00629      call    HalfS
                      00630     
0112   1387           00631     bcf     Std2Backwards
0113   2???           00632     call    DELAY2
0114   1D86           00633     btfss   SwitchYD
0115   2???           00634     goto    $-2 
                      00635     
0116   1787           00636     bsf     Std2Backwards
                      00637     
0117   0008           00638     return
                      00639     
                      00640 ;FINDBINA
                      00641 ;    
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00642 ;    call    FINDBIN
                      00643 ;    call    FINDBIN
                      00644 ;    
                      00645 ;    goto    EXIT
                      00646 ;    
                      00647 ;FINDBIN
                      00648 ;    
                      00649 ;    ;call    set_rtc_time          ; resets RTC clock to zero
                      00650 ;    
                      00651 ;    bsf            Std1        ;move fwd
                      00652 ;
                      00653 ;    call    Read2_US           ;checks to see if bin present
                      00654 ;    
                      00655 ;    movlw   0x10               ; if column is not present, it'll go back to original form
                      00656 ;    subwf   TMR1H
                      00657 ;    btfsc   STATUS,C
                      00658 ;    goto    FINDBIN            ;set LED to know found bin
                      00659     
0118                  00660 READBIN
                      00661 
0118   2???           00662     call    HalfS
0119   1287           00663     bcf     Std1
                      00664     
011A   2???           00665     call    AddBin              ;adds bin to list
                      00666     
011B   2???           00667     call    Dist_Decoder        ; stores the distance
                      00668     Put_Dist_In_Reg     distreg
011C   ???? ???? 2???     M         lcall   Dist_Decoder
011F   086A               M         movfw   cm
0120   00ED               M         movwf   distreg
                      00669     Display_Dist        distreg
0121   01D2               M         clrf    NumL
0122   01D1               M         clrf    NumH
0123   086D               M         movfw   distreg
                          M         ;movfw  TMR0
0124   00D2               M         movwf   NumL
0125   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
0126   0855               M         movfw       Hund
0127   2???               M         call        DectoChar
0128   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
0129   0856               M         movfw       Tens
012A   2???               M         call        DectoChar
012B   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
012C   0857               M         movfw       Ones
012D   2???               M         call        DectoChar
012E   2???               M         call        WR_DATA
012F   2???           00670     call    StoreThisDistance
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00671     
0130   2???           00672     call    Clear_Display    
                      00673     
0131   2???           00674     call    StoreBW1            ;reads & stores first IR data
                      00675     
                      00676 ;*****THRESHHOLD TEST ON IR 1************
                      00677 ;    nothing in front: 02056
                      00678 ;    black in front: 10000-41000
                      00679 ;    white in front: >60000
                      00680     
                      00681     ;READ 2 ALGORITHM IMPLEMENT HERE
                      00682     
0132   2???           00683     call    HalfS
0133   2???           00684     call    HalfS
0134   2???           00685     call    HalfS
0135   2???           00686     call    HalfS
                      00687     
0136   2???           00688     call    Clear_Display
                      00689     
0137   2???           00690     call    StoreBW2
                      00691     
0138   2???           00692     call    HalfS
0139   2???           00693     call    HalfS
                      00694     
013A   1006           00695     bcf     LED
                      00696     
013B   0008           00697     return
                      00698     
013C   2???           00699     goto    EXIT    
                      00700      
                      00701     
013D                  00702 TOTAL
                      00703     
013D   2???           00704     call    Read1_US            ;warms up us sensors that was weird
013E   2???           00705     call    Read2_US
                      00706     
013F   2???           00707     call    DisplayBlackWhiteIR2        ;warms up IR
0140   2???           00708     call    DisplayBlackWhiteIR1        ;warms up IR
                      00709     
0141                  00710 TOTAL1
                      00711     
0141   1687           00712     bsf     Std1                ;moving
                      00713     
0142   2???           00714     call    Read1_US            ;checks to see if column present
                      00715     
                      00716 ;********THRESHOLD CALCULATION FOR COLUMN**************:
                      00717 ;   At around cm from col, reading: 02303
                      00718 ;       So, this will be the max value.
                      00719 ;       To be safe, will minus 02603 from the TMR variables.
                      00720 ;       This means, subtract 0x4 from TMR1H 
                      00721 ;       Value before at integration was 0x14, now trying 0x4
                      00722     
0143   300F           00723     movlw   0xF         ; if column present, it'll move forward
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0144   028F           00724     subwf   TMR1H
0145   1C03           00725     btfss   STATUS,C
0146   2???           00726     call    AVOIDCOLUMN
                      00727     
                      00728     
0147   2???           00729     call    Read2_US            ;checks to see if bin present
                      00730     
                      00731 ;********THRESHOLD CALCULATION FOR BIN**************:
                      00732 ;   At around 6cm from white bin, reading: 01103
                      00733 ;       So, this will be the max value.
                      00734 ;       To be safe, will minus 01210 from the TMR variables.
                      00735 ;       This means, subtract 0x4 from TMR1H 
                      00736 ;       Value before at integration was 0x14, now trying 0x4
                      00737     
                      00738     
0148   3006           00739     movlw   0x6         ; read the bin
0149   028F           00740     subwf   TMR1H
014A   1C03           00741     btfss   STATUS,C
014B   2???           00742     call    DELAYEDREAD
014C   2???           00743     goto    ENDTHIS
                      00744     
                      00745     
014D                  00746 DELAYEDREAD
014D   2???           00747     call    HalfS           ; wait for robot to move a bit in front of bin
014E   2???           00748     call    READBIN
014F   1687           00749     bsf     Std1                ; move forward a bit so that you don't double read bin
0150   2???           00750     call    HalfS
0151   2???           00751     call    HalfS
0152   1406           00752     bsf     LED                 ; turn off LED After reading
                      00753     
0153                  00754 ENDTHIS   
                      00755     
0153   1CE0           00756     btfss   NumOfBins1,1        ;checking if its at two bins
0154   2???           00757     goto TOTAL1
                      00758     
                      00759     
                      00760 ;    bsf            Std1                ;move forward until no more column in the way
                      00761 ;    bsf            LED
                      00762 ;    
                      00763 ;    call    HalfS
                      00764 ;    call    HalfS
                      00765 ;    call    HalfS              ;wait til it drives enough forward from column
                      00766 ;    
                      00767 ;    call    Read1_US           ;checks to see if column present
                      00768 ;    
                      00769 ;    movlw   0x10               ; if column is not present, it'll go back to original form
                      00770 ;    subwf   TMR1H
                      00771 ;    btfss   STATUS,C           
                      00772 ;    goto    $-6
                      00773 ;    
                      00774 ;    bcf            Std1
                      00775 ;    bcf            LED
                      00776 ;    
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00777 ;    
                      00778 ;    call    RETURNFROMCOLUMN
                      00779     
                      00780     ;call    FINDBIN
                      00781     
0155   2???           00782     goto    EXIT
                      00783     
0156                  00784 CHECKSWITCH
                      00785     
                      00786     ;call    Clear_Display
                      00787     ;Display DectoChar
                      00788     
0156   1307           00789     bcf     Std2
0157   2???           00790     call    DELAY2              ;delat 0.25 s maybe fixes it
0158   1D06           00791     btfss   SwitchYS
0159   2???           00792     goto    $-2
                      00793    
015A   1707           00794     bsf     Std2
                      00795     
015B   1387           00796     bcf     Std2Backwards
015C   2???           00797     call    DELAY2
015D   1D86           00798     btfss   SwitchYD
015E   2???           00799     goto    $-2 
                      00800     
015F   1787           00801     bsf     Std2Backwards
                      00802     
0160   2???           00803     goto    CHECKSWITCH  
                      00804 
                      00805 
0161                  00806 EXIT
                      00807     
0161   2???           00808     call        Clear_Display
                      00809     ;display final interface for choosing stuff
                      00810     Display     FinalMessage
  0000                    M                 local   loop_
  0000                    M                 local   end_
0162   01B3               M                 clrf    Table_Counter
0163   0103               M                 clrw            
0164   0833               M loop_   movf    Table_Counter,W
0165   2???               M                 call    FinalMessage
0166   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0167   1903               M                 btfsc   STATUS,Z
0168   2???               M                         goto    end_
0169   2???               M                 call    WR_DATA
016A   0AB3               M                 incf    Table_Counter,F
016B   2???               M                 goto    loop_
016C                      M end_
016C   2???           00811     call        Switch_Lines
                      00812     Display     Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
016D   01B3               M                 clrf    Table_Counter
016E   0103               M                 clrw            
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016F   0833               M loop_   movf    Table_Counter,W
0170   2???               M                 call    Welcome_Msg2
0171   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0172   1903               M                 btfsc   STATUS,Z
0173   2???               M                         goto    end_
0174   2???               M                 call    WR_DATA
0175   0AB3               M                 incf    Table_Counter,F
0176   2???               M                 goto    loop_
0177                      M end_
                      00813     
0177   1287           00814     bcf         Std1
0178   1407           00815     bsf         Std1Backwards
                      00816     
0179   2???           00817     goto        EXITDISPLAY
                      00818     
017A                  00819 MOVEFWDFORABIT
                      00820     
017A   1687           00821     bsf         Std1
                      00822     
017B   2???           00823     call        OneS
017C   2???           00824     call        OneS
017D   2???           00825         call    OneS
017E   2???           00826     call        OneS
017F   2???           00827         call    OneS
0180   2???           00828     call        OneS
                      00829     
0181   1287           00830     bcf         Std1
                      00831     
0182   2???           00832     goto        EXITDISPLAY
                      00833     
0183   1C86           00834 EXITDISPLAY     btfss           PORTB,1     ;Wait until data is available from the keypad
0184   2???           00835                 goto            $-1 
                      00836 
0185   0E06           00837                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0186   390F           00838                 andlw           0x0F
0187   00B9           00839                 movwf           temp
                      00840                 Key     0x00, show_RTC
0188   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0189   390F               M          andlw          0x0F
018A   3A00               M          xorlw          0x00
018B   1903               M          btfsc          STATUS, Z
018C   2???               M          call           show_RTC
                      00841                 Key     0x02, Stickers1
018D   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
018E   390F               M          andlw          0x0F
018F   3A02               M          xorlw          0x02
0190   1903               M          btfsc          STATUS, Z
0191   2???               M          call           Stickers1
                      00842                 Rotation        0x03
0192   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0193   390F               M          andlw          0x0F
0194   3A03               M          xorlw          0x03
0195   1903               M          btfsc          STATUS, Z
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0196   2???               M          call           ShiftLeft
                      00843                 Key     0x04, ShowBins
0197   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0198   390F               M          andlw          0x0F
0199   3A04               M          xorlw          0x04
019A   1903               M          btfsc          STATUS, Z
019B   2???               M          call           ShowBins
                      00844                 Key     0x05, TotalDistance
019C   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
019D   390F               M          andlw          0x0F
019E   3A05               M          xorlw          0x05
019F   1903               M          btfsc          STATUS, Z
01A0   2???               M          call           TotalDistance
                      00845                 Key     0x06, Locations
01A1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01A2   390F               M          andlw          0x0F
01A3   3A06               M          xorlw          0x06
01A4   1903               M          btfsc          STATUS, Z
01A5   2???               M          call           Locations
                      00846                 Key     0x07, AddBin
01A6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01A7   390F               M          andlw          0x0F
01A8   3A07               M          xorlw          0x07
01A9   1903               M          btfsc          STATUS, Z
01AA   2???               M          call           AddBin
01AB   1886           00847                 btfsc           PORTB,1     ;Wait until key is released
01AC   2???           00848                 goto            $-1
01AD   2???           00849                 goto            EXITDISPLAY
                      00850     
                      00851     ;show location for every bin
                      00852     
                      00853     
                      00854     ;show number of bins
                      00855     
                      00856     
                      00857     ;show dist travelled
                      00858     
                      00859     
                      00860     ;show time elapsed
                      00861     
                      00862     
                      00863     
01AE   2???           00864     goto    EXIT
                      00865     
01AF                  00866 MoveBackwards
                      00867     
01AF   2???           00868     call    PWMSTOP
                      00869     
                      00870         
                      00871 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00872 
                      00873 ;*********************************************************
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00874 ; A to D conversion with LCD display for IR sensor
                      00875 ;*********************************************************
                      00876         
                      00877 ;******************************************
                      00878 ;       Sticker Print Modules
                      00879 ;*****************************************
                      00880         
01B0                  00881 BWScanModule1
                      00882 
01B0   151F           00883         bsf     ADCON0,2                ;start conversion and wait for it to complete
01B1   191F           00884         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01B2   2???           00885         goto    $-1
                      00886         
01B3   081E           00887         movf    ADRESH, W
01B4   00D1           00888         movwf   NumH
01B5   081E           00889         movf    ADRESL, W
01B6   00D2           00890         movwf   NumL
01B7   2???           00891         call    Clear_Display
01B8   2???           00892         call    bin16_BCD
                      00893         PrintNumber     TenK
                          M         ;movf       number ,W
01B9   0853               M         movfw       TenK
01BA   2???               M         call        DectoChar
01BB   2???               M         call        WR_DATA
                      00894         PrintNumber     Thou
                          M         ;movf       number ,W
01BC   0854               M         movfw       Thou
01BD   2???               M         call        DectoChar
01BE   2???               M         call        WR_DATA
                      00895         PrintNumber     Hund
                          M         ;movf       number ,W
01BF   0855               M         movfw       Hund
01C0   2???               M         call        DectoChar
01C1   2???               M         call        WR_DATA
                      00896         PrintNumber     Tens
                          M         ;movf       number ,W
01C2   0856               M         movfw       Tens
01C3   2???               M         call        DectoChar
01C4   2???               M         call        WR_DATA
                      00897         PrintNumber     Ones
                          M         ;movf       number ,W
01C5   0857               M         movfw       Ones
01C6   2???               M         call        DectoChar
01C7   2???               M         call        WR_DATA
01C8   0008           00898         return
01C9                  00899 BWStoreModule1
01C9   1383           00900         BCF     STATUS, IRP
01CA   3042           00901         movlw   0x42
01CB   0084           00902         movwf   FSR
01CC   3000           00903         movlw   0X0
01CD   0360           00904         decf    NumOfBins1,W            ;want bin number to be decreased when back checks it
01CE   0784           00905         addwf   FSR,F
01CF   3029           00906         movlw   0X29
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D0   02D1           00907         subwf   NumH
01D1   3000           00908         movlw   0x0
01D2   1803           00909         btfsc   STATUS, C
01D3   3001           00910         movlw   0x1
01D4   0080           00911         movwf   INDF
01D5   0008           00912         return  
                      00913         
01D6                  00914 BWScanModule2
                      00915 
01D6   151F           00916         bsf     ADCON0,2                ;start conversion and wait for it to complete
01D7   191F           00917         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01D8   2???           00918         goto    $-1
                      00919         
01D9   081E           00920         movf    ADRESH, W
01DA   00D1           00921         movwf   NumH
01DB   081E           00922         movf    ADRESL, W
01DC   00D2           00923         movwf   NumL
01DD   2???           00924         call    Clear_Display
01DE   2???           00925         call    bin16_BCD
                      00926         PrintNumber     TenK
                          M         ;movf       number ,W
01DF   0853               M         movfw       TenK
01E0   2???               M         call        DectoChar
01E1   2???               M         call        WR_DATA
                      00927         PrintNumber     Thou
                          M         ;movf       number ,W
01E2   0854               M         movfw       Thou
01E3   2???               M         call        DectoChar
01E4   2???               M         call        WR_DATA
                      00928         PrintNumber     Hund
                          M         ;movf       number ,W
01E5   0855               M         movfw       Hund
01E6   2???               M         call        DectoChar
01E7   2???               M         call        WR_DATA
                      00929         PrintNumber     Tens
                          M         ;movf       number ,W
01E8   0856               M         movfw       Tens
01E9   2???               M         call        DectoChar
01EA   2???               M         call        WR_DATA
                      00930         PrintNumber     Ones
                          M         ;movf       number ,W
01EB   0857               M         movfw       Ones
01EC   2???               M         call        DectoChar
01ED   2???               M         call        WR_DATA
                      00931 ;       call            HalfS           ;wait half a second to display
01EE   0008           00932         return
01EF                  00933 BWStoreModule2
01EF   1383           00934         BCF     STATUS, IRP
01F0   3049           00935         movlw   0x49                    ;number 49 to try to get registers for back of bin
01F1   0084           00936         movwf   FSR
01F2   3000           00937         movlw   0X0
01F3   0360           00938         decf    NumOfBins1,W
01F4   0784           00939         addwf   FSR,F
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F5   3029           00940         movlw   0X29
01F6   02D1           00941         subwf   NumH
01F7   3000           00942         movlw   0x0
01F8   1803           00943         btfsc   STATUS, C
01F9   3001           00944         movlw   0x1
01FA   0080           00945         movwf   INDF
01FB   0008           00946         return  
                      00947         
01FC                  00948 ReadBW
                      00949                         
01FC   151F           00950         bsf     ADCON0,2                ;start conversion and wait for it to complete
01FD   191F           00951         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01FE   2???           00952         goto    $-1
                      00953         
01FF   081E           00954         movf    ADRESH, W
0200   00D1           00955         movwf   NumH
0201   081E           00956         movf    ADRESL, W
0202   00D2           00957         movwf   NumL
                      00958         
0203   2???           00959         call            Clear_Display
0204   2???           00960         call            bin16_BCD
                      00961         PrintNumber     TenK
                          M         ;movf       number ,W
0205   0853               M         movfw       TenK
0206   2???               M         call        DectoChar
0207   2???               M         call        WR_DATA
                      00962         PrintNumber     Thou
                          M         ;movf       number ,W
0208   0854               M         movfw       Thou
0209   2???               M         call        DectoChar
020A   2???               M         call        WR_DATA
                      00963         PrintNumber     Hund
                          M         ;movf       number ,W
020B   0855               M         movfw       Hund
020C   2???               M         call        DectoChar
020D   2???               M         call        WR_DATA
                      00964         PrintNumber     Tens
                          M         ;movf       number ,W
020E   0856               M         movfw       Tens
020F   2???               M         call        DectoChar
0210   2???               M         call        WR_DATA
                      00965         PrintNumber     Ones
                          M         ;movf       number ,W
0211   0857               M         movfw       Ones
0212   2???               M         call        DectoChar
0213   2???               M         call        WR_DATA
0214   2???           00966         call            HalfS
0215   2???           00967         call            Clear_Display
                      00968         
0216   3001           00969         movlw           0x1
0217   02D3           00970         subwf           TenK
0218   3000           00971         movlw           0x0
0219   1803           00972         btfsc           STATUS,C
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021A   3001           00973         movlw           0x1
                      00974         
021B   0008           00975         return
                      00976                 
                      00977     
                      00978 ;***************************************************
                      00979 ;       US Sensor Modules                           [TESTED]
                      00980 ;***************************************************
                      00981         
021C                  00982 Read1_US                    
                      00983          
021C   2???           00984         call            Read1_US1 
                      00985          
021D   2???           00986         call            Clear_Display
                      00987         
021E   080F           00988         movf            TMR1H, W
021F   00D1           00989         movwf           NumH
0220   080E           00990         movf            TMR1L, W
0221   00D2           00991         movwf           NumL
                      00992         
0222   2???           00993         call            bin16_BCD
                      00994         
                      00995         PrintNumber     TenK
                          M         ;movf       number ,W
0223   0853               M         movfw       TenK
0224   2???               M         call        DectoChar
0225   2???               M         call        WR_DATA
                      00996         PrintNumber     Thou
                          M         ;movf       number ,W
0226   0854               M         movfw       Thou
0227   2???               M         call        DectoChar
0228   2???               M         call        WR_DATA
                      00997         PrintNumber     Hund
                          M         ;movf       number ,W
0229   0855               M         movfw       Hund
022A   2???               M         call        DectoChar
022B   2???               M         call        WR_DATA
                      00998         PrintNumber     Tens
                          M         ;movf       number ,W
022C   0856               M         movfw       Tens
022D   2???               M         call        DectoChar
022E   2???               M         call        WR_DATA
                      00999         PrintNumber     Ones
                          M         ;movf       number ,W
022F   0857               M         movfw       Ones
0230   2???               M         call        DectoChar
0231   2???               M         call        WR_DATA
                      01000         
                      01001         ;call           HalfS
                      01002         
0232   2???           01003         call            Clear_Display
                      01004         
0233   3001           01005         movlw           0x1
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0234   02D3           01006         subwf           TenK
0235   3001           01007         movlw           0x1
0236   1803           01008         btfsc           STATUS,C
0237   3000           01009         movlw           0x0
                      01010         
                      01011 
0238   0008           01012         return
                      01013         
0239                  01014 Read1_US1
                      01015                 
0239   018F           01016                 clrf    TMR1H           ; commented are sam harrison edits
023A   018E           01017                 clrf    TMR1L
                      01018                 
023B   1408           01019                 bsf     UST1            ;trigger high, bottom sensor
023C   2???           01020                 call    lcdLongDelay
023D   1008           01021                 bcf     UST1            ;trigger low
                      01022                 
023E   1D05           01023                 btfss   US1E1           ;wait for echo to go high
023F   2???           01024                 goto    $-1
0240   1410           01025                 bsf     T1CON,TMR1ON    ;turn on timer
                      01026                 
0241   1905           01027                 btfsc   US1E1           ;wait for echo to go low
0242   2???           01028                 goto    $-1
                      01029                 
0243   1010           01030                 bcf     T1CON,TMR1ON    ;turn off timer
0244   0008           01031                 return
                      01032                 
0245                  01033 Read2_US                    
                      01034          
0245   2???           01035         call            Read2_US1 
                      01036          
0246   2???           01037         call            Clear_Display
                      01038         
0247   080F           01039         movf            TMR1H, W
0248   00D1           01040         movwf           NumH
0249   080E           01041         movf            TMR1L, W
024A   00D2           01042         movwf           NumL
                      01043         
024B   2???           01044         call            bin16_BCD
                      01045         
                      01046         PrintNumber     TenK
                          M         ;movf       number ,W
024C   0853               M         movfw       TenK
024D   2???               M         call        DectoChar
024E   2???               M         call        WR_DATA
                      01047         PrintNumber     Thou
                          M         ;movf       number ,W
024F   0854               M         movfw       Thou
0250   2???               M         call        DectoChar
0251   2???               M         call        WR_DATA
                      01048         PrintNumber     Hund
                          M         ;movf       number ,W
0252   0855               M         movfw       Hund
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0253   2???               M         call        DectoChar
0254   2???               M         call        WR_DATA
                      01049         PrintNumber     Tens
                          M         ;movf       number ,W
0255   0856               M         movfw       Tens
0256   2???               M         call        DectoChar
0257   2???               M         call        WR_DATA
                      01050         PrintNumber     Ones
                          M         ;movf       number ,W
0258   0857               M         movfw       Ones
0259   2???               M         call        DectoChar
025A   2???               M         call        WR_DATA
                      01051         
                      01052         ;call           HalfS
                      01053         
025B   2???           01054         call            Clear_Display
                      01055         
025C   3003           01056         movlw           0x3
025D   02D3           01057         subwf           TenK
025E   3001           01058         movlw           0x1
025F   1803           01059         btfsc           STATUS,C
0260   3000           01060         movlw           0x0
                      01061         
                      01062 
0261   0008           01063         return
                      01064         
0262                  01065 Read2_US1
                      01066                 
0262   018F           01067                 clrf    TMR1H
0263   018E           01068                 clrf    TMR1L
                      01069                 
0264   1488           01070                 bsf     UST2            ;trigger high, bottom sensor
0265   2???           01071                 call    lcdLongDelay                ;sam harrison edits
0266   1088           01072                 bcf     UST2            ;trigger low
                      01073                 
0267   1D85           01074                 btfss   US1E2           ;wait for echo to go high
0268   2???           01075                 goto    $-1
0269   1410           01076                 bsf     T1CON,TMR1ON    ;turn on timer
                      01077                 
026A   1985           01078                 btfsc   US1E2           ;wait for echo to go low
026B   2???           01079                 goto    $-1
                      01080                 
026C   1010           01081                 bcf     T1CON,TMR1ON    ;turn off timer
026D   0008           01082                 return
                      01083                 
                      01084 ;*******************************************************
                      01085 ; Dist_Decoder
                      01086 ;   input:  Timer0, cm, mm
                      01087 ;   output: Bin_Dist_reg
                      01088 ;   Desc:   Converts the count in the rotary encoder
                      01089 ;           into physical distance
                      01090 ;*******************************************************
026E                  01091 Dist_Decoder
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01092         ; Initalize all registers
026E   01EA           01093         clrf    cm              ; Clear regs
026F   01EB           01094         clrf    mm
0270   0801           01095         movfw   TMR0            ; poll encoder for current state
0271   00B9           01096         movwf   temp
                      01097         ; Check if its already zero
0272   0839           01098         movfw   temp
0273   3C00           01099         sublw   D'0'
0274   1903           01100         btfsc   STATUS, Z
0275   0008           01101         return
                      01102         
0276                  01103 Decode_loop                     ; Assume each step is 1.01 cm
                      01104         ; Perform decode
                      01105         ADDL    cm, cm, D'2'
0276   3002               M     MOVLW  D'2'         ; move literal into working register
0277   076A               M     ADDWF   cm,W        ; W <- literal + reg
0278   00EA               M     MOVWF   cm          ; Destination <- literal + reg
                      01106         ADDL    mm, mm, D'1'
0279   3001               M     MOVLW  D'1'         ; move literal into working register
027A   076B               M     ADDWF   mm,W        ; W <- literal + reg
027B   00EB               M     MOVWF   mm          ; Destination <- literal + reg
027C   03B9           01107         decf    temp
                      01108 
                      01109         ; Test if mm has overflowed! (mm >= 10)
027D   300A           01110         movlw   D'10'           
027E   026B           01111         subwf   mm, w           ; mm - 10 --> w (w = f - w, when d = 0) 
027F   1803           01112         btfsc   STATUS, C       ; Y = mm, w = 10, Y-w
0280   2???           01113         call    mm_overflow     ; Run overflow routine if it did overflow
                      01114 
0281                  01115 Decode_check_done       
                      01116         ; Test if done decoding
0281   0839           01117         movfw   temp
0282   3C00           01118         sublw   D'0'
                      01119         ;movf   temp, F
0283   1D03           01120         btfss   STATUS, Z       
0284   2???           01121         goto    Decode_loop
                      01122 ;       btfss   STATUS, C
                      01123 ;       call    Decode_loop
                      01124         ;Display            StandBy1
                      01125         ;goto       Dist_test
0285   0008           01126         return
                      01127         
0286                  01128 mm_overflow
0286   0AEA           01129         incf    cm              ; cm + 1 --> cm
0287   300A           01130         movlw   D'10'           ; 10 --> w
0288   02EB           01131         subwf   mm, f           ; mm - 10 --> mm (f = f - w, when d = 1) 
0289   2???           01132         goto    Decode_check_done       ; Continue decoding
                      01133         
028A                  01134 StoreThisDistance
028A   1383           01135         BCF     STATUS, IRP
028B   303B           01136         movlw   0x3B                    ;number 56 to try to get location registers in cblock
028C   0084           01137         movwf   FSR
028D   3000           01138         movlw   0X0
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

028E   0360           01139         decf    NumOfBins1,W
028F   0784           01140         addwf   FSR,F
                      01141         Put_Dist_In_Reg W               ;move the distance into the actual register
0290   ???? ???? 2???     M         lcall   Dist_Decoder
0293   086A               M         movfw   cm
0294   0080               M         movwf   W
0295   0080           01142         movwf   INDF
                      01143         
0296   0008           01144         return
                      01145 ;*********************************************
                      01146 ; Keypad Modules
                      01147 ;*******************************************
                      01148          
                      01149 
0297                  01150 ShiftLeft
0297   3018           01151         movlw           b'00011000'             ;Move to the left
0298   2???           01152         call            WR_INS
0299   0008           01153         return
                      01154 
029A   2???           01155         goto    KeypadandLCD
                      01156         
029B                  01157 RTCDisplay
029B   2???           01158         call    show_RTC
                      01159         
029C   1886           01160         btfsc           PORTB,1     ;Wait until data is available from the keypad
029D   0008           01161         return
029E   1886           01162         btfsc           PORTB,1     ;Wait until data is available from the keypad
029F   0008           01163         return
02A0   1886           01164         btfsc           PORTB,1     ;Wait until data is available from the keypad
02A1   0008           01165         return
02A2   1886           01166         btfsc           PORTB,1     ;Wait until data is available from the keypad
02A3   0008           01167         return
02A4   2???           01168         goto        RTCDisplay
                      01169         
02A5                  01170 StoreBW1
02A5   1283           01171         bcf     STATUS,RP0
02A6   3005           01172         movlw   b'00000101'             
02A7   009F           01173         movwf   ADCON0                  ;choose RA0
                      01174         
02A8   2???           01175         call    BWScanModule1   
02A9   2???           01176         call    BWStoreModule1
                      01177         
02AA   0008           01178         return                          ; why was there not a return here before?
                      01179         
02AB                  01180 StoreBW2
02AB   1283           01181         bcf     STATUS,RP0
02AC   3015           01182         movlw   b'00010101'             
02AD   009F           01183         movwf   ADCON0                  ;choose RA1
                      01184         
02AE   2???           01185         call    BWScanModule2
02AF   2???           01186         call    BWStoreModule2
                      01187         
02B0   0008           01188         return
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01189         
02B1                  01190 AddBin
02B1   2???           01191         Call Clear_Display
02B2   0AE0           01192         incf    NumOfBins1,F
                      01193         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
02B3   0860               M         movfw       NumOfBins1
02B4   2???               M         call        DectoChar
02B5   2???               M         call        WR_DATA
02B6   3007           01194         movlw   0X7                     ;checks if max of 7 bins has been reached
02B7   0260           01195         subwf   NumOfBins1,W            
02B8   1903           01196         btfsc   STATUS,Z
02B9   2???           01197         goto    EXIT
02BA   0008           01198         return
                      01199         
02BB                  01200 ShowBins
                      01201         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
02BB   0860               M         movfw       NumOfBins1
02BC   2???               M         call        DectoChar
02BD   2???               M         call        WR_DATA
                      01202         
02BE   0008           01203         return
                      01204         
02BF                  01205 Stickers1                   ;TESTED
02BF   2???           01206         call            Clear_Display
02C0   3000           01207         movlw           0X0
02C1   00DF           01208         movwf           counter
02C2   1383           01209         BCF             STATUS, IRP
02C3   3041           01210         movlw           0x41
02C4   0084           01211         movwf           FSR
02C5   0860           01212         movfw           NumOfBins1
02C6   00DE           01213         movwf           countdown
                      01214         Display         FrontStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02C7   01B3               M                 clrf    Table_Counter
02C8   0103               M                 clrw            
02C9   0833               M loop_   movf    Table_Counter,W
02CA   2???               M                 call    FrontStickers
02CB   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02CC   1903               M                 btfsc   STATUS,Z
02CD   2???               M                         goto    end_
02CE   2???               M                 call    WR_DATA
02CF   0AB3               M                 incf    Table_Counter,F
02D0   2???               M                 goto    loop_
02D1                      M end_
02D1                  01215 FrontLoop1      
02D1   0A84           01216         INCF            FSR,1
02D2   0ADF           01217         incf            counter
                      01218         PrintNumber     counter
                          M         ;movf       number ,W
02D3   085F               M         movfw       counter
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D4   2???               M         call        DectoChar
02D5   2???               M         call        WR_DATA
                      01219         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02D6   01B3               M                 clrf    Table_Counter
02D7   0103               M                 clrw            
02D8   0833               M loop_   movf    Table_Counter,W
02D9   2???               M                 call    Colon
02DA   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02DB   1903               M                 btfsc   STATUS,Z
02DC   2???               M                         goto    end_
02DD   2???               M                 call    WR_DATA
02DE   0AB3               M                 incf    Table_Counter,F
02DF   2???               M                 goto    loop_
02E0                      M end_
02E0   0800           01220         movfw           INDF
                      01221         PrintCol        W
02E1   0800               M         movfw       W
02E2   2???               M         call        StickerColours
02E3   2???               M         call        WR_DATA
                      01222         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02E4   01B3               M                 clrf    Table_Counter
02E5   0103               M                 clrw            
02E6   0833               M loop_   movf    Table_Counter,W
02E7   2???               M                 call    Spacee
02E8   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02E9   1903               M                 btfsc   STATUS,Z
02EA   2???               M                         goto    end_
02EB   2???               M                 call    WR_DATA
02EC   0AB3               M                 incf    Table_Counter,F
02ED   2???               M                 goto    loop_
02EE                      M end_
02EE   0BDE           01223         decfsz          countdown,F
02EF   2???           01224         goto            FrontLoop1
                      01225         
02F0   2???           01226         call            Switch_Lines
                      01227         
02F1                  01228 Stickers2                       ;TESTED
                      01229         
02F1   3000           01230         movlw           0X0
02F2   00DF           01231         movwf           counter
02F3   1383           01232         BCF             STATUS, IRP
02F4   3048           01233         movlw           0x48
02F5   0084           01234         movwf           FSR
02F6   0860           01235         movfw           NumOfBins1
02F7   00DE           01236         movwf           countdown
                      01237         Display         BackStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02F8   01B3               M                 clrf    Table_Counter
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F9   0103               M                 clrw            
02FA   0833               M loop_   movf    Table_Counter,W
02FB   2???               M                 call    BackStickers
02FC   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02FD   1903               M                 btfsc   STATUS,Z
02FE   2???               M                         goto    end_
02FF   2???               M                 call    WR_DATA
0300   0AB3               M                 incf    Table_Counter,F
0301   2???               M                 goto    loop_
0302                      M end_
0302                  01238 FrontLoop2
0302   0A84           01239         INCF            FSR,1
0303   0ADF           01240         incf            counter
                      01241         PrintNumber     counter
                          M         ;movf       number ,W
0304   085F               M         movfw       counter
0305   2???               M         call        DectoChar
0306   2???               M         call        WR_DATA
                      01242         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
0307   01B3               M                 clrf    Table_Counter
0308   0103               M                 clrw            
0309   0833               M loop_   movf    Table_Counter,W
030A   2???               M                 call    Colon
030B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
030C   1903               M                 btfsc   STATUS,Z
030D   2???               M                         goto    end_
030E   2???               M                 call    WR_DATA
030F   0AB3               M                 incf    Table_Counter,F
0310   2???               M                 goto    loop_
0311                      M end_
0311   0800           01243         movfw           INDF
                      01244         PrintCol        W
0312   0800               M         movfw       W
0313   2???               M         call        StickerColours
0314   2???               M         call        WR_DATA
                      01245         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
0315   01B3               M                 clrf    Table_Counter
0316   0103               M                 clrw            
0317   0833               M loop_   movf    Table_Counter,W
0318   2???               M                 call    Spacee
0319   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
031A   1903               M                 btfsc   STATUS,Z
031B   2???               M                         goto    end_
031C   2???               M                 call    WR_DATA
031D   0AB3               M                 incf    Table_Counter,F
031E   2???               M                 goto    loop_
031F                      M end_
031F   0BDE           01246         decfsz          countdown,F
0320   2???           01247         goto            FrontLoop2
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01248         
0321   0008           01249         return
                      01250         
0322                  01251 Locations                       ;TESTED
0322   2???           01252         call            Clear_Display
0323   3000           01253         movlw           0X0
0324   00DF           01254         movwf           counter
0325   1383           01255         BCF             STATUS, IRP
0326   303A           01256         movlw           0x3A
0327   0084           01257         movwf           FSR
0328   0860           01258         movfw           NumOfBins1
0329   00DE           01259         movwf           countdown
                      01260         Display         Distances
  0000                    M                 local   loop_
  0000                    M                 local   end_
032A   01B3               M                 clrf    Table_Counter
032B   0103               M                 clrw            
032C   0833               M loop_   movf    Table_Counter,W
032D   2???               M                 call    Distances
032E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
032F   1903               M                 btfsc   STATUS,Z
0330   2???               M                         goto    end_
0331   2???               M                 call    WR_DATA
0332   0AB3               M                 incf    Table_Counter,F
0333   2???               M                 goto    loop_
0334                      M end_
0334   2???           01261         call            Switch_Lines
0335                  01262 FrontLoop       
0335   0A84           01263         INCF            FSR,1
0336   0ADF           01264         incf            counter
                      01265         PrintNumber     counter
                          M         ;movf       number ,W
0337   085F               M         movfw       counter
0338   2???               M         call        DectoChar
0339   2???               M         call        WR_DATA
                      01266         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
033A   01B3               M                 clrf    Table_Counter
033B   0103               M                 clrw            
033C   0833               M loop_   movf    Table_Counter,W
033D   2???               M                 call    Colon
033E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
033F   1903               M                 btfsc   STATUS,Z
0340   2???               M                         goto    end_
0341   2???               M                 call    WR_DATA
0342   0AB3               M                 incf    Table_Counter,F
0343   2???               M                 goto    loop_
0344                      M end_
0344   0800           01267         movfw           INDF
                      01268         Display_Dist    W
0345   01D2               M         clrf    NumL
0346   01D1               M         clrf    NumH
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0347   0800               M         movfw   W
                          M         ;movfw  TMR0
0348   00D2               M         movwf   NumL
0349   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
034A   0855               M         movfw       Hund
034B   2???               M         call        DectoChar
034C   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
034D   0856               M         movfw       Tens
034E   2???               M         call        DectoChar
034F   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
0350   0857               M         movfw       Ones
0351   2???               M         call        DectoChar
0352   2???               M         call        WR_DATA
                      01269         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
0353   01B3               M                 clrf    Table_Counter
0354   0103               M                 clrw            
0355   0833               M loop_   movf    Table_Counter,W
0356   2???               M                 call    Spacee
0357   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0358   1903               M                 btfsc   STATUS,Z
0359   2???               M                         goto    end_
035A   2???               M                 call    WR_DATA
035B   0AB3               M                 incf    Table_Counter,F
035C   2???               M                 goto    loop_
035D                      M end_
035D   0BDE           01270         decfsz          countdown,F
035E   2???           01271         goto            FrontLoop
                      01272         
035F   0008           01273         return
                      01274         
0360                  01275 TotalDistance
                      01276         
0360   2???           01277     call    Dist_Decoder
                      01278     Put_Dist_In_Reg     distreg
0361   ???? ???? 2???     M         lcall   Dist_Decoder
0364   086A               M         movfw   cm
0365   00ED               M         movwf   distreg
                      01279     Display_Dist        distreg
0366   01D2               M         clrf    NumL
0367   01D1               M         clrf    NumH
0368   086D               M         movfw   distreg
                          M         ;movfw  TMR0
0369   00D2               M         movwf   NumL
036A   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;movf       number ,W
036B   0855               M         movfw       Hund
036C   2???               M         call        DectoChar
036D   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
036E   0856               M         movfw       Tens
036F   2???               M         call        DectoChar
0370   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
0371   0857               M         movfw       Ones
0372   2???               M         call        DectoChar
0373   2???               M         call        WR_DATA
                      01280    
0374   0008           01281     return
                      01282 
                      01283                 
0375                  01284 LEDControlON
                      01285         
0375   1862           01286         btfsc       LEDcounter0,0
0376   2???           01287         goto        $+4
0377   1406           01288         bsf         LED
0378   1462           01289         bsf         LEDcounter0,0
0379   0008           01290         return
                      01291         
                      01292         
037A   1006           01293         bcf         LED
037B   1062           01294         bcf         LEDcounter0,0
037C   0008           01295         return
                      01296         
                      01297         
037D                  01298 DisplayBlackWhiteIR1
                      01299         
037D   30C5           01300         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
037E   009F           01301         movwf   ADCON0  
                      01302                 
037F   2???           01303         call            ReadBW  
0380   00C2           01304         movwf           Front1
                      01305         PrintCol        Front1
0381   0842               M         movfw       Front1
0382   2???               M         call        StickerColours
0383   2???               M         call        WR_DATA
0384   2???           01306         call            HalfS
0385   2???           01307         call            HalfS
                      01308 
0386   0008           01309         return
                      01310         
                      01311         
0387                  01312 DisplayBlackWhiteIR2
                      01313         
0387   30CD           01314         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra as the reader pin
0388   009F           01315         movwf   ADCON0  
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01316         
0389   2???           01317         call            ReadBW  
038A   00C2           01318         movwf           Front1
                      01319         PrintCol        Front1
038B   0842               M         movfw       Front1
038C   2???               M         call        StickerColours
038D   2???               M         call        WR_DATA
038E   2???           01320         call            HalfS
038F   2???           01321         call            HalfS
                      01322         
0390   0008           01323         return
                      01324 
                      01325         
0391                  01326 DisplayUSSensor1
                      01327         
0391   2???           01328         call            Read1_US
                      01329 ;       call            ClrLCD
                      01330 ;       movwf           isBinThere                  ;sets the bin bit 1 or 0
                      01331 ;       call            HalfS
                      01332 ;       call            HalfS                       ;see if half second removes feedback
                      01333         
                      01334 
                      01335         
0392   2???           01336         goto            DisplayUSSensor1
                      01337         
0393                  01338 DisplayUSSensor2
                      01339         
0393   2???           01340         call            Read2_US
                      01341         ;call           ClrLCD
                      01342         ;movwf          isColumnThere               ;sets the bin bit 1 or 0
                      01343         
0394   2???           01344         goto            DisplayUSSensor2
                      01345         
0395                  01346 StdRotation1
                      01347         
0395   1863           01348         btfsc       LEDcounter1,0
0396   2???           01349         goto        $+4
0397   1287           01350         bcf             Std1
0398   1463           01351         bsf         LEDcounter1,0
0399   0008           01352         return
                      01353         
039A   1687           01354         bsf             Std1
039B   1063           01355         bcf         LEDcounter1,0
039C   0008           01356         return
                      01357         
039D                  01358 StdRotation2
                      01359         
                      01360 ;       bcf     Std2
                      01361 ;       
039D   1864           01362         btfsc       LEDcounter2,0
039E   2???           01363         goto        $+4
                      01364         
039F   1307           01365         bcf             Std2
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03A0   1464           01366         bsf         LEDcounter2,0
03A1   0008           01367         return
                      01368         
03A2   1D06           01369         btfss       SwitchYS
03A3   1707           01370         bsf         Std2
                      01371         
03A4   1707           01372         bsf             Std2
03A5   1064           01373         bcf         LEDcounter2,0
                      01374 ;testingrotationfwd     
                      01375 ;       
                      01376 ;       btfsc   Switch
                      01377 ;       bsf     Std2
                      01378 ;       
                      01379 ;       goto    testingrotationfwd
                      01380         
03A6   0008           01381         return
                      01382                 
03A7                  01383 StdRotation1Backwards
                      01384         
03A7   1866           01385         btfsc       LEDcounter4,0
03A8   2???           01386         goto        $+4
03A9   1407           01387         bsf             Std1Backwards
03AA   1466           01388         bsf         LEDcounter4,0
03AB   0008           01389         return
                      01390         
03AC   1007           01391         bcf             Std1Backwards
03AD   1066           01392         bcf         LEDcounter4,0
03AE   0008           01393         return
                      01394         
03AF                  01395 StdRotation2Backwards
                      01396         
                      01397 ;       bcf         Std2Backwards
                      01398         
03AF   1867           01399         btfsc       LEDcounter5,0
03B0   2???           01400         goto        $+4
03B1   1787           01401         bsf             Std2Backwards
03B2   1467           01402         bsf         LEDcounter5,0
03B3   0008           01403         return
                      01404         
03B4   1D06           01405         btfss       SwitchYS
03B5   1707           01406         bsf         Std2
                      01407         
03B6   1387           01408         bcf             Std2Backwards
03B7   1067           01409         bcf         LEDcounter5,0
03B8   0008           01410         return
                      01411         
                      01412 ;testingrotationback    
                      01413 ;       
                      01414 ;       
                      01415 ;       call    Clear_Display
                      01416 ;       btfsc   Switch
                      01417 ;       bsf     Std2Backwards
                      01418 ;       
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01419 ;       goto    testingrotationback
                      01420         
03B9                  01421 PWMFWD  
                      01422         
                      01423     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01424     
                      01425     ;save   pr2 value so that you can zero it after
                      01426     
03B9   1868           01427     btfsc           LEDcounter7,0
03BA   2???           01428     goto            $+4
03BB   0197           01429     clrf            CCP1CON
03BC   1468           01430     bsf             LEDcounter7,0
03BD   0008           01431     return
                      01432     
03BE   1683 1303      01433     BANKSEL TRISC
03C0   1107           01434     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01435     
03C1   0817           01436     MOVF     CCP1CON,W          ;set CCP1 as PWM
03C2   39F0           01437     ANDLW    0xF0
03C3   380C           01438     IORLW    0x0C
03C4   0097           01439     MOVWF    CCP1CON
                      01440 
03C5   0812           01441     movfw   PR2
03C6   00D0           01442     movwf   pr2temp
                      01443     
                      01444     ;11000011
03C7   30C3           01445     MOVLW    b'11000011'        ;set highest PWM value
03C8   1683 1303      01446     BANKSEL  PR2                
03CA   0092           01447     MOVWF    PR2                
03CB   1283 1303      01448     BANKSEL  TMR2               
                      01449     
03CD   1492           01450     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01451     
03CE   0195           01452     CLRF    CCPR1L              ;set PWM to zero
                      01453     
03CF   1712           01454     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
03D0   1692           01455     BSF     T2CON, TOUTPS2
03D1   1612           01456     BSF     T2CON, TOUTPS1
03D2   1592           01457     BSF     T2CON, TOUTPS0
                      01458     
                      01459     ; SET PWM duty cycle
                      01460     ;01001110
03D3   1697           01461     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
03D4   1617           01462     BSF     CCP1CON, 4
                      01463     MOVLF   B'01100000', CCPR1L                 ; previous was 01101
03D5   3060               M     MOVLW  B'01100000'  ; move literal into working register
03D6   0095               M     MOVWF   CCPR1L      ; move working register into reg
03D7   1597           01464     BSF     CCP1CON, 3
03D8   1517           01465     BSF     CCP1CON, 2
                      01466     
03D9   1512           01467     BSF     T2CON, TMR2ON       ;and start the timer running
                      01468  
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03DA   1068           01469     bcf             LEDcounter7,0
                      01470     
03DB   0008           01471     return
                      01472     
03DC                  01473 PWMBACK
                      01474     
                      01475     ;************ SECOND PWM - Positive one ******************************
                      01476     
03DC   1869           01477     btfsc           LEDcounter8,0
03DD   2???           01478     goto            $+4
03DE   019D           01479     clrf            CCP2CON
                      01480     ;bcf                    PORTC,1
03DF   1469           01481     bsf             LEDcounter8,0
03E0   0008           01482     return
                      01483     
                      01484  
                      01485     
03E1   1683 1303      01486     BANKSEL TRISC
03E3   1087           01487     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01488     
03E4   081D           01489     MOVF     CCP2CON,W          ;set CCP2 as PWM
03E5   39F0           01490     ANDLW    0xF0
03E6   380C           01491     IORLW    0x0C
03E7   009D           01492     MOVWF    CCP2CON
                      01493     
                      01494     ;11000011
03E8   30C3           01495     MOVLW    b'11000011'        ;set highest PWM value
03E9   1683 1303      01496     BANKSEL  PR2                
03EB   0092           01497     MOVWF    PR2                
03EC   1283 1303      01498     BANKSEL  TMR2               
                      01499     
03EE   1492           01500     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01501     
03EF   019B           01502     CLRF    CCPR2L              ;set PWM to zero
                      01503     
03F0   1712           01504     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
03F1   1692           01505     BSF     T2CON, TOUTPS2
03F2   1612           01506     BSF     T2CON, TOUTPS1
03F3   1592           01507     BSF     T2CON, TOUTPS0
                      01508     
                      01509     ; SET PWM duty cycle
                      01510     ;01001110
03F4   169D           01511     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
03F5   161D           01512     BSF     CCP2CON, 4
03F6   3060           01513     MOVLW   B'01100000'                         ; good speed for moving the arm
03F7   009B           01514     MOVWF   CCPR2L      
03F8   159D           01515     BSF     CCP2CON, 3
03F9   151D           01516     BSF     CCP2CON, 2
                      01517     
03FA   1512           01518     BSF     T2CON, TMR2ON       ;and start the timer running
03FB   1283           01519     BCF     STATUS,RP0
                      01520     
                      01521     ;bsf                    PORTC,1
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01522     
03FC   1069           01523     bcf             LEDcounter8,0
                      01524     
03FD   0008           01525     return
                      01526     
03FE                  01527 PWMSTOP
                      01528     
03FE   0197           01529     clrf   CCP1CON
03FF   019D           01530     clrf   CCP2CON
0400   0850           01531     movfw   pr2temp
0401   0092           01532     movwf   PR2
                      01533     
0402   0008           01534     return
                      01535         
                      01536         
                      01537 ;***************************************
                      01538 ; LCD control
                      01539 ;***************************************
0403                  01540 Switch_Lines
0403   30C0           01541                 movlw   B'11000000'
0404   2???           01542                 call    WR_INS
0405   0008           01543                 return
                      01544 
0406                  01545 Clear_Display
0406   3001           01546                 movlw   B'00000001'
0407   2???           01547                 call    WR_INS
0408   0008           01548                 return
                      01549 
                      01550 ;***************************************
                      01551 ; Delay 0.5s
                      01552 ;***************************************
0409                  01553 HalfS   
  0000                01554         local   HalfS_0
0409   3088           01555       movlw 0x88
040A   00B0           01556       movwf COUNTH
040B   30BD           01557       movlw 0xBD
040C   00B1           01558       movwf COUNTM
040D   3003           01559       movlw 0x03
040E   00B2           01560       movwf COUNTL
                      01561 
040F                  01562 HalfS_0
040F   0BB0           01563       decfsz COUNTH, f
0410   2???           01564       goto   $+2
0411   0BB1           01565       decfsz COUNTM, f
0412   2???           01566       goto   $+2
0413   0BB2           01567       decfsz COUNTL, f
0414   2???           01568       goto   HalfS_0
                      01569 
0415   2???           01570       goto $+1
0416   0000           01571       nop
0417   0000           01572       nop
0418   0008           01573                 return
                      01574                 
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01575 ;***************************************
                      01576 ;***************************************
                      01577 ; Delay = 0.75 seconds
                      01578 ; Clock frequency = 4 MHz
0419                  01579 DELAY1
0419   3086           01580         movlw   0x86
041A   00B5           01581         movwf   lcd_d1
041B   30A3           01582         movlw   0xA3
041C   00B6           01583         movwf   lcd_d2
041D   3002           01584         movlw   0x02
041E   00EE           01585         movwf   lcd_d1_2
041F                  01586 Delay_0
041F   0BB5           01587         decfsz  lcd_d1, f
0420   2???           01588         goto    $+2
0421   0BB6           01589         decfsz  lcd_d2, f
0422   2???           01590         goto    $+2
0423   0BEE           01591         decfsz  lcd_d1_2, f
0424   2???           01592         goto    Delay_0
                      01593 
                      01594                         ;1 cycle
0425   0000           01595         nop
                      01596         
                      01597 ;0.25s delay    
                      01598         
0426                  01599 DELAY2
                      01600                         ;249998 cycles
0426   304F           01601         movlw   0x4F
0427   00B5           01602         movwf   lcd_d1
0428   30C4           01603         movlw   0xC4
0429   00B6           01604         movwf   lcd_d2
042A                  01605 Delay_02
042A   0BB5           01606         decfsz  lcd_d1, f
042B   2???           01607         goto    $+2
042C   0BB6           01608         decfsz  lcd_d2, f
042D   2???           01609         goto    Delay_0
                      01610 
                      01611                         ;2 cycles
042E   2???           01612         goto    $+1
                      01613         
                      01614 ;***************************************
                      01615 ;Init_TMR0
                      01616 ;   Input:  RA4
                      01617 ;   Output: TMR0 register
                      01618 ;   desc:   Counts the clock pulses for the
                      01619 ;           rotary encoder
                      01620 ;****************************************
042F                  01621 Init_TMR0                           ; INITIALIZE TIMER 0   
042F   1683 1303      01622     BANKSEL OPTION_REG
                      01623     MOVLF   B'00101000', OPTION_REG
0431   3028               M     MOVLW  B'00101000'  ; move literal into working register
0432   0081               M     MOVWF   OPTION_REG  ; move working register into reg
                      01624     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01625     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01626     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01627     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01628     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01629     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01630     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01631     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
0433   1283 1303      01632     BANKSEL TMR0
0435   0181           01633     CLRF   TMR0                     ; Clear timer 0
0436   0008           01634     return  
                      01635     
                      01636 ;************************************
                      01637 ; RTC Sublabels
                      01638 ;************************************
                      01639     
0437                  01640 show_RTC
                      01641                 ;clear LCD screen
0437   3001           01642                 movlw   b'00000001'
0438   2???           01643                 call    WR_INS
                      01644 
                      01645                 ;Get year
0439   3032           01646                 movlw   "2"                             ;First line shows 20**/**/**
043A   2???           01647                 call    WR_DATA
043B   3030           01648                 movlw   "0"
043C   2???           01649                 call    WR_DATA
                      01650                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
043D   3006               M         movlw   0x06
043E   1283 1303          M         banksel 0x73
0440   00F3               M         movwf   0x73
0441   2???               M         call    read_rtc
0442   1283 1303          M         banksel 0x75
0444   0875               M         movf    0x75,w
0445   2???               M         call    rtc_convert   
0446   0877           01651                 movfw   0x77
0447   2???           01652                 call    WR_DATA
0448   0878           01653                 movfw   0x78
0449   2???           01654                 call    WR_DATA
                      01655 
044A   302F           01656                 movlw   "/"
044B   2???           01657                 call    WR_DATA
                      01658 
                      01659                 ;Get month
                      01660                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       0x77 and the ones digit is placed in 0x78
044C   3005               M         movlw   0x05
044D   1283 1303          M         banksel 0x73
044F   00F3               M         movwf   0x73
0450   2???               M         call    read_rtc
0451   1283 1303          M         banksel 0x75
0453   0875               M         movf    0x75,w
0454   2???               M         call    rtc_convert   
0455   0877           01661                 movfw   0x77
0456   2???           01662                 call    WR_DATA
0457   0878           01663                 movfw   0x78
0458   2???           01664                 call    WR_DATA
                      01665 
0459   302F           01666                 movlw   "/"
045A   2???           01667                 call    WR_DATA
                      01668 
                      01669                 ;Get day
                      01670                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
045B   3004               M         movlw   0x04
045C   1283 1303          M         banksel 0x73
045E   00F3               M         movwf   0x73
045F   2???               M         call    read_rtc
0460   1283 1303          M         banksel 0x75
0462   0875               M         movf    0x75,w
0463   2???               M         call    rtc_convert   
0464   0877           01671                 movfw   0x77
0465   2???           01672                 call    WR_DATA
0466   0878           01673                 movfw   0x78
0467   2???           01674                 call    WR_DATA
                      01675 
0468   30C0           01676                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
0469   2???           01677                 call    WR_INS
                      01678 
                      01679                 ;Get hour
                      01680                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
046A   3002               M         movlw   0x02
046B   1283 1303          M         banksel 0x73
046D   00F3               M         movwf   0x73
046E   2???               M         call    read_rtc
046F   1283 1303          M         banksel 0x75
0471   0875               M         movf    0x75,w
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0472   2???               M         call    rtc_convert   
0473   0877           01681                 movfw   0x77
0474   2???           01682                 call    WR_DATA
0475   0878           01683                 movfw   0x78
0476   2???           01684                 call    WR_DATA
0477   303A           01685                 movlw                   ":"
0478   2???           01686                 call    WR_DATA
                      01687 
                      01688                 ;Get minute             
                      01689                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0479   3001               M         movlw   0x01
047A   1283 1303          M         banksel 0x73
047C   00F3               M         movwf   0x73
047D   2???               M         call    read_rtc
047E   1283 1303          M         banksel 0x75
0480   0875               M         movf    0x75,w
0481   2???               M         call    rtc_convert   
0482   0877           01690                 movfw   0x77
0483   2???           01691                 call    WR_DATA
0484   0878           01692                 movfw   0x78
0485   2???           01693                 call    WR_DATA         
0486   303A           01694                 movlw                   ":"
0487   2???           01695                 call    WR_DATA
                      01696                 
                      01697                 ;Get seconds
                      01698                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0488   3000               M         movlw   0x00
0489   1283 1303          M         banksel 0x73
048B   00F3               M         movwf   0x73
048C   2???               M         call    read_rtc
048D   1283 1303          M         banksel 0x75
048F   0875               M         movf    0x75,w
0490   2???               M         call    rtc_convert   
0491   0877           01699                 movfw   0x77
0492   2???           01700                 call    WR_DATA
0493   0878           01701                 movfw   0x78
0494   2???           01702                 call    WR_DATA
                      01703                 
0495   2???           01704                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
0496   0008           01705                 return
                      01706 
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01707 ;***************************************
                      01708 ; Setup RTC with time defined by user
                      01709 ;***************************************
0497                  01710 set_rtc_time
                      01711 
                      01712                 ;rtc_resetAll   ;reset rtc
                      01713                 ;works up to here
                      01714 
                      01715                 ;rtc_set        0x00,   B'10000000'
                      01716                 ;works up to here
                      01717                 
                      01718                 ;set time 
                      01719 ;               rtc_set 0x06,   B'00010110'             ; Year
                      01720 ;               ;works up to here
                      01721 ;               rtc_set 0x05,   B'00000011'             ; Month
                      01722 ;               rtc_set 0x04,   B'00100000'             ; Date
                      01723                 ;works up to here
                      01724                 ;rtc_set        0x03,   B'00100010'             ; Day
                      01725                 ;stops working on this one^
                      01726                 ;seems like day is the one that crashes it
                      01727                 rtc_set 0x02,   B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0497   1283 1303          M         banksel 0x73
0499   3002               M         movlw   0x02
049A   00F3               M         movwf   0x73
049B   1283 1303          M         banksel 0x74
049D   3000               M         movlw   B'00000000'
049E   00F4               M         movwf   0x74    
049F   2???               M         call    write_rtc
                      01728                 ;works on this one
                      01729                 rtc_set 0x01,   B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
04A0   1283 1303          M         banksel 0x73
04A2   3001               M         movlw   0x01
04A3   00F3               M         movwf   0x73
04A4   1283 1303          M         banksel 0x74
04A6   3000               M         movlw   B'00000000'
04A7   00F4               M         movwf   0x74    
04A8   2???               M         call    write_rtc
                      01730                 ;works on this one
                      01731                 rtc_set 0x00,   B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       address specified by addliteral in the RTC
04A9   1283 1303          M         banksel 0x73
04AB   3000               M         movlw   0x00
04AC   00F3               M         movwf   0x73
04AD   1283 1303          M         banksel 0x74
04AF   3000               M         movlw   B'00000000'
04B0   00F4               M         movwf   0x74    
04B1   2???               M         call    write_rtc
                      01732                 ;works on this one
04B2   0008           01733                 return
                      01734 
                      01735 ;***************************************
                      01736 ; Delay 1s
                      01737 ;***************************************
04B3                  01738 OneS
  0000                01739                 local   OneS_0
04B3   3010           01740       movlw 0x10
04B4   00B0           01741       movwf COUNTH
04B5   307A           01742       movlw 0x7A
04B6   00B1           01743       movwf COUNTM
04B7   3006           01744       movlw 0x06
04B8   00B2           01745       movwf COUNTL
                      01746 
04B9                  01747 OneS_0
04B9   0BB0           01748       decfsz COUNTH, f
04BA   2???           01749       goto   $+2
04BB   0BB1           01750       decfsz COUNTM, f
04BC   2???           01751       goto   $+2
04BD   0BB2           01752       decfsz COUNTL, f
04BE   2???           01753       goto   OneS_0
                      01754 
04BF   2???           01755       goto $+1
04C0   0000           01756       nop
04C1   0000           01757       nop
04C2   0008           01758                 return
                      01759 
04C3                  01760 lcdLongDelay
04C3   3014           01761     movlw d'20'
04C4   00B6           01762     movwf lcd_d2
04C5                  01763 LLD_LOOP
                      01764     LCD_DELAY
04C5   30FF               M         movlw   0xFF
04C6   00B5               M         movwf   lcd_d1
04C7   0BB5               M         decfsz  lcd_d1,f
04C8   2???               M         goto    $-1
04C9   0BB6           01765     decfsz lcd_d2,f
04CA   2???           01766     goto LLD_LOOP
04CB   0008           01767     return
                      01768     
                      01769 ;***************************************
                      01770 ; Look up table
                      01771 ;***************************************
                      01772     
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04CC                  01773 Welcome_Msg
                      01774         
                      01775         ;Change Page
04CC   00BA           01776         movwf   Temp
04CD   30??           01777         movlw   HIGH Welcome_MsgEntries
04CE   008A           01778         movwf   PCLATH
04CF   083A           01779         movf    Temp,w
04D0   3E??           01780         addlw   LOW Welcome_MsgEntries
04D1   1803           01781         btfsc   STATUS,C
04D2   0A8A           01782             incf    PCLATH,f
04D3   0082           01783         movwf   PCL     
04D4   0782           01784         addwf    PCL,F
04D5                  01785 Welcome_MsgEntries
04D5   3431 343A 3453 01786         dt        "1:Simulation|#/D:PWM|*/0:Std1&Std2|3:B/W", 0
       3469 346D 3475 
       346C 3461 3474 
       3469 346F 346E 
       347C 3423 342F 
       3444 343A 3450 
       3457 344D 347C 
       342A 342F 3430 
       343A 3453 3474 
       3464 3431 3426 
       3453 3474 3464 
       3432 347C 3433 
       343A 3442 342F 
       3457 3400 
                      01787         
04FE                  01788 Welcome_Msg2
                      01789         
                      01790         ;Change Page
04FE   00BA           01791         movwf   Temp
04FF   30??           01792         movlw   HIGH Welcome_Msg2Entries
0500   008A           01793         movwf   PCLATH
0501   083A           01794         movf    Temp,w
0502   3E??           01795         addlw   LOW Welcome_Msg2Entries
0503   1803           01796         btfsc   STATUS,C
0504   0A8A           01797             incf    PCLATH,f
0505   0082           01798         movwf   PCL     
0506   0782           01799         addwf    PCL,F
0507                  01800 Welcome_Msg2Entries
0507   3435 3444 3469 01801         dt        "5Distance 6Locations", 0
       3473 3474 3461 
       346E 3463 3465 
       3420 3436 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01802         
051C                  01803 FinalMessage
                      01804         
                      01805         ;Change Page
051C   00BA           01806         movwf    Temp
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

051D   30??           01807         movlw   HIGH FinalMessageEntries
051E   008A           01808         movwf   PCLATH
051F   083A           01809         movf    Temp,w
0520   3E??           01810         addlw   LOW FinalMessageEntries
0521   1803           01811         btfsc   STATUS,C
0522   0A8A           01812             incf    PCLATH,f
0523   0082           01813         movwf   PCL
0524   0782           01814         addwf    PCL,F
0525                  01815 FinalMessageEntries
0525   3431 3454 3469 01816         dt        "1Time 3Stickers 4#Bins",0
       346D 3465 3420 
       3433 3453 3474 
       3469 3463 346B 
       3465 3472 3473 
       3420 3434 3423 
       3442 3469 346E 
       3473 3400 
                      01817         
053C                  01818 DectoChar
                      01819         
                      01820         ;Change Page
053C   00BA           01821         movwf   Temp
053D   30??           01822         movlw   HIGH DectoCharEntries
053E   008A           01823         movwf   PCLATH
053F   083A           01824         movf    Temp,w
0540   3E??           01825         addlw   LOW DectoCharEntries
0541   1803           01826         btfsc   STATUS,C
0542   0A8A           01827             incf    PCLATH,f
0543   0082           01828         movwf   PCL     
0544   0782           01829         addwf    PCL,F
0545                  01830 DectoCharEntries
0545   3430 3431 3432 01831         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01832         
0550                  01833 StickerColours
                      01834         
                      01835         ;Change Page
0550   00BA           01836         movwf   Temp
0551   30??           01837         movlw   HIGH StickerColoursEntries
0552   008A           01838         movwf   PCLATH
0553   083A           01839         movf    Temp,w
0554   3E??           01840         addlw   LOW StickerColoursEntries
0555   1803           01841         btfsc   STATUS,C
0556   0A8A           01842             incf    PCLATH,f
0557   0082           01843         movwf   PCL     
0558   0782           01844         addwf    PCL,F
0559                  01845 StickerColoursEntries
0559   3442 3457 3400 01846         dt        "BW",  0
                      01847         
055C                  01848 FrontStickers
                      01849 
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01850         ;Change Page
055C   00BA           01851         movwf   Temp
055D   30??           01852         movlw   HIGH FrontStickersEntries
055E   008A           01853         movwf   PCLATH
055F   083A           01854         movf    Temp,w
0560   3E??           01855         addlw   LOW FrontStickersEntries
0561   1803           01856         btfsc   STATUS,C
0562   0A8A           01857             incf    PCLATH,f
0563   0082           01858         movwf   PCL     
0564   0782           01859         addwf    PCL,F
0565                  01860 FrontStickersEntries
0565   3446 3472 346F 01861         dt        "Front",  0
       346E 3474 3400 
                      01862         
056B                  01863 BackStickers
                      01864 
                      01865         ;Change Page
056B   00BA           01866         movwf   Temp
056C   30??           01867         movlw   HIGH BackStickersEntries
056D   008A           01868         movwf   PCLATH
056E   083A           01869         movf    Temp,w
056F   3E??           01870         addlw   LOW BackStickersEntries
0570   1803           01871         btfsc   STATUS,C
0571   0A8A           01872             incf    PCLATH,f
0572   0082           01873         movwf   PCL     
0573   0782           01874         addwf    PCL,F
0574                  01875 BackStickersEntries
0574   3442 3461 3463 01876         dt        "Back",  0
       346B 3400 
                      01877         
0579                  01878 Spacee
                      01879 
                      01880         ;Change Page
0579   00BA           01881         movwf   Temp
057A   30??           01882         movlw   HIGH SpaceeEntries
057B   008A           01883         movwf   PCLATH
057C   083A           01884         movf    Temp,w
057D   3E??           01885         addlw   LOW SpaceeEntries
057E   1803           01886         btfsc   STATUS,C
057F   0A8A           01887             incf    PCLATH,f
0580   0082           01888         movwf   PCL     
0581   0782           01889         addwf    PCL,F
0582                  01890 SpaceeEntries
0582   3420 3400      01891         dt        " ",  0
                      01892         
0584                  01893 Colon
                      01894 
                      01895         ;Change Page
0584   00BA           01896         movwf   Temp
0585   30??           01897         movlw   HIGH ColonEntries
0586   008A           01898         movwf   PCLATH
0587   083A           01899         movf    Temp,w
0588   3E??           01900         addlw   LOW ColonEntries
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0589   1803           01901         btfsc   STATUS,C
058A   0A8A           01902             incf    PCLATH,f
058B   0082           01903         movwf   PCL     
058C   0782           01904         addwf    PCL,F
058D                  01905 ColonEntries
058D   343A 3400      01906         dt        ":",  0
                      01907         
058F                  01908 Distances
                      01909 
                      01910         ;Change Page
058F   00BA           01911         movwf   Temp
0590   30??           01912         movlw   HIGH DistancesEntries
0591   008A           01913         movwf   PCLATH
0592   083A           01914         movf    Temp,w
0593   3E??           01915         addlw   LOW DistancesEntries
0594   1803           01916         btfsc   STATUS,C
0595   0A8A           01917             incf    PCLATH,f
0596   0082           01918         movwf   PCL     
0597   0782           01919         addwf    PCL,F
0598                  01920 DistancesEntries
0598   3444 3469 3473 01921         dt        "Dist (cm)",  0
       3474 3420 3428 
       3463 346D 3429 
       3400 
                      01922             
3F72                  01923         END
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AVOIDCOLUMN                       000000E7
AddBin                            000002B1
BANK0                             
BANK1                             
BANK2                             
BANK3                             
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
BWScanModule1                     000001B0
BWScanModule2                     000001D6
BWStoreModule1                    000001C9
BWStoreModule2                    000001EF
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BackStickers                      0000056B
BackStickersEntries               00000574
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHECKSWITCH                       00000156
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Clear_Display                     00000406
ClrLCD                            00000000
ColMotor                          PORTC,7
Colon                             00000584
ColonEntries                      0000058D
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DELAY1                            00000419
DELAY2                            00000426
DELAYEDREAD                       0000014D
D_A                               00000005
D_NOT_A                           00000005
Decode_check_done                 00000281
Decode_loop                       00000276
DectoChar                         0000053C
DectoCharEntries                  00000545
Delay_0                           0000041F
Delay_02                          0000042A
Display                           
DisplayBlackWhiteIR1              0000037D
DisplayBlackWhiteIR2              00000387
DisplayUSSensor1                  00000391
DisplayUSSensor2                  00000393
Display_Dist                      
Dist_Decoder                      0000026E
Distances                         0000058F
DistancesEntries                  00000598
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENDTHIS                           00000153
EXIT                              00000161
EXITDISPLAY                       00000183
F                                 00000001
FERR                              00000002
FSR                               00000004
FinalMessage                      0000051C
FinalMessageEntries               00000525
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         00000335
FrontLoop1                        000002D1
FrontLoop2                        00000302
FrontStickers                     0000055C
FrontStickersEntries              00000565
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             00000409
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         0000042F
Key                               
KeypadandLCD                      00000093
LCD_DELAY                         
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

LED                               PORTB,0
LEDControlON                      00000375
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter7                       00000068
LEDcounter8                       00000069
LLD_LOOP                          000004C5
Lb1                               00000022
Lb2                               00000026
Lb3                               0000002A
Lb4                               0000002E
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
Locations                         00000322
MOV                               
MOVEFWDFORABIT                    0000017A
MOVLF                             
MoveBackwards                     000001AF
NOTPWMBACK                        PORTC,1
NOTPWMFWD                         PORTC,2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              00000051
NumL                              00000052
NumOfBins1                        00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              000004B3
Ones                              00000057
P                                 00000004
PCFG0                             00000000
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           000003DC
PWMFWD                            000003B9
PWMSTOP                           000003FE
PrintCol                          
PrintNumber                       
Put_Dist_In_Reg                   
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READBIN                           00000118
READ_WRITE                        00000002
RETURNFROMCOLUMN                  0000010C
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        0000029B
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          0000021C
Read1_US1                         00000239
Read2_US                          00000245
Read2_US1                         00000262
ReadBW                            000001FC
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         00000297
ShowBins                          000002BB
Spacee                            00000579
SpaceeEntries                     00000582
Std1                              PORTC,5
Std1Backwards                     PORTC,0
Std2                              PORTC,6
Std2Backwards                     PORTC,7
StdRotation1                      00000395
StdRotation1Backwards             000003A7
StdRotation2                      0000039D
StdRotation2Backwards             000003AF
StickerColours                    00000550
StickerColoursEntries             00000559
Stickers1                         000002BF
Stickers2                         000002F1
StoreBW1                          000002A5
StoreBW2                          000002AB
StoreThisDistance                 0000028A
SwitchYD                          PORTB,3
SwitchYS                          PORTB,2
Switch_Lines                      00000403
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTAL                             0000013D
TOTAL1                            00000141
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
TotalDistance                     00000360
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
Welcome_Msg                       000004CC
Welcome_Msg2                      000004FE
Welcome_Msg2Entries               00000507
Welcome_MsgEntries                000004D5
Z                                 00000002
_.org_0_0094                      00000094
_.org_0_00E4                      000000E4
_.org_0_00EC                      000000EC
_.org_0_0107                      00000107
_.org_0_0115                      00000115
_.org_0_0159                      00000159
_.org_0_015E                      0000015E
_.org_0_0184                      00000184
_.org_0_01AC                      000001AC
_.org_0_01B2                      000001B2
_.org_0_01D8                      000001D8
_.org_0_01FE                      000001FE
_.org_0_023F                      0000023F
_.org_0_0242                      00000242
_.org_0_0268                      00000268
_.org_0_026B                      0000026B
_.org_0_0376                      00000376
_.org_0_0396                      00000396
_.org_0_039E                      0000039E
_.org_0_03A8                      000003A8
_.org_0_03B0                      000003B0
_.org_0_03BA                      000003BA
_.org_0_03DD                      000003DD
_.org_0_0410                      00000410
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_0412                      00000412
_.org_0_0415                      00000415
_.org_0_0420                      00000420
_.org_0_0422                      00000422
_.org_0_042B                      0000042B
_.org_0_042E                      0000042E
_.org_0_04BA                      000004BA
_.org_0_04BC                      000004BC
_.org_0_04BF                      000004BF
_.org_0_04C8                      000004C8
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
backstickerValues                 0000005C
bin16_BCD                         00000001
binCounter                        0000005D
cm                                0000006A
MPASM 5.65                          MAIN.ASM   4-2-2016  22:37:26         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

com                               00000037
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay3                            00000061
distanceMoved                     00000058
distreg                           0000006D
frontstickerValues                0000005B
goback                            000000E6
i2c_common_setup                  00000000
init                              00000034
isBinThere                        0000005A
isColumnThere                     00000059
lcdLongDelay                      000004C3
lcd_d1                            00000035
lcd_d1_2                          0000006E
lcd_d2                            00000036
lcd_tmp                           00000034
m                                 0000006C
mm                                0000006B
mm_overflow                       00000286
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      00000497
show_RTC                          00000437
temp                              00000039
write_rtc                         00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    37 suppressed

