MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1       ;3B PC
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5       
  00000040            00038                 Location6       ;40 PC
  00000041            00039                 Location7
  00000042            00040                 Front1          ;42 PC7
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ; 49 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7           ;50
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins1                      
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0, LEDcounter1,LEDcounter2,LEDcounter3,LEDcounter4,LEDcounter5,LEDcounter7,LED
                            counter8
  0000006A            00073                 cm
  0000006B            00074                 mm
  0000006C            00075                 m
  0000006D            00076                 distreg
  0000006E            00077                 lcd_d1_2
  0000006F            00078                 count_highs             ;the number of consecutive high counter for the US sensor
  00000070            00079                 temp_2
                      00080         endc    
                      00081 
                      00082         ;Declare constants for pin assignments (LCD on PORTD)
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083                 #define RS      PORTD,2
                      00084                 #define E       PORTD,3
                      00085                 #define IR1     PORTA,0
                      00086                 #define IR2     PORTA,1
                      00087                 #define ColMotor PORTC,7
                      00088                 #define UST1    PORTD,0
                      00089                 #define US1E1   PORTA,2
                      00090                 #define UST2    PORTD,1
                      00091                 #define US1E2   PORTA,3
                      00092                 #define LED     PORTB,0
                      00093                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00094                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00095                 #define Std1Backwards   PORTC,0
                      00096                 #define Std2Backwards   PORTC,7
                      00097                 #define SwitchWhite             PORTB,2     ; or gated switch to stop motor motion
                      00098                 #define SwitchArm               PORTB,3
                      00099                 #define NOTPWMFWD               PORTC,2
                      00100                 #define NOTPWMBACK              PORTC,1
                      00101                 #define MAX_HIGHS       0x3
                      00102                 ;SHAFTIR is PORTA,4
                      00103                 ;PWMFWD is RC2
                      00104                 ;PWMBACK is RC1
                      00105                 
                      00106                 
                      00107 ;distanceMoved  equ     b'0'
                      00108 
                      00109          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00110          goto      init       ;Just jump to the main code section.
                      00111          
                      00112          ;ORG      0x100        ;this command is sketchy
                      00113 
                      00114 ;*******************************************************************************
                      00115 ; MACROS
                      00116 ;*******************************************************************************
                      00117          
                      00118 Key      macro  value, subroutine
                      00119          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00120          andlw          0x0F
                      00121          xorlw          value
                      00122          btfsc          STATUS, Z
                      00123          call           subroutine
                      00124         endm
                      00125 
                      00126 Rotation macro  value
                      00127          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00128          andlw          0x0F
                      00129          xorlw          value
                      00130          btfsc          STATUS, Z
                      00131          call           ShiftLeft
                      00132         endm
                      00133 
                      00134 ;***************************************
                      00135 ; Delay: ~160us macro
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136 ;***************************************
                      00137 LCD_DELAY macro
                      00138         movlw   0xFF
                      00139         movwf   lcd_d1
                      00140         decfsz  lcd_d1,f
                      00141         goto    $-1
                      00142         endm
                      00143         
                      00144 ;***************************************
                      00145 ; Display macro
                      00146 ;***************************************
                      00147 Display macro   Message
                      00148                 local   loop_
                      00149                 local   end_
                      00150                 clrf    Table_Counter
                      00151                 clrw            
                      00152 loop_   movf    Table_Counter,W
                      00153                 call    Message
                      00154                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00155                 btfsc   STATUS,Z
                      00156                         goto    end_
                      00157                 call    WR_DATA
                      00158                 incf    Table_Counter,F
                      00159                 goto    loop_
                      00160 end_
                      00161                 endm
                      00162                 
                      00163 ;***************************************
                      00164 ; MOVLF macro   [TESTED]
                      00165 ;***************************************
                      00166 MOVLF   Macro   literal, reg
                      00167     MOVLW  literal      ; move literal into working register
                      00168     MOVWF   reg         ; move working register into reg
                      00169     endm
                      00170 
                      00171 ;***************************************
                      00172 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00173 ;***************************************
                      00174 MOV     Macro   reg1, reg2
                      00175     MOVF  reg1,W        ; move reg1 into working register
                      00176     MOVWF   reg2        ; reg2 <- reg1
                      00177     endm
                      00178     
                      00179 ;***************************************
                      00180 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00181 ;***************************************
                      00182 ADDL    Macro   Destination, reg, literal
                      00183     MOVLW  literal      ; move literal into working register
                      00184     ADDWF   reg,W       ; W <- literal + reg
                      00185     MOVWF   Destination ; Destination <- literal + reg
                      00186     endm
                      00187     
                      00188 ;***************************************
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00189 ; ADD macro, Adds two registers together    [TESTED]
                      00190 ;***************************************
                      00191 ADD     Macro   Destination, reg1, reg2
                      00192     MOVF    reg1,W      ; move literal into working register
                      00193     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00194     MOVWF   Destination ; Destination <- reg1 + reg2
                      00195     endm
                      00196 ;***************************************
                      00197 ; Number to Printable
                      00198 ;***************************************
                      00199 PrintNumber macro       number
                      00200         ;movf       number ,W
                      00201         movfw       number
                      00202         call        DectoChar
                      00203         call        WR_DATA
                      00204         endm
                      00205 ;***************************************
                      00206 ; Store_Dist macro --> Stores current
                      00207 ;   distance and stores it in Bin_Dist_reg
                      00208 ;***************************************                
                      00209 Put_Dist_In_Reg macro    Bin_Dist_reg
                      00210         lcall   Dist_Decoder
                      00211         movfw   cm
                      00212         movwf   Bin_Dist_reg
                      00213     endm
                      00214     
                      00215 ;***************************************
                      00216 ; Display_Dist macro --> Takes value in Bin_Dist_reg
                      00217 ;   and converts it into a BCD and prints it
                      00218 ;   To the LCD
                      00219 ;***************************************                
                      00220 Display_Dist macro    Bin_Dist_reg
                      00221     MOV     Bin_Dist_reg, temp  ; Bin_Dist_reg --> temp
                      00222     call    Distance_Display
                      00223     endm
                      00224 ;*********************************************************
                      00225 ;   Distance_Display            
                      00226 ;   input:      temp
                      00227 ;   Output:     LCD
                      00228 ;   desc:       Decodes the distance and prints to the LCD
                      00229 ;*********************************************************      
0001                  00230 Distance_Display
0001   2???           00231         call    Dist_Decoder        ; outputs m and cm regs to display
                      00232         PrintNumber     m
                          M         ;movf       number ,W
0002   086C               M         movfw       m
0003   2???               M         call        DectoChar
0004   2???               M         call        WR_DATA
0005   01D2           00233         clrf    NumL
0006   01D1           00234         clrf    NumH
                      00235         MOV     cm, NumL
0007   086A               M     MOVF  cm,W          ; move reg1 into working register
0008   00D2               M     MOVWF   NumL        ; reg2 <- reg1
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009   2???           00236         call    bin16_BCD
                      00237         PrintNumber     Tens        ; Print cm
                          M         ;movf       number ,W
000A   0856               M         movfw       Tens
000B   2???               M         call        DectoChar
000C   2???               M         call        WR_DATA
                      00238         PrintNumber     Ones
                          M         ;movf       number ,W
000D   0857               M         movfw       Ones
000E   2???               M         call        DectoChar
000F   2???               M         call        WR_DATA
0010   0008           00239         return
                      00240 ;***************************************
                      00241 ; Number to Colour
                      00242 ;***************************************
                      00243 PrintCol macro      number
                      00244         movfw       number
                      00245         call        StickerColours
                      00246         call        WR_DATA
                      00247         endm    
                      00248 
                      00249 ;***************************************
                      00250 ;           US READ MACRO
                      00251 ;****************************************
                      00252 ReadUltrasonic macro    trigger, trigger_bit, echo, echo_bit
                      00253     clrf        TMR1H
                      00254     clrf        TMR1L
                      00255 
                      00256     bcf trigger, trigger_bit            ;make sure trigger is clear
                      00257     call lcdLongDelay
                      00258 
                      00259     bsf trigger, trigger_bit    ;trigger high, bottom sensor
                      00260     call lcdLongDelay           ;10us delay
                      00261     bcf trigger, trigger_bit    ;trigger low
                      00262 
                      00263     btfss       echo, echo_bit          ;wait for echo to go high
                      00264     goto        $-1
                      00265     bsf T1CON,TMR1ON    ;turn on timer
                      00266 
                      00267     btfsc       echo, echo_bit          ;wait for echo to go low
                      00268     goto        $-1
                      00269 
                      00270     bcf T1CON,TMR1ON    ;turn off timer
                      00271     endm
                      00272         
                      00273 ;*******************************************************
                      00274 ;******             BCD                 ****************
                      00275 ;*******************************************************
                      00276         
                      00277 ;---------------- Binary (16-bit) to BCD -----------------------
                      00278 ;
                      00279 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00280 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00281                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00282 ;
                      00283 ; Uses variables
                      00284 ; NumH, NumL
                      00285 ; TenK, Thou, Hund, Tens, Ones
                      00286                 
                      00287 ;BCD    macro   NumH, NumL
                      00288 
0011                  00289 bin16_BCD
0011   0E51           00290         swapf   NumH, W
0012   390F           00291         andlw   0x0F
0013   3EF0           00292         addlw   0xF0
0014   00D4           00293         movwf   Thou 
0015   07D4           00294         addwf   Thou, F 
0016   3EE2           00295         addlw   0xE2 
0017   00D5           00296         movwf   Hund 
0018   3E32           00297         addlw   0x32 
0019   00D7           00298         movwf   Ones 
                      00299 
001A   0851           00300         movf    NumH, W 
001B   390F           00301         andlw   0x0F 
001C   07D5           00302         addwf   Hund, F 
001D   07D5           00303         addwf   Hund, F 
001E   07D7           00304         addwf   Ones, F 
001F   3EE9           00305         addlw   0xE9 
0020   00D6           00306         movwf   Tens 
0021   07D6           00307         addwf   Tens, F 
0022   07D6           00308         addwf   Tens, F 
                      00309 
0023   0E52           00310         swapf   NumL, W 
0024   390F           00311         andlw   0x0F 
0025   07D6           00312         addwf   Tens, F 
0026   07D7           00313         addwf   Ones, F 
                      00314 
0027   0DD6           00315         rlf    Tens, F 
0028   0DD7           00316         rlf    Ones, F 
0029   09D7           00317         comf    Ones, F 
002A   0DD7           00318         rlf    Ones, F 
                      00319 
002B   0852           00320         movf    NumL, W 
002C   390F           00321         andlw   0x0F 
002D   07D7           00322         addwf   Ones, F 
002E   0DD4           00323         rlf    Thou,F 
                      00324 
002F   3007           00325         movlw   0x07 
0030   00D3           00326         movwf   TenK 
                      00327 
0031   300A           00328         movlw   0x0A
0032                  00329 Lb1
0032   03D6           00330         decf    Tens, F 
0033   07D7           00331         addwf   Ones, F 
0034   1C03           00332         btfss   STATUS, C 
0035   2???           00333         goto            Lb1 
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0036                  00334 Lb2
0036   03D5           00335         decf    Hund, F 
0037   07D6           00336         addwf   Tens, F 
0038   1C03           00337         btfss   STATUS,C 
0039   2???           00338         goto            Lb2 
003A                  00339 Lb3
003A   03D4           00340         decf    Thou, F 
003B   07D5           00341         addwf   Hund, F 
003C   1C03           00342         btfss   STATUS,C
003D   2???           00343         goto            Lb3 
003E                  00344 Lb4
003E   03D3           00345         decf    TenK, F 
003F   07D4           00346         addwf   Thou, F 
0040   1C03           00347         btfss   STATUS,C 
0041   2???           00348         goto            Lb4 
                      00349 
0042   3400           00350         retlw   0
0043   0008           00351         return
                      00352 ;endm
                      00353 
                      00354 ;***************************************
                      00355 ; Initialize
                      00356 ;***************************************
0044                  00357 init
0044   018B           00358          clrf      INTCON         ; No interrupts
                      00359 
0045   1683           00360          bsf       STATUS,RP0     ; select bank 1
0046   30FF           00361          movlw      0xFF            ; need to make A input
0047   0085           00362          movwf      TRISA          ; All port A is input
0048   30FE           00363          movlw     b'11111110'    ; Set required keypad inputs
0049   0086           00364          movwf     TRISB
004A   0187           00365          clrf      TRISC          ; All port C is output
004B   0188           00366          clrf      TRISD          ; All port D is output
004C   0189           00367          clrf      TRISE        
                      00368          
                      00369                   ;Set SDA and SCL to high-Z first as required for I2C
004D   1607           00370                  bsf       TRISC,4                
004E   1587           00371                  bsf       TRISC,3
                      00372 
004F   1283           00373          bcf       STATUS,RP0     ; select bank 0
0050   0185           00374          clrf      PORTA
0051   0186           00375          clrf      PORTB
0052   0187           00376          clrf      PORTC
0053   0188           00377          clrf      PORTD
0054   0189           00378          clrf      PORTE
                      00379          
                      00380         ;Set up I2C for communication
                      00381                  
0055   2???           00382         call       i2c_common_setup
                      00383 ;*******************************************************************************
                      00384 ;        UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00385         ;rtc_resetAll                                   ;works
                      00386         ;call set_rtc_time
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00387 ;*******************************************************************************
                      00388                  
                      00389                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00390                  ;call     set_rtc_time
                      00391           
0056   2???           00392          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00393           ;A/D converter attempt
                      00394                  
                      00395         ; Set ADCON1 to use RA0 as analog input
                      00396         
0057   1303           00397         bcf     STATUS,RP1
0058   1683           00398         bsf     STATUS,RP0      ;Select bank 1
0059   3006           00399         movlw   b'00000110'     ;left justified, all inputs digital
005A   009F           00400         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00401 
                      00402         ;ADCON0
005B   1283           00403         bcf     STATUS,RP0      
                      00404 ;***************************************************
                      00405 ; Initialize variables and Displays
                      00406 ;****************************************************
                      00407         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
005C   01B3               M                 clrf    Table_Counter
005D   0103               M                 clrw            
005E   0833               M loop_   movf    Table_Counter,W
005F   2???               M                 call    Welcome_Msg
0060   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0061   1903               M                 btfsc   STATUS,Z
0062   2???               M                         goto    end_
0063   2???               M                 call    WR_DATA
0064   0AB3               M                 incf    Table_Counter,F
0065   2???               M                 goto    loop_
0066                      M end_
0066   2???           00408         call            Switch_Lines
                      00409         Display         Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0067   01B3               M                 clrf    Table_Counter
0068   0103               M                 clrw            
0069   0833               M loop_   movf    Table_Counter,W
006A   2???               M                 call    Welcome_Msg2
006B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
006C   1903               M                 btfsc   STATUS,Z
006D   2???               M                         goto    end_
006E   2???               M                 call    WR_DATA
006F   0AB3               M                 incf    Table_Counter,F
0070   2???               M                 goto    loop_
0071                      M end_
0071   01E0           00410         clrf            NumOfBins1
0072   01ED           00411         clrf            distreg             ; clear register for distance
0073   2???           00412         call            Init_TMR0           ; Initialize shaft encoder
0074   1408           00413         bsf             PORTD,0
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0075   1462           00414         bsf             LEDcounter0,0               ;counter for LED
0076   1463           00415         bsf             LEDcounter1,0               ;forward motor counters
0077   1464           00416         bsf             LEDcounter2,0
0078   1465           00417         bsf             LEDcounter3,0               
0079   1466           00418         bsf             LEDcounter4,0               ;backward motor counters
007A   1467           00419         bsf             LEDcounter5,0       
007B   1468           00420         bsf             LEDcounter7,0               ;pwm counters
007C   1469           00421         bsf             LEDcounter8,0               
                      00422         
007D   1287           00423         bcf             Std1                        ;use this one for negative for when need to move ful
                            l motor                 
007E   1707           00424         bsf             Std2
007F   1007           00425         bcf             Std1Backwards
0080   1787           00426         bsf             Std2Backwards
0081   1507           00427         bsf             PORTC,2             
0082   1487           00428         bsf             PORTC,1                 ; PWM now negative, so start by clearing
                      00429         
                      00430         ;trying to fix the switch bs
0083   1106           00431         bcf             SwitchWhite
0084   1186           00432         bcf             SwitchArm
                      00433 
                      00434 ;*************************************
                      00435 ;       Keypad and LCD forms        
                      00436 ;*************************************
                      00437         
0085   1C86           00438 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0086   2???           00439                 goto            $-1 
                      00440 
0087   0E06           00441                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0088   390F           00442                 andlw           0x0F
0089   00B9           00443                 movwf           temp
                      00444                 
                      00445                 Key     0x00, TOTAL
008A   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008B   390F               M          andlw          0x0F
008C   3A00               M          xorlw          0x00
008D   1903               M          btfsc          STATUS, Z
008E   2???               M          call           TOTAL
                      00446                 Key     0x01, DisplayBlackWhiteIR1
008F   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0090   390F               M          andlw          0x0F
0091   3A01               M          xorlw          0x01
0092   1903               M          btfsc          STATUS, Z
0093   2???               M          call           DisplayBlackWhiteIR1
                      00447                 Key     0x02, DisplayBlackWhiteIR2
0094   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0095   390F               M          andlw          0x0F
0096   3A02               M          xorlw          0x02
0097   1903               M          btfsc          STATUS, Z
0098   2???               M          call           DisplayBlackWhiteIR2
                      00448                 Rotation        0x03
0099   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009A   390F               M          andlw          0x0F
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009B   3A03               M          xorlw          0x03
009C   1903               M          btfsc          STATUS, Z
009D   2???               M          call           ShiftLeft
                      00449                 Key     0x04, COLREADINGSTART
009E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009F   390F               M          andlw          0x0F
00A0   3A04               M          xorlw          0x04
00A1   1903               M          btfsc          STATUS, Z
00A2   2???               M          call           COLREADINGSTART
                      00450                 Key     0x05, Read1_US
00A3   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A4   390F               M          andlw          0x0F
00A5   3A05               M          xorlw          0x05
00A6   1903               M          btfsc          STATUS, Z
00A7   2???               M          call           Read1_US
                      00451                 Key     0x06, Read2_US
00A8   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A9   390F               M          andlw          0x0F
00AA   3A06               M          xorlw          0x06
00AB   1903               M          btfsc          STATUS, Z
00AC   2???               M          call           Read2_US
                      00452                 Key     0x07, AddBin
00AD   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00AE   390F               M          andlw          0x0F
00AF   3A07               M          xorlw          0x07
00B0   1903               M          btfsc          STATUS, Z
00B1   2???               M          call           AddBin
                      00453                 Key     0x08, Stickers1
00B2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B3   390F               M          andlw          0x0F
00B4   3A08               M          xorlw          0x08
00B5   1903               M          btfsc          STATUS, Z
00B6   2???               M          call           Stickers1
                      00454                 Key     0x09, LEDControlON
00B7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B8   390F               M          andlw          0x0F
00B9   3A09               M          xorlw          0x09
00BA   1903               M          btfsc          STATUS, Z
00BB   2???               M          call           LEDControlON
                      00455                 Key     0x0A, CHECKSWITCH               
00BC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BD   390F               M          andlw          0x0F
00BE   3A0A               M          xorlw          0x0A
00BF   1903               M          btfsc          STATUS, Z
00C0   2???               M          call           CHECKSWITCH
                      00456                 Key     0x0C, StdRotation2
00C1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C2   390F               M          andlw          0x0F
00C3   3A0C               M          xorlw          0x0C
00C4   1903               M          btfsc          STATUS, Z
00C5   2???               M          call           StdRotation2
                      00457                 Key     0x0D, StdRotation2Backwards
00C6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C7   390F               M          andlw          0x0F
00C8   3A0D               M          xorlw          0x0D
00C9   1903               M          btfsc          STATUS, Z
00CA   2???               M          call           StdRotation2Backwards
                      00458                 Key     0x0E, PWMFWD
00CB   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00CC   390F               M          andlw          0x0F
00CD   3A0E               M          xorlw          0x0E
00CE   1903               M          btfsc          STATUS, Z
00CF   2???               M          call           PWMFWD
                      00459                 Key     0x0F, PWMBACK
00D0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D1   390F               M          andlw          0x0F
00D2   3A0F               M          xorlw          0x0F
00D3   1903               M          btfsc          STATUS, Z
00D4   2???               M          call           PWMBACK
00D5   1886           00460                 btfsc           PORTB,1     ;Wait until key is released
00D6   2???           00461                 goto            $-1
00D7   2???           00462                 goto            KeypadandLCD
                      00463                 
00D8                  00464 goback
00D8   0008           00465                 return  
                      00466         
                      00467 
                      00468 ;*******************************************************************************************************
                            *******************************************
                      00469 ;                                                                 MAIN CODE
                      00470 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
                      00471 
00D9                  00472 AVOIDCOLUMN
                      00473     
00D9   1287           00474     bcf     Std1                ;motor will stop move fwd
                      00475     
00DA   1307           00476     bcf     Std2                ; start white thing fwd
00DB   2???           00477     call    HalfS
00DC   1D06           00478     btfss   SwitchWhite
00DD   2???           00479     goto    $-1
                      00480    
00DE   1707           00481     bsf     Std2                   ; stop white thing fwd
                      00482     
00DF   2???           00483      call    HalfS
00E0   2???           00484     call    HalfS
00E1   2???           00485      call    HalfS
00E2   2???           00486     call    HalfS
                      00487     
00E3   2???           00488     call    PWMFWD          ;start arm forward
00E4   2???           00489     call    lcdLongDelay
00E5   2???           00490     call    lcdLongDelay
00E6   1D86           00491     btfss   SwitchArm
00E7   2???           00492     goto    $-1
                      00493     
00E8   2???           00494     call    PWMFWD          ;stop arm forward
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00495     
                      00496 ;-------------------------------------------------
                      00497     
00E9   1687           00498     bsf     Std1                ;move forward until no more column in the way
                      00499     
00EA   2???           00500     call    OneS
00EB   2???           00501     call    OneS
00EC   2???           00502     call    OneS
00ED   2???           00503     call    OneS
00EE   2???           00504     call    OneS
00EF   2???           00505     call    OneS
                      00506 
                      00507     
00F0   2???           00508     call    Read1_US            ;checks to see if column present
                      00509     
00F1   300F           00510     movlw   0xF         ; if column is not present, it'll go back to original form
00F2   028F           00511     subwf   TMR1H
00F3   1C03           00512     btfss   STATUS,C            
00F4   2???           00513     goto    $-6
                      00514     
00F5   1287           00515     bcf     Std1
                      00516     
                      00517     
00F6   2???           00518     call    RETURNFROMCOLUMN
                      00519     
00F7   2???           00520     goto    BINREADINGSTART 
                      00521     
00F8                  00522 RETURNFROMCOLUMN
                      00523     
00F8   2???           00524     call    PWMBACK         ;start arm BACK
00F9   2???           00525     call    HalfS
00FA   1D86           00526     btfss   SwitchArm
00FB   2???           00527     goto    $-1
                      00528     
00FC   2???           00529     call    PWMBACK         ;stop arm BACK
                      00530     
                      00531     
00FD   2???           00532     call    HalfS
00FE   2???           00533     call    HalfS
                      00534     
00FF   1387           00535     bcf     Std2Backwards
0100   2???           00536     call    HalfS
0101   1D06           00537     btfss   SwitchWhite
0102   2???           00538     goto    $-1 
                      00539     
0103   1787           00540     bsf     Std2Backwards
                      00541     
0104   0008           00542     return
                      00543     
0105                  00544 READBIN
                      00545 
                      00546     ;call    HalfS
0105   1287           00547     bcf     Std1
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00548     
0106   2???           00549     call    AddBin              ;adds bin to list
                      00550     
0107   2???           00551     call    Dist_Decoder        ; stores the distance
                      00552     Put_Dist_In_Reg     distreg
0108   ???? ???? 2???     M         lcall   Dist_Decoder
010B   086A               M         movfw   cm
010C   00ED               M         movwf   distreg
                      00553     Display_Dist        distreg
                          M     MOV     distreg,      temp  ; Bin_Dist_reg --> temp
010D   086D               M     MOVF  distreg,W     ; move reg1 into working register
010E   00B9               M     MOVWF   temp        ; reg2 <- reg1
010F   2???               M     call    Distance_Display
0110   2???           00554     call    StoreThisTick
                      00555     
0111   2???           00556     call    Clear_Display    
                      00557     
                      00558         
0112   2???           00559     call    DisplayBlackWhiteIR1        ;warms up IR
0113   2???           00560     call    DisplayBlackWhiteIR1        ;warms up IR  
0114   2???           00561     call    StoreBW1            ;reads & stores first IR data
                      00562     
                      00563 ;*****THRESHHOLD TEST ON IR 1************
                      00564 ;    nothing in front: 02056
                      00565 ;    black in front: 10000-41000
                      00566 ;    white in front: >60000
                      00567     
                      00568     ;READ 2 ALGORITHM IMPLEMENT HERE
                      00569     
0115   2???           00570     call    HalfS
0116   2???           00571     call    HalfS
0117   2???           00572     call    HalfS
0118   2???           00573     call    HalfS
                      00574     
0119   2???           00575     call    Clear_Display
                      00576     
011A   2???           00577     call    DisplayBlackWhiteIR2        ;warms up IR
011B   2???           00578     call    DisplayBlackWhiteIR2        ;warms up IR
011C   2???           00579     call    StoreBW2
                      00580     
011D   2???           00581     call    HalfS
011E   2???           00582     call    HalfS
                      00583     
011F   1406           00584     bsf     LED
                      00585     
0120   0008           00586     return
                      00587     
                      00588     ;goto    EXIT    
                      00589      
                      00590     
0121                  00591 TOTAL
                      00592     
0121   2???           00593     call    Read1_US            ;warms up us sensors that was weird
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0122   2???           00594     call    Read2_US
                      00595    
0123                  00596 TOTAL1
                      00597     
0123   1687           00598     bsf     Std1                ;moving
0124   01EF           00599     clrf    count_highs         ;reset the high value counter
                      00600     
0125                  00601 COLREADINGSTART
0125   2???           00602     call    Read1_US            ;checks to see if column present
                      00603     
                      00604 ;********THRESHOLD CALCULATION FOR COLUMN**************:
                      00605 ;   At around cm from col, reading: 02303
                      00606 ;       So, this will be the max value.
                      00607 ;       To be safe, will minus 02603 from the TMR variables.
                      00608 ;       This means, subtract 0x4 from TMR1H 
                      00609 ;       Value before at integration was 0x14, now trying 0x4
                      00610 ;       THE FOLLOWING CODE COUNTS 3 HIGHS
                      00611     
0126   300F           00612     movlw   0xF         ; if column present, it'll move forward
0127   028F           00613     subwf   TMR1H
0128   1803           00614     btfsc   STATUS,C        
0129   2???           00615     goto    $+8
012A   0AEF           00616     incf    count_highs
012B   3003           00617     movlw   MAX_HIGHS
012C   026F           00618     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
012D   1D03           00619     btfss   STATUS,Z                ; if result is zero, Z bit is set.
012E   2???           00620     goto    COLREADINGSTART
012F   2???           00621     call    AVOIDCOLUMN
                      00622     
0130   01EF           00623     clrf    count_highs         ;reset the high value counter
                      00624  
0131                  00625 BINREADINGSTART
                      00626     
0131   2???           00627     call    Read2_US            ;checks to see if bin present
                      00628     
                      00629 ;********THRESHOLD CALCULATION FOR BIN**************:
                      00630 ;   At around 6cm from white bin, reading: 01103
                      00631 ;       So, this will be the max value.
                      00632 ;       To be safe, will minus 01210 from the TMR variables.
                      00633 ;       This means, subtract 0x4 from TMR1H 
                      00634 ;       Value before at integration was 0x14, now trying 0x4
                      00635 ;       CODE COUNTS 3 HIGHS
                      00636 
                      00637     
0132   3008           00638     movlw   0x8         ; read the bin
0133   028F           00639     subwf   TMR1H
0134   1803           00640     btfsc   STATUS,C
0135   2???           00641     goto    $+8
0136   0AEF           00642     incf    count_highs
0137   2???           00643     call    lcdLongDelay
0138   3003           00644     movlw   MAX_HIGHS
0139   026F           00645     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
013A   1D03           00646     btfss   STATUS,Z                ; if result is zero, Z bit is set.
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013B   2???           00647     goto    BINREADINGSTART
013C   2???           00648     call    DELAYEDREAD
                      00649 
013D   2???           00650     goto    ENDTHIS   
                      00651     
013E                  00652 DELAYEDREAD
013E   2???           00653     call    Read2_US            ;checks to see if bin present
013F   3006           00654     movlw   0x6         ; read the bin
0140   028F           00655     subwf   TMR1H
0141   1C03           00656     btfss   STATUS,C
0142   2???           00657     goto    DELAYEDREAD
0143   2???           00658     call    READBIN
0144   1006           00659     bcf     LED                 ; turn off LED After reading    
0145                  00660 ENDTHIS       
0145   3002           00661     movlw       0X2                     ;checks if max of 7 bins has been reached
0146   0260           00662     subwf       NumOfBins1,W            
0147   1903           00663     btfsc       STATUS,Z
0148   2???           00664     goto        EXIT
0149   2???           00665     goto        TOTAL1    
014A                  00666 CHECKSWITCH
014A   2???           00667     call    PWMFWD
014B   2???           00668     call    DELAY1
014C   2???           00669     call    HalfS
014D   1D86           00670     btfss   SwitchArm
014E   2???           00671     goto    $-1
                      00672    
014F   2???           00673     call    PWMFWD
                      00674  
0150   2???           00675     call    PWMBACK
0151   2???           00676     call    DELAY1
0152   2???           00677     call    HalfS
0153   1D86           00678     btfss   SwitchArm
0154   2???           00679     goto    $-1 
                      00680     
0155   2???           00681     call    PWMBACK
                      00682     
0156   2???           00683     goto    CHECKSWITCH  
                      00684 
0157                  00685 EXIT
                      00686     
0157   2???           00687     call        Clear_Display
                      00688     Display     FinalMessage     ;display final interface for choosing stuff
  0000                    M                 local   loop_
  0000                    M                 local   end_
0158   01B3               M                 clrf    Table_Counter
0159   0103               M                 clrw            
015A   0833               M loop_   movf    Table_Counter,W
015B   2???               M                 call    FinalMessage
015C   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
015D   1903               M                 btfsc   STATUS,Z
015E   2???               M                         goto    end_
015F   2???               M                 call    WR_DATA
0160   0AB3               M                 incf    Table_Counter,F
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0161   2???               M                 goto    loop_
0162                      M end_
0162   2???           00689     call        Switch_Lines
                      00690     Display     Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0163   01B3               M                 clrf    Table_Counter
0164   0103               M                 clrw            
0165   0833               M loop_   movf    Table_Counter,W
0166   2???               M                 call    Welcome_Msg2
0167   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0168   1903               M                 btfsc   STATUS,Z
0169   2???               M                         goto    end_
016A   2???               M                 call    WR_DATA
016B   0AB3               M                 incf    Table_Counter,F
016C   2???               M                 goto    loop_
016D                      M end_
                      00691     
016D   1287           00692     bcf         Std1
                      00693     ;bsf                Std1Backwards
016E   2???           00694     goto        EXITDISPLAY
                      00695 
016F   1C86           00696 EXITDISPLAY     btfss           PORTB,1     ;Wait until data is available from the keypad
0170   2???           00697                 goto            $-1 
                      00698 
0171   0E06           00699                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0172   390F           00700                 andlw           0x0F
0173   00B9           00701                 movwf           temp
                      00702                 Key     0x00, show_RTC
0174   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0175   390F               M          andlw          0x0F
0176   3A00               M          xorlw          0x00
0177   1903               M          btfsc          STATUS, Z
0178   2???               M          call           show_RTC
                      00703                 Key     0x02, Stickers1
0179   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
017A   390F               M          andlw          0x0F
017B   3A02               M          xorlw          0x02
017C   1903               M          btfsc          STATUS, Z
017D   2???               M          call           Stickers1
                      00704                 Rotation        0x03
017E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
017F   390F               M          andlw          0x0F
0180   3A03               M          xorlw          0x03
0181   1903               M          btfsc          STATUS, Z
0182   2???               M          call           ShiftLeft
                      00705                 Key     0x04, ShowBins
0183   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0184   390F               M          andlw          0x0F
0185   3A04               M          xorlw          0x04
0186   1903               M          btfsc          STATUS, Z
0187   2???               M          call           ShowBins
                      00706                 Key     0x05, TotalDistance
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0188   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0189   390F               M          andlw          0x0F
018A   3A05               M          xorlw          0x05
018B   1903               M          btfsc          STATUS, Z
018C   2???               M          call           TotalDistance
                      00707                 Key     0x06, Locations
018D   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
018E   390F               M          andlw          0x0F
018F   3A06               M          xorlw          0x06
0190   1903               M          btfsc          STATUS, Z
0191   2???               M          call           Locations
                      00708                 Key     0x07, AddBin
0192   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0193   390F               M          andlw          0x0F
0194   3A07               M          xorlw          0x07
0195   1903               M          btfsc          STATUS, Z
0196   2???               M          call           AddBin
0197   1886           00709                 btfsc           PORTB,1     ;Wait until key is released
0198   2???           00710                 goto            $-1
0199   2???           00711                 goto            EXITDISPLAY
                      00712 
019A   2???           00713     goto    EXIT
                      00714     
019B                  00715 MoveBackwards
                      00716     
019B   2???           00717     call    PWMSTOP
                      00718     
                      00719         
                      00720 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00721 
                      00722 ;*********************************************************
                      00723 ; A to D conversion with LCD display for IR sensor
                      00724 ;*********************************************************
                      00725         
                      00726 ;******************************************
                      00727 ;       Sticker Print Modules
                      00728 ;*****************************************
                      00729         
019C                  00730 BWScanModule1
                      00731 
019C   151F           00732         bsf     ADCON0,2                ;start conversion and wait for it to complete
019D   191F           00733         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
019E   2???           00734         goto    $-1
                      00735         
019F   081E           00736         movf    ADRESH, W
01A0   00D1           00737         movwf   NumH
01A1   081E           00738         movf    ADRESL, W
01A2   00D2           00739         movwf   NumL
01A3   2???           00740         call    Clear_Display
01A4   2???           00741         call    bin16_BCD
                      00742         PrintNumber     TenK
                          M         ;movf       number ,W
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A5   0853               M         movfw       TenK
01A6   2???               M         call        DectoChar
01A7   2???               M         call        WR_DATA
                      00743         PrintNumber     Thou
                          M         ;movf       number ,W
01A8   0854               M         movfw       Thou
01A9   2???               M         call        DectoChar
01AA   2???               M         call        WR_DATA
                      00744         PrintNumber     Hund
                          M         ;movf       number ,W
01AB   0855               M         movfw       Hund
01AC   2???               M         call        DectoChar
01AD   2???               M         call        WR_DATA
                      00745         PrintNumber     Tens
                          M         ;movf       number ,W
01AE   0856               M         movfw       Tens
01AF   2???               M         call        DectoChar
01B0   2???               M         call        WR_DATA
                      00746         PrintNumber     Ones
                          M         ;movf       number ,W
01B1   0857               M         movfw       Ones
01B2   2???               M         call        DectoChar
01B3   2???               M         call        WR_DATA
01B4   0008           00747         return
01B5                  00748 BWStoreModule1
01B5   1383           00749         BCF     STATUS, IRP
01B6   3042           00750         movlw   0x42
01B7   0084           00751         movwf   FSR
01B8   3000           00752         movlw   0X0
01B9   0360           00753         decf    NumOfBins1,W            ;want bin number to be decreased when back checks it
01BA   0784           00754         addwf   FSR,F
01BB   3055           00755         movlw   0X55                    ; roughly 21000
01BC   02D1           00756         subwf   NumH
01BD   3000           00757         movlw   0x0
01BE   1803           00758         btfsc   STATUS, C
01BF   3001           00759         movlw   0x1
01C0   0080           00760         movwf   INDF
01C1   0008           00761         return  
                      00762         
01C2                  00763 BWScanModule2
                      00764 
01C2   151F           00765         bsf     ADCON0,2                ;start conversion and wait for it to complete
01C3   191F           00766         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01C4   2???           00767         goto    $-1
                      00768         
01C5   081E           00769         movf    ADRESH, W
01C6   00D1           00770         movwf   NumH
01C7   081E           00771         movf    ADRESL, W
01C8   00D2           00772         movwf   NumL
01C9   2???           00773         call    Clear_Display
01CA   2???           00774         call    bin16_BCD
                      00775         PrintNumber     TenK
                          M         ;movf       number ,W
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01CB   0853               M         movfw       TenK
01CC   2???               M         call        DectoChar
01CD   2???               M         call        WR_DATA
                      00776         PrintNumber     Thou
                          M         ;movf       number ,W
01CE   0854               M         movfw       Thou
01CF   2???               M         call        DectoChar
01D0   2???               M         call        WR_DATA
                      00777         PrintNumber     Hund
                          M         ;movf       number ,W
01D1   0855               M         movfw       Hund
01D2   2???               M         call        DectoChar
01D3   2???               M         call        WR_DATA
                      00778         PrintNumber     Tens
                          M         ;movf       number ,W
01D4   0856               M         movfw       Tens
01D5   2???               M         call        DectoChar
01D6   2???               M         call        WR_DATA
                      00779         PrintNumber     Ones
                          M         ;movf       number ,W
01D7   0857               M         movfw       Ones
01D8   2???               M         call        DectoChar
01D9   2???               M         call        WR_DATA
01DA   0008           00780         return
01DB                  00781 BWStoreModule2
01DB   1383           00782         BCF     STATUS, IRP
01DC   3049           00783         movlw   0x49                    ;number 49 to try to get registers for back of bin
01DD   0084           00784         movwf   FSR
01DE   3000           00785         movlw   0X0
01DF   0360           00786         decf    NumOfBins1,W
01E0   0784           00787         addwf   FSR,F
01E1   3003           00788         movlw   0X3
01E2   02D1           00789         subwf   NumH
01E3   3000           00790         movlw   0x0
01E4   1803           00791         btfsc   STATUS, C
01E5   3001           00792         movlw   0x1
01E6   0080           00793         movwf   INDF
01E7   0008           00794         return  
                      00795         
                      00796 ;***************************************************
                      00797 ;       US Sensor Modules                           [TESTED]
                      00798 ;***************************************************
                      00799         
01E8                  00800 Read1_US                    
                      00801          
                      00802         ;call           Read1_US1 
                      00803          
                      00804         ReadUltrasonic  UST1,US1E1
01E8   018F               M     clrf        TMR1H
01E9   018E               M     clrf        TMR1L
                          M 
01EA   1008               M     bcf PORTD,   0                      ;make sure trigger is clear
01EB   2???               M     call lcdLongDelay
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
01EC   1408               M     bsf PORTD,   0              ;trigger high, bottom sensor
01ED   2???               M     call lcdLongDelay           ;10us delay
01EE   1008               M     bcf PORTD,   0              ;trigger low
                          M 
01EF   1D05               M     btfss       PORTA, 2                ;wait for echo to go high
01F0   2???               M     goto        $-1
01F1   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
01F2   1905               M     btfsc       PORTA, 2                ;wait for echo to go low
01F3   2???               M     goto        $-1
                          M 
01F4   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00805         
01F5   2???           00806         call            Clear_Display
                      00807         
01F6   080F           00808         movf            TMR1H, W
01F7   00D1           00809         movwf           NumH
01F8   080E           00810         movf            TMR1L, W
01F9   00D2           00811         movwf           NumL
                      00812         
01FA   2???           00813         call            bin16_BCD
                      00814         
                      00815         PrintNumber     TenK
                          M         ;movf       number ,W
01FB   0853               M         movfw       TenK
01FC   2???               M         call        DectoChar
01FD   2???               M         call        WR_DATA
                      00816         PrintNumber     Thou
                          M         ;movf       number ,W
01FE   0854               M         movfw       Thou
01FF   2???               M         call        DectoChar
0200   2???               M         call        WR_DATA
                      00817 ;       PrintNumber     Hund
                      00818 ;       PrintNumber     Tens
                      00819 ;       PrintNumber     Ones
0201   2???           00820         call            Clear_Display
0202   0008           00821         return
                      00822 
0203                  00823 Read2_US                    
                      00824          
                      00825         ;call           Read2_US1 
                      00826         
                      00827         ReadUltrasonic  UST2,US1E2
0203   018F               M     clrf        TMR1H
0204   018E               M     clrf        TMR1L
                          M 
0205   1088               M     bcf PORTD,   1                      ;make sure trigger is clear
0206   2???               M     call lcdLongDelay
                          M 
0207   1488               M     bsf PORTD,   1              ;trigger high, bottom sensor
0208   2???               M     call lcdLongDelay           ;10us delay
0209   1088               M     bcf PORTD,   1              ;trigger low
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
020A   1D85               M     btfss       PORTA, 3                ;wait for echo to go high
020B   2???               M     goto        $-1
020C   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
020D   1985               M     btfsc       PORTA, 3                ;wait for echo to go low
020E   2???               M     goto        $-1
                          M 
020F   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00828          
0210   2???           00829         call            Clear_Display
                      00830         
0211   080F           00831         movf            TMR1H, W
0212   00D1           00832         movwf           NumH
0213   080E           00833         movf            TMR1L, W
0214   00D2           00834         movwf           NumL
                      00835         
0215   2???           00836         call            bin16_BCD
                      00837         
                      00838         PrintNumber     TenK
                          M         ;movf       number ,W
0216   0853               M         movfw       TenK
0217   2???               M         call        DectoChar
0218   2???               M         call        WR_DATA
                      00839         PrintNumber     Thou
                          M         ;movf       number ,W
0219   0854               M         movfw       Thou
021A   2???               M         call        DectoChar
021B   2???               M         call        WR_DATA
                      00840 ;       PrintNumber     Hund
                      00841 ;       PrintNumber     Tens
                      00842 ;       PrintNumber     Ones
021C   2???           00843         call            Clear_Display
021D   0008           00844         return
                      00845                 
                      00846 ;*******************************************************
                      00847 ; Dist_Decoder
                      00848 ;   input:  temp (holds bin_dist_reg)
                      00849 ;   output: cm, mm, m
                      00850 ;   Desc:   Converts the count in the rotary encoder
                      00851 ;           into physical distance
                      00852 ;*******************************************************
021E                  00853 Dist_Decoder
                      00854         ; Initalize all registers
021E   01EA           00855         clrf    cm              
021F   01EB           00856         clrf    mm
0220   01EC           00857         clrf    m
                      00858 
                      00859         ; Check if its already zero
0221   0839           00860         movfw   temp
0222   3C00           00861         sublw   D'0'
0223   1903           00862         btfsc   STATUS, Z
0224   0008           00863         return
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00864         
0225                  00865 Decode_loop                     ; Assume each step is 3.6 cm
                      00866         ; Perform decode
                      00867         ADDL    cm, cm, D'2'
0225   3002               M     MOVLW  D'2'         ; move literal into working register
0226   076A               M     ADDWF   cm,W        ; W <- literal + reg
0227   00EA               M     MOVWF   cm          ; Destination <- literal + reg
                      00868         ADDL    mm, mm, D'0'
0228   3000               M     MOVLW  D'0'         ; move literal into working register
0229   076B               M     ADDWF   mm,W        ; W <- literal + reg
022A   00EB               M     MOVWF   mm          ; Destination <- literal + reg
022B   03B9           00869         decf    temp
                      00870         
022C                  00871 Check_mm_overflow
                      00872         ; Test if mm has overflowed! (mm >= 10)
022C   300A           00873         movlw   D'10'
022D   026B           00874         subwf   mm, w           ; mm - 10 --> w (w = f - w, when d = 0) 
022E   1803           00875         btfsc   STATUS, C       ; Y = mm, w = 10, Y-w
022F   2???           00876         goto    mm_overflow     ; Run overflow routine if it did overflow
                      00877         
0230                  00878 Check_cm_overflow       
                      00879         ; Test if cm has overflowed! (cm >= 100)
0230   086A           00880         movfw   cm
0231   00F0           00881         movwf   temp_2
0232   3064           00882         movlw   D'100'
0233   0270           00883         subwf   temp_2, w       ; cm - 100 --> w (w = f - w, when d = 0) 
0234   1803           00884         btfsc   STATUS, C       ; Y = cm, w = 100, Y-w
0235   2???           00885         goto    cm_overflow     ; Run overflow routine if it did overflow
                      00886 
0236                  00887 Decode_check_done       
                      00888         ; Test if done decoding 
0236   0839           00889         movfw   temp
0237   3C00           00890         sublw   D'0'            ; MAKE THIS A LARGER NUMBER TO ACCOUNT FOR 
0238   1D03           00891         btfss   STATUS, Z       ; DIFFERENCE IN DISTANCE
0239   2???           00892         goto    Decode_loop
023A   0008           00893         return  
                      00894         
023B                  00895 mm_overflow
023B   0AEA           00896         incf    cm              ; cm + 1 --> cm
023C   300A           00897         movlw   D'10'           ; 10 --> w
023D   02EB           00898         subwf   mm, f           ; mm - 10 --> mm (f = f - w, when d = 1) 
023E   2???           00899         goto    Decode_check_done       ; Check cm overflow
                      00900         
023F                  00901 cm_overflow
023F   0AEC           00902         incf    m               ; m + 1 --> m
0240   3064           00903         movlw   D'100'          ; 100 --> w
0241   02EA           00904         subwf   cm, f           ; cm - 100 --> cm (f = f - w, when d = 1) 
0242   2???           00905         goto    Decode_check_done       ; Continue decoding
                      00906         
0243                  00907 StoreThisTick
0243   1383           00908         BCF     STATUS, IRP
0244   303B           00909         movlw   0x3B                    ;number 56 to try to get location registers in cblock
0245   0084           00910         movwf   FSR
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0246   3000           00911         movlw   0X0
0247   0360           00912         decf    NumOfBins1,W
0248   0784           00913         addwf   FSR,F
0249   0801           00914         movfw   TMR0            ; poll encoder for current state
024A   00B9           00915         movwf   temp
024B   0080           00916         movwf   INDF
                      00917         
024C   0008           00918         return
                      00919 ;*********************************************
                      00920 ; Keypad Modules
                      00921 ;*******************************************
                      00922          
                      00923 
024D                  00924 ShiftLeft
024D   3018           00925         movlw           b'00011000'             ;Move to the left
024E   2???           00926         call            WR_INS
024F   0008           00927         return
                      00928 
0250   2???           00929         goto    KeypadandLCD
                      00930         
0251                  00931 RTCDisplay
0251   2???           00932         call    show_RTC
                      00933         
0252   1886           00934         btfsc           PORTB,1     ;Wait until data is available from the keypad
0253   0008           00935         return
0254   1886           00936         btfsc           PORTB,1     ;Wait until data is available from the keypad
0255   0008           00937         return
0256   1886           00938         btfsc           PORTB,1     ;Wait until data is available from the keypad
0257   0008           00939         return
0258   1886           00940         btfsc           PORTB,1     ;Wait until data is available from the keypad
0259   0008           00941         return
025A   2???           00942         goto        RTCDisplay
                      00943         
025B                  00944 StoreBW1
025B   1283           00945         bcf     STATUS,RP0
025C   30C5           00946         movlw   b'11000101'             
025D   009F           00947         movwf   ADCON0                  ;choose RA0
                      00948         
025E   2???           00949         call    BWScanModule1   
025F   2???           00950         call    BWStoreModule1
                      00951         
0260   0008           00952         return                          ; why was there not a return here before?
                      00953         
0261                  00954 StoreBW2
0261   1283           00955         bcf     STATUS,RP0
0262   30CD           00956         movlw   b'11001101'             
0263   009F           00957         movwf   ADCON0                  ;choose RA1
                      00958         
0264   2???           00959         call    BWScanModule2
0265   2???           00960         call    BWStoreModule2
                      00961         
0266   0008           00962         return
                      00963         
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0267                  00964 AddBin
0267   2???           00965         Call Clear_Display
0268   0AE0           00966         incf    NumOfBins1,F
                      00967         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
0269   0860               M         movfw       NumOfBins1
026A   2???               M         call        DectoChar
026B   2???               M         call        WR_DATA
026C   3007           00968         movlw   0X7                     ;checks if max of 7 bins has been reached
026D   0260           00969         subwf   NumOfBins1,W            
026E   1903           00970         btfsc   STATUS,Z
026F   2???           00971         goto    EXIT
0270   0008           00972         return
                      00973         
0271                  00974 ShowBins
                      00975         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
0271   0860               M         movfw       NumOfBins1
0272   2???               M         call        DectoChar
0273   2???               M         call        WR_DATA
0274   0008           00976         return
                      00977         
0275                  00978 Stickers1                   ;TESTED
0275   2???           00979         call            Clear_Display
0276   3000           00980         movlw           0X0
0277   00DF           00981         movwf           counter
0278   1383           00982         BCF             STATUS, IRP
0279   3041           00983         movlw           0x41
027A   0084           00984         movwf           FSR
027B   0860           00985         movfw           NumOfBins1
027C   00DE           00986         movwf           countdown
                      00987         Display         FrontStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
027D   01B3               M                 clrf    Table_Counter
027E   0103               M                 clrw            
027F   0833               M loop_   movf    Table_Counter,W
0280   2???               M                 call    FrontStickers
0281   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0282   1903               M                 btfsc   STATUS,Z
0283   2???               M                         goto    end_
0284   2???               M                 call    WR_DATA
0285   0AB3               M                 incf    Table_Counter,F
0286   2???               M                 goto    loop_
0287                      M end_
0287                  00988 FrontLoop1      
0287   0A84           00989         INCF            FSR,1
0288   0ADF           00990         incf            counter
                      00991         PrintNumber     counter
                          M         ;movf       number ,W
0289   085F               M         movfw       counter
028A   2???               M         call        DectoChar
028B   2???               M         call        WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00992         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
028C   01B3               M                 clrf    Table_Counter
028D   0103               M                 clrw            
028E   0833               M loop_   movf    Table_Counter,W
028F   2???               M                 call    Colon
0290   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0291   1903               M                 btfsc   STATUS,Z
0292   2???               M                         goto    end_
0293   2???               M                 call    WR_DATA
0294   0AB3               M                 incf    Table_Counter,F
0295   2???               M                 goto    loop_
0296                      M end_
0296   0800           00993         movfw           INDF
                      00994         PrintCol        W
0297   0800               M         movfw       W
0298   2???               M         call        StickerColours
0299   2???               M         call        WR_DATA
                      00995         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
029A   01B3               M                 clrf    Table_Counter
029B   0103               M                 clrw            
029C   0833               M loop_   movf    Table_Counter,W
029D   2???               M                 call    Spacee
029E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
029F   1903               M                 btfsc   STATUS,Z
02A0   2???               M                         goto    end_
02A1   2???               M                 call    WR_DATA
02A2   0AB3               M                 incf    Table_Counter,F
02A3   2???               M                 goto    loop_
02A4                      M end_
02A4   0BDE           00996         decfsz          countdown,F
02A5   2???           00997         goto            FrontLoop1
                      00998         
02A6   2???           00999         call            Switch_Lines
                      01000         
02A7                  01001 Stickers2                       ;TESTED
                      01002         
02A7   3000           01003         movlw           0X0
02A8   00DF           01004         movwf           counter
02A9   1383           01005         BCF             STATUS, IRP
02AA   3048           01006         movlw           0x48
02AB   0084           01007         movwf           FSR
02AC   0860           01008         movfw           NumOfBins1
02AD   00DE           01009         movwf           countdown
                      01010         Display         BackStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02AE   01B3               M                 clrf    Table_Counter
02AF   0103               M                 clrw            
02B0   0833               M loop_   movf    Table_Counter,W
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B1   2???               M                 call    BackStickers
02B2   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02B3   1903               M                 btfsc   STATUS,Z
02B4   2???               M                         goto    end_
02B5   2???               M                 call    WR_DATA
02B6   0AB3               M                 incf    Table_Counter,F
02B7   2???               M                 goto    loop_
02B8                      M end_
02B8                  01011 FrontLoop2
02B8   0A84           01012         INCF            FSR,1
02B9   0ADF           01013         incf            counter
                      01014         PrintNumber     counter
                          M         ;movf       number ,W
02BA   085F               M         movfw       counter
02BB   2???               M         call        DectoChar
02BC   2???               M         call        WR_DATA
                      01015         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02BD   01B3               M                 clrf    Table_Counter
02BE   0103               M                 clrw            
02BF   0833               M loop_   movf    Table_Counter,W
02C0   2???               M                 call    Colon
02C1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02C2   1903               M                 btfsc   STATUS,Z
02C3   2???               M                         goto    end_
02C4   2???               M                 call    WR_DATA
02C5   0AB3               M                 incf    Table_Counter,F
02C6   2???               M                 goto    loop_
02C7                      M end_
02C7   0800           01016         movfw           INDF
                      01017         PrintCol        W
02C8   0800               M         movfw       W
02C9   2???               M         call        StickerColours
02CA   2???               M         call        WR_DATA
                      01018         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02CB   01B3               M                 clrf    Table_Counter
02CC   0103               M                 clrw            
02CD   0833               M loop_   movf    Table_Counter,W
02CE   2???               M                 call    Spacee
02CF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02D0   1903               M                 btfsc   STATUS,Z
02D1   2???               M                         goto    end_
02D2   2???               M                 call    WR_DATA
02D3   0AB3               M                 incf    Table_Counter,F
02D4   2???               M                 goto    loop_
02D5                      M end_
02D5   0BDE           01019         decfsz          countdown,F
02D6   2???           01020         goto            FrontLoop2
                      01021         
02D7   0008           01022         return
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01023         
02D8                  01024 Locations                       ;TESTED
02D8   2???           01025         call            Clear_Display
02D9   3000           01026         movlw           0X0
02DA   00DF           01027         movwf           counter
02DB   1383           01028         BCF             STATUS, IRP
02DC   303A           01029         movlw           0x3A
02DD   0084           01030         movwf           FSR
02DE   0860           01031         movfw           NumOfBins1
02DF   00DE           01032         movwf           countdown
                      01033         Display         Distances
  0000                    M                 local   loop_
  0000                    M                 local   end_
02E0   01B3               M                 clrf    Table_Counter
02E1   0103               M                 clrw            
02E2   0833               M loop_   movf    Table_Counter,W
02E3   2???               M                 call    Distances
02E4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02E5   1903               M                 btfsc   STATUS,Z
02E6   2???               M                         goto    end_
02E7   2???               M                 call    WR_DATA
02E8   0AB3               M                 incf    Table_Counter,F
02E9   2???               M                 goto    loop_
02EA                      M end_
02EA   2???           01034         call            Switch_Lines
02EB                  01035 FrontLoop       
02EB   0A84           01036         INCF            FSR,1
02EC   0ADF           01037         incf            counter
                      01038         PrintNumber     counter
                          M         ;movf       number ,W
02ED   085F               M         movfw       counter
02EE   2???               M         call        DectoChar
02EF   2???               M         call        WR_DATA
                      01039         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02F0   01B3               M                 clrf    Table_Counter
02F1   0103               M                 clrw            
02F2   0833               M loop_   movf    Table_Counter,W
02F3   2???               M                 call    Colon
02F4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02F5   1903               M                 btfsc   STATUS,Z
02F6   2???               M                         goto    end_
02F7   2???               M                 call    WR_DATA
02F8   0AB3               M                 incf    Table_Counter,F
02F9   2???               M                 goto    loop_
02FA                      M end_
                      01040         Display_Dist    INDF
                          M     MOV     INDF,         temp  ; Bin_Dist_reg --> temp
02FA   0800               M     MOVF  INDF,W        ; move reg1 into working register
02FB   00B9               M     MOVWF   temp        ; reg2 <- reg1
02FC   2???               M     call    Distance_Display
                      01041         Display         Spacee
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
02FD   01B3               M                 clrf    Table_Counter
02FE   0103               M                 clrw            
02FF   0833               M loop_   movf    Table_Counter,W
0300   2???               M                 call    Spacee
0301   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0302   1903               M                 btfsc   STATUS,Z
0303   2???               M                         goto    end_
0304   2???               M                 call    WR_DATA
0305   0AB3               M                 incf    Table_Counter,F
0306   2???               M                 goto    loop_
0307                      M end_
0307   0BDE           01042         decfsz          countdown,F
0308   2???           01043         goto            FrontLoop
                      01044         
0309   0008           01045         return
                      01046         
030A                  01047 TotalDistance
                      01048         
030A   2???           01049     call    Dist_Decoder
                      01050     Put_Dist_In_Reg     distreg
030B   ???? ???? 2???     M         lcall   Dist_Decoder
030E   086A               M         movfw   cm
030F   00ED               M         movwf   distreg
                      01051     Display_Dist        distreg
                          M     MOV     distreg,      temp  ; Bin_Dist_reg --> temp
0310   086D               M     MOVF  distreg,W     ; move reg1 into working register
0311   00B9               M     MOVWF   temp        ; reg2 <- reg1
0312   2???               M     call    Distance_Display
                      01052    
0313   0008           01053     return
                      01054 
                      01055                 
0314                  01056 LEDControlON
                      01057         
0314   1862           01058         btfsc       LEDcounter0,0
0315   2???           01059         goto        $+4
0316   1406           01060         bsf         LED
0317   1462           01061         bsf         LEDcounter0,0
0318   0008           01062         return
                      01063         
                      01064         
0319   1006           01065         bcf         LED
031A   1062           01066         bcf         LEDcounter0,0
031B   0008           01067         return
                      01068         
                      01069         
031C                  01070 DisplayBlackWhiteIR1
                      01071         
031C   30C5           01072         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
031D   009F           01073         movwf   ADCON0  
                      01074                 
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031E   2???           01075         call            BWScanModule1   
031F   0008           01076         return
                      01077         
                      01078         
0320                  01079 DisplayBlackWhiteIR2
                      01080         
0320   30CD           01081         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra as the reader pin
0321   009F           01082         movwf   ADCON0  
                      01083         
0322   2???           01084         call            BWScanModule1   
0323   0008           01085         return
                      01086 
                      01087         
0324                  01088 StdRotation1
                      01089         
0324   1863           01090         btfsc       LEDcounter1,0
0325   2???           01091         goto        $+4
0326   1287           01092         bcf             Std1
0327   1463           01093         bsf         LEDcounter1,0
0328   0008           01094         return
                      01095         
0329   1687           01096         bsf             Std1
032A   1063           01097         bcf         LEDcounter1,0
032B   0008           01098         return
                      01099         
032C                  01100 StdRotation2
                      01101 
032C   1864           01102         btfsc       LEDcounter2,0
032D   2???           01103         goto        $+4
                      01104         
032E   1307           01105         bcf             Std2
032F   1464           01106         bsf         LEDcounter2,0
0330   0008           01107         return
                      01108         
0331   1D06           01109         btfss       SwitchWhite
0332   1707           01110         bsf         Std2
                      01111         
0333   1707           01112         bsf             Std2
0334   1064           01113         bcf         LEDcounter2,0
                      01114 
0335   0008           01115         return
                      01116                 
0336                  01117 StdRotation1Backwards
                      01118         
0336   1866           01119         btfsc       LEDcounter4,0
0337   2???           01120         goto        $+4
0338   1407           01121         bsf             Std1Backwards
0339   1466           01122         bsf         LEDcounter4,0
033A   0008           01123         return
                      01124         
033B   1007           01125         bcf             Std1Backwards
033C   1066           01126         bcf         LEDcounter4,0
033D   0008           01127         return
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01128         
033E                  01129 StdRotation2Backwards
                      01130 
033E   1867           01131         btfsc       LEDcounter5,0
033F   2???           01132         goto        $+4
0340   1787           01133         bsf             Std2Backwards
0341   1467           01134         bsf         LEDcounter5,0
0342   0008           01135         return
                      01136         
0343   1D06           01137         btfss       SwitchWhite
0344   1707           01138         bsf         Std2
                      01139         
0345   1387           01140         bcf             Std2Backwards
0346   1067           01141         bcf         LEDcounter5,0
0347   0008           01142         return
                      01143 
0348                  01144 PWMFWD  
                      01145         
                      01146     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01147     
                      01148     ;save   pr2 value so that you can zero it after
                      01149     
0348   1868           01150     btfsc           LEDcounter7,0
0349   2???           01151     goto            $+4
034A   0197           01152     clrf            CCP1CON
034B   1468           01153     bsf             LEDcounter7,0
034C   0008           01154     return
                      01155     
034D   1683 1303      01156     BANKSEL TRISC
034F   1107           01157     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01158     
0350   0817           01159     MOVF     CCP1CON,W          ;set CCP1 as PWM
0351   39F0           01160     ANDLW    0xF0
0352   380C           01161     IORLW    0x0C
0353   0097           01162     MOVWF    CCP1CON
                      01163 
0354   0812           01164     movfw   PR2
0355   00D0           01165     movwf   pr2temp
                      01166     
                      01167     ;11000011
0356   30C3           01168     MOVLW    b'11000011'        ;set highest PWM value
0357   1683 1303      01169     BANKSEL  PR2                
0359   0092           01170     MOVWF    PR2                
035A   1283 1303      01171     BANKSEL  TMR2               
                      01172     
035C   1492           01173     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01174     
035D   0195           01175     CLRF    CCPR1L              ;set PWM to zero
                      01176     
035E   1712           01177     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
035F   1692           01178     BSF     T2CON, TOUTPS2
0360   1612           01179     BSF     T2CON, TOUTPS1
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0361   1592           01180     BSF     T2CON, TOUTPS0
                      01181     
                      01182     ; SET PWM duty cycle
                      01183     ;01001110
0362   1697           01184     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
0363   1617           01185     BSF     CCP1CON, 4
                      01186     MOVLF   B'01100000', CCPR1L                 ; previous was 01101
0364   3060               M     MOVLW  B'01100000'  ; move literal into working register
0365   0095               M     MOVWF   CCPR1L      ; move working register into reg
0366   1597           01187     BSF     CCP1CON, 3
0367   1517           01188     BSF     CCP1CON, 2
                      01189     
0368   1512           01190     BSF     T2CON, TMR2ON       ;and start the timer running
                      01191  
0369   1068           01192     bcf             LEDcounter7,0
                      01193     
036A   0008           01194     return
                      01195     
036B                  01196 PWMBACK
                      01197     
                      01198     ;************ SECOND PWM - Positive one ******************************
                      01199     
036B   1869           01200     btfsc           LEDcounter8,0
036C   2???           01201     goto            $+4
036D   019D           01202     clrf            CCP2CON
                      01203     ;bcf                    PORTC,1
036E   1469           01204     bsf             LEDcounter8,0
036F   0008           01205     return
                      01206     
                      01207  
                      01208     
0370   1683 1303      01209     BANKSEL TRISC
0372   1087           01210     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01211     
0373   081D           01212     MOVF     CCP2CON,W          ;set CCP2 as PWM
0374   39F0           01213     ANDLW    0xF0
0375   380C           01214     IORLW    0x0C
0376   009D           01215     MOVWF    CCP2CON
                      01216     
                      01217     ;11000011
0377   30C3           01218     MOVLW    b'11000011'        ;set highest PWM value
0378   1683 1303      01219     BANKSEL  PR2                
037A   0092           01220     MOVWF    PR2                
037B   1283 1303      01221     BANKSEL  TMR2               
                      01222     
037D   1492           01223     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01224     
037E   019B           01225     CLRF    CCPR2L              ;set PWM to zero
                      01226     
037F   1712           01227     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0380   1692           01228     BSF     T2CON, TOUTPS2
0381   1612           01229     BSF     T2CON, TOUTPS1
0382   1592           01230     BSF     T2CON, TOUTPS0
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01231     
                      01232     ; SET PWM duty cycle
                      01233     ;01001110
0383   169D           01234     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
0384   161D           01235     BSF     CCP2CON, 4
0385   3060           01236     MOVLW   B'01100000'                         ; good speed for moving the arm
0386   009B           01237     MOVWF   CCPR2L      
0387   159D           01238     BSF     CCP2CON, 3
0388   151D           01239     BSF     CCP2CON, 2
                      01240     
0389   1512           01241     BSF     T2CON, TMR2ON       ;and start the timer running
038A   1283           01242     BCF     STATUS,RP0
                      01243     
                      01244     ;bsf                    PORTC,1
                      01245     
038B   1069           01246     bcf             LEDcounter8,0
                      01247     
038C   0008           01248     return
                      01249     
038D                  01250 PWMSTOP
                      01251     
038D   0197           01252     clrf   CCP1CON
038E   019D           01253     clrf   CCP2CON
038F   0850           01254     movfw   pr2temp
0390   0092           01255     movwf   PR2
                      01256     
0391   0008           01257     return
                      01258         
                      01259         
                      01260 ;***************************************
                      01261 ; LCD control
                      01262 ;***************************************
0392                  01263 Switch_Lines
0392   30C0           01264                 movlw   B'11000000'
0393   2???           01265                 call    WR_INS
0394   0008           01266                 return
                      01267 
0395                  01268 Clear_Display
0395   3001           01269                 movlw   B'00000001'
0396   2???           01270                 call    WR_INS
0397   0008           01271                 return
                      01272 
                      01273 ;***************************************
                      01274 ; Delay 0.5s
                      01275 ;***************************************
0398                  01276 HalfS   
  0000                01277         local   HalfS_0
0398   3088           01278       movlw 0x88
0399   00B0           01279       movwf COUNTH
039A   30BD           01280       movlw 0xBD
039B   00B1           01281       movwf COUNTM
039C   3003           01282       movlw 0x03
039D   00B2           01283       movwf COUNTL
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01284 
039E                  01285 HalfS_0
039E   0BB0           01286       decfsz COUNTH, f
039F   2???           01287       goto   $+2
03A0   0BB1           01288       decfsz COUNTM, f
03A1   2???           01289       goto   $+2
03A2   0BB2           01290       decfsz COUNTL, f
03A3   2???           01291       goto   HalfS_0
                      01292 
03A4   2???           01293       goto $+1
03A5   0000           01294       nop
03A6   0000           01295       nop
03A7   0008           01296                 return
                      01297                 
                      01298 ;***************************************
                      01299 ;***************************************
                      01300 ; Delay = 0.6 seconds
                      01301 ; Clock frequency = 4 MHz
03A8                  01302 DELAY1
                      01303                         ;599996 cycles
03A8   30D1           01304         movlw   0xD1
03A9   00B5           01305         movwf   lcd_d1
03AA   304F           01306         movlw   0x4F
03AB   00B6           01307         movwf   lcd_d2
03AC   3002           01308         movlw   0x02
03AD   00EE           01309         movwf   lcd_d1_2
03AE                  01310 Delay_0
03AE   0BB5           01311         decfsz  lcd_d1, f
03AF   2???           01312         goto    $+2
03B0   0BB6           01313         decfsz  lcd_d2, f
03B1   2???           01314         goto    $+2
03B2   0BEE           01315         decfsz  lcd_d1_2, f
03B3   2???           01316         goto    Delay_0
                      01317 
                      01318                         ;4 cycles
03B4   0008           01319         return
                      01320         
                      01321 ;0.25s delay    
                      01322         
03B5                  01323 DELAY2
                      01324                         ;249998 cycles
03B5   304F           01325         movlw   0x4F
03B6   00B5           01326         movwf   lcd_d1
03B7   30C4           01327         movlw   0xC4
03B8   00B6           01328         movwf   lcd_d2
03B9                  01329 Delay_02
03B9   0BB5           01330         decfsz  lcd_d1, f
03BA   2???           01331         goto    $+2
03BB   0BB6           01332         decfsz  lcd_d2, f
03BC   2???           01333         goto    Delay_0
                      01334 
                      01335                         ;2 cycles
03BD   2???           01336         goto    $+1
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01337         
Warning[203]: Found opcode in column 1. (return)
03BE   0008           01338 return
                      01339         
                      01340 ;***************************************
                      01341 ;Init_TMR0
                      01342 ;   Input:  RA4
                      01343 ;   Output: TMR0 register
                      01344 ;   desc:   Counts the clock pulses for the
                      01345 ;           rotary encoder
                      01346 ;****************************************
03BF                  01347 Init_TMR0                           ; INITIALIZE TIMER 0   
03BF   1683 1303      01348     BANKSEL OPTION_REG
                      01349     MOVLF   B'00101000', OPTION_REG
03C1   3028               M     MOVLW  B'00101000'  ; move literal into working register
03C2   0081               M     MOVWF   OPTION_REG  ; move working register into reg
                      01350     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01351     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
                      01352     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01353     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01354     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01355     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01356     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01357     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
03C3   1283 1303      01358     BANKSEL TMR0
03C5   0181           01359     CLRF   TMR0                     ; Clear timer 0
03C6   0008           01360     return  
                      01361     
                      01362 ;************************************
                      01363 ; RTC Sublabels
                      01364 ;************************************
                      01365     
03C7                  01366 show_RTC
                      01367                 ;clear LCD screen
03C7   3001           01368                 movlw   b'00000001'
03C8   2???           01369                 call    WR_INS
                      01370 
                      01371                 ;Get year
03C9   3032           01372                 movlw   "2"                             ;First line shows 20**/**/**
03CA   2???           01373                 call    WR_DATA
03CB   3030           01374                 movlw   "0"
03CC   2???           01375                 call    WR_DATA
                      01376                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03CD   3006               M         movlw   0x06
03CE   1283 1303          M         banksel 0x73
03D0   00F3               M         movwf   0x73
03D1   2???               M         call    read_rtc
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D2   1283 1303          M         banksel 0x75
03D4   0875               M         movf    0x75,w
03D5   2???               M         call    rtc_convert   
03D6   0877           01377                 movfw   0x77
03D7   2???           01378                 call    WR_DATA
03D8   0878           01379                 movfw   0x78
03D9   2???           01380                 call    WR_DATA
                      01381 
03DA   302F           01382                 movlw   "/"
03DB   2???           01383                 call    WR_DATA
                      01384 
                      01385                 ;Get month
                      01386                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03DC   3005               M         movlw   0x05
03DD   1283 1303          M         banksel 0x73
03DF   00F3               M         movwf   0x73
03E0   2???               M         call    read_rtc
03E1   1283 1303          M         banksel 0x75
03E3   0875               M         movf    0x75,w
03E4   2???               M         call    rtc_convert   
03E5   0877           01387                 movfw   0x77
03E6   2???           01388                 call    WR_DATA
03E7   0878           01389                 movfw   0x78
03E8   2???           01390                 call    WR_DATA
                      01391 
03E9   302F           01392                 movlw   "/"
03EA   2???           01393                 call    WR_DATA
                      01394 
                      01395                 ;Get day
                      01396                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03EB   3004               M         movlw   0x04
03EC   1283 1303          M         banksel 0x73
03EE   00F3               M         movwf   0x73
03EF   2???               M         call    read_rtc
03F0   1283 1303          M         banksel 0x75
03F2   0875               M         movf    0x75,w
03F3   2???               M         call    rtc_convert   
03F4   0877           01397                 movfw   0x77
03F5   2???           01398                 call    WR_DATA
03F6   0878           01399                 movfw   0x78
03F7   2???           01400                 call    WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01401 
03F8   30C0           01402                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
03F9   2???           01403                 call    WR_INS
                      01404 
                      01405                 ;Get hour
                      01406                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03FA   3002               M         movlw   0x02
03FB   1283 1303          M         banksel 0x73
03FD   00F3               M         movwf   0x73
03FE   2???               M         call    read_rtc
03FF   1283 1303          M         banksel 0x75
0401   0875               M         movf    0x75,w
0402   2???               M         call    rtc_convert   
0403   0877           01407                 movfw   0x77
0404   2???           01408                 call    WR_DATA
0405   0878           01409                 movfw   0x78
0406   2???           01410                 call    WR_DATA
0407   303A           01411                 movlw                   ":"
0408   2???           01412                 call    WR_DATA
                      01413 
                      01414                 ;Get minute             
                      01415                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0409   3001               M         movlw   0x01
040A   1283 1303          M         banksel 0x73
040C   00F3               M         movwf   0x73
040D   2???               M         call    read_rtc
040E   1283 1303          M         banksel 0x75
0410   0875               M         movf    0x75,w
0411   2???               M         call    rtc_convert   
0412   0877           01416                 movfw   0x77
0413   2???           01417                 call    WR_DATA
0414   0878           01418                 movfw   0x78
0415   2???           01419                 call    WR_DATA         
0416   303A           01420                 movlw                   ":"
0417   2???           01421                 call    WR_DATA
                      01422                 
                      01423                 ;Get seconds
                      01424                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0418   3000               M         movlw   0x00
0419   1283 1303          M         banksel 0x73
041B   00F3               M         movwf   0x73
041C   2???               M         call    read_rtc
041D   1283 1303          M         banksel 0x75
041F   0875               M         movf    0x75,w
0420   2???               M         call    rtc_convert   
0421   0877           01425                 movfw   0x77
0422   2???           01426                 call    WR_DATA
0423   0878           01427                 movfw   0x78
0424   2???           01428                 call    WR_DATA
                      01429                 
0425   2???           01430                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
0426   0008           01431                 return
                      01432 
                      01433 ;***************************************
                      01434 ; Setup RTC with time defined by user
                      01435 ;***************************************
0427                  01436 set_rtc_time
                      01437 
                      01438                 ;rtc_resetAll   ;reset rtc
                      01439                 ;works up to here
                      01440 
                      01441                 ;rtc_set        0x00,   B'10000000'
                      01442                 ;works up to here
                      01443                 
                      01444                 ;set time 
                      01445 ;               rtc_set 0x06,   B'00010110'             ; Year
                      01446 ;               ;works up to here
                      01447 ;               rtc_set 0x05,   B'00000011'             ; Month
                      01448 ;               rtc_set 0x04,   B'00100000'             ; Date
                      01449                 ;works up to here
                      01450                 ;rtc_set        0x03,   B'00100010'             ; Day
                      01451                 ;stops working on this one^
                      01452                 ;seems like day is the one that crashes it
                      01453                 rtc_set 0x02,   B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0427   1283 1303          M         banksel 0x73
0429   3002               M         movlw   0x02
042A   00F3               M         movwf   0x73
042B   1283 1303          M         banksel 0x74
042D   3000               M         movlw   B'00000000'
042E   00F4               M         movwf   0x74    
042F   2???               M         call    write_rtc
                      01454                 ;works on this one
                      01455                 rtc_set 0x01,   B'00000000'             ; Minutes
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0430   1283 1303          M         banksel 0x73
0432   3001               M         movlw   0x01
0433   00F3               M         movwf   0x73
0434   1283 1303          M         banksel 0x74
0436   3000               M         movlw   B'00000000'
0437   00F4               M         movwf   0x74    
0438   2???               M         call    write_rtc
                      01456                 ;works on this one
                      01457                 rtc_set 0x00,   B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0439   1283 1303          M         banksel 0x73
043B   3000               M         movlw   0x00
043C   00F3               M         movwf   0x73
043D   1283 1303          M         banksel 0x74
043F   3000               M         movlw   B'00000000'
0440   00F4               M         movwf   0x74    
0441   2???               M         call    write_rtc
                      01458                 ;works on this one
0442   0008           01459                 return
                      01460 
                      01461 ;***************************************
                      01462 ; Delay 1s
                      01463 ;***************************************
0443                  01464 OneS
  0000                01465                 local   OneS_0
0443   3010           01466       movlw 0x10
0444   00B0           01467       movwf COUNTH
0445   307A           01468       movlw 0x7A
0446   00B1           01469       movwf COUNTM
0447   3006           01470       movlw 0x06
0448   00B2           01471       movwf COUNTL
                      01472 
0449                  01473 OneS_0
0449   0BB0           01474       decfsz COUNTH, f
044A   2???           01475       goto   $+2
044B   0BB1           01476       decfsz COUNTM, f
044C   2???           01477       goto   $+2
044D   0BB2           01478       decfsz COUNTL, f
044E   2???           01479       goto   OneS_0
                      01480 
044F   2???           01481       goto $+1
0450   0000           01482       nop
0451   0000           01483       nop
0452   0008           01484                 return
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01485 
0453                  01486 lcdLongDelay
0453   3014           01487     movlw d'20'
0454   00B6           01488     movwf lcd_d2
0455                  01489 LLD_LOOP
                      01490     LCD_DELAY
0455   30FF               M         movlw   0xFF
0456   00B5               M         movwf   lcd_d1
0457   0BB5               M         decfsz  lcd_d1,f
0458   2???               M         goto    $-1
0459   0BB6           01491     decfsz lcd_d2,f
045A   2???           01492     goto LLD_LOOP
045B   0008           01493     return
                      01494     
                      01495 ;***************************************
                      01496 ; Look up table
                      01497 ;***************************************
                      01498     
045C                  01499 Welcome_Msg
                      01500         
                      01501         ;Change Page
045C   00BA           01502         movwf   Temp
045D   30??           01503         movlw   HIGH Welcome_MsgEntries
045E   008A           01504         movwf   PCLATH
045F   083A           01505         movf    Temp,w
0460   3E??           01506         addlw   LOW Welcome_MsgEntries
0461   1803           01507         btfsc   STATUS,C
0462   0A8A           01508             incf    PCLATH,f
0463   0082           01509         movwf   PCL     
0464   0782           01510         addwf    PCL,F
0465                  01511 Welcome_MsgEntries
0465   3431 343A 3453 01512         dt        "1:Simulation|#/D:PWM|*/0:Std1&Std2|3:B/W", 0
       3469 346D 3475 
       346C 3461 3474 
       3469 346F 346E 
       347C 3423 342F 
       3444 343A 3450 
       3457 344D 347C 
       342A 342F 3430 
       343A 3453 3474 
       3464 3431 3426 
       3453 3474 3464 
       3432 347C 3433 
       343A 3442 342F 
       3457 3400 
                      01513         
048E                  01514 Welcome_Msg2
                      01515         
                      01516         ;Change Page
048E   00BA           01517         movwf   Temp
048F   30??           01518         movlw   HIGH Welcome_Msg2Entries
0490   008A           01519         movwf   PCLATH
0491   083A           01520         movf    Temp,w
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0492   3E??           01521         addlw   LOW Welcome_Msg2Entries
0493   1803           01522         btfsc   STATUS,C
0494   0A8A           01523             incf    PCLATH,f
0495   0082           01524         movwf   PCL     
0496   0782           01525         addwf    PCL,F
0497                  01526 Welcome_Msg2Entries
0497   3435 3444 3469 01527         dt        "5Distance 6Locations", 0
       3473 3474 3461 
       346E 3463 3465 
       3420 3436 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01528         
04AC                  01529 FinalMessage
                      01530         
                      01531         ;Change Page
04AC   00BA           01532         movwf    Temp
04AD   30??           01533         movlw   HIGH FinalMessageEntries
04AE   008A           01534         movwf   PCLATH
04AF   083A           01535         movf    Temp,w
04B0   3E??           01536         addlw   LOW FinalMessageEntries
04B1   1803           01537         btfsc   STATUS,C
04B2   0A8A           01538             incf    PCLATH,f
04B3   0082           01539         movwf   PCL
04B4   0782           01540         addwf    PCL,F
04B5                  01541 FinalMessageEntries
04B5   3431 3454 3469 01542         dt        "1Time 3Stickers 4#Bins",0
       346D 3465 3420 
       3433 3453 3474 
       3469 3463 346B 
       3465 3472 3473 
       3420 3434 3423 
       3442 3469 346E 
       3473 3400 
                      01543         
04CC                  01544 DectoChar
                      01545         
                      01546         ;Change Page
04CC   00BA           01547         movwf   Temp
04CD   30??           01548         movlw   HIGH DectoCharEntries
04CE   008A           01549         movwf   PCLATH
04CF   083A           01550         movf    Temp,w
04D0   3E??           01551         addlw   LOW DectoCharEntries
04D1   1803           01552         btfsc   STATUS,C
04D2   0A8A           01553             incf    PCLATH,f
04D3   0082           01554         movwf   PCL     
04D4   0782           01555         addwf    PCL,F
04D5                  01556 DectoCharEntries
04D5   3430 3431 3432 01557         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01558         
04E0                  01559 StickerColours
                      01560         
                      01561         ;Change Page
04E0   00BA           01562         movwf   Temp
04E1   30??           01563         movlw   HIGH StickerColoursEntries
04E2   008A           01564         movwf   PCLATH
04E3   083A           01565         movf    Temp,w
04E4   3E??           01566         addlw   LOW StickerColoursEntries
04E5   1803           01567         btfsc   STATUS,C
04E6   0A8A           01568             incf    PCLATH,f
04E7   0082           01569         movwf   PCL     
04E8   0782           01570         addwf    PCL,F
04E9                  01571 StickerColoursEntries
04E9   3442 3457 3400 01572         dt        "BW",  0
                      01573         
04EC                  01574 FrontStickers
                      01575 
                      01576         ;Change Page
04EC   00BA           01577         movwf   Temp
04ED   30??           01578         movlw   HIGH FrontStickersEntries
04EE   008A           01579         movwf   PCLATH
04EF   083A           01580         movf    Temp,w
04F0   3E??           01581         addlw   LOW FrontStickersEntries
04F1   1803           01582         btfsc   STATUS,C
04F2   0A8A           01583             incf    PCLATH,f
04F3   0082           01584         movwf   PCL     
04F4   0782           01585         addwf    PCL,F
04F5                  01586 FrontStickersEntries
04F5   3446 3472 346F 01587         dt        "Front",  0
       346E 3474 3400 
                      01588         
04FB                  01589 BackStickers
                      01590 
                      01591         ;Change Page
04FB   00BA           01592         movwf   Temp
04FC   30??           01593         movlw   HIGH BackStickersEntries
04FD   008A           01594         movwf   PCLATH
04FE   083A           01595         movf    Temp,w
04FF   3E??           01596         addlw   LOW BackStickersEntries
0500   1803           01597         btfsc   STATUS,C
0501   0A8A           01598             incf    PCLATH,f
0502   0082           01599         movwf   PCL     
0503   0782           01600         addwf    PCL,F
0504                  01601 BackStickersEntries
0504   3442 3461 3463 01602         dt        "Back",  0
       346B 3400 
                      01603         
0509                  01604 Spacee
                      01605 
                      01606         ;Change Page
0509   00BA           01607         movwf   Temp
050A   30??           01608         movlw   HIGH SpaceeEntries
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

050B   008A           01609         movwf   PCLATH
050C   083A           01610         movf    Temp,w
050D   3E??           01611         addlw   LOW SpaceeEntries
050E   1803           01612         btfsc   STATUS,C
050F   0A8A           01613             incf    PCLATH,f
0510   0082           01614         movwf   PCL     
0511   0782           01615         addwf    PCL,F
0512                  01616 SpaceeEntries
0512   3420 3400      01617         dt        " ",  0
                      01618         
0514                  01619 Colon
                      01620 
                      01621         ;Change Page
0514   00BA           01622         movwf   Temp
0515   30??           01623         movlw   HIGH ColonEntries
0516   008A           01624         movwf   PCLATH
0517   083A           01625         movf    Temp,w
0518   3E??           01626         addlw   LOW ColonEntries
0519   1803           01627         btfsc   STATUS,C
051A   0A8A           01628             incf    PCLATH,f
051B   0082           01629         movwf   PCL     
051C   0782           01630         addwf    PCL,F
051D                  01631 ColonEntries
051D   343A 3400      01632         dt        ":",  0
                      01633         
051F                  01634 Distances
                      01635 
                      01636         ;Change Page
051F   00BA           01637         movwf   Temp
0520   30??           01638         movlw   HIGH DistancesEntries
0521   008A           01639         movwf   PCLATH
0522   083A           01640         movf    Temp,w
0523   3E??           01641         addlw   LOW DistancesEntries
0524   1803           01642         btfsc   STATUS,C
0525   0A8A           01643             incf    PCLATH,f
0526   0082           01644         movwf   PCL     
0527   0782           01645         addwf    PCL,F
0528                  01646 DistancesEntries
0528   3444 3469 3473 01647         dt        "Dist (cm)",  0
       3474 3420 3428 
       3463 346D 3429 
       3400 
                      01648             
3F72                  01649         END
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AVOIDCOLUMN                       000000D9
AddBin                            00000267
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BINREADINGSTART                   00000131
BRGH                              00000002
BWScanModule1                     0000019C
BWScanModule2                     000001C2
BWStoreModule1                    000001B5
BWStoreModule2                    000001DB
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BackStickers                      000004FB
BackStickersEntries               00000504
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHECKSWITCH                       0000014A
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COLREADINGSTART                   00000125
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Check_cm_overflow                 00000230
Check_mm_overflow                 0000022C
Clear_Display                     00000395
ClrLCD                            00000000
ColMotor                          PORTC,7
Colon                             00000514
ColonEntries                      0000051D
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DELAY1                            000003A8
DELAY2                            000003B5
DELAYEDREAD                       0000013E
D_A                               00000005
D_NOT_A                           00000005
Decode_check_done                 00000236
Decode_loop                       00000225
DectoChar                         000004CC
DectoCharEntries                  000004D5
Delay_0                           000003AE
Delay_02                          000003B9
Display                           
DisplayBlackWhiteIR1              0000031C
DisplayBlackWhiteIR2              00000320
Display_Dist                      
Dist_Decoder                      0000021E
Distance_Display                  00000001
Distances                         0000051F
DistancesEntries                  00000528
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENDTHIS                           00000145
EXIT                              00000157
EXITDISPLAY                       0000016F
F                                 00000001
FERR                              00000002
FSR                               00000004
FinalMessage                      000004AC
FinalMessageEntries               000004B5
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         000002EB
FrontLoop1                        00000287
FrontLoop2                        000002B8
FrontStickers                     000004EC
FrontStickersEntries              000004F5
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             00000398
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         000003BF
Key                               
KeypadandLCD                      00000085
LCD_DELAY                         
LED                               PORTB,0
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

LEDControlON                      00000314
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter7                       00000068
LEDcounter8                       00000069
LLD_LOOP                          00000455
Lb1                               00000032
Lb2                               00000036
Lb3                               0000003A
Lb4                               0000003E
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
Locations                         000002D8
MAX_HIGHS                         0x3
MOV                               
MOVLF                             
MoveBackwards                     0000019B
NOTPWMBACK                        PORTC,1
NOTPWMFWD                         PORTC,2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              00000051
NumL                              00000052
NumOfBins1                        00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              00000443
Ones                              00000057
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           0000036B
PWMFWD                            00000348
PWMSTOP                           0000038D
PrintCol                          
PrintNumber                       
Put_Dist_In_Reg                   
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READBIN                           00000105
READ_WRITE                        00000002
RETURNFROMCOLUMN                  000000F8
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        00000251
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          000001E8
Read2_US                          00000203
ReadUltrasonic                    
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         0000024D
ShowBins                          00000271
Spacee                            00000509
SpaceeEntries                     00000512
Std1                              PORTC,5
Std1Backwards                     PORTC,0
Std2                              PORTC,6
Std2Backwards                     PORTC,7
StdRotation1                      00000324
StdRotation1Backwards             00000336
StdRotation2                      0000032C
StdRotation2Backwards             0000033E
StickerColours                    000004E0
StickerColoursEntries             000004E9
Stickers1                         00000275
Stickers2                         000002A7
StoreBW1                          0000025B
StoreBW2                          00000261
StoreThisTick                     00000243
SwitchArm                         PORTB,3
SwitchWhite                       PORTB,2
Switch_Lines                      00000392
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IF                            00000001
TMR2ON                            00000002
TOTAL                             00000121
TOTAL1                            00000123
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
TotalDistance                     0000030A
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
Welcome_Msg                       0000045C
Welcome_Msg2                      0000048E
Welcome_Msg2Entries               00000497
Welcome_MsgEntries                00000465
Z                                 00000002
_.org_0_0086                      00000086
_.org_0_00D6                      000000D6
_.org_0_00DD                      000000DD
_.org_0_00E7                      000000E7
_.org_0_00F4                      000000F4
_.org_0_00FB                      000000FB
_.org_0_0102                      00000102
_.org_0_0129                      00000129
_.org_0_0135                      00000135
_.org_0_014E                      0000014E
_.org_0_0154                      00000154
_.org_0_0170                      00000170
_.org_0_0198                      00000198
_.org_0_019E                      0000019E
_.org_0_01C4                      000001C4
_.org_0_01F0                      000001F0
_.org_0_01F3                      000001F3
_.org_0_020B                      0000020B
_.org_0_020E                      0000020E
_.org_0_0315                      00000315
_.org_0_0325                      00000325
_.org_0_032D                      0000032D
_.org_0_0337                      00000337
_.org_0_033F                      0000033F
_.org_0_0349                      00000349
_.org_0_036C                      0000036C
_.org_0_039F                      0000039F
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_03A1                      000003A1
_.org_0_03A4                      000003A4
_.org_0_03AF                      000003AF
_.org_0_03B1                      000003B1
_.org_0_03BA                      000003BA
_.org_0_03BD                      000003BD
_.org_0_044A                      0000044A
_.org_0_044C                      0000044C
_.org_0_044F                      0000044F
_.org_0_0458                      00000458
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
backstickerValues                 0000005C
bin16_BCD                         00000011
binCounter                        0000005D
cm                                0000006A
MPASM 5.65                          MAIN.ASM   4-3-2016  21:51:34         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

cm_overflow                       0000023F
com                               00000037
count_highs                       0000006F
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay3                            00000061
distanceMoved                     00000058
distreg                           0000006D
frontstickerValues                0000005B
goback                            000000D8
i2c_common_setup                  00000000
init                              00000044
isBinThere                        0000005A
isColumnThere                     00000059
lcdLongDelay                      00000453
lcd_d1                            00000035
lcd_d1_2                          0000006E
lcd_d2                            00000036
lcd_tmp                           00000034
m                                 0000006C
mm                                0000006B
mm_overflow                       0000023B
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      00000427
show_RTC                          000003C7
temp                              00000039
temp_2                            00000070
write_rtc                         00000000

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :     0 reported,    31 suppressed

