MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1       ;3B PC
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5       
  00000040            00038                 Location6       ;40 PC
  00000041            00039                 Location7
  00000042            00040                 Front1          ;42 PC7
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ; 49 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7           ;50
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins1                      
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0, LEDcounter1,LEDcounter2,LEDcounter3,LEDcounter4,LEDcounter5,LEDcounter7,LED
                            counter8
  0000006A            00073                 cm
  0000006B            00074                 mm
  0000006C            00075                 m
  0000006D            00076                 distreg
  0000006E            00077                 lcd_d1_2
  0000006F            00078                 count_highs             ;the number of consecutive high counter for the US sensor
                      00079         endc    
                      00080 
                      00081         ;Declare constants for pin assignments (LCD on PORTD)
                      00082                 #define RS      PORTD,2
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083                 #define E       PORTD,3
                      00084                 #define IR1     PORTA,0
                      00085                 #define IR2     PORTA,1
                      00086                 #define ColMotor PORTC,7
                      00087                 #define UST1    PORTD,0
                      00088                 #define US1E1   PORTA,2
                      00089                 #define UST2    PORTD,1
                      00090                 #define US1E2   PORTA,3
                      00091                 #define LED     PORTB,0
                      00092                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00093                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00094                 #define Std1Backwards   PORTC,0
                      00095                 #define Std2Backwards   PORTC,7
                      00096                 #define SwitchWhite             PORTB,2     ; or gated switch to stop motor motion
                      00097                 #define SwitchArm               PORTB,3
                      00098                 #define NOTPWMFWD               PORTC,2
                      00099                 #define NOTPWMBACK              PORTC,1
                      00100                 #define MAX_HIGHS       0x3
                      00101                 ;SHAFTIR is PORTA,4
                      00102                 ;PWMFWD is RC2
                      00103                 ;PWMBACK is RC1
                      00104                 
                      00105                 
                      00106 ;distanceMoved  equ     b'0'
                      00107 
                      00108          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00109          goto      init       ;Just jump to the main code section.
                      00110          
                      00111          ;ORG      0x100        ;this command is sketchy
                      00112 
                      00113 ;*******************************************************************************
                      00114 ; MACROS
                      00115 ;*******************************************************************************
                      00116          
                      00117 Key      macro  value, subroutine
                      00118          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00119          andlw          0x0F
                      00120          xorlw          value
                      00121          btfsc          STATUS, Z
                      00122          call           subroutine
                      00123         endm
                      00124 
                      00125 Rotation macro  value
                      00126          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00127          andlw          0x0F
                      00128          xorlw          value
                      00129          btfsc          STATUS, Z
                      00130          call           ShiftLeft
                      00131         endm
                      00132 
                      00133 ;***************************************
                      00134 ; Delay: ~160us macro
                      00135 ;***************************************
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136 LCD_DELAY macro
                      00137         movlw   0xFF
                      00138         movwf   lcd_d1
                      00139         decfsz  lcd_d1,f
                      00140         goto    $-1
                      00141         endm
                      00142         
                      00143 ;***************************************
                      00144 ; Display macro
                      00145 ;***************************************
                      00146 Display macro   Message
                      00147                 local   loop_
                      00148                 local   end_
                      00149                 clrf    Table_Counter
                      00150                 clrw            
                      00151 loop_   movf    Table_Counter,W
                      00152                 call    Message
                      00153                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00154                 btfsc   STATUS,Z
                      00155                         goto    end_
                      00156                 call    WR_DATA
                      00157                 incf    Table_Counter,F
                      00158                 goto    loop_
                      00159 end_
                      00160                 endm
                      00161                 
                      00162 ;***************************************
                      00163 ; BANK0 macro   [TESTED]
                      00164 ;***************************************
                      00165 BANK0 Macro
                      00166     bcf STATUS,RP0 
                      00167     bcf STATUS,RP1
                      00168     endm
                      00169 ;***************************************
                      00170 ; BANK1 macro   [TESTED]
                      00171 ;***************************************
                      00172 BANK1 Macro
                      00173     bsf STATUS,RP0 
                      00174     bcf STATUS,RP1
                      00175     endm
                      00176         
                      00177 ;***************************************
                      00178 ; BANK2 macro   [TESTED]
                      00179 ;***************************************
                      00180 BANK2 Macro
                      00181     bsf STATUS,RP0 
                      00182     bsf STATUS,RP1
                      00183     endm
                      00184     
                      00185 ;***************************************
                      00186 ; BANK3 macro   [TESTED]
                      00187 ;***************************************
                      00188 BANK3 Macro
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00189     bcf STATUS,RP0 
                      00190     bsf STATUS,RP1
                      00191     endm
                      00192     
                      00193 ;***************************************
                      00194 ; MOVLF macro   [TESTED]
                      00195 ;***************************************
                      00196 MOVLF   Macro   literal, reg
                      00197     MOVLW  literal      ; move literal into working register
                      00198     MOVWF   reg         ; move working register into reg
                      00199     endm
                      00200 
                      00201 ;***************************************
                      00202 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00203 ;***************************************
                      00204 MOV     Macro   reg1, reg2
                      00205     MOVF  reg1,W        ; move reg1 into working register
                      00206     MOVWF   reg2        ; reg2 <- reg1
                      00207     endm
                      00208     
                      00209 ;***************************************
                      00210 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00211 ;***************************************
                      00212 ADDL    Macro   Destination, reg, literal
                      00213     MOVLW  literal      ; move literal into working register
                      00214     ADDWF   reg,W       ; W <- literal + reg
                      00215     MOVWF   Destination ; Destination <- literal + reg
                      00216     endm
                      00217     
                      00218 ;***************************************
                      00219 ; ADD macro, Adds two registers together    [TESTED]
                      00220 ;***************************************
                      00221 ADD     Macro   Destination, reg1, reg2
                      00222     MOVF    reg1,W      ; move literal into working register
                      00223     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00224     MOVWF   Destination ; Destination <- reg1 + reg2
                      00225     endm
                      00226     
                      00227 ;***************************************
                      00228 ; Store_Dist macro --> Stores current
                      00229 ;   distance and stores it in Bin_Dist_reg
                      00230 ;***************************************                
                      00231 Put_Dist_In_Reg macro    Bin_Dist_reg
                      00232         lcall   Dist_Decoder
                      00233         movfw   cm
                      00234         movwf   Bin_Dist_reg
                      00235     endm
                      00236     
                      00237 ;***************************************
                      00238 ; Display_Dist macro --> Takes value in Bin_Dist_reg
                      00239 ;   and converts it into a BCD and prints it
                      00240 ;   To the LCD
                      00241 ;***************************************                
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00242 Display_Dist macro    Bin_Dist_reg
                      00243         clrf    NumL
                      00244         clrf    NumH
                      00245         movfw   Bin_Dist_reg
                      00246         ;movfw  TMR0
                      00247         movwf   NumL
                      00248         call    bin16_BCD
                      00249         PrintNumber     Hund
                      00250         PrintNumber     Tens
                      00251         PrintNumber     Ones
                      00252     endm
                      00253                 
                      00254 ;***************************************
                      00255 ; Number to Printable
                      00256 ;***************************************
                      00257 PrintNumber macro       number
                      00258         ;movf       number ,W
                      00259         movfw       number
                      00260         call        DectoChar
                      00261         call        WR_DATA
                      00262         endm
                      00263         
                      00264 ;***************************************
                      00265 ; Number to Colour
                      00266 ;***************************************
                      00267 PrintCol macro      number
                      00268         movfw       number
                      00269         call        StickerColours
                      00270         call        WR_DATA
                      00271         endm    
                      00272 
                      00273 ;***************************************
                      00274 ;           US READ MACRO
                      00275 ;****************************************
                      00276 ReadUltrasonic macro    trigger, trigger_bit, echo, echo_bit
                      00277     clrf        TMR1H
                      00278     clrf        TMR1L
                      00279 
                      00280     bcf trigger, trigger_bit            ;make sure trigger is clear
                      00281     call lcdLongDelay
                      00282 
                      00283     bsf trigger, trigger_bit    ;trigger high, bottom sensor
                      00284     call lcdLongDelay           ;10us delay
                      00285     bcf trigger, trigger_bit    ;trigger low
                      00286 
                      00287     btfss       echo, echo_bit          ;wait for echo to go high
                      00288     goto        $-1
                      00289     bsf T1CON,TMR1ON    ;turn on timer
                      00290 
                      00291     btfsc       echo, echo_bit          ;wait for echo to go low
                      00292     goto        $-1
                      00293 
                      00294     bcf T1CON,TMR1ON    ;turn off timer
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00295     endm
                      00296         
                      00297 ;*******************************************************
                      00298 ;******             BCD                 ****************
                      00299 ;*******************************************************
                      00300         
                      00301 ;---------------- Binary (16-bit) to BCD -----------------------
                      00302 ;
                      00303 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00304 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00305                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00306 ;
                      00307 ; Uses variables
                      00308 ; NumH, NumL
                      00309 ; TenK, Thou, Hund, Tens, Ones
                      00310                 
                      00311 ;BCD    macro   NumH, NumL
                      00312 
0001                  00313 bin16_BCD
0001   0E51           00314         swapf   NumH, W
0002   390F           00315         andlw   0x0F
0003   3EF0           00316         addlw   0xF0
0004   00D4           00317         movwf   Thou 
0005   07D4           00318         addwf   Thou, F 
0006   3EE2           00319         addlw   0xE2 
0007   00D5           00320         movwf   Hund 
0008   3E32           00321         addlw   0x32 
0009   00D7           00322         movwf   Ones 
                      00323 
000A   0851           00324         movf    NumH, W 
000B   390F           00325         andlw   0x0F 
000C   07D5           00326         addwf   Hund, F 
000D   07D5           00327         addwf   Hund, F 
000E   07D7           00328         addwf   Ones, F 
000F   3EE9           00329         addlw   0xE9 
0010   00D6           00330         movwf   Tens 
0011   07D6           00331         addwf   Tens, F 
0012   07D6           00332         addwf   Tens, F 
                      00333 
0013   0E52           00334         swapf   NumL, W 
0014   390F           00335         andlw   0x0F 
0015   07D6           00336         addwf   Tens, F 
0016   07D7           00337         addwf   Ones, F 
                      00338 
0017   0DD6           00339         rlf    Tens, F 
0018   0DD7           00340         rlf    Ones, F 
0019   09D7           00341         comf    Ones, F 
001A   0DD7           00342         rlf    Ones, F 
                      00343 
001B   0852           00344         movf    NumL, W 
001C   390F           00345         andlw   0x0F 
001D   07D7           00346         addwf   Ones, F 
001E   0DD4           00347         rlf    Thou,F 
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00348 
001F   3007           00349         movlw   0x07 
0020   00D3           00350         movwf   TenK 
                      00351 
0021   300A           00352         movlw   0x0A
0022                  00353 Lb1
0022   03D6           00354         decf    Tens, F 
0023   07D7           00355         addwf   Ones, F 
0024   1C03           00356         btfss   STATUS, C 
0025   2???           00357         goto            Lb1 
0026                  00358 Lb2
0026   03D5           00359         decf    Hund, F 
0027   07D6           00360         addwf   Tens, F 
0028   1C03           00361         btfss   STATUS,C 
0029   2???           00362         goto            Lb2 
002A                  00363 Lb3
002A   03D4           00364         decf    Thou, F 
002B   07D5           00365         addwf   Hund, F 
002C   1C03           00366         btfss   STATUS,C
002D   2???           00367         goto            Lb3 
002E                  00368 Lb4
002E   03D3           00369         decf    TenK, F 
002F   07D4           00370         addwf   Thou, F 
0030   1C03           00371         btfss   STATUS,C 
0031   2???           00372         goto            Lb4 
                      00373 
0032   3400           00374         retlw   0
0033   0008           00375         return
                      00376 ;endm
                      00377 
                      00378 ;***************************************
                      00379 ; Initialize
                      00380 ;***************************************
0034                  00381 init
0034   018B           00382          clrf      INTCON         ; No interrupts
                      00383 
0035   1683           00384          bsf       STATUS,RP0     ; select bank 1
0036   30FF           00385          movlw      0xFF            ; need to make A input
0037   0085           00386          movwf      TRISA          ; All port A is input
0038   30FE           00387          movlw     b'11111110'    ; Set required keypad inputs
0039   0086           00388          movwf     TRISB
003A   0187           00389          clrf      TRISC          ; All port C is output
003B   0188           00390          clrf      TRISD          ; All port D is output
003C   0189           00391          clrf      TRISE        
                      00392          
                      00393                   ;Set SDA and SCL to high-Z first as required for I2C
003D   1607           00394                  bsf       TRISC,4                
003E   1587           00395                  bsf       TRISC,3
                      00396 
003F   1283           00397          bcf       STATUS,RP0     ; select bank 0
0040   0185           00398          clrf      PORTA
0041   0186           00399          clrf      PORTB
0042   0187           00400          clrf      PORTC
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0043   0188           00401          clrf      PORTD
0044   0189           00402          clrf      PORTE
                      00403          
                      00404         ;Set up I2C for communication
                      00405                  
0045   2???           00406         call       i2c_common_setup
                      00407 ;*******************************************************************************
                      00408 ;        UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00409         rtc_resetAll                                    ;works
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0046   1283 1303          M         banksel         0x74
0048   01F4               M         clrf            0x74
0049   1283 1303          M         banksel         0x73
004B   01F3               M         clrf            0x73
004C   2???               M     call        write_rtc               ;Write 0 to Seconds
004D   1283 1303          M         banksel         0x73
004F   0AF3               M     incf        0x73                    ;Set register address to 1
0050   2???               M         call            write_rtc
0051   1283 1303          M         banksel         0x73
0053   0AF3               M     incf        0x73                    ;Set register address to 2
0054   2???               M         call            write_rtc
0055   1283 1303          M         banksel         0x73
0057   0AF3               M     incf        0x73                    ;Set register address to 3
0058   2???               M         call            write_rtc
0059   1283 1303          M         banksel         0x73
005B   0AF3               M     incf        0x73                    ;Set register address to 4
005C   2???               M         call            write_rtc
005D   1283 1303          M         banksel         0x73
005F   0AF3               M     incf        0x73                    ;Set register address to 5
0060   2???               M         call            write_rtc
0061   1283 1303          M         banksel         0x73
0063   0AF3               M     incf        0x73                    ;Set register address to 6
0064   2???               M         call            write_rtc
0065   2???           00410         call set_rtc_time
                      00411 ;*******************************************************************************
                      00412                  
                      00413                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00414                  ;call     set_rtc_time
                      00415           
0066   2???           00416          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00417           ;A/D converter attempt
                      00418          
                      00419 ;        bcf    STATUS,RP1
                      00420 ;        bsf    STATUS,RP0      ;Select bank 1
                      00421 ;        
                      00422 ;        bsf    IR1             ;makes RA0 an input
                      00423 ;        bcf    STATUS,RP0      ; go back to bank 0
                      00424          
                      00425         ; Set ADCON1 to use RA0 as analog input
                      00426         
0067   1303           00427         bcf     STATUS,RP1
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0068   1683           00428         bsf     STATUS,RP0      ;Select bank 1
0069   3006           00429         movlw   b'00000110'     ;left justified, all inputs digital
006A   009F           00430         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00431 
                      00432         ;ADCON0
006B   1283           00433         bcf     STATUS,RP0
                      00434         
                      00435         
                      00436         
                      00437 ;***************************************************
                      00438 ; Initialize variables and Displays
                      00439 ;****************************************************
                      00440         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
006C   01B3               M                 clrf    Table_Counter
006D   0103               M                 clrw            
006E   0833               M loop_   movf    Table_Counter,W
006F   2???               M                 call    Welcome_Msg
0070   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0071   1903               M                 btfsc   STATUS,Z
0072   2???               M                         goto    end_
0073   2???               M                 call    WR_DATA
0074   0AB3               M                 incf    Table_Counter,F
0075   2???               M                 goto    loop_
0076                      M end_
0076   2???           00441         call            Switch_Lines
                      00442         Display         Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0077   01B3               M                 clrf    Table_Counter
0078   0103               M                 clrw            
0079   0833               M loop_   movf    Table_Counter,W
007A   2???               M                 call    Welcome_Msg2
007B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
007C   1903               M                 btfsc   STATUS,Z
007D   2???               M                         goto    end_
007E   2???               M                 call    WR_DATA
007F   0AB3               M                 incf    Table_Counter,F
0080   2???               M                 goto    loop_
0081                      M end_
0081   01E0           00443         clrf            NumOfBins1
0082   01ED           00444         clrf            distreg             ; clear register for distance
0083   2???           00445         call            Init_TMR0           ; Initialize shaft encoder
0084   1408           00446         bsf             PORTD,0
0085   1462           00447         bsf             LEDcounter0,0               ;counter for LED
0086   1463           00448         bsf             LEDcounter1,0               ;forward motor counters
0087   1464           00449         bsf             LEDcounter2,0
0088   1465           00450         bsf             LEDcounter3,0               
0089   1466           00451         bsf             LEDcounter4,0               ;backward motor counters
008A   1467           00452         bsf             LEDcounter5,0       
008B   1468           00453         bsf             LEDcounter7,0               ;pwm counters
008C   1469           00454         bsf             LEDcounter8,0               
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00455         
008D   1287           00456         bcf             Std1                        ;use this one for negative for when need to move ful
                            l motor                 
008E   1707           00457         bsf             Std2
008F   1007           00458         bcf             Std1Backwards
0090   1787           00459         bsf             Std2Backwards
0091   1507           00460         bsf             PORTC,2             
0092   1487           00461         bsf             PORTC,1                 ; PWM now negative, so start by clearing
                      00462         
                      00463         ;trying to fix the switch bs
0093   1106           00464         bcf             SwitchWhite
0094   1186           00465         bcf             SwitchArm
                      00466 
                      00467 ;*************************************
                      00468 ;       Keypad and LCD forms        
                      00469 ;*************************************
                      00470         
0095   1C86           00471 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0096   2???           00472                 goto            $-1 
                      00473 
0097   0E06           00474                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0098   390F           00475                 andlw           0x0F
0099   00B9           00476                 movwf           temp
                      00477                 
                      00478                 Key     0x00, TOTAL
009A   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009B   390F               M          andlw          0x0F
009C   3A00               M          xorlw          0x00
009D   1903               M          btfsc          STATUS, Z
009E   2???               M          call           TOTAL
                      00479                 Key     0x01, DisplayBlackWhiteIR1
009F   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A0   390F               M          andlw          0x0F
00A1   3A01               M          xorlw          0x01
00A2   1903               M          btfsc          STATUS, Z
00A3   2???               M          call           DisplayBlackWhiteIR1
                      00480                 Key     0x02, DisplayBlackWhiteIR2
00A4   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A5   390F               M          andlw          0x0F
00A6   3A02               M          xorlw          0x02
00A7   1903               M          btfsc          STATUS, Z
00A8   2???               M          call           DisplayBlackWhiteIR2
                      00481                 Rotation        0x03
00A9   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00AA   390F               M          andlw          0x0F
00AB   3A03               M          xorlw          0x03
00AC   1903               M          btfsc          STATUS, Z
00AD   2???               M          call           ShiftLeft
                      00482                 Key     0x04, RTCDisplay
00AE   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00AF   390F               M          andlw          0x0F
00B0   3A04               M          xorlw          0x04
00B1   1903               M          btfsc          STATUS, Z
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B2   2???               M          call           RTCDisplay
                      00483                 Key     0x05, DisplayUSSensor1
00B3   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B4   390F               M          andlw          0x0F
00B5   3A05               M          xorlw          0x05
00B6   1903               M          btfsc          STATUS, Z
00B7   2???               M          call           DisplayUSSensor1
                      00484                 Key     0x06, DisplayUSSensor2
00B8   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B9   390F               M          andlw          0x0F
00BA   3A06               M          xorlw          0x06
00BB   1903               M          btfsc          STATUS, Z
00BC   2???               M          call           DisplayUSSensor2
                      00485                 Key     0x07, AddBin
00BD   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BE   390F               M          andlw          0x0F
00BF   3A07               M          xorlw          0x07
00C0   1903               M          btfsc          STATUS, Z
00C1   2???               M          call           AddBin
                      00486                 Key     0x08, Stickers1
00C2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C3   390F               M          andlw          0x0F
00C4   3A08               M          xorlw          0x08
00C5   1903               M          btfsc          STATUS, Z
00C6   2???               M          call           Stickers1
                      00487                 Key     0x09, MOVEFWDFORABIT
00C7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C8   390F               M          andlw          0x0F
00C9   3A09               M          xorlw          0x09
00CA   1903               M          btfsc          STATUS, Z
00CB   2???               M          call           MOVEFWDFORABIT
                      00488                 Key     0x0A, CHECKSWITCH               
00CC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00CD   390F               M          andlw          0x0F
00CE   3A0A               M          xorlw          0x0A
00CF   1903               M          btfsc          STATUS, Z
00D0   2???               M          call           CHECKSWITCH
                      00489                 Key     0x0C, StdRotation2
00D1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D2   390F               M          andlw          0x0F
00D3   3A0C               M          xorlw          0x0C
00D4   1903               M          btfsc          STATUS, Z
00D5   2???               M          call           StdRotation2
                      00490                 Key     0x0D, StdRotation2Backwards
00D6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D7   390F               M          andlw          0x0F
00D8   3A0D               M          xorlw          0x0D
00D9   1903               M          btfsc          STATUS, Z
00DA   2???               M          call           StdRotation2Backwards
                      00491                 Key     0x0E, PWMFWD
00DB   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00DC   390F               M          andlw          0x0F
00DD   3A0E               M          xorlw          0x0E
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DE   1903               M          btfsc          STATUS, Z
00DF   2???               M          call           PWMFWD
                      00492                 Key     0x0F, PWMBACK
00E0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00E1   390F               M          andlw          0x0F
00E2   3A0F               M          xorlw          0x0F
00E3   1903               M          btfsc          STATUS, Z
00E4   2???               M          call           PWMBACK
00E5   1886           00493                 btfsc           PORTB,1     ;Wait until key is released
00E6   2???           00494                 goto            $-1
00E7   2???           00495                 goto            KeypadandLCD
                      00496                 
00E8                  00497 goback
00E8   0008           00498                 return  
                      00499         
                      00500 
                      00501 ;*******************************************************************************************************
                            *******************************************
                      00502 ;                                                                 MAIN CODE
                      00503 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
                      00504 ;StartInit
                      00505 ;
                      00506 ;    call    set_rtc_time           ; resets RTC clock to zero
                      00507 ;
                      00508 ;    call    LEDCOLUMNTESTWHILEMOVINGFRONT
                      00509 ;StartMove
                      00510 ;
                      00511 ;    call    PWMFWD
                      00512 ;    call    HalfS
                      00513 ;    call    HalfS
                      00514 ;    
                      00515 ;TIME
                      00516 ;      
                      00517 ;;     rtc_resetAll                 ; for some reason, resetting the time again breaks it
                      00518 ;;     call   set_rtc_time
                      00519 ;
                      00520 ;    call       show_RTC
                      00521 ;    
                      00522 ;    return
                      00523 ;    
                      00524 ;    
                      00525 ;CHECKCOLUMN
                      00526 ;    
                      00527 ;    bsf            Std1
                      00528 ;    call    HalfS
                      00529 ;    call    HalfS
                      00530 ;
                      00531 ;    call    Read1_US           ;checks to see if column present
                      00532 ;    
                      00533 ;;    movlw   0xff
                      00534 ;;    subwf   TMR1L
                      00535 ;    btfss   W,0
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00536 ;    goto    CHECKCOLUMN
                      00537 ;    bsf            LED
                      00538 ;    bcf            Std1                ;stops motor from moving forward
                      00539 ;    call    HalfS
                      00540 ;    return
                      00541 ;    
                      00542 ;LEDCOLUMNTESTWHILEMOVINGFRONT
                      00543 ;    
                      00544 ;    ;call    Clear_Display
                      00545 ;    
                      00546 ;    ;call    set_rtc_time          ; resets RTC clock to zero
                      00547 ;    
                      00548 ;    ;call    FINDBIN
                      00549 ;    
                      00550 ;    bsf            Std1                ;moving
                      00551 ;    bcf            LED
                      00552 ;    
                      00553 ;    call    Read1_US           ;checks to see if column present
                      00554 ;    
                      00555 ;    movlw   0x10               ; if column present, it'll move forward
                      00556 ;    subwf   TMR1H
                      00557 ;    btfsc   STATUS,C
                      00558 ;    goto    LEDCOLUMNTESTWHILEMOVINGFRONT
                      00559 ;    bcf            Std1                ;motor will move fwd
                      00560 ;    bcf            LED
                      00561 ;    
                      00562 ;    
                      00563 ;    call    AVOIDCOLUMN
                      00564 ;    
                      00565 ;    
                      00566 ;;    bsf           Std1                ;move forward until no more column in the way
                      00567 ;;    bsf           LED
                      00568 ;;    
                      00569 ;;    call    HalfS
                      00570 ;;    call    HalfS
                      00571 ;;    call    HalfS             ;wait til it drives enough forward from column
                      00572 ;;    
                      00573 ;;    call    Read1_US          ;checks to see if column present
                      00574 ;;    
                      00575 ;;    movlw   0x10              ; if column is not present, it'll go back to original form
                      00576 ;;    subwf   TMR1H
                      00577 ;;    btfss   STATUS,C          
                      00578 ;;    goto    $-6
                      00579 ;;    
                      00580 ;;    bcf           Std1
                      00581 ;;    bcf           LED
                      00582 ;    
                      00583 ;    
                      00584 ;    call    RETURNFROMCOLUMN
                      00585 ;    
                      00586 ;    ;call    FINDBIN
                      00587 ;    
                      00588 ;    goto    EXIT
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E9                  00589 AVOIDCOLUMN
                      00590     
00E9   1287           00591     bcf     Std1                ;motor will stop move fwd
                      00592     
00EA   1307           00593     bcf     Std2                ; start white thing fwd
00EB   2???           00594     call    HalfS
00EC   1D06           00595     btfss   SwitchWhite
00ED   2???           00596     goto    $-1
                      00597    
00EE   1707           00598     bsf     Std2                   ; stop white thing fwd
                      00599     
00EF   2???           00600      call    HalfS
00F0   2???           00601     call    HalfS
00F1   2???           00602      call    HalfS
00F2   2???           00603     call    HalfS
                      00604     
00F3   2???           00605     call    PWMFWD          ;start arm forward
00F4   2???           00606     call    lcdLongDelay
00F5   2???           00607     call    lcdLongDelay
00F6   1D86           00608     btfss   SwitchArm
00F7   2???           00609     goto    $-1
                      00610     
00F8   2???           00611     call    PWMFWD          ;stop arm forward
                      00612     
                      00613 ;-------------------------------------------------
                      00614     
00F9   1687           00615     bsf     Std1                ;move forward until no more column in the way
                      00616     
00FA   2???           00617     call    HalfS
00FB   2???           00618     call    HalfS
00FC   2???           00619     call    HalfS               ;wait til it drives enough forward from column
                      00620     
00FD   2???           00621     call    HalfS
00FE   2???           00622     call    HalfS
00FF   2???           00623     call    HalfS               ;wait til it drives enough forward from column
0100   2???           00624     call    HalfS
0101   2???           00625     call    HalfS               ;wait til it drives enough forward from column
0102   2???           00626         call    HalfS
                      00627 
                      00628     
0103   2???           00629     call    Read1_US            ;checks to see if column present
                      00630     
0104   300F           00631     movlw   0xF         ; if column is not present, it'll go back to original form
0105   028F           00632     subwf   TMR1H
0106   1C03           00633     btfss   STATUS,C            
0107   2???           00634     goto    $-6
                      00635     
0108   1287           00636     bcf     Std1
                      00637     
                      00638     
0109   2???           00639     call    RETURNFROMCOLUMN
                      00640     
010A   0008           00641     return 
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00642     
010B                  00643 RETURNFROMCOLUMN
                      00644     
010B   2???           00645     call    PWMBACK         ;start arm BACK
010C   2???           00646     call    HalfS
010D   1D86           00647     btfss   SwitchArm
010E   2???           00648     goto    $-1
                      00649     
010F   2???           00650     call    PWMBACK         ;stop arm BACK
                      00651     
                      00652     
0110   2???           00653     call    HalfS
0111   2???           00654     call    HalfS
                      00655     
0112   1387           00656     bcf     Std2Backwards
0113   2???           00657     call    HalfS
0114   1D06           00658     btfss   SwitchWhite
0115   2???           00659     goto    $-1 
                      00660     
0116   1787           00661     bsf     Std2Backwards
                      00662     
0117   0008           00663     return
                      00664     
                      00665 ;FINDBINA
                      00666 ;    
                      00667 ;    call    FINDBIN
                      00668 ;    call    FINDBIN
                      00669 ;    
                      00670 ;    goto    EXIT
                      00671 ;    
                      00672 ;FINDBIN
                      00673 ;    
                      00674 ;    ;call    set_rtc_time          ; resets RTC clock to zero
                      00675 ;    
                      00676 ;    bsf            Std1        ;move fwd
                      00677 ;
                      00678 ;    call    Read2_US           ;checks to see if bin present
                      00679 ;    
                      00680 ;    movlw   0x10               ; if column is not present, it'll go back to original form
                      00681 ;    subwf   TMR1H
                      00682 ;    btfsc   STATUS,C
                      00683 ;    goto    FINDBIN            ;set LED to know found bin
                      00684     
0118                  00685 READBIN
                      00686 
0118   2???           00687     call    HalfS
0119   1287           00688     bcf     Std1
                      00689     
011A   2???           00690     call    AddBin              ;adds bin to list
                      00691     
011B   2???           00692     call    Dist_Decoder        ; stores the distance
                      00693     Put_Dist_In_Reg     distreg
011C   ???? ???? 2???     M         lcall   Dist_Decoder
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011F   086A               M         movfw   cm
0120   00ED               M         movwf   distreg
                      00694     Display_Dist        distreg
0121   01D2               M         clrf    NumL
0122   01D1               M         clrf    NumH
0123   086D               M         movfw   distreg
                          M         ;movfw  TMR0
0124   00D2               M         movwf   NumL
0125   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
0126   0855               M         movfw       Hund
0127   2???               M         call        DectoChar
0128   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
0129   0856               M         movfw       Tens
012A   2???               M         call        DectoChar
012B   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
012C   0857               M         movfw       Ones
012D   2???               M         call        DectoChar
012E   2???               M         call        WR_DATA
012F   2???           00695     call    StoreThisDistance
                      00696     
0130   2???           00697     call    Clear_Display    
                      00698     
0131   2???           00699     call    StoreBW1            ;reads & stores first IR data
                      00700     
                      00701 ;*****THRESHHOLD TEST ON IR 1************
                      00702 ;    nothing in front: 02056
                      00703 ;    black in front: 10000-41000
                      00704 ;    white in front: >60000
                      00705     
                      00706     ;READ 2 ALGORITHM IMPLEMENT HERE
                      00707     
0132   2???           00708     call    HalfS
0133   2???           00709     call    HalfS
0134   2???           00710     call    HalfS
0135   2???           00711     call    HalfS
                      00712     
0136   2???           00713     call    Clear_Display
                      00714     
0137   2???           00715     call    StoreBW2
                      00716     
0138   2???           00717     call    HalfS
0139   2???           00718     call    HalfS
                      00719     
013A   1006           00720     bcf     LED
                      00721     
013B   0008           00722     return
                      00723     
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013C   2???           00724     goto    EXIT    
                      00725      
                      00726     
013D                  00727 TOTAL
                      00728     
013D   2???           00729     call    Read1_US            ;warms up us sensors that was weird
013E   2???           00730     call    Read2_US
                      00731     
013F   2???           00732     call    DisplayBlackWhiteIR2        ;warms up IR
0140   2???           00733     call    DisplayBlackWhiteIR1        ;warms up IR
                      00734     
0141                  00735 TOTAL1
                      00736     
0141   1687           00737     bsf     Std1                ;moving
0142   01EF           00738     clrf    count_highs         ;reset the high value counter
                      00739     
0143   2???           00740     call    Read1_US            ;checks to see if column present
                      00741     
                      00742 ;********THRESHOLD CALCULATION FOR COLUMN**************:
                      00743 ;   At around cm from col, reading: 02303
                      00744 ;       So, this will be the max value.
                      00745 ;       To be safe, will minus 02603 from the TMR variables.
                      00746 ;       This means, subtract 0x4 from TMR1H 
                      00747 ;       Value before at integration was 0x14, now trying 0x4
                      00748     
0144   300F           00749     movlw   0xF         ; if column present, it'll move forward
0145   028F           00750     subwf   TMR1H
0146   1C03           00751     btfss   STATUS,C
0147   2???           00752     call    AVOIDCOLUMN
                      00753     
                      00754 ;    goto    $+6
                      00755 ;    incf    count_highs
                      00756 ;    movlw   MAX_HIGHS
                      00757 ;    subwf   count_highs,W          ; will always be negative UNTIL the high count is the one we want
                      00758 ;    btfsc   STATUS,Z               ; if result is zero, Z bit is set.
                      00759     
0148   01EF           00760     clrf    count_highs         ;reset the high value counter
                      00761     
0149   2???           00762     call    Read2_US            ;checks to see if bin present
                      00763     
                      00764 ;********THRESHOLD CALCULATION FOR BIN**************:
                      00765 ;   At around 6cm from white bin, reading: 01103
                      00766 ;       So, this will be the max value.
                      00767 ;       To be safe, will minus 01210 from the TMR variables.
                      00768 ;       This means, subtract 0x4 from TMR1H 
                      00769 ;       Value before at integration was 0x14, now trying 0x4
                      00770     
                      00771     
014A   3006           00772     movlw   0x6         ; read the bin
014B   028F           00773     subwf   TMR1H
014C   1C03           00774     btfss   STATUS,C
014D   2???           00775     call    DELAYEDREAD
014E   2???           00776     goto    ENDTHIS                 ;switch endthis with delayread for max high thing
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00777     
                      00778        
                      00779 ;    incf    count_highs
                      00780 ;    movlw   MAX_HIGHS
                      00781 ;    subwf   count_highs,W          ; will always be negative UNTIL the high count is the one we want
                      00782 ;    btfsc   STATUS,Z               ; if result is zero, Z bit is set.
                      00783    
                      00784     
                      00785     
014F                  00786 DELAYEDREAD
014F   2???           00787     call    HalfS           ; wait for robot to move a bit in front of bin
0150   2???           00788     call    READBIN
0151   1687           00789     bsf     Std1                ; move forward a bit so that you don't double read bin
0152   2???           00790     call    HalfS
0153   2???           00791     call    HalfS
0154   1406           00792     bsf     LED                 ; turn off LED After reading
                      00793     
0155                  00794 ENDTHIS   
                      00795     
                      00796 ;    movlw   0x4
0155   1CE0           00797     btfss   NumOfBins1,1                ;checking if its at two bins
                      00798 ;    btfsc   STATUS,C
0156   2???           00799     goto TOTAL1
                      00800     
                      00801     
                      00802 ;    bsf            Std1                ;move forward until no more column in the way
                      00803 ;    bsf            LED5
                      00804 ;    
                      00805 ;    call    HalfS
                      00806 ;    call    HalfS
                      00807 ;    call    HalfS              ;wait til it drives enough forward from column
                      00808 ;    
                      00809 ;    call    Read1_US           ;checks to see if column present
                      00810 ;    
                      00811 ;    movlw   0x10               ; if column is not present, it'll go back to original form
                      00812 ;    subwf   TMR1H
                      00813 ;    btfss   STATUS,C           
                      00814 ;    goto    $-6
                      00815 ;    
                      00816 ;    bcf            Std1
                      00817 ;    bcf            LED
                      00818 ;    
                      00819 ;    
                      00820 ;    call    RETURNFROMCOLUMN
                      00821     
                      00822     ;call    FINDBIN
                      00823     
0157   2???           00824     goto    EXIT
                      00825     
0158                  00826 CHECKSWITCH
                      00827     
                      00828     ;call    Clear_Display
                      00829     ;Display DectoChar
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00830     
0158   2???           00831     call    PWMFWD
0159   2???           00832     call    DELAY1
015A   2???           00833     call    HalfS
015B   1D86           00834     btfss   SwitchArm
015C   2???           00835     goto    $-1
                      00836    
015D   2???           00837     call    PWMFWD
                      00838  
015E   2???           00839     call    PWMBACK
015F   2???           00840     call    DELAY1
0160   2???           00841     call    HalfS
0161   1D86           00842     btfss   SwitchArm
0162   2???           00843     goto    $-1 
                      00844     
0163   2???           00845     call    PWMBACK
                      00846     
0164   2???           00847     goto    CHECKSWITCH  
                      00848 
                      00849 
0165                  00850 EXIT
                      00851     
0165   2???           00852     call        Clear_Display
                      00853     ;display final interface for choosing stuff
                      00854     Display     FinalMessage
  0000                    M                 local   loop_
  0000                    M                 local   end_
0166   01B3               M                 clrf    Table_Counter
0167   0103               M                 clrw            
0168   0833               M loop_   movf    Table_Counter,W
0169   2???               M                 call    FinalMessage
016A   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
016B   1903               M                 btfsc   STATUS,Z
016C   2???               M                         goto    end_
016D   2???               M                 call    WR_DATA
016E   0AB3               M                 incf    Table_Counter,F
016F   2???               M                 goto    loop_
0170                      M end_
0170   2???           00855     call        Switch_Lines
                      00856     Display     Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0171   01B3               M                 clrf    Table_Counter
0172   0103               M                 clrw            
0173   0833               M loop_   movf    Table_Counter,W
0174   2???               M                 call    Welcome_Msg2
0175   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0176   1903               M                 btfsc   STATUS,Z
0177   2???               M                         goto    end_
0178   2???               M                 call    WR_DATA
0179   0AB3               M                 incf    Table_Counter,F
017A   2???               M                 goto    loop_
017B                      M end_
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00857     
017B   1287           00858     bcf         Std1
017C   1407           00859     bsf         Std1Backwards
                      00860     
017D   2???           00861     goto        EXITDISPLAY
                      00862     
017E                  00863 MOVEFWDFORABIT
                      00864     
017E   1687           00865     bsf         Std1
                      00866     
017F   2???           00867     call        OneS
0180   2???           00868     call        OneS
0181   2???           00869         call    OneS
0182   2???           00870     call        OneS
0183   2???           00871         call    OneS
0184   2???           00872     call        OneS
                      00873     
0185   1287           00874     bcf         Std1
                      00875     
0186   2???           00876     goto        EXITDISPLAY
                      00877     
0187   1C86           00878 EXITDISPLAY     btfss           PORTB,1     ;Wait until data is available from the keypad
0188   2???           00879                 goto            $-1 
                      00880 
0189   0E06           00881                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
018A   390F           00882                 andlw           0x0F
018B   00B9           00883                 movwf           temp
                      00884                 Key     0x00, show_RTC
018C   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
018D   390F               M          andlw          0x0F
018E   3A00               M          xorlw          0x00
018F   1903               M          btfsc          STATUS, Z
0190   2???               M          call           show_RTC
                      00885                 Key     0x02, Stickers1
0191   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0192   390F               M          andlw          0x0F
0193   3A02               M          xorlw          0x02
0194   1903               M          btfsc          STATUS, Z
0195   2???               M          call           Stickers1
                      00886                 Rotation        0x03
0196   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0197   390F               M          andlw          0x0F
0198   3A03               M          xorlw          0x03
0199   1903               M          btfsc          STATUS, Z
019A   2???               M          call           ShiftLeft
                      00887                 Key     0x04, ShowBins
019B   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
019C   390F               M          andlw          0x0F
019D   3A04               M          xorlw          0x04
019E   1903               M          btfsc          STATUS, Z
019F   2???               M          call           ShowBins
                      00888                 Key     0x05, TotalDistance
01A0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A1   390F               M          andlw          0x0F
01A2   3A05               M          xorlw          0x05
01A3   1903               M          btfsc          STATUS, Z
01A4   2???               M          call           TotalDistance
                      00889                 Key     0x06, Locations
01A5   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01A6   390F               M          andlw          0x0F
01A7   3A06               M          xorlw          0x06
01A8   1903               M          btfsc          STATUS, Z
01A9   2???               M          call           Locations
                      00890                 Key     0x07, AddBin
01AA   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01AB   390F               M          andlw          0x0F
01AC   3A07               M          xorlw          0x07
01AD   1903               M          btfsc          STATUS, Z
01AE   2???               M          call           AddBin
01AF   1886           00891                 btfsc           PORTB,1     ;Wait until key is released
01B0   2???           00892                 goto            $-1
01B1   2???           00893                 goto            EXITDISPLAY
                      00894     
                      00895     ;show location for every bin
                      00896     
                      00897     
                      00898     ;show number of bins
                      00899     
                      00900     
                      00901     ;show dist travelled
                      00902     
                      00903     
                      00904     ;show time elapsed
                      00905     
                      00906     
                      00907     
01B2   2???           00908     goto    EXIT
                      00909     
01B3                  00910 MoveBackwards
                      00911     
01B3   2???           00912     call    PWMSTOP
                      00913     
                      00914         
                      00915 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00916 
                      00917 ;*********************************************************
                      00918 ; A to D conversion with LCD display for IR sensor
                      00919 ;*********************************************************
                      00920         
                      00921 ;******************************************
                      00922 ;       Sticker Print Modules
                      00923 ;*****************************************
                      00924         
01B4                  00925 BWScanModule1
                      00926 
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B4   151F           00927         bsf     ADCON0,2                ;start conversion and wait for it to complete
01B5   191F           00928         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01B6   2???           00929         goto    $-1
                      00930         
01B7   081E           00931         movf    ADRESH, W
01B8   00D1           00932         movwf   NumH
01B9   081E           00933         movf    ADRESL, W
01BA   00D2           00934         movwf   NumL
01BB   2???           00935         call    Clear_Display
01BC   2???           00936         call    bin16_BCD
                      00937         PrintNumber     TenK
                          M         ;movf       number ,W
01BD   0853               M         movfw       TenK
01BE   2???               M         call        DectoChar
01BF   2???               M         call        WR_DATA
                      00938         PrintNumber     Thou
                          M         ;movf       number ,W
01C0   0854               M         movfw       Thou
01C1   2???               M         call        DectoChar
01C2   2???               M         call        WR_DATA
                      00939         PrintNumber     Hund
                          M         ;movf       number ,W
01C3   0855               M         movfw       Hund
01C4   2???               M         call        DectoChar
01C5   2???               M         call        WR_DATA
                      00940         PrintNumber     Tens
                          M         ;movf       number ,W
01C6   0856               M         movfw       Tens
01C7   2???               M         call        DectoChar
01C8   2???               M         call        WR_DATA
                      00941         PrintNumber     Ones
                          M         ;movf       number ,W
01C9   0857               M         movfw       Ones
01CA   2???               M         call        DectoChar
01CB   2???               M         call        WR_DATA
01CC   0008           00942         return
01CD                  00943 BWStoreModule1
01CD   1383           00944         BCF     STATUS, IRP
01CE   3042           00945         movlw   0x42
01CF   0084           00946         movwf   FSR
01D0   3000           00947         movlw   0X0
01D1   0360           00948         decf    NumOfBins1,W            ;want bin number to be decreased when back checks it
01D2   0784           00949         addwf   FSR,F
01D3   3029           00950         movlw   0X29
01D4   02D1           00951         subwf   NumH
01D5   3000           00952         movlw   0x0
01D6   1803           00953         btfsc   STATUS, C
01D7   3001           00954         movlw   0x1
01D8   0080           00955         movwf   INDF
01D9   0008           00956         return  
                      00957         
01DA                  00958 BWScanModule2
                      00959 
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DA   151F           00960         bsf     ADCON0,2                ;start conversion and wait for it to complete
01DB   191F           00961         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01DC   2???           00962         goto    $-1
                      00963         
01DD   081E           00964         movf    ADRESH, W
01DE   00D1           00965         movwf   NumH
01DF   081E           00966         movf    ADRESL, W
01E0   00D2           00967         movwf   NumL
01E1   2???           00968         call    Clear_Display
01E2   2???           00969         call    bin16_BCD
                      00970         PrintNumber     TenK
                          M         ;movf       number ,W
01E3   0853               M         movfw       TenK
01E4   2???               M         call        DectoChar
01E5   2???               M         call        WR_DATA
                      00971         PrintNumber     Thou
                          M         ;movf       number ,W
01E6   0854               M         movfw       Thou
01E7   2???               M         call        DectoChar
01E8   2???               M         call        WR_DATA
                      00972         PrintNumber     Hund
                          M         ;movf       number ,W
01E9   0855               M         movfw       Hund
01EA   2???               M         call        DectoChar
01EB   2???               M         call        WR_DATA
                      00973         PrintNumber     Tens
                          M         ;movf       number ,W
01EC   0856               M         movfw       Tens
01ED   2???               M         call        DectoChar
01EE   2???               M         call        WR_DATA
                      00974         PrintNumber     Ones
                          M         ;movf       number ,W
01EF   0857               M         movfw       Ones
01F0   2???               M         call        DectoChar
01F1   2???               M         call        WR_DATA
                      00975 ;       call            HalfS           ;wait half a second to display
01F2   0008           00976         return
01F3                  00977 BWStoreModule2
01F3   1383           00978         BCF     STATUS, IRP
01F4   3049           00979         movlw   0x49                    ;number 49 to try to get registers for back of bin
01F5   0084           00980         movwf   FSR
01F6   3000           00981         movlw   0X0
01F7   0360           00982         decf    NumOfBins1,W
01F8   0784           00983         addwf   FSR,F
01F9   3029           00984         movlw   0X29
01FA   02D1           00985         subwf   NumH
01FB   3000           00986         movlw   0x0
01FC   1803           00987         btfsc   STATUS, C
01FD   3001           00988         movlw   0x1
01FE   0080           00989         movwf   INDF
01FF   0008           00990         return  
                      00991         
0200                  00992 ReadBW
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00993                         
0200   151F           00994         bsf     ADCON0,2                ;start conversion and wait for it to complete
0201   191F           00995         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
0202   2???           00996         goto    $-1
                      00997         
0203   081E           00998         movf    ADRESH, W
0204   00D1           00999         movwf   NumH
0205   081E           01000         movf    ADRESL, W
0206   00D2           01001         movwf   NumL
                      01002         
0207   2???           01003         call            Clear_Display
0208   2???           01004         call            bin16_BCD
                      01005         PrintNumber     TenK
                          M         ;movf       number ,W
0209   0853               M         movfw       TenK
020A   2???               M         call        DectoChar
020B   2???               M         call        WR_DATA
                      01006         PrintNumber     Thou
                          M         ;movf       number ,W
020C   0854               M         movfw       Thou
020D   2???               M         call        DectoChar
020E   2???               M         call        WR_DATA
                      01007         PrintNumber     Hund
                          M         ;movf       number ,W
020F   0855               M         movfw       Hund
0210   2???               M         call        DectoChar
0211   2???               M         call        WR_DATA
                      01008         PrintNumber     Tens
                          M         ;movf       number ,W
0212   0856               M         movfw       Tens
0213   2???               M         call        DectoChar
0214   2???               M         call        WR_DATA
                      01009         PrintNumber     Ones
                          M         ;movf       number ,W
0215   0857               M         movfw       Ones
0216   2???               M         call        DectoChar
0217   2???               M         call        WR_DATA
0218   2???           01010         call            HalfS
0219   2???           01011         call            Clear_Display
                      01012         
021A   3001           01013         movlw           0x1
021B   02D3           01014         subwf           TenK
021C   3000           01015         movlw           0x0
021D   1803           01016         btfsc           STATUS,C
021E   3001           01017         movlw           0x1
                      01018         
021F   0008           01019         return
                      01020                 
                      01021     
                      01022 ;***************************************************
                      01023 ;       US Sensor Modules                           [TESTED]
                      01024 ;***************************************************
                      01025         
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0220                  01026 Read1_US                    
                      01027          
                      01028         ;call           Read1_US1 
                      01029          
                      01030         ReadUltrasonic  UST1,US1E1
0220   018F               M     clrf        TMR1H
0221   018E               M     clrf        TMR1L
                          M 
0222   1008               M     bcf PORTD,   0                      ;make sure trigger is clear
0223   2???               M     call lcdLongDelay
                          M 
0224   1408               M     bsf PORTD,   0              ;trigger high, bottom sensor
0225   2???               M     call lcdLongDelay           ;10us delay
0226   1008               M     bcf PORTD,   0              ;trigger low
                          M 
0227   1D05               M     btfss       PORTA, 2                ;wait for echo to go high
0228   2???               M     goto        $-1
0229   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
022A   1905               M     btfsc       PORTA, 2                ;wait for echo to go low
022B   2???               M     goto        $-1
                          M 
022C   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      01031         
022D   2???           01032         call            Clear_Display
                      01033         
022E   080F           01034         movf            TMR1H, W
022F   00D1           01035         movwf           NumH
0230   080E           01036         movf            TMR1L, W
0231   00D2           01037         movwf           NumL
                      01038         
0232   2???           01039         call            bin16_BCD
                      01040         
                      01041         PrintNumber     TenK
                          M         ;movf       number ,W
0233   0853               M         movfw       TenK
0234   2???               M         call        DectoChar
0235   2???               M         call        WR_DATA
                      01042         PrintNumber     Thou
                          M         ;movf       number ,W
0236   0854               M         movfw       Thou
0237   2???               M         call        DectoChar
0238   2???               M         call        WR_DATA
                      01043         PrintNumber     Hund
                          M         ;movf       number ,W
0239   0855               M         movfw       Hund
023A   2???               M         call        DectoChar
023B   2???               M         call        WR_DATA
                      01044         PrintNumber     Tens
                          M         ;movf       number ,W
023C   0856               M         movfw       Tens
023D   2???               M         call        DectoChar
023E   2???               M         call        WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01045         PrintNumber     Ones
                          M         ;movf       number ,W
023F   0857               M         movfw       Ones
0240   2???               M         call        DectoChar
0241   2???               M         call        WR_DATA
                      01046         
                      01047         ;call           HalfS
                      01048         
0242   2???           01049         call            Clear_Display
0243   0008           01050         return
                      01051         
                      01052 ;Read1_US1
                      01053 ;               
                      01054 ;               clrf    TMR1H           ; commented are sam harrison edits
                      01055 ;               clrf    TMR1L
                      01056 ;               
                      01057 ;               bsf     UST1            ;trigger high, bottom sensor
                      01058 ;               call    lcdLongDelay
                      01059 ;               bcf     UST1            ;trigger low
                      01060 ;               
                      01061 ;               btfss   US1E1           ;wait for echo to go high
                      01062 ;               goto    $-1
                      01063 ;               bsf     T1CON,TMR1ON    ;turn on timer
                      01064 ;               
                      01065 ;               btfsc   US1E1           ;wait for echo to go low
                      01066 ;               goto    $-1
                      01067 ;               
                      01068 ;               bcf     T1CON,TMR1ON    ;turn off timer
                      01069 ;               return
                      01070                 
0244                  01071 Read2_US                    
                      01072          
                      01073         ;call           Read2_US1 
                      01074         
                      01075         ReadUltrasonic  UST2,US1E2
0244   018F               M     clrf        TMR1H
0245   018E               M     clrf        TMR1L
                          M 
0246   1088               M     bcf PORTD,   1                      ;make sure trigger is clear
0247   2???               M     call lcdLongDelay
                          M 
0248   1488               M     bsf PORTD,   1              ;trigger high, bottom sensor
0249   2???               M     call lcdLongDelay           ;10us delay
024A   1088               M     bcf PORTD,   1              ;trigger low
                          M 
024B   1D85               M     btfss       PORTA, 3                ;wait for echo to go high
024C   2???               M     goto        $-1
024D   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
024E   1985               M     btfsc       PORTA, 3                ;wait for echo to go low
024F   2???               M     goto        $-1
                          M 
0250   1010               M     bcf T1CON,TMR1ON    ;turn off timer
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01076          
0251   2???           01077         call            Clear_Display
                      01078         
0252   080F           01079         movf            TMR1H, W
0253   00D1           01080         movwf           NumH
0254   080E           01081         movf            TMR1L, W
0255   00D2           01082         movwf           NumL
                      01083         
0256   2???           01084         call            bin16_BCD
                      01085         
                      01086         PrintNumber     TenK
                          M         ;movf       number ,W
0257   0853               M         movfw       TenK
0258   2???               M         call        DectoChar
0259   2???               M         call        WR_DATA
                      01087         PrintNumber     Thou
                          M         ;movf       number ,W
025A   0854               M         movfw       Thou
025B   2???               M         call        DectoChar
025C   2???               M         call        WR_DATA
                      01088         PrintNumber     Hund
                          M         ;movf       number ,W
025D   0855               M         movfw       Hund
025E   2???               M         call        DectoChar
025F   2???               M         call        WR_DATA
                      01089         PrintNumber     Tens
                          M         ;movf       number ,W
0260   0856               M         movfw       Tens
0261   2???               M         call        DectoChar
0262   2???               M         call        WR_DATA
                      01090         PrintNumber     Ones
                          M         ;movf       number ,W
0263   0857               M         movfw       Ones
0264   2???               M         call        DectoChar
0265   2???               M         call        WR_DATA
                      01091         
                      01092         ;call           HalfS
                      01093         
0266   2???           01094         call            Clear_Display
0267   0008           01095         return
                      01096         
                      01097 ;Read2_US1
                      01098 ;               
                      01099 ;               clrf    TMR1H
                      01100 ;               clrf    TMR1L
                      01101 ;               
                      01102 ;               bsf     UST2            ;trigger high, bottom sensor
                      01103 ;               call    lcdLongDelay                ;sam harrison edits
                      01104 ;               bcf     UST2            ;trigger low
                      01105 ;               
                      01106 ;               btfss   US1E2           ;wait for echo to go high
                      01107 ;               goto    $-1
                      01108 ;               bsf     T1CON,TMR1ON    ;turn on timer
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01109 ;               
                      01110 ;               btfsc   US1E2           ;wait for echo to go low
                      01111 ;               goto    $-1
                      01112 ;               
                      01113 ;               bcf     T1CON,TMR1ON    ;turn off timer
                      01114 ;               return
                      01115                 
                      01116 ;*******************************************************
                      01117 ; Dist_Decoder
                      01118 ;   input:  Timer0, cm, mm
                      01119 ;   output: Bin_Dist_reg
                      01120 ;   Desc:   Converts the count in the rotary encoder
                      01121 ;           into physical distance
                      01122 ;*******************************************************
0268                  01123 Dist_Decoder
                      01124         ; Initalize all registers
0268   01EA           01125         clrf    cm              ; Clear regs
0269   01EB           01126         clrf    mm
026A   0801           01127         movfw   TMR0            ; poll encoder for current state
026B   00B9           01128         movwf   temp
                      01129         ; Check if its already zero
026C   0839           01130         movfw   temp
026D   3C00           01131         sublw   D'0'
026E   1903           01132         btfsc   STATUS, Z
026F   0008           01133         return
                      01134         
0270                  01135 Decode_loop                     ; Assume each step is 1.01 cm
                      01136         ; Perform decode
                      01137         ADDL    cm, cm, D'2'
0270   3002               M     MOVLW  D'2'         ; move literal into working register
0271   076A               M     ADDWF   cm,W        ; W <- literal + reg
0272   00EA               M     MOVWF   cm          ; Destination <- literal + reg
                      01138         ADDL    mm, mm, D'0'
0273   3000               M     MOVLW  D'0'         ; move literal into working register
0274   076B               M     ADDWF   mm,W        ; W <- literal + reg
0275   00EB               M     MOVWF   mm          ; Destination <- literal + reg
0276   03B9           01139         decf    temp
                      01140 
                      01141         ; Test if mm has overflowed! (mm >= 10)
0277   300A           01142         movlw   D'10'           
0278   026B           01143         subwf   mm, w           ; mm - 10 --> w (w = f - w, when d = 0) 
0279   1803           01144         btfsc   STATUS, C       ; Y = mm, w = 10, Y-w
027A   2???           01145         call    mm_overflow     ; Run overflow routine if it did overflow
                      01146 
027B                  01147 Decode_check_done       
                      01148         ; Test if done decoding
027B   0839           01149         movfw   temp
027C   3C00           01150         sublw   D'0'
                      01151         ;movf   temp, F
027D   1D03           01152         btfss   STATUS, Z       
027E   2???           01153         goto    Decode_loop
                      01154 ;       btfss   STATUS, C
                      01155 ;       call    Decode_loop
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01156         ;Display            StandBy1
                      01157         ;goto       Dist_test
027F   0008           01158         return
                      01159         
0280                  01160 mm_overflow
0280   0AEA           01161         incf    cm              ; cm + 1 --> cm
0281   300A           01162         movlw   D'10'           ; 10 --> w
0282   02EB           01163         subwf   mm, f           ; mm - 10 --> mm (f = f - w, when d = 1) 
0283   2???           01164         goto    Decode_check_done       ; Continue decoding
                      01165         
0284                  01166 StoreThisDistance
0284   1383           01167         BCF     STATUS, IRP
0285   303B           01168         movlw   0x3B                    ;number 56 to try to get location registers in cblock
0286   0084           01169         movwf   FSR
0287   3000           01170         movlw   0X0
0288   0360           01171         decf    NumOfBins1,W
0289   0784           01172         addwf   FSR,F
                      01173         Put_Dist_In_Reg W               ;move the distance into the actual register
028A   ???? ???? 2???     M         lcall   Dist_Decoder
028D   086A               M         movfw   cm
028E   0080               M         movwf   W
028F   0080           01174         movwf   INDF
                      01175         
0290   0008           01176         return
                      01177 ;*********************************************
                      01178 ; Keypad Modules
                      01179 ;*******************************************
                      01180          
                      01181 
0291                  01182 ShiftLeft
0291   3018           01183         movlw           b'00011000'             ;Move to the left
0292   2???           01184         call            WR_INS
0293   0008           01185         return
                      01186 
0294   2???           01187         goto    KeypadandLCD
                      01188         
0295                  01189 RTCDisplay
0295   2???           01190         call    show_RTC
                      01191         
0296   1886           01192         btfsc           PORTB,1     ;Wait until data is available from the keypad
0297   0008           01193         return
0298   1886           01194         btfsc           PORTB,1     ;Wait until data is available from the keypad
0299   0008           01195         return
029A   1886           01196         btfsc           PORTB,1     ;Wait until data is available from the keypad
029B   0008           01197         return
029C   1886           01198         btfsc           PORTB,1     ;Wait until data is available from the keypad
029D   0008           01199         return
029E   2???           01200         goto        RTCDisplay
                      01201         
029F                  01202 StoreBW1
029F   1283           01203         bcf     STATUS,RP0
02A0   3005           01204         movlw   b'00000101'             
02A1   009F           01205         movwf   ADCON0                  ;choose RA0
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01206         
02A2   2???           01207         call    BWScanModule1   
02A3   2???           01208         call    BWStoreModule1
                      01209         
02A4   0008           01210         return                          ; why was there not a return here before?
                      01211         
02A5                  01212 StoreBW2
02A5   1283           01213         bcf     STATUS,RP0
02A6   3015           01214         movlw   b'00010101'             
02A7   009F           01215         movwf   ADCON0                  ;choose RA1
                      01216         
02A8   2???           01217         call    BWScanModule2
02A9   2???           01218         call    BWStoreModule2
                      01219         
02AA   0008           01220         return
                      01221         
02AB                  01222 AddBin
02AB   2???           01223         Call Clear_Display
02AC   0AE0           01224         incf    NumOfBins1,F
                      01225         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
02AD   0860               M         movfw       NumOfBins1
02AE   2???               M         call        DectoChar
02AF   2???               M         call        WR_DATA
02B0   3007           01226         movlw   0X7                     ;checks if max of 7 bins has been reached
02B1   0260           01227         subwf   NumOfBins1,W            
02B2   1903           01228         btfsc   STATUS,Z
02B3   2???           01229         goto    EXIT
02B4   0008           01230         return
                      01231         
02B5                  01232 ShowBins
                      01233         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
02B5   0860               M         movfw       NumOfBins1
02B6   2???               M         call        DectoChar
02B7   2???               M         call        WR_DATA
                      01234         
02B8   0008           01235         return
                      01236         
02B9                  01237 Stickers1                   ;TESTED
02B9   2???           01238         call            Clear_Display
02BA   3000           01239         movlw           0X0
02BB   00DF           01240         movwf           counter
02BC   1383           01241         BCF             STATUS, IRP
02BD   3041           01242         movlw           0x41
02BE   0084           01243         movwf           FSR
02BF   0860           01244         movfw           NumOfBins1
02C0   00DE           01245         movwf           countdown
                      01246         Display         FrontStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02C1   01B3               M                 clrf    Table_Counter
02C2   0103               M                 clrw            
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C3   0833               M loop_   movf    Table_Counter,W
02C4   2???               M                 call    FrontStickers
02C5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02C6   1903               M                 btfsc   STATUS,Z
02C7   2???               M                         goto    end_
02C8   2???               M                 call    WR_DATA
02C9   0AB3               M                 incf    Table_Counter,F
02CA   2???               M                 goto    loop_
02CB                      M end_
02CB                  01247 FrontLoop1      
02CB   0A84           01248         INCF            FSR,1
02CC   0ADF           01249         incf            counter
                      01250         PrintNumber     counter
                          M         ;movf       number ,W
02CD   085F               M         movfw       counter
02CE   2???               M         call        DectoChar
02CF   2???               M         call        WR_DATA
                      01251         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02D0   01B3               M                 clrf    Table_Counter
02D1   0103               M                 clrw            
02D2   0833               M loop_   movf    Table_Counter,W
02D3   2???               M                 call    Colon
02D4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02D5   1903               M                 btfsc   STATUS,Z
02D6   2???               M                         goto    end_
02D7   2???               M                 call    WR_DATA
02D8   0AB3               M                 incf    Table_Counter,F
02D9   2???               M                 goto    loop_
02DA                      M end_
02DA   0800           01252         movfw           INDF
                      01253         PrintCol        W
02DB   0800               M         movfw       W
02DC   2???               M         call        StickerColours
02DD   2???               M         call        WR_DATA
                      01254         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02DE   01B3               M                 clrf    Table_Counter
02DF   0103               M                 clrw            
02E0   0833               M loop_   movf    Table_Counter,W
02E1   2???               M                 call    Spacee
02E2   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02E3   1903               M                 btfsc   STATUS,Z
02E4   2???               M                         goto    end_
02E5   2???               M                 call    WR_DATA
02E6   0AB3               M                 incf    Table_Counter,F
02E7   2???               M                 goto    loop_
02E8                      M end_
02E8   0BDE           01255         decfsz          countdown,F
02E9   2???           01256         goto            FrontLoop1
                      01257         
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EA   2???           01258         call            Switch_Lines
                      01259         
02EB                  01260 Stickers2                       ;TESTED
                      01261         
02EB   3000           01262         movlw           0X0
02EC   00DF           01263         movwf           counter
02ED   1383           01264         BCF             STATUS, IRP
02EE   3048           01265         movlw           0x48
02EF   0084           01266         movwf           FSR
02F0   0860           01267         movfw           NumOfBins1
02F1   00DE           01268         movwf           countdown
                      01269         Display         BackStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02F2   01B3               M                 clrf    Table_Counter
02F3   0103               M                 clrw            
02F4   0833               M loop_   movf    Table_Counter,W
02F5   2???               M                 call    BackStickers
02F6   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02F7   1903               M                 btfsc   STATUS,Z
02F8   2???               M                         goto    end_
02F9   2???               M                 call    WR_DATA
02FA   0AB3               M                 incf    Table_Counter,F
02FB   2???               M                 goto    loop_
02FC                      M end_
02FC                  01270 FrontLoop2
02FC   0A84           01271         INCF            FSR,1
02FD   0ADF           01272         incf            counter
                      01273         PrintNumber     counter
                          M         ;movf       number ,W
02FE   085F               M         movfw       counter
02FF   2???               M         call        DectoChar
0300   2???               M         call        WR_DATA
                      01274         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
0301   01B3               M                 clrf    Table_Counter
0302   0103               M                 clrw            
0303   0833               M loop_   movf    Table_Counter,W
0304   2???               M                 call    Colon
0305   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0306   1903               M                 btfsc   STATUS,Z
0307   2???               M                         goto    end_
0308   2???               M                 call    WR_DATA
0309   0AB3               M                 incf    Table_Counter,F
030A   2???               M                 goto    loop_
030B                      M end_
030B   0800           01275         movfw           INDF
                      01276         PrintCol        W
030C   0800               M         movfw       W
030D   2???               M         call        StickerColours
030E   2???               M         call        WR_DATA
                      01277         Display         Spacee
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
030F   01B3               M                 clrf    Table_Counter
0310   0103               M                 clrw            
0311   0833               M loop_   movf    Table_Counter,W
0312   2???               M                 call    Spacee
0313   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0314   1903               M                 btfsc   STATUS,Z
0315   2???               M                         goto    end_
0316   2???               M                 call    WR_DATA
0317   0AB3               M                 incf    Table_Counter,F
0318   2???               M                 goto    loop_
0319                      M end_
0319   0BDE           01278         decfsz          countdown,F
031A   2???           01279         goto            FrontLoop2
                      01280         
031B   0008           01281         return
                      01282         
031C                  01283 Locations                       ;TESTED
031C   2???           01284         call            Clear_Display
031D   3000           01285         movlw           0X0
031E   00DF           01286         movwf           counter
031F   1383           01287         BCF             STATUS, IRP
0320   303A           01288         movlw           0x3A
0321   0084           01289         movwf           FSR
0322   0860           01290         movfw           NumOfBins1
0323   00DE           01291         movwf           countdown
                      01292         Display         Distances
  0000                    M                 local   loop_
  0000                    M                 local   end_
0324   01B3               M                 clrf    Table_Counter
0325   0103               M                 clrw            
0326   0833               M loop_   movf    Table_Counter,W
0327   2???               M                 call    Distances
0328   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0329   1903               M                 btfsc   STATUS,Z
032A   2???               M                         goto    end_
032B   2???               M                 call    WR_DATA
032C   0AB3               M                 incf    Table_Counter,F
032D   2???               M                 goto    loop_
032E                      M end_
032E   2???           01293         call            Switch_Lines
032F                  01294 FrontLoop       
032F   0A84           01295         INCF            FSR,1
0330   0ADF           01296         incf            counter
                      01297         PrintNumber     counter
                          M         ;movf       number ,W
0331   085F               M         movfw       counter
0332   2???               M         call        DectoChar
0333   2???               M         call        WR_DATA
                      01298         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0334   01B3               M                 clrf    Table_Counter
0335   0103               M                 clrw            
0336   0833               M loop_   movf    Table_Counter,W
0337   2???               M                 call    Colon
0338   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0339   1903               M                 btfsc   STATUS,Z
033A   2???               M                         goto    end_
033B   2???               M                 call    WR_DATA
033C   0AB3               M                 incf    Table_Counter,F
033D   2???               M                 goto    loop_
033E                      M end_
033E   0800           01299         movfw           INDF
                      01300         Display_Dist    W
033F   01D2               M         clrf    NumL
0340   01D1               M         clrf    NumH
0341   0800               M         movfw   W
                          M         ;movfw  TMR0
0342   00D2               M         movwf   NumL
0343   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
0344   0855               M         movfw       Hund
0345   2???               M         call        DectoChar
0346   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
0347   0856               M         movfw       Tens
0348   2???               M         call        DectoChar
0349   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
034A   0857               M         movfw       Ones
034B   2???               M         call        DectoChar
034C   2???               M         call        WR_DATA
                      01301         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
034D   01B3               M                 clrf    Table_Counter
034E   0103               M                 clrw            
034F   0833               M loop_   movf    Table_Counter,W
0350   2???               M                 call    Spacee
0351   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0352   1903               M                 btfsc   STATUS,Z
0353   2???               M                         goto    end_
0354   2???               M                 call    WR_DATA
0355   0AB3               M                 incf    Table_Counter,F
0356   2???               M                 goto    loop_
0357                      M end_
0357   0BDE           01302         decfsz          countdown,F
0358   2???           01303         goto            FrontLoop
                      01304         
0359   0008           01305         return
                      01306         
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

035A                  01307 TotalDistance
                      01308         
035A   2???           01309     call    Dist_Decoder
                      01310     Put_Dist_In_Reg     distreg
035B   ???? ???? 2???     M         lcall   Dist_Decoder
035E   086A               M         movfw   cm
035F   00ED               M         movwf   distreg
                      01311     Display_Dist        distreg
0360   01D2               M         clrf    NumL
0361   01D1               M         clrf    NumH
0362   086D               M         movfw   distreg
                          M         ;movfw  TMR0
0363   00D2               M         movwf   NumL
0364   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
0365   0855               M         movfw       Hund
0366   2???               M         call        DectoChar
0367   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
0368   0856               M         movfw       Tens
0369   2???               M         call        DectoChar
036A   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
036B   0857               M         movfw       Ones
036C   2???               M         call        DectoChar
036D   2???               M         call        WR_DATA
                      01312    
036E   0008           01313     return
                      01314 
                      01315                 
036F                  01316 LEDControlON
                      01317         
036F   1862           01318         btfsc       LEDcounter0,0
0370   2???           01319         goto        $+4
0371   1406           01320         bsf         LED
0372   1462           01321         bsf         LEDcounter0,0
0373   0008           01322         return
                      01323         
                      01324         
0374   1006           01325         bcf         LED
0375   1062           01326         bcf         LEDcounter0,0
0376   0008           01327         return
                      01328         
                      01329         
0377                  01330 DisplayBlackWhiteIR1
                      01331         
0377   30C5           01332         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
0378   009F           01333         movwf   ADCON0  
                      01334                 
0379   2???           01335         call            ReadBW  
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

037A   00C2           01336         movwf           Front1
                      01337         PrintCol        Front1
037B   0842               M         movfw       Front1
037C   2???               M         call        StickerColours
037D   2???               M         call        WR_DATA
037E   2???           01338         call            HalfS
037F   2???           01339         call            HalfS
                      01340 
0380   0008           01341         return
                      01342         
                      01343         
0381                  01344 DisplayBlackWhiteIR2
                      01345         
0381   30CD           01346         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra as the reader pin
0382   009F           01347         movwf   ADCON0  
                      01348         
0383   2???           01349         call            ReadBW  
0384   00C2           01350         movwf           Front1
                      01351         PrintCol        Front1
0385   0842               M         movfw       Front1
0386   2???               M         call        StickerColours
0387   2???               M         call        WR_DATA
0388   2???           01352         call            HalfS
0389   2???           01353         call            HalfS
                      01354         
038A   0008           01355         return
                      01356 
                      01357         
038B                  01358 DisplayUSSensor1
                      01359         
038B   2???           01360         call            Read1_US
                      01361 ;       call            ClrLCD
                      01362 ;       movwf           isBinThere                  ;sets the bin bit 1 or 0
                      01363 ;       call            HalfS
                      01364 ;       call            HalfS                       ;see if half second removes feedback
                      01365         
                      01366 
                      01367         
038C   2???           01368         goto            DisplayUSSensor1
                      01369         
038D                  01370 DisplayUSSensor2
                      01371         
038D   2???           01372         call            Read2_US
                      01373         ;call           ClrLCD
                      01374         ;movwf          isColumnThere               ;sets the bin bit 1 or 0
                      01375         
038E   2???           01376         goto            DisplayUSSensor2
                      01377         
038F                  01378 StdRotation1
                      01379         
038F   1863           01380         btfsc       LEDcounter1,0
0390   2???           01381         goto        $+4
0391   1287           01382         bcf             Std1
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0392   1463           01383         bsf         LEDcounter1,0
0393   0008           01384         return
                      01385         
0394   1687           01386         bsf             Std1
0395   1063           01387         bcf         LEDcounter1,0
0396   0008           01388         return
                      01389         
0397                  01390 StdRotation2
                      01391         
                      01392 ;       bcf     Std2
                      01393 ;       
0397   1864           01394         btfsc       LEDcounter2,0
0398   2???           01395         goto        $+4
                      01396         
0399   1307           01397         bcf             Std2
039A   1464           01398         bsf         LEDcounter2,0
039B   0008           01399         return
                      01400         
039C   1D06           01401         btfss       SwitchWhite
039D   1707           01402         bsf         Std2
                      01403         
039E   1707           01404         bsf             Std2
039F   1064           01405         bcf         LEDcounter2,0
                      01406 ;testingrotationfwd     
                      01407 ;       
                      01408 ;       btfsc   Switch
                      01409 ;       bsf     Std2
                      01410 ;       
                      01411 ;       goto    testingrotationfwd
                      01412         
03A0   0008           01413         return
                      01414                 
03A1                  01415 StdRotation1Backwards
                      01416         
03A1   1866           01417         btfsc       LEDcounter4,0
03A2   2???           01418         goto        $+4
03A3   1407           01419         bsf             Std1Backwards
03A4   1466           01420         bsf         LEDcounter4,0
03A5   0008           01421         return
                      01422         
03A6   1007           01423         bcf             Std1Backwards
03A7   1066           01424         bcf         LEDcounter4,0
03A8   0008           01425         return
                      01426         
03A9                  01427 StdRotation2Backwards
                      01428         
                      01429 ;       bcf         Std2Backwards
                      01430         
03A9   1867           01431         btfsc       LEDcounter5,0
03AA   2???           01432         goto        $+4
03AB   1787           01433         bsf             Std2Backwards
03AC   1467           01434         bsf         LEDcounter5,0
03AD   0008           01435         return
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01436         
03AE   1D06           01437         btfss       SwitchWhite
03AF   1707           01438         bsf         Std2
                      01439         
03B0   1387           01440         bcf             Std2Backwards
03B1   1067           01441         bcf         LEDcounter5,0
03B2   0008           01442         return
                      01443         
                      01444 ;testingrotationback    
                      01445 ;       
                      01446 ;       
                      01447 ;       call    Clear_Display
                      01448 ;       btfsc   Switch
                      01449 ;       bsf     Std2Backwards
                      01450 ;       
                      01451 ;       goto    testingrotationback
                      01452         
03B3                  01453 PWMFWD  
                      01454         
                      01455     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01456     
                      01457     ;save   pr2 value so that you can zero it after
                      01458     
03B3   1868           01459     btfsc           LEDcounter7,0
03B4   2???           01460     goto            $+4
03B5   0197           01461     clrf            CCP1CON
03B6   1468           01462     bsf             LEDcounter7,0
03B7   0008           01463     return
                      01464     
03B8   1683 1303      01465     BANKSEL TRISC
03BA   1107           01466     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01467     
03BB   0817           01468     MOVF     CCP1CON,W          ;set CCP1 as PWM
03BC   39F0           01469     ANDLW    0xF0
03BD   380C           01470     IORLW    0x0C
03BE   0097           01471     MOVWF    CCP1CON
                      01472 
03BF   0812           01473     movfw   PR2
03C0   00D0           01474     movwf   pr2temp
                      01475     
                      01476     ;11000011
03C1   30C3           01477     MOVLW    b'11000011'        ;set highest PWM value
03C2   1683 1303      01478     BANKSEL  PR2                
03C4   0092           01479     MOVWF    PR2                
03C5   1283 1303      01480     BANKSEL  TMR2               
                      01481     
03C7   1492           01482     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01483     
03C8   0195           01484     CLRF    CCPR1L              ;set PWM to zero
                      01485     
03C9   1712           01486     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
03CA   1692           01487     BSF     T2CON, TOUTPS2
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03CB   1612           01488     BSF     T2CON, TOUTPS1
03CC   1592           01489     BSF     T2CON, TOUTPS0
                      01490     
                      01491     ; SET PWM duty cycle
                      01492     ;01001110
03CD   1697           01493     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
03CE   1617           01494     BSF     CCP1CON, 4
                      01495     MOVLF   B'01100000', CCPR1L                 ; previous was 01101
03CF   3060               M     MOVLW  B'01100000'  ; move literal into working register
03D0   0095               M     MOVWF   CCPR1L      ; move working register into reg
03D1   1597           01496     BSF     CCP1CON, 3
03D2   1517           01497     BSF     CCP1CON, 2
                      01498     
03D3   1512           01499     BSF     T2CON, TMR2ON       ;and start the timer running
                      01500  
03D4   1068           01501     bcf             LEDcounter7,0
                      01502     
03D5   0008           01503     return
                      01504     
03D6                  01505 PWMBACK
                      01506     
                      01507     ;************ SECOND PWM - Positive one ******************************
                      01508     
03D6   1869           01509     btfsc           LEDcounter8,0
03D7   2???           01510     goto            $+4
03D8   019D           01511     clrf            CCP2CON
                      01512     ;bcf                    PORTC,1
03D9   1469           01513     bsf             LEDcounter8,0
03DA   0008           01514     return
                      01515     
                      01516  
                      01517     
03DB   1683 1303      01518     BANKSEL TRISC
03DD   1087           01519     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01520     
03DE   081D           01521     MOVF     CCP2CON,W          ;set CCP2 as PWM
03DF   39F0           01522     ANDLW    0xF0
03E0   380C           01523     IORLW    0x0C
03E1   009D           01524     MOVWF    CCP2CON
                      01525     
                      01526     ;11000011
03E2   30C3           01527     MOVLW    b'11000011'        ;set highest PWM value
03E3   1683 1303      01528     BANKSEL  PR2                
03E5   0092           01529     MOVWF    PR2                
03E6   1283 1303      01530     BANKSEL  TMR2               
                      01531     
03E8   1492           01532     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01533     
03E9   019B           01534     CLRF    CCPR2L              ;set PWM to zero
                      01535     
03EA   1712           01536     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
03EB   1692           01537     BSF     T2CON, TOUTPS2
03EC   1612           01538     BSF     T2CON, TOUTPS1
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03ED   1592           01539     BSF     T2CON, TOUTPS0
                      01540     
                      01541     ; SET PWM duty cycle
                      01542     ;01001110
03EE   169D           01543     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
03EF   161D           01544     BSF     CCP2CON, 4
03F0   3060           01545     MOVLW   B'01100000'                         ; good speed for moving the arm
03F1   009B           01546     MOVWF   CCPR2L      
03F2   159D           01547     BSF     CCP2CON, 3
03F3   151D           01548     BSF     CCP2CON, 2
                      01549     
03F4   1512           01550     BSF     T2CON, TMR2ON       ;and start the timer running
03F5   1283           01551     BCF     STATUS,RP0
                      01552     
                      01553     ;bsf                    PORTC,1
                      01554     
03F6   1069           01555     bcf             LEDcounter8,0
                      01556     
03F7   0008           01557     return
                      01558     
03F8                  01559 PWMSTOP
                      01560     
03F8   0197           01561     clrf   CCP1CON
03F9   019D           01562     clrf   CCP2CON
03FA   0850           01563     movfw   pr2temp
03FB   0092           01564     movwf   PR2
                      01565     
03FC   0008           01566     return
                      01567         
                      01568         
                      01569 ;***************************************
                      01570 ; LCD control
                      01571 ;***************************************
03FD                  01572 Switch_Lines
03FD   30C0           01573                 movlw   B'11000000'
03FE   2???           01574                 call    WR_INS
03FF   0008           01575                 return
                      01576 
0400                  01577 Clear_Display
0400   3001           01578                 movlw   B'00000001'
0401   2???           01579                 call    WR_INS
0402   0008           01580                 return
                      01581 
                      01582 ;***************************************
                      01583 ; Delay 0.5s
                      01584 ;***************************************
0403                  01585 HalfS   
  0000                01586         local   HalfS_0
0403   3088           01587       movlw 0x88
0404   00B0           01588       movwf COUNTH
0405   30BD           01589       movlw 0xBD
0406   00B1           01590       movwf COUNTM
0407   3003           01591       movlw 0x03
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0408   00B2           01592       movwf COUNTL
                      01593 
0409                  01594 HalfS_0
0409   0BB0           01595       decfsz COUNTH, f
040A   2???           01596       goto   $+2
040B   0BB1           01597       decfsz COUNTM, f
040C   2???           01598       goto   $+2
040D   0BB2           01599       decfsz COUNTL, f
040E   2???           01600       goto   HalfS_0
                      01601 
040F   2???           01602       goto $+1
0410   0000           01603       nop
0411   0000           01604       nop
0412   0008           01605                 return
                      01606                 
                      01607 ;***************************************
                      01608 ;***************************************
                      01609 ; Delay = 0.6 seconds
                      01610 ; Clock frequency = 4 MHz
0413                  01611 DELAY1
                      01612                         ;599996 cycles
0413   30D1           01613         movlw   0xD1
0414   00B5           01614         movwf   lcd_d1
0415   304F           01615         movlw   0x4F
0416   00B6           01616         movwf   lcd_d2
0417   3002           01617         movlw   0x02
0418   00EE           01618         movwf   lcd_d1_2
0419                  01619 Delay_0
0419   0BB5           01620         decfsz  lcd_d1, f
041A   2???           01621         goto    $+2
041B   0BB6           01622         decfsz  lcd_d2, f
041C   2???           01623         goto    $+2
041D   0BEE           01624         decfsz  lcd_d1_2, f
041E   2???           01625         goto    Delay_0
                      01626 
                      01627                         ;4 cycles
041F   0008           01628         return
                      01629         
                      01630 ;0.25s delay    
                      01631         
0420                  01632 DELAY2
                      01633                         ;249998 cycles
0420   304F           01634         movlw   0x4F
0421   00B5           01635         movwf   lcd_d1
0422   30C4           01636         movlw   0xC4
0423   00B6           01637         movwf   lcd_d2
0424                  01638 Delay_02
0424   0BB5           01639         decfsz  lcd_d1, f
0425   2???           01640         goto    $+2
0426   0BB6           01641         decfsz  lcd_d2, f
0427   2???           01642         goto    Delay_0
                      01643 
                      01644                         ;2 cycles
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0428   2???           01645         goto    $+1
                      01646         
Warning[203]: Found opcode in column 1. (return)
0429   0008           01647 return
                      01648         
                      01649 ;***************************************
                      01650 ;Init_TMR0
                      01651 ;   Input:  RA4
                      01652 ;   Output: TMR0 register
                      01653 ;   desc:   Counts the clock pulses for the
                      01654 ;           rotary encoder
                      01655 ;****************************************
042A                  01656 Init_TMR0                           ; INITIALIZE TIMER 0   
042A   1683 1303      01657     BANKSEL OPTION_REG
                      01658     MOVLF   B'00101000', OPTION_REG
042C   3028               M     MOVLW  B'00101000'  ; move literal into working register
042D   0081               M     MOVWF   OPTION_REG  ; move working register into reg
                      01659     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01660     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
                      01661     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01662     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01663     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01664     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01665     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01666     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
042E   1283 1303      01667     BANKSEL TMR0
0430   0181           01668     CLRF   TMR0                     ; Clear timer 0
0431   0008           01669     return  
                      01670     
                      01671 ;************************************
                      01672 ; RTC Sublabels
                      01673 ;************************************
                      01674     
0432                  01675 show_RTC
                      01676                 ;clear LCD screen
0432   3001           01677                 movlw   b'00000001'
0433   2???           01678                 call    WR_INS
                      01679 
                      01680                 ;Get year
0434   3032           01681                 movlw   "2"                             ;First line shows 20**/**/**
0435   2???           01682                 call    WR_DATA
0436   3030           01683                 movlw   "0"
0437   2???           01684                 call    WR_DATA
                      01685                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0438   3006               M         movlw   0x06
0439   1283 1303          M         banksel 0x73
043B   00F3               M         movwf   0x73
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

043C   2???               M         call    read_rtc
043D   1283 1303          M         banksel 0x75
043F   0875               M         movf    0x75,w
0440   2???               M         call    rtc_convert   
0441   0877           01686                 movfw   0x77
0442   2???           01687                 call    WR_DATA
0443   0878           01688                 movfw   0x78
0444   2???           01689                 call    WR_DATA
                      01690 
0445   302F           01691                 movlw   "/"
0446   2???           01692                 call    WR_DATA
                      01693 
                      01694                 ;Get month
                      01695                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0447   3005               M         movlw   0x05
0448   1283 1303          M         banksel 0x73
044A   00F3               M         movwf   0x73
044B   2???               M         call    read_rtc
044C   1283 1303          M         banksel 0x75
044E   0875               M         movf    0x75,w
044F   2???               M         call    rtc_convert   
0450   0877           01696                 movfw   0x77
0451   2???           01697                 call    WR_DATA
0452   0878           01698                 movfw   0x78
0453   2???           01699                 call    WR_DATA
                      01700 
0454   302F           01701                 movlw   "/"
0455   2???           01702                 call    WR_DATA
                      01703 
                      01704                 ;Get day
                      01705                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0456   3004               M         movlw   0x04
0457   1283 1303          M         banksel 0x73
0459   00F3               M         movwf   0x73
045A   2???               M         call    read_rtc
045B   1283 1303          M         banksel 0x75
045D   0875               M         movf    0x75,w
045E   2???               M         call    rtc_convert   
045F   0877           01706                 movfw   0x77
0460   2???           01707                 call    WR_DATA
0461   0878           01708                 movfw   0x78
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0462   2???           01709                 call    WR_DATA
                      01710 
0463   30C0           01711                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
0464   2???           01712                 call    WR_INS
                      01713 
                      01714                 ;Get hour
                      01715                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0465   3002               M         movlw   0x02
0466   1283 1303          M         banksel 0x73
0468   00F3               M         movwf   0x73
0469   2???               M         call    read_rtc
046A   1283 1303          M         banksel 0x75
046C   0875               M         movf    0x75,w
046D   2???               M         call    rtc_convert   
046E   0877           01716                 movfw   0x77
046F   2???           01717                 call    WR_DATA
0470   0878           01718                 movfw   0x78
0471   2???           01719                 call    WR_DATA
0472   303A           01720                 movlw                   ":"
0473   2???           01721                 call    WR_DATA
                      01722 
                      01723                 ;Get minute             
                      01724                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0474   3001               M         movlw   0x01
0475   1283 1303          M         banksel 0x73
0477   00F3               M         movwf   0x73
0478   2???               M         call    read_rtc
0479   1283 1303          M         banksel 0x75
047B   0875               M         movf    0x75,w
047C   2???               M         call    rtc_convert   
047D   0877           01725                 movfw   0x77
047E   2???           01726                 call    WR_DATA
047F   0878           01727                 movfw   0x78
0480   2???           01728                 call    WR_DATA         
0481   303A           01729                 movlw                   ":"
0482   2???           01730                 call    WR_DATA
                      01731                 
                      01732                 ;Get seconds
                      01733                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0483   3000               M         movlw   0x00
0484   1283 1303          M         banksel 0x73
0486   00F3               M         movwf   0x73
0487   2???               M         call    read_rtc
0488   1283 1303          M         banksel 0x75
048A   0875               M         movf    0x75,w
048B   2???               M         call    rtc_convert   
048C   0877           01734                 movfw   0x77
048D   2???           01735                 call    WR_DATA
048E   0878           01736                 movfw   0x78
048F   2???           01737                 call    WR_DATA
                      01738                 
0490   2???           01739                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
0491   0008           01740                 return
                      01741 
                      01742 ;***************************************
                      01743 ; Setup RTC with time defined by user
                      01744 ;***************************************
0492                  01745 set_rtc_time
                      01746 
                      01747                 ;rtc_resetAll   ;reset rtc
                      01748                 ;works up to here
                      01749 
                      01750                 ;rtc_set        0x00,   B'10000000'
                      01751                 ;works up to here
                      01752                 
                      01753                 ;set time 
                      01754 ;               rtc_set 0x06,   B'00010110'             ; Year
                      01755 ;               ;works up to here
                      01756 ;               rtc_set 0x05,   B'00000011'             ; Month
                      01757 ;               rtc_set 0x04,   B'00100000'             ; Date
                      01758                 ;works up to here
                      01759                 ;rtc_set        0x03,   B'00100010'             ; Day
                      01760                 ;stops working on this one^
                      01761                 ;seems like day is the one that crashes it
                      01762                 rtc_set 0x02,   B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0492   1283 1303          M         banksel 0x73
0494   3002               M         movlw   0x02
0495   00F3               M         movwf   0x73
0496   1283 1303          M         banksel 0x74
0498   3000               M         movlw   B'00000000'
0499   00F4               M         movwf   0x74    
049A   2???               M         call    write_rtc
                      01763                 ;works on this one
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01764                 rtc_set 0x01,   B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
049B   1283 1303          M         banksel 0x73
049D   3001               M         movlw   0x01
049E   00F3               M         movwf   0x73
049F   1283 1303          M         banksel 0x74
04A1   3000               M         movlw   B'00000000'
04A2   00F4               M         movwf   0x74    
04A3   2???               M         call    write_rtc
                      01765                 ;works on this one
                      01766                 rtc_set 0x00,   B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
04A4   1283 1303          M         banksel 0x73
04A6   3000               M         movlw   0x00
04A7   00F3               M         movwf   0x73
04A8   1283 1303          M         banksel 0x74
04AA   3000               M         movlw   B'00000000'
04AB   00F4               M         movwf   0x74    
04AC   2???               M         call    write_rtc
                      01767                 ;works on this one
04AD   0008           01768                 return
                      01769 
                      01770 ;***************************************
                      01771 ; Delay 1s
                      01772 ;***************************************
04AE                  01773 OneS
  0000                01774                 local   OneS_0
04AE   3010           01775       movlw 0x10
04AF   00B0           01776       movwf COUNTH
04B0   307A           01777       movlw 0x7A
04B1   00B1           01778       movwf COUNTM
04B2   3006           01779       movlw 0x06
04B3   00B2           01780       movwf COUNTL
                      01781 
04B4                  01782 OneS_0
04B4   0BB0           01783       decfsz COUNTH, f
04B5   2???           01784       goto   $+2
04B6   0BB1           01785       decfsz COUNTM, f
04B7   2???           01786       goto   $+2
04B8   0BB2           01787       decfsz COUNTL, f
04B9   2???           01788       goto   OneS_0
                      01789 
04BA   2???           01790       goto $+1
04BB   0000           01791       nop
04BC   0000           01792       nop
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04BD   0008           01793                 return
                      01794 
04BE                  01795 lcdLongDelay
04BE   3014           01796     movlw d'20'
04BF   00B6           01797     movwf lcd_d2
04C0                  01798 LLD_LOOP
                      01799     LCD_DELAY
04C0   30FF               M         movlw   0xFF
04C1   00B5               M         movwf   lcd_d1
04C2   0BB5               M         decfsz  lcd_d1,f
04C3   2???               M         goto    $-1
04C4   0BB6           01800     decfsz lcd_d2,f
04C5   2???           01801     goto LLD_LOOP
04C6   0008           01802     return
                      01803     
                      01804 ;***************************************
                      01805 ; Look up table
                      01806 ;***************************************
                      01807     
04C7                  01808 Welcome_Msg
                      01809         
                      01810         ;Change Page
04C7   00BA           01811         movwf   Temp
04C8   30??           01812         movlw   HIGH Welcome_MsgEntries
04C9   008A           01813         movwf   PCLATH
04CA   083A           01814         movf    Temp,w
04CB   3E??           01815         addlw   LOW Welcome_MsgEntries
04CC   1803           01816         btfsc   STATUS,C
04CD   0A8A           01817             incf    PCLATH,f
04CE   0082           01818         movwf   PCL     
04CF   0782           01819         addwf    PCL,F
04D0                  01820 Welcome_MsgEntries
04D0   3431 343A 3453 01821         dt        "1:Simulation|#/D:PWM|*/0:Std1&Std2|3:B/W", 0
       3469 346D 3475 
       346C 3461 3474 
       3469 346F 346E 
       347C 3423 342F 
       3444 343A 3450 
       3457 344D 347C 
       342A 342F 3430 
       343A 3453 3474 
       3464 3431 3426 
       3453 3474 3464 
       3432 347C 3433 
       343A 3442 342F 
       3457 3400 
                      01822         
04F9                  01823 Welcome_Msg2
                      01824         
                      01825         ;Change Page
04F9   00BA           01826         movwf   Temp
04FA   30??           01827         movlw   HIGH Welcome_Msg2Entries
04FB   008A           01828         movwf   PCLATH
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04FC   083A           01829         movf    Temp,w
04FD   3E??           01830         addlw   LOW Welcome_Msg2Entries
04FE   1803           01831         btfsc   STATUS,C
04FF   0A8A           01832             incf    PCLATH,f
0500   0082           01833         movwf   PCL     
0501   0782           01834         addwf    PCL,F
0502                  01835 Welcome_Msg2Entries
0502   3435 3444 3469 01836         dt        "5Distance 6Locations", 0
       3473 3474 3461 
       346E 3463 3465 
       3420 3436 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01837         
0517                  01838 FinalMessage
                      01839         
                      01840         ;Change Page
0517   00BA           01841         movwf    Temp
0518   30??           01842         movlw   HIGH FinalMessageEntries
0519   008A           01843         movwf   PCLATH
051A   083A           01844         movf    Temp,w
051B   3E??           01845         addlw   LOW FinalMessageEntries
051C   1803           01846         btfsc   STATUS,C
051D   0A8A           01847             incf    PCLATH,f
051E   0082           01848         movwf   PCL
051F   0782           01849         addwf    PCL,F
0520                  01850 FinalMessageEntries
0520   3431 3454 3469 01851         dt        "1Time 3Stickers 4#Bins",0
       346D 3465 3420 
       3433 3453 3474 
       3469 3463 346B 
       3465 3472 3473 
       3420 3434 3423 
       3442 3469 346E 
       3473 3400 
                      01852         
0537                  01853 DectoChar
                      01854         
                      01855         ;Change Page
0537   00BA           01856         movwf   Temp
0538   30??           01857         movlw   HIGH DectoCharEntries
0539   008A           01858         movwf   PCLATH
053A   083A           01859         movf    Temp,w
053B   3E??           01860         addlw   LOW DectoCharEntries
053C   1803           01861         btfsc   STATUS,C
053D   0A8A           01862             incf    PCLATH,f
053E   0082           01863         movwf   PCL     
053F   0782           01864         addwf    PCL,F
0540                  01865 DectoCharEntries
0540   3430 3431 3432 01866         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3439 3400 
                      01867         
054B                  01868 StickerColours
                      01869         
                      01870         ;Change Page
054B   00BA           01871         movwf   Temp
054C   30??           01872         movlw   HIGH StickerColoursEntries
054D   008A           01873         movwf   PCLATH
054E   083A           01874         movf    Temp,w
054F   3E??           01875         addlw   LOW StickerColoursEntries
0550   1803           01876         btfsc   STATUS,C
0551   0A8A           01877             incf    PCLATH,f
0552   0082           01878         movwf   PCL     
0553   0782           01879         addwf    PCL,F
0554                  01880 StickerColoursEntries
0554   3442 3457 3400 01881         dt        "BW",  0
                      01882         
0557                  01883 FrontStickers
                      01884 
                      01885         ;Change Page
0557   00BA           01886         movwf   Temp
0558   30??           01887         movlw   HIGH FrontStickersEntries
0559   008A           01888         movwf   PCLATH
055A   083A           01889         movf    Temp,w
055B   3E??           01890         addlw   LOW FrontStickersEntries
055C   1803           01891         btfsc   STATUS,C
055D   0A8A           01892             incf    PCLATH,f
055E   0082           01893         movwf   PCL     
055F   0782           01894         addwf    PCL,F
0560                  01895 FrontStickersEntries
0560   3446 3472 346F 01896         dt        "Front",  0
       346E 3474 3400 
                      01897         
0566                  01898 BackStickers
                      01899 
                      01900         ;Change Page
0566   00BA           01901         movwf   Temp
0567   30??           01902         movlw   HIGH BackStickersEntries
0568   008A           01903         movwf   PCLATH
0569   083A           01904         movf    Temp,w
056A   3E??           01905         addlw   LOW BackStickersEntries
056B   1803           01906         btfsc   STATUS,C
056C   0A8A           01907             incf    PCLATH,f
056D   0082           01908         movwf   PCL     
056E   0782           01909         addwf    PCL,F
056F                  01910 BackStickersEntries
056F   3442 3461 3463 01911         dt        "Back",  0
       346B 3400 
                      01912         
0574                  01913 Spacee
                      01914 
                      01915         ;Change Page
0574   00BA           01916         movwf   Temp
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0575   30??           01917         movlw   HIGH SpaceeEntries
0576   008A           01918         movwf   PCLATH
0577   083A           01919         movf    Temp,w
0578   3E??           01920         addlw   LOW SpaceeEntries
0579   1803           01921         btfsc   STATUS,C
057A   0A8A           01922             incf    PCLATH,f
057B   0082           01923         movwf   PCL     
057C   0782           01924         addwf    PCL,F
057D                  01925 SpaceeEntries
057D   3420 3400      01926         dt        " ",  0
                      01927         
057F                  01928 Colon
                      01929 
                      01930         ;Change Page
057F   00BA           01931         movwf   Temp
0580   30??           01932         movlw   HIGH ColonEntries
0581   008A           01933         movwf   PCLATH
0582   083A           01934         movf    Temp,w
0583   3E??           01935         addlw   LOW ColonEntries
0584   1803           01936         btfsc   STATUS,C
0585   0A8A           01937             incf    PCLATH,f
0586   0082           01938         movwf   PCL     
0587   0782           01939         addwf    PCL,F
0588                  01940 ColonEntries
0588   343A 3400      01941         dt        ":",  0
                      01942         
058A                  01943 Distances
                      01944 
                      01945         ;Change Page
058A   00BA           01946         movwf   Temp
058B   30??           01947         movlw   HIGH DistancesEntries
058C   008A           01948         movwf   PCLATH
058D   083A           01949         movf    Temp,w
058E   3E??           01950         addlw   LOW DistancesEntries
058F   1803           01951         btfsc   STATUS,C
0590   0A8A           01952             incf    PCLATH,f
0591   0082           01953         movwf   PCL     
0592   0782           01954         addwf    PCL,F
0593                  01955 DistancesEntries
0593   3444 3469 3473 01956         dt        "Dist (cm)",  0
       3474 3420 3428 
       3463 346D 3429 
       3400 
                      01957             
3F72                  01958         END
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AVOIDCOLUMN                       000000E9
AddBin                            000002AB
BANK0                             
BANK1                             
BANK2                             
BANK3                             
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
BWScanModule1                     000001B4
BWScanModule2                     000001DA
BWStoreModule1                    000001CD
BWStoreModule2                    000001F3
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BackStickers                      00000566
BackStickersEntries               0000056F
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHECKSWITCH                       00000158
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Clear_Display                     00000400
ClrLCD                            00000000
ColMotor                          PORTC,7
Colon                             0000057F
ColonEntries                      00000588
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DELAY1                            00000413
DELAY2                            00000420
DELAYEDREAD                       0000014F
D_A                               00000005
D_NOT_A                           00000005
Decode_check_done                 0000027B
Decode_loop                       00000270
DectoChar                         00000537
DectoCharEntries                  00000540
Delay_0                           00000419
Delay_02                          00000424
Display                           
DisplayBlackWhiteIR1              00000377
DisplayBlackWhiteIR2              00000381
DisplayUSSensor1                  0000038B
DisplayUSSensor2                  0000038D
Display_Dist                      
Dist_Decoder                      00000268
Distances                         0000058A
DistancesEntries                  00000593
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENDTHIS                           00000155
EXIT                              00000165
EXITDISPLAY                       00000187
F                                 00000001
FERR                              00000002
FSR                               00000004
FinalMessage                      00000517
FinalMessageEntries               00000520
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         0000032F
FrontLoop1                        000002CB
FrontLoop2                        000002FC
FrontStickers                     00000557
FrontStickersEntries              00000560
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             00000403
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         0000042A
Key                               
KeypadandLCD                      00000095
LCD_DELAY                         
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

LED                               PORTB,0
LEDControlON                      0000036F
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter7                       00000068
LEDcounter8                       00000069
LLD_LOOP                          000004C0
Lb1                               00000022
Lb2                               00000026
Lb3                               0000002A
Lb4                               0000002E
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
Locations                         0000031C
MAX_HIGHS                         0x3
MOV                               
MOVEFWDFORABIT                    0000017E
MOVLF                             
MoveBackwards                     000001B3
NOTPWMBACK                        PORTC,1
NOTPWMFWD                         PORTC,2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              00000051
NumL                              00000052
NumOfBins1                        00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              000004AE
Ones                              00000057
P                                 00000004
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           000003D6
PWMFWD                            000003B3
PWMSTOP                           000003F8
PrintCol                          
PrintNumber                       
Put_Dist_In_Reg                   
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READBIN                           00000118
READ_WRITE                        00000002
RETURNFROMCOLUMN                  0000010B
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        00000295
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          00000220
Read2_US                          00000244
ReadBW                            00000200
ReadUltrasonic                    
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         00000291
ShowBins                          000002B5
Spacee                            00000574
SpaceeEntries                     0000057D
Std1                              PORTC,5
Std1Backwards                     PORTC,0
Std2                              PORTC,6
Std2Backwards                     PORTC,7
StdRotation1                      0000038F
StdRotation1Backwards             000003A1
StdRotation2                      00000397
StdRotation2Backwards             000003A9
StickerColours                    0000054B
StickerColoursEntries             00000554
Stickers1                         000002B9
Stickers2                         000002EB
StoreBW1                          0000029F
StoreBW2                          000002A5
StoreThisDistance                 00000284
SwitchArm                         PORTB,3
SwitchWhite                       PORTB,2
Switch_Lines                      000003FD
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTAL                             0000013D
TOTAL1                            00000141
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
TotalDistance                     0000035A
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
Welcome_Msg                       000004C7
Welcome_Msg2                      000004F9
Welcome_Msg2Entries               00000502
Welcome_MsgEntries                000004D0
Z                                 00000002
_.org_0_0096                      00000096
_.org_0_00E6                      000000E6
_.org_0_00ED                      000000ED
_.org_0_00F7                      000000F7
_.org_0_0107                      00000107
_.org_0_010E                      0000010E
_.org_0_0115                      00000115
_.org_0_015C                      0000015C
_.org_0_0162                      00000162
_.org_0_0188                      00000188
_.org_0_01B0                      000001B0
_.org_0_01B6                      000001B6
_.org_0_01DC                      000001DC
_.org_0_0202                      00000202
_.org_0_0228                      00000228
_.org_0_022B                      0000022B
_.org_0_024C                      0000024C
_.org_0_024F                      0000024F
_.org_0_0370                      00000370
_.org_0_0390                      00000390
_.org_0_0398                      00000398
_.org_0_03A2                      000003A2
_.org_0_03AA                      000003AA
_.org_0_03B4                      000003B4
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_03D7                      000003D7
_.org_0_040A                      0000040A
_.org_0_040C                      0000040C
_.org_0_040F                      0000040F
_.org_0_041A                      0000041A
_.org_0_041C                      0000041C
_.org_0_0425                      00000425
_.org_0_0428                      00000428
_.org_0_04B5                      000004B5
_.org_0_04B7                      000004B7
_.org_0_04BA                      000004BA
_.org_0_04C3                      000004C3
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
backstickerValues                 0000005C
bin16_BCD                         00000001
MPASM 5.65                          MAIN.ASM   4-3-2016  1:28:19         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

binCounter                        0000005D
cm                                0000006A
com                               00000037
count_highs                       0000006F
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay3                            00000061
distanceMoved                     00000058
distreg                           0000006D
frontstickerValues                0000005B
goback                            000000E8
i2c_common_setup                  00000000
init                              00000034
isBinThere                        0000005A
isColumnThere                     00000059
lcdLongDelay                      000004BE
lcd_d1                            00000035
lcd_d1_2                          0000006E
lcd_d2                            00000036
lcd_tmp                           00000034
m                                 0000006C
mm                                0000006B
mm_overflow                       00000280
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      00000492
show_RTC                          00000432
temp                              00000039
write_rtc                         00000000

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :     0 reported,    35 suppressed

