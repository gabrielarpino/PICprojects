MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1       ;42 PC
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5
  00000040            00038                 Location6
  00000041            00039                 Location7
  00000042            00040                 Front1          ;49 PC7
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ; 56 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins1                      
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0, LEDcounter1,LEDcounter2,LEDcounter3,LEDcounter4,LEDcounter5,LEDcounter7,LED
                            counter8
  0000006A            00073                 cm
  0000006B            00074                 mm
  0000006C            00075                 distreg
                      00076         endc    
                      00077 
                      00078         ;Declare constants for pin assignments (LCD on PORTD)
                      00079                 #define RS      PORTD,2
                      00080                 #define E       PORTD,3
                      00081                 #define IR1     PORTA,0
                      00082                 #define IR2     PORTA,1
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083                 #define backwardsDCMotor        PORTC,5
                      00084                 #define DCMotor PORTC,6
                      00085                 #define ColMotor PORTC,7
                      00086                 #define UST1    PORTD,0
                      00087                 #define US1E1   PORTA,2
                      00088                 #define UST2    PORTD,1
                      00089                 #define US1E2   PORTA,3
                      00090                 #define LED     PORTB,0
                      00091                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00092                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00093                 #define Std3    PORTC,7
                      00094                 #define Std1Backwards   PORTB,2
                      00095                 #define Std2Backwards   PORTB,3
                      00096                 #define Std3Backwards   PORTC,0
                      00097                 #define Switch          PORTA,5     ; or gated switch to stop motor motion
                      00098                 ;SHAFTIR is PORTA,4
                      00099                 
                      00100                 
                      00101 ;distanceMoved  equ     b'0'
                      00102 
                      00103          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00104          goto      init       ;Just jump to the main code section.
                      00105          
                      00106          ;ORG      0x100        ;this command is sketchy
                      00107          
                      00108 
                      00109         
                      00110          
                      00111 ;*******************************************************************************
                      00112 ; MACROS
                      00113 ;*******************************************************************************
                      00114          
                      00115 Key      macro  value, subroutine
                      00116          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00117          andlw          0x0F
                      00118          xorlw          value
                      00119          btfsc          STATUS, Z
                      00120          call           subroutine
                      00121         endm
                      00122 
                      00123 Rotation macro  value
                      00124          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00125          andlw          0x0F
                      00126          xorlw          value
                      00127          btfsc          STATUS, Z
                      00128          call           ShiftLeft
                      00129         endm
                      00130 
                      00131 ;***************************************
                      00132 ; Delay: ~160us macro
                      00133 ;***************************************
                      00134 LCD_DELAY macro
                      00135         movlw   0xFF
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136         movwf   lcd_d1
                      00137         decfsz  lcd_d1,f
                      00138         goto    $-1
                      00139         endm
                      00140         
                      00141 ;***************************************
                      00142 ; Display macro
                      00143 ;***************************************
                      00144 Display macro   Message
                      00145                 local   loop_
                      00146                 local   end_
                      00147                 clrf    Table_Counter
                      00148                 clrw            
                      00149 loop_   movf    Table_Counter,W
                      00150                 call    Message
                      00151                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00152                 btfsc   STATUS,Z
                      00153                         goto    end_
                      00154                 call    WR_DATA
                      00155                 incf    Table_Counter,F
                      00156                 goto    loop_
                      00157 end_
                      00158                 endm
                      00159                 
                      00160 ;***************************************
                      00161 ; BANK0 macro   [TESTED]
                      00162 ;***************************************
                      00163 BANK0 Macro
                      00164     bcf STATUS,RP0 
                      00165     bcf STATUS,RP1
                      00166     endm
                      00167 ;***************************************
                      00168 ; BANK1 macro   [TESTED]
                      00169 ;***************************************
                      00170 BANK1 Macro
                      00171     bsf STATUS,RP0 
                      00172     bcf STATUS,RP1
                      00173     endm
                      00174         
                      00175 ;***************************************
                      00176 ; BANK2 macro   [TESTED]
                      00177 ;***************************************
                      00178 BANK2 Macro
                      00179     bsf STATUS,RP0 
                      00180     bsf STATUS,RP1
                      00181     endm
                      00182     
                      00183 ;***************************************
                      00184 ; BANK3 macro   [TESTED]
                      00185 ;***************************************
                      00186 BANK3 Macro
                      00187     bcf STATUS,RP0 
                      00188     bsf STATUS,RP1
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00189     endm
                      00190     
                      00191 ;***************************************
                      00192 ; MOVLF macro   [TESTED]
                      00193 ;***************************************
                      00194 MOVLF   Macro   literal, reg
                      00195     MOVLW  literal      ; move literal into working register
                      00196     MOVWF   reg         ; move working register into reg
                      00197     endm
                      00198 
                      00199 ;***************************************
                      00200 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00201 ;***************************************
                      00202 MOV     Macro   reg1, reg2
                      00203     MOVF  reg1,W        ; move reg1 into working register
                      00204     MOVWF   reg2        ; reg2 <- reg1
                      00205     endm
                      00206     
                      00207 ;***************************************
                      00208 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00209 ;***************************************
                      00210 ADDL    Macro   Destination, reg, literal
                      00211     MOVLW  literal      ; move literal into working register
                      00212     ADDWF   reg,W       ; W <- literal + reg
                      00213     MOVWF   Destination ; Destination <- literal + reg
                      00214     endm
                      00215     
                      00216 ;***************************************
                      00217 ; ADD macro, Adds two registers together    [TESTED]
                      00218 ;***************************************
                      00219 ADD     Macro   Destination, reg1, reg2
                      00220     MOVF    reg1,W      ; move literal into working register
                      00221     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00222     MOVWF   Destination ; Destination <- reg1 + reg2
                      00223     endm
                      00224     
                      00225 ;***************************************
                      00226 ; Store_Dist macro --> Stores current
                      00227 ;   distance and stores it in Bin_Dist_reg
                      00228 ;***************************************                
                      00229 Store_Dist macro    Bin_Dist_reg
                      00230         lcall   Dist_Decoder
                      00231         movfw   cm
                      00232         movwf   Bin_Dist_reg
                      00233     endm
                      00234     
                      00235 ;***************************************
                      00236 ; Display_Dist macro --> Takes value in Bin_Dist_reg
                      00237 ;   and converts it into a BCD and prints it
                      00238 ;   To the LCD
                      00239 ;***************************************                
                      00240 Display_Dist macro    Bin_Dist_reg
                      00241         clrf    NumL
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00242         clrf    NumH
                      00243         movfw   Bin_Dist_reg
                      00244         ;movfw  TMR0
                      00245         movwf   NumL
                      00246         call    bin16_BCD
                      00247         PrintNumber     Hund
                      00248         PrintNumber     Tens
                      00249         PrintNumber     Ones
                      00250     endm
                      00251                 
                      00252 ;***************************************
                      00253 ; Number to Printable
                      00254 ;***************************************
                      00255 PrintNumber macro       number
                      00256         ;movf       number ,W
                      00257         movfw       number
                      00258         call        DectoChar
                      00259         call        WR_DATA
                      00260         endm
                      00261         
                      00262 ;***************************************
                      00263 ; Number to Colour
                      00264 ;***************************************
                      00265 PrintCol macro      number
                      00266         movfw       number
                      00267         call        StickerColours
                      00268         call        WR_DATA
                      00269         endm    
                      00270 
                      00271 PrintYN macro       number
                      00272         movfw       number
                      00273         call        ColumnValues
                      00274         call        WR_DATA
                      00275         endm    
                      00276 ;*******************************************************
                      00277 ;******             BCD                 ****************
                      00278 ;*******************************************************
                      00279         
                      00280 ;---------------- Binary (16-bit) to BCD -----------------------
                      00281 ;
                      00282 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00283 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00284                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00285 ;
                      00286 ; Uses variables
                      00287 ; NumH, NumL
                      00288 ; TenK, Thou, Hund, Tens, Ones
                      00289                 
                      00290 ;BCD    macro   NumH, NumL
                      00291 
0001                  00292 bin16_BCD
0001   0E51           00293         swapf   NumH, W
0002   390F           00294         andlw   0x0F
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003   3EF0           00295         addlw   0xF0
0004   00D4           00296         movwf   Thou 
0005   07D4           00297         addwf   Thou, F 
0006   3EE2           00298         addlw   0xE2 
0007   00D5           00299         movwf   Hund 
0008   3E32           00300         addlw   0x32 
0009   00D7           00301         movwf   Ones 
                      00302 
000A   0851           00303         movf    NumH, W 
000B   390F           00304         andlw   0x0F 
000C   07D5           00305         addwf   Hund, F 
000D   07D5           00306         addwf   Hund, F 
000E   07D7           00307         addwf   Ones, F 
000F   3EE9           00308         addlw   0xE9 
0010   00D6           00309         movwf   Tens 
0011   07D6           00310         addwf   Tens, F 
0012   07D6           00311         addwf   Tens, F 
                      00312 
0013   0E52           00313         swapf   NumL, W 
0014   390F           00314         andlw   0x0F 
0015   07D6           00315         addwf   Tens, F 
0016   07D7           00316         addwf   Ones, F 
                      00317 
0017   0DD6           00318         rlf    Tens, F 
0018   0DD7           00319         rlf    Ones, F 
0019   09D7           00320         comf    Ones, F 
001A   0DD7           00321         rlf    Ones, F 
                      00322 
001B   0852           00323         movf    NumL, W 
001C   390F           00324         andlw   0x0F 
001D   07D7           00325         addwf   Ones, F 
001E   0DD4           00326         rlf    Thou,F 
                      00327 
001F   3007           00328         movlw   0x07 
0020   00D3           00329         movwf   TenK 
                      00330 
0021   300A           00331         movlw   0x0A
0022                  00332 Lb1
0022   03D6           00333         decf    Tens, F 
0023   07D7           00334         addwf   Ones, F 
0024   1C03           00335         btfss   STATUS, C 
0025   2???           00336         goto            Lb1 
0026                  00337 Lb2
0026   03D5           00338         decf    Hund, F 
0027   07D6           00339         addwf   Tens, F 
0028   1C03           00340         btfss   STATUS,C 
0029   2???           00341         goto            Lb2 
002A                  00342 Lb3
002A   03D4           00343         decf    Thou, F 
002B   07D5           00344         addwf   Hund, F 
002C   1C03           00345         btfss   STATUS,C
002D   2???           00346         goto            Lb3 
002E                  00347 Lb4
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002E   03D3           00348         decf    TenK, F 
002F   07D4           00349         addwf   Thou, F 
0030   1C03           00350         btfss   STATUS,C 
0031   2???           00351         goto            Lb4 
                      00352 
0032   3400           00353         retlw   0
0033   0008           00354         return
                      00355 ;endm
                      00356 
                      00357 ;***************************************
                      00358 ; Initialize
                      00359 ;***************************************
0034                  00360 init
0034   018B           00361          clrf      INTCON         ; No interrupts
                      00362 
0035   1683           00363          bsf       STATUS,RP0     ; select bank 1
0036   30FF           00364          movlw      0xFF            ; need to make A input
0037   0085           00365          movwf      TRISA          ; All port A is input
0038   30F2           00366          movlw     b'11110010'    ; Set required keypad inputs
0039   0086           00367          movwf     TRISB
003A   0187           00368          clrf      TRISC          ; All port C is output
003B   0188           00369          clrf      TRISD          ; All port D is output
003C   0189           00370          clrf      TRISE
                      00371          
                      00372                   ;Set SDA and SCL to high-Z first as required for I2C
003D   1607           00373                  bsf       TRISC,4                
003E   1587           00374                  bsf       TRISC,3
                      00375 
003F   1283           00376          bcf       STATUS,RP0     ; select bank 0
0040   0185           00377          clrf      PORTA
0041   0186           00378          clrf      PORTB
0042   0187           00379          clrf      PORTC
0043   0188           00380          clrf      PORTD
0044   0189           00381          clrf      PORTE
                      00382          
                      00383         ;Set up I2C for communication
                      00384                  
0045   2???           00385         call       i2c_common_setup
                      00386 ;*******************************************************************************
                      00387         ; UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00388         ;rtc_resetAll
                      00389         ;call set_rtc_time
                      00390 ;*******************************************************************************
                      00391                  
                      00392                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00393                  ;call     set_rtc_time
                      00394           
0046   2???           00395          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00396           ;A/D converter attempt
                      00397          
0047   1303           00398          bcf    STATUS,RP1
0048   1683           00399          bsf    STATUS,RP0      ;Select bank 1
                      00400          
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0049   1405           00401          bsf    IR1             ;makes RA0 an input
004A   1283           00402          bcf    STATUS,RP0      ; go back to bank 0
                      00403          
                      00404         ;bsf    PORTC,2         ; gives RC2 5 volts
                      00405          
                      00406         ; Set ADCON1 to use RA0 as analog input
                      00407         
                      00408         
004B   1683           00409         bsf     STATUS,RP0      ;Select bank 1
004C   3006           00410         movlw   b'00000110'     ;left justified, all inputs digital
004D   009F           00411         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00412 
                      00413         ;ADCON0
004E   1283           00414         bcf     STATUS,RP0
                      00415         
                      00416 ;***************************************************
                      00417 ; Initialize variables and Displays
                      00418 ;****************************************************   
                      00419         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
004F   01B3               M                 clrf    Table_Counter
0050   0103               M                 clrw            
0051   0833               M loop_   movf    Table_Counter,W
0052   2???               M                 call    Welcome_Msg
0053   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0054   1903               M                 btfsc   STATUS,Z
0055   2???               M                         goto    end_
0056   2???               M                 call    WR_DATA
0057   0AB3               M                 incf    Table_Counter,F
0058   2???               M                 goto    loop_
0059                      M end_
0059   2???           00420         call            Switch_Lines
                      00421         Display         Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
005A   01B3               M                 clrf    Table_Counter
005B   0103               M                 clrw            
005C   0833               M loop_   movf    Table_Counter,W
005D   2???               M                 call    Welcome_Msg2
005E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
005F   1903               M                 btfsc   STATUS,Z
0060   2???               M                         goto    end_
0061   2???               M                 call    WR_DATA
0062   0AB3               M                 incf    Table_Counter,F
0063   2???               M                 goto    loop_
0064                      M end_
0064   01E0           00422         clrf            NumOfBins1
0065   01EC           00423         clrf            distreg             ; clear register for distance
0066   2???           00424         call            Init_TMR0           ; Initialize shaft encoder
0067   1408           00425         bsf             PORTD,0
0068   1462           00426         bsf             LEDcounter0,0               ;counter for LED
0069   1463           00427         bsf             LEDcounter1,0               ;forward motor counters
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006A   1464           00428         bsf             LEDcounter2,0
006B   1465           00429         bsf             LEDcounter3,0               
006C   1466           00430         bsf             LEDcounter4,0               ;backward motor counters
006D   1467           00431         bsf             LEDcounter5,0       
006E   1468           00432         bsf             LEDcounter7,0               ;pwm counters
006F   1469           00433         bsf             LEDcounter8,0               
                      00434         
0070   1287           00435         bcf             Std1                    ;std motor 1 is the positive one
0071   1307           00436         bcf             Std2
0072   1106           00437         bcf             Std1Backwards
0073   1186           00438         bcf             Std2Backwards
0074   1107           00439         bcf             PORTC,2             
0075   1087           00440         bcf             PORTC,1                 ; PWM now positive, so start by clearing                
                                
                      00441 
                      00442 ;*************************************
                      00443 ;       Keypad and LCD forms        
                      00444 ;*************************************
                      00445         
0076   1C86           00446 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0077   2???           00447                 goto            $-1 
                      00448 
0078   0E06           00449                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0079   390F           00450                 andlw           0x0F
007A   00B9           00451                 movwf           temp
                      00452                 ;Key    0x00, OperationDisplay
                      00453                 Key     0x00, StartMove
007B   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
007C   390F               M          andlw          0x0F
007D   3A00               M          xorlw          0x00
007E   1903               M          btfsc          STATUS, Z
007F   2???               M          call           StartMove
                      00454                 ;Key    0x01, pollColumnSensor          ;TESTED
                      00455                 Key     0x02, DisplayBlackWhiteIR1
0080   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0081   390F               M          andlw          0x0F
0082   3A02               M          xorlw          0x02
0083   1903               M          btfsc          STATUS, Z
0084   2???               M          call           DisplayBlackWhiteIR1
                      00456                 Rotation        0x03
0085   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0086   390F               M          andlw          0x0F
0087   3A03               M          xorlw          0x03
0088   1903               M          btfsc          STATUS, Z
0089   2???               M          call           ShiftLeft
                      00457                 Key     0x04, DisplayBlackWhiteIR2
008A   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008B   390F               M          andlw          0x0F
008C   3A04               M          xorlw          0x04
008D   1903               M          btfsc          STATUS, Z
008E   2???               M          call           DisplayBlackWhiteIR2
                      00458                 Key     0x05, LEDControlON
008F   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0090   390F               M          andlw          0x0F
0091   3A05               M          xorlw          0x05
0092   1903               M          btfsc          STATUS, Z
0093   2???               M          call           LEDControlON
                      00459                 Key     0x06, DisplayUSSensor1
0094   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0095   390F               M          andlw          0x0F
0096   3A06               M          xorlw          0x06
0097   1903               M          btfsc          STATUS, Z
0098   2???               M          call           DisplayUSSensor1
                      00460                 Key     0x07, AddBin
0099   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009A   390F               M          andlw          0x0F
009B   3A07               M          xorlw          0x07
009C   1903               M          btfsc          STATUS, Z
009D   2???               M          call           AddBin
                      00461                 Key     0x08, Stickers1
009E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009F   390F               M          andlw          0x0F
00A0   3A08               M          xorlw          0x08
00A1   1903               M          btfsc          STATUS, Z
00A2   2???               M          call           Stickers1
                      00462                 Key     0x09, StoreBW1
00A3   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A4   390F               M          andlw          0x0F
00A5   3A09               M          xorlw          0x09
00A6   1903               M          btfsc          STATUS, Z
00A7   2???               M          call           StoreBW1
                      00463                 Key     0x0A, StdRotation2Backwards
00A8   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A9   390F               M          andlw          0x0F
00AA   3A0A               M          xorlw          0x0A
00AB   1903               M          btfsc          STATUS, Z
00AC   2???               M          call           StdRotation2Backwards
                      00464                 Key     0x0B, ShaftIR
00AD   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00AE   390F               M          andlw          0x0F
00AF   3A0B               M          xorlw          0x0B
00B0   1903               M          btfsc          STATUS, Z
00B1   2???               M          call           ShaftIR
                      00465                 Key     0x0C, StdRotation1
00B2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B3   390F               M          andlw          0x0F
00B4   3A0C               M          xorlw          0x0C
00B5   1903               M          btfsc          STATUS, Z
00B6   2???               M          call           StdRotation1
                      00466                 Key     0x0D, StdRotation2
00B7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B8   390F               M          andlw          0x0F
00B9   3A0D               M          xorlw          0x0D
00BA   1903               M          btfsc          STATUS, Z
00BB   2???               M          call           StdRotation2
                      00467                 Key     0x0E, PWMFWD
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00BC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BD   390F               M          andlw          0x0F
00BE   3A0E               M          xorlw          0x0E
00BF   1903               M          btfsc          STATUS, Z
00C0   2???               M          call           PWMFWD
                      00468                 Key     0x0F, PWMBACK
00C1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C2   390F               M          andlw          0x0F
00C3   3A0F               M          xorlw          0x0F
00C4   1903               M          btfsc          STATUS, Z
00C5   2???               M          call           PWMBACK
00C6   1886           00469                 btfsc           PORTB,1     ;Wait until key is released
00C7   2???           00470                 goto            $-1
00C8   2???           00471                 goto            KeypadandLCD
                      00472                 
00C9                  00473 goback
00C9   0008           00474                 return  
                      00475         
                      00476 
                      00477 ;*******************************************************************************************************
                            *******************************************
                      00478 ;                                                                 MAIN CODE
                      00479 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
00CA                  00480 StartInit
                      00481         
                      00482 
                      00483 ;    goto    getTimeRTC     ; gets time from RTC clock
                      00484 
00CA                  00485 StartMove
                      00486 ;   MOTOR ON
                      00487         
                      00488     ;check if encoder is at value
                      00489     ;call    MoveBackwards
                      00490     
                      00491     ;else
00CA   2???           00492     call    PWMFWD
00CB   2???           00493     call    HalfS
00CC   2???           00494     call    HalfS
                      00495     
00CD                  00496 CHECKCOLUMN
                      00497 
                      00498     ;call    Read1_US           ;checks to see if column present
                      00499     
                      00500     ;movlw   0x3
                      00501     ;subwf   TMR1H
                      00502     ;btfsc   STATUS,C
                      00503     ;goto    StartMove
                      00504     ;call    PWMFWD             ;stops motor from moving forward
                      00505     ;call    HalfS
                      00506     
                      00507     ;motor 1 (white thing)
00CD   1687           00508     bsf    Std1         ;starts motor to move arm
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CE   2???           00509     call    Clear_Display
                      00510     Display OperationTime
  0000                    M                 local   loop_
  0000                    M                 local   end_
00CF   01B3               M                 clrf    Table_Counter
00D0   0103               M                 clrw            
00D1   0833               M loop_   movf    Table_Counter,W
00D2   2???               M                 call    OperationTime
00D3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00D4   1903               M                 btfsc   STATUS,Z
00D5   2???               M                         goto    end_
00D6   2???               M                 call    WR_DATA
00D7   0AB3               M                 incf    Table_Counter,F
00D8   2???               M                 goto    loop_
00D9                      M end_
00D9   2???           00511     call    HalfS               ;emulates arm movement
00DA   2???           00512     call    HalfS
00DB   1287           00513     bcf    Std1         ;turns off motor to move arm
                      00514     
                      00515     ;motor 2 (arm)
                      00516     
00DC   1307           00517    bcf     Std2
00DD   2???           00518    call    Clear_Display
                      00519    Display OperationTime
  0000                    M                 local   loop_
  0000                    M                 local   end_
00DE   01B3               M                 clrf    Table_Counter
00DF   0103               M                 clrw            
00E0   0833               M loop_   movf    Table_Counter,W
00E1   2???               M                 call    OperationTime
00E2   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00E3   1903               M                 btfsc   STATUS,Z
00E4   2???               M                         goto    end_
00E5   2???               M                 call    WR_DATA
00E6   0AB3               M                 incf    Table_Counter,F
00E7   2???               M                 goto    loop_
00E8                      M end_
00E8   2???           00520    call     HalfS
00E9   2???           00521    call     HalfS
00EA   1707           00522    bsf     Std2
                      00523    
00EB                  00524 STOREDISTANCE
                      00525    
                      00526     ;display distance traveled
00EB   2???           00527     call    Clear_Display
00EC   2???           00528     call    Dist_Decoder
00ED   2???           00529     call    HalfS
                      00530     Store_Dist  distreg
00EE   ???? ???? 2???     M         lcall   Dist_Decoder
00F1   086A               M         movfw   cm
00F2   00EC               M         movwf   distreg
                      00531     Display_Dist        distreg
00F3   01D2               M         clrf    NumL
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F4   01D1               M         clrf    NumH
00F5   086C               M         movfw   distreg
                          M         ;movfw  TMR0
00F6   00D2               M         movwf   NumL
00F7   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
00F8   0855               M         movfw       Hund
00F9   2???               M         call        DectoChar
00FA   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
00FB   0856               M         movfw       Tens
00FC   2???               M         call        DectoChar
00FD   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
00FE   0857               M         movfw       Ones
00FF   2???               M         call        DectoChar
0100   2???               M         call        WR_DATA
                      00532     
0101   2???           00533     call    StoreThisDistance
0102   2???           00534     call    HalfS
0103   2???           00535     call    HalfS
                      00536  
0104   2???           00537     call    AddBin
0105   2???           00538     call    HalfS
0106   2???           00539     call    HalfS
                      00540     
0107   2???           00541     call    Clear_Display
0108   2???           00542     call    Dist_Decoder
0109   2???           00543     call    HalfS
                      00544     Store_Dist  distreg
010A   ???? ???? 2???     M         lcall   Dist_Decoder
010D   086A               M         movfw   cm
010E   00EC               M         movwf   distreg
                      00545     Display_Dist        distreg
010F   01D2               M         clrf    NumL
0110   01D1               M         clrf    NumH
0111   086C               M         movfw   distreg
                          M         ;movfw  TMR0
0112   00D2               M         movwf   NumL
0113   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
0114   0855               M         movfw       Hund
0115   2???               M         call        DectoChar
0116   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
0117   0856               M         movfw       Tens
0118   2???               M         call        DectoChar
0119   2???               M         call        WR_DATA
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         PrintNumber     Ones
                          M         ;movf       number ,W
011A   0857               M         movfw       Ones
011B   2???               M         call        DectoChar
011C   2???               M         call        WR_DATA
                      00546     
011D   2???           00547     call    StoreThisDistance
011E   2???           00548     call    HalfS
011F   2???           00549     call    HalfS
                      00550     
0120   2???           00551     call    Locations
                      00552     
0121   2???           00553     goto    KeypadandLCD
                      00554     
0122                  00555 CHECKSWITCH
                      00556     
0122   1409           00557     bsf     PORTE,0
0123   1E85           00558     btfss   Switch
0124   1009           00559     bcf     PORTE,0    
                      00560     
0125   2???           00561     goto        CHECKSWITCH
                      00562    
                      00563    
                      00564    
                      00565     
                      00566 ;   CHECK IF AT THE END OF BUCKET Line
                      00567     
                      00568 
                      00569     
                      00570     
                      00571 ;    call    pollUSsensor       ; call ultrasonic sensor
                      00572 ;    btfsc   nothingAhead,0     ;   checks if there is nothing ahead
                      00573 ;    goto    Finalize
                      00574     
                      00575 ;;   CHECK IF CONTAINER IS THERE
                      00576 ;    
                      00577 ;    btfss   withinDetectionRange,0  ; checks whether container ahead is within detection range
                      00578 ;    goto    Main
                      00579 ;   call start arm motor
                      00580 ;   call other motor
                      00581 ;    call    frontscanContainer     ; label to begin container scanning
                      00582 ;    call    backscanContainer      ; label to begin container scanning
                      00583 ;    movlw  b'1'
                      00584 ;    addwf   frontbinCounter,f      ;increment the bin counters
                      00585 ;    addwf   backbinCounter,f
                      00586     
0126                  00587 MoveBackwards
                      00588     
0126   2???           00589     call    PWMSTOP
                      00590     
0127   2???           00591     goto    Finalize            
                      00592 ;-----------------------------------------------------------------------------------------------------  
                                    
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00593 
                      00594 ;*********************************************************
                      00595 ; A to D conversion with LCD display for IR sensor
                      00596 ;*********************************************************
                      00597         
                      00598 ;******************************************
                      00599 ;       Sticker Print Modules
                      00600 ;*****************************************
                      00601         
0128                  00602 BWStoreModule1
                      00603 
0128   151F           00604         bsf     ADCON0,2                ;start conversion and wait for it to complete
0129   191F           00605         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
012A   2???           00606         goto    $-1
                      00607         
012B   081E           00608         movf    ADRESH, W
012C   00D1           00609         movwf   NumH
012D   081E           00610         movf    ADRESL, W
012E   00D2           00611         movwf   NumL
012F   2???           00612         call    Clear_Display
0130   2???           00613         call    bin16_BCD
                      00614         PrintNumber     TenK
                          M         ;movf       number ,W
0131   0853               M         movfw       TenK
0132   2???               M         call        DectoChar
0133   2???               M         call        WR_DATA
                      00615         PrintNumber     Thou
                          M         ;movf       number ,W
0134   0854               M         movfw       Thou
0135   2???               M         call        DectoChar
0136   2???               M         call        WR_DATA
                      00616         PrintNumber     Hund
                          M         ;movf       number ,W
0137   0855               M         movfw       Hund
0138   2???               M         call        DectoChar
0139   2???               M         call        WR_DATA
                      00617         PrintNumber     Tens
                          M         ;movf       number ,W
013A   0856               M         movfw       Tens
013B   2???               M         call        DectoChar
013C   2???               M         call        WR_DATA
                      00618         PrintNumber     Ones
                          M         ;movf       number ,W
013D   0857               M         movfw       Ones
013E   2???               M         call        DectoChar
013F   2???               M         call        WR_DATA
0140   2???           00619         call            HalfS           ;wait half a second to display
0141   1383           00620         BCF     STATUS, IRP
0142   3042           00621         movlw   0x42
0143   0084           00622         movwf   FSR
0144   3000           00623         movlw   0X0
0145   0360           00624         decf    NumOfBins1,W            ;want bin number to be decreased when back checks it
0146   0784           00625         addwf   FSR,F
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0147   3001           00626         movlw   0X1
0148   02D3           00627         subwf   TenK
0149   3000           00628         movlw   0x0
014A   1803           00629         btfsc   STATUS, C
014B   3001           00630         movlw   0x1
014C   0080           00631         movwf   INDF
014D   0008           00632         return  
                      00633         
014E                  00634 BWStoreModule2
                      00635 
014E   151F           00636         bsf     ADCON0,2                ;start conversion and wait for it to complete
014F   191F           00637         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
0150   2???           00638         goto    $-1
                      00639         
0151   081E           00640         movf    ADRESH, W
0152   00D1           00641         movwf   NumH
0153   081E           00642         movf    ADRESL, W
0154   00D2           00643         movwf   NumL
0155   2???           00644         call    Clear_Display
0156   2???           00645         call    bin16_BCD
                      00646         PrintNumber     TenK
                          M         ;movf       number ,W
0157   0853               M         movfw       TenK
0158   2???               M         call        DectoChar
0159   2???               M         call        WR_DATA
                      00647         PrintNumber     Thou
                          M         ;movf       number ,W
015A   0854               M         movfw       Thou
015B   2???               M         call        DectoChar
015C   2???               M         call        WR_DATA
                      00648         PrintNumber     Hund
                          M         ;movf       number ,W
015D   0855               M         movfw       Hund
015E   2???               M         call        DectoChar
015F   2???               M         call        WR_DATA
                      00649         PrintNumber     Tens
                          M         ;movf       number ,W
0160   0856               M         movfw       Tens
0161   2???               M         call        DectoChar
0162   2???               M         call        WR_DATA
                      00650         PrintNumber     Ones
                          M         ;movf       number ,W
0163   0857               M         movfw       Ones
0164   2???               M         call        DectoChar
0165   2???               M         call        WR_DATA
0166   2???           00651         call            HalfS           ;wait half a second to display
0167   1383           00652         BCF     STATUS, IRP
0168   3049           00653         movlw   0x49                    ;number 49 to try to get registers for back of bin
0169   0084           00654         movwf   FSR
016A   3000           00655         movlw   0X0
016B   0360           00656         decf    NumOfBins1,W
016C   0784           00657         addwf   FSR,F
016D   3001           00658         movlw   0X1
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016E   02D3           00659         subwf   TenK
016F   3000           00660         movlw   0x0
0170   1803           00661         btfsc   STATUS, C
0171   3001           00662         movlw   0x1
0172   0080           00663         movwf   INDF
0173   0008           00664         return  
                      00665         
0174                  00666 ReadBW
                      00667                         
0174   151F           00668         bsf     ADCON0,2                ;start conversion and wait for it to complete
0175   191F           00669         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
0176   2???           00670         goto    $-1
                      00671         
0177   081E           00672         movf    ADRESH, W
0178   00D1           00673         movwf   NumH
0179   081E           00674         movf    ADRESL, W
017A   00D2           00675         movwf   NumL
                      00676         
017B   2???           00677         call            Clear_Display
017C   2???           00678         call            bin16_BCD
                      00679         PrintNumber     TenK
                          M         ;movf       number ,W
017D   0853               M         movfw       TenK
017E   2???               M         call        DectoChar
017F   2???               M         call        WR_DATA
                      00680         PrintNumber     Thou
                          M         ;movf       number ,W
0180   0854               M         movfw       Thou
0181   2???               M         call        DectoChar
0182   2???               M         call        WR_DATA
                      00681         PrintNumber     Hund
                          M         ;movf       number ,W
0183   0855               M         movfw       Hund
0184   2???               M         call        DectoChar
0185   2???               M         call        WR_DATA
                      00682         PrintNumber     Tens
                          M         ;movf       number ,W
0186   0856               M         movfw       Tens
0187   2???               M         call        DectoChar
0188   2???               M         call        WR_DATA
                      00683         PrintNumber     Ones
                          M         ;movf       number ,W
0189   0857               M         movfw       Ones
018A   2???               M         call        DectoChar
018B   2???               M         call        WR_DATA
018C   2???           00684         call            HalfS
018D   2???           00685         call            Clear_Display
                      00686         
018E   3001           00687         movlw           0x1
018F   02D3           00688         subwf           TenK
0190   3000           00689         movlw           0x0
0191   1803           00690         btfsc           STATUS,C
0192   3001           00691         movlw           0x1
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00692         
0193   0008           00693         return
                      00694                 
0194                  00695 ShaftIR
0194   0801           00696     movfw       TMR0
0195   3C05           00697     sublw       5               ; Skip if 
0196   1903           00698     btfsc       STATUS, Z       ; WREG is zero
0197   2???           00699     call        Set_LED
0198   2???           00700     call        ShaftIR
                      00701 
0199                  00702 Set_LED
0199   2???           00703     call        Clear_Display
019A   1409           00704     BSF PORTE, 0
019B   2???           00705     call STOP
                      00706   
019C   2???           00707 STOP    goto STOP
                      00708     
                      00709 ;***************************************************
                      00710 ;       US Sensor Modules                           [TESTED]
                      00711 ;***************************************************
                      00712         
019D                  00713 Read1_US                    
                      00714          
019D   2???           00715         call            Read1_US1 
                      00716          
019E   2???           00717         call            Clear_Display
                      00718         
019F   080F           00719         movf            TMR1H, W
01A0   00D1           00720         movwf           NumH
01A1   080E           00721         movf            TMR1L, W
01A2   00D2           00722         movwf           NumL
                      00723         
01A3   2???           00724         call            bin16_BCD
                      00725         
                      00726         PrintNumber     TenK
                          M         ;movf       number ,W
01A4   0853               M         movfw       TenK
01A5   2???               M         call        DectoChar
01A6   2???               M         call        WR_DATA
                      00727         PrintNumber     Thou
                          M         ;movf       number ,W
01A7   0854               M         movfw       Thou
01A8   2???               M         call        DectoChar
01A9   2???               M         call        WR_DATA
                      00728         PrintNumber     Hund
                          M         ;movf       number ,W
01AA   0855               M         movfw       Hund
01AB   2???               M         call        DectoChar
01AC   2???               M         call        WR_DATA
                      00729         PrintNumber     Tens
                          M         ;movf       number ,W
01AD   0856               M         movfw       Tens
01AE   2???               M         call        DectoChar
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AF   2???               M         call        WR_DATA
                      00730         PrintNumber     Ones
                          M         ;movf       number ,W
01B0   0857               M         movfw       Ones
01B1   2???               M         call        DectoChar
01B2   2???               M         call        WR_DATA
                      00731         
01B3   2???           00732         call            HalfS
                      00733         
01B4   2???           00734         call            Clear_Display
                      00735         
01B5   3001           00736         movlw           0x1
01B6   02D3           00737         subwf           TenK
01B7   3001           00738         movlw           0x1
01B8   1803           00739         btfsc           STATUS,C
01B9   3000           00740         movlw           0x0
                      00741         
                      00742 
01BA   0008           00743         return
                      00744         
01BB                  00745 Read1_US1
                      00746                 
01BB   018F           00747                 clrf    TMR1H           ; commented are sam harrison edits
01BC   018E           00748                 clrf    TMR1L
                      00749                 
                      00750                 ;bcf    UST1            ;make sure trigger is clear
                      00751                 ;call   DELAY1
                      00752                 ;Delay_5ms
                      00753                 
01BD   1408           00754                 bsf     UST1            ;trigger high, bottom sensor
01BE   2???           00755                 call    lcdLongDelay
                      00756                 ;call   delay10us               ;10us delay used lcdlongdelay
01BF   1008           00757                 bcf     UST1            ;trigger low
                      00758                 
01C0   1D05           00759                 btfss   US1E1           ;wait for echo to go high
01C1   2???           00760                 goto    $-1
01C2   1410           00761                 bsf     T1CON,TMR1ON    ;turn on timer
                      00762                 
01C3   1905           00763                 btfsc   US1E1           ;wait for echo to go low
01C4   2???           00764                 goto    $-1
                      00765                 
01C5   1010           00766                 bcf     T1CON,TMR1ON    ;turn off timer
01C6   0008           00767                 return
                      00768                 
01C7                  00769 Read2_US                    
                      00770          
01C7   2???           00771         call            Read2_US1 
                      00772          
01C8   2???           00773         call            Clear_Display
                      00774         
01C9   080F           00775         movf            TMR1H, W
01CA   00D1           00776         movwf           NumH
01CB   080E           00777         movf            TMR1L, W
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01CC   00D2           00778         movwf           NumL
                      00779         
01CD   2???           00780         call            bin16_BCD
                      00781         
                      00782         PrintNumber     TenK
                          M         ;movf       number ,W
01CE   0853               M         movfw       TenK
01CF   2???               M         call        DectoChar
01D0   2???               M         call        WR_DATA
                      00783         PrintNumber     Thou
                          M         ;movf       number ,W
01D1   0854               M         movfw       Thou
01D2   2???               M         call        DectoChar
01D3   2???               M         call        WR_DATA
                      00784         PrintNumber     Hund
                          M         ;movf       number ,W
01D4   0855               M         movfw       Hund
01D5   2???               M         call        DectoChar
01D6   2???               M         call        WR_DATA
                      00785         PrintNumber     Tens
                          M         ;movf       number ,W
01D7   0856               M         movfw       Tens
01D8   2???               M         call        DectoChar
01D9   2???               M         call        WR_DATA
                      00786         PrintNumber     Ones
                          M         ;movf       number ,W
01DA   0857               M         movfw       Ones
01DB   2???               M         call        DectoChar
01DC   2???               M         call        WR_DATA
                      00787         
01DD   2???           00788         call            HalfS
                      00789         
01DE   2???           00790         call            Clear_Display
                      00791         
01DF   3001           00792         movlw           0x1
01E0   02D3           00793         subwf           TenK
01E1   3001           00794         movlw           0x1
01E2   1803           00795         btfsc           STATUS,C
01E3   3000           00796         movlw           0x0
                      00797         
                      00798 
01E4   0008           00799         return
                      00800         
01E5                  00801 Read2_US1
                      00802                 
01E5   018F           00803                 clrf    TMR1H
01E6   018E           00804                 clrf    TMR1L
                      00805                 
                      00806 ;               bcf     UST2            ;make sure trigger is clear
                      00807 ;               call    DELAY1
                      00808                 ;Delay_5ms
                      00809                 
01E7   1408           00810                 bsf     UST1            ;trigger high, bottom sensor
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E8   2???           00811                 call    lcdLongDelay                ;sam harrison edits
                      00812                 ;call   delay10us               ;10us delay
01E9   1008           00813                 bcf     UST1            ;trigger low
                      00814                 
01EA   1D05           00815                 btfss   US1E1           ;wait for echo to go high
01EB   2???           00816                 goto    $-1
01EC   1410           00817                 bsf     T1CON,TMR1ON    ;turn on timer
                      00818                 
01ED   1905           00819                 btfsc   US1E1           ;wait for echo to go low
01EE   2???           00820                 goto    $-1
                      00821                 
01EF   1010           00822                 bcf     T1CON,TMR1ON    ;turn off timer
01F0   0008           00823                 return
                      00824                 
                      00825 ;*******************************************************
                      00826 ; Dist_Decoder
                      00827 ;   input:  Timer0, cm, mm
                      00828 ;   output: Bin_Dist_reg
                      00829 ;   Desc:   Converts the count in the rotary encoder
                      00830 ;           into physical distance
                      00831 ;*******************************************************
01F1                  00832 Dist_Decoder
                      00833         ; Initalize all registers
01F1   01EA           00834         clrf    cm              ; Clear regs
01F2   01EB           00835         clrf    mm
01F3   0801           00836         movfw   TMR0            ; poll encoder for current state
01F4   00B9           00837         movwf   temp
                      00838         ; Check if its already zero
01F5   0839           00839         movfw   temp
01F6   3C00           00840         sublw   D'0'
01F7   1903           00841         btfsc   STATUS, Z
01F8   0008           00842         return
                      00843         
01F9                  00844 Decode_loop                     ; Assume each step is 1.01 cm
                      00845         ; Perform decode
                      00846         ADDL    cm, cm, D'1'
01F9   3001               M     MOVLW  D'1'         ; move literal into working register
01FA   076A               M     ADDWF   cm,W        ; W <- literal + reg
01FB   00EA               M     MOVWF   cm          ; Destination <- literal + reg
                      00847         ADDL    mm, mm, D'1'
01FC   3001               M     MOVLW  D'1'         ; move literal into working register
01FD   076B               M     ADDWF   mm,W        ; W <- literal + reg
01FE   00EB               M     MOVWF   mm          ; Destination <- literal + reg
01FF   03B9           00848         decf    temp
                      00849 
                      00850         ; Test if mm has overflowed! (mm >= 10)
0200   300A           00851         movlw   D'10'           
0201   026B           00852         subwf   mm, w           ; mm - 10 --> w (w = f - w, when d = 0) 
0202   1803           00853         btfsc   STATUS, C       ; Y = mm, w = 10, Y-w
0203   2???           00854         call    mm_overflow     ; Run overflow routine if it did overflow
                      00855 
0204                  00856 Decode_check_done       
                      00857         ; Test if done decoding
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0204   0839           00858         movfw   temp
0205   3C00           00859         sublw   D'0'
                      00860         ;movf   temp, F
0206   1D03           00861         btfss   STATUS, Z       
0207   2???           00862         goto    Decode_loop
                      00863 ;       btfss   STATUS, C
                      00864 ;       call    Decode_loop
                      00865         ;Display            StandBy1
                      00866         ;goto       Dist_test
0208   0008           00867         return
                      00868         
0209                  00869 mm_overflow
0209   0AEA           00870         incf    cm              ; cm + 1 --> cm
020A   300A           00871         movlw   D'10'           ; 10 --> w
020B   02EB           00872         subwf   mm, f           ; mm - 10 --> mm (f = f - w, when d = 1) 
020C   2???           00873         goto    Decode_check_done       ; Continue decoding
                      00874         
020D                  00875 StoreThisDistance
020D   1383           00876         BCF     STATUS, IRP
020E   3050           00877         movlw   0x50                    ;number 56 to try to get location registers in cblock
020F   0084           00878         movwf   FSR
0210   3000           00879         movlw   0X0
0211   0360           00880         decf    NumOfBins1,W
0212   0784           00881         addwf   FSR,F
                      00882         Store_Dist      W               ;move the distance into the actual register
0213   ???? ???? 2???     M         lcall   Dist_Decoder
0216   086A               M         movfw   cm
0217   0080               M         movwf   W
0218   0080           00883         movwf   INDF
                      00884         
0219   0008           00885         return
                      00886 ;*********************************************
                      00887 ; Keypad Modules
                      00888 ;*******************************************
                      00889          
                      00890 
021A                  00891 Finalize
021A   2???           00892         call        Clear_Display
                      00893         Display     WantResults
  0000                    M                 local   loop_
  0000                    M                 local   end_
021B   01B3               M                 clrf    Table_Counter
021C   0103               M                 clrw            
021D   0833               M loop_   movf    Table_Counter,W
021E   2???               M                 call    WantResults
021F   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0220   1903               M                 btfsc   STATUS,Z
0221   2???               M                         goto    end_
0222   2???               M                 call    WR_DATA
0223   0AB3               M                 incf    Table_Counter,F
0224   2???               M                 goto    loop_
0225                      M end_
0225   2???           00894         call        Switch_Lines
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00895         Display     WantRotate
  0000                    M                 local   loop_
  0000                    M                 local   end_
0226   01B3               M                 clrf    Table_Counter
0227   0103               M                 clrw            
0228   0833               M loop_   movf    Table_Counter,W
0229   2???               M                 call    WantRotate
022A   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
022B   1903               M                 btfsc   STATUS,Z
022C   2???               M                         goto    end_
022D   2???               M                 call    WR_DATA
022E   0AB3               M                 incf    Table_Counter,F
022F   2???               M                 goto    loop_
0230                      M end_
                      00896         
                      00897         
0230   2???           00898         goto        KeypadandLCD
                      00899         
0231                  00900 ListDisplay
0231   2???           00901         call        Clear_Display
                      00902         Display     Results1
  0000                    M                 local   loop_
  0000                    M                 local   end_
0232   01B3               M                 clrf    Table_Counter
0233   0103               M                 clrw            
0234   0833               M loop_   movf    Table_Counter,W
0235   2???               M                 call    Results1
0236   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0237   1903               M                 btfsc   STATUS,Z
0238   2???               M                         goto    end_
0239   2???               M                 call    WR_DATA
023A   0AB3               M                 incf    Table_Counter,F
023B   2???               M                 goto    loop_
023C                      M end_
023C   2???           00903         call        Switch_Lines
                      00904         Display     Results2
  0000                    M                 local   loop_
  0000                    M                 local   end_
023D   01B3               M                 clrf    Table_Counter
023E   0103               M                 clrw            
023F   0833               M loop_   movf    Table_Counter,W
0240   2???               M                 call    Results2
0241   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0242   1903               M                 btfsc   STATUS,Z
0243   2???               M                         goto    end_
0244   2???               M                 call    WR_DATA
0245   0AB3               M                 incf    Table_Counter,F
0246   2???               M                 goto    loop_
0247                      M end_
                      00905         
0247   0008           00906         return
                      00907                 
0248                  00908 BinsDisplay
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0248   2???           00909         call        Clear_Display
                      00910         Display     Bins
  0000                    M                 local   loop_
  0000                    M                 local   end_
0249   01B3               M                 clrf    Table_Counter
024A   0103               M                 clrw            
024B   0833               M loop_   movf    Table_Counter,W
024C   2???               M                 call    Bins
024D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
024E   1903               M                 btfsc   STATUS,Z
024F   2???               M                         goto    end_
0250   2???               M                 call    WR_DATA
0251   0AB3               M                 incf    Table_Counter,F
0252   2???               M                 goto    loop_
0253                      M end_
                      00911                 
0253   0008           00912         return
                      00913         
0254                  00914 OperationTimeDisplay
0254   2???           00915         call        Clear_Display
                      00916         Display     OperationTime
  0000                    M                 local   loop_
  0000                    M                 local   end_
0255   01B3               M                 clrf    Table_Counter
0256   0103               M                 clrw            
0257   0833               M loop_   movf    Table_Counter,W
0258   2???               M                 call    OperationTime
0259   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
025A   1903               M                 btfsc   STATUS,Z
025B   2???               M                         goto    end_
025C   2???               M                 call    WR_DATA
025D   0AB3               M                 incf    Table_Counter,F
025E   2???               M                 goto    loop_
025F                      M end_
                      00917                 
025F   0008           00918         return
                      00919         
0260                  00920 ShiftLeft
0260   3018           00921         movlw           b'00011000'             ;Move to the left
0261   2???           00922         call            WR_INS
0262   0008           00923         return
                      00924 
0263   2???           00925         goto    KeypadandLCD
                      00926         
0264                  00927 RTCDisplay
0264   2???           00928         call    show_RTC
                      00929         
0265   1886           00930         btfsc           PORTB,1     ;Wait until data is available from the keypad
0266   0008           00931         return
0267   1886           00932         btfsc           PORTB,1     ;Wait until data is available from the keypad
0268   0008           00933         return
0269   1886           00934         btfsc           PORTB,1     ;Wait until data is available from the keypad
026A   0008           00935         return
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026B   1886           00936         btfsc           PORTB,1     ;Wait until data is available from the keypad
026C   0008           00937         return
026D   2???           00938         goto        RTCDisplay
                      00939         
026E                  00940 StoreBW1
026E   1283           00941         bcf     STATUS,RP0
026F   3005           00942         movlw   b'00000101'             
0270   009F           00943         movwf   ADCON0                  ;choose RA0
                      00944         
0271   2???           00945         call    BWStoreModule1  
0272                  00946 StoreBW2
0272   1283           00947         bcf     STATUS,RP0
0273   3015           00948         movlw   b'00010101'             
0274   009F           00949         movwf   ADCON0                  ;choose RA1
                      00950         
0275   2???           00951         call    BWStoreModule2
                      00952         
0276   0008           00953         return
                      00954         
0277                  00955 AddBin
0277   2???           00956         Call Clear_Display
0278   0AE0           00957         incf    NumOfBins1,F
                      00958         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
0279   0860               M         movfw       NumOfBins1
027A   2???               M         call        DectoChar
027B   2???               M         call        WR_DATA
027C   2???           00959         Call        HalfS
027D   3007           00960         movlw   0X7                     ;checks if max of 7 bins has been reached
027E   0260           00961         subwf   NumOfBins1,W            
027F   1903           00962         btfsc   STATUS,Z
0280   2???           00963         goto    Finalize
0281   0008           00964         return
                      00965         
0282                  00966 Stickers1
0282   2???           00967         call            Clear_Display
0283   3000           00968         movlw           0X0
0284   00DF           00969         movwf           counter
0285   1383           00970         BCF             STATUS, IRP
0286   3041           00971         movlw           0x41
0287   0084           00972         movwf           FSR
0288   0860           00973         movfw           NumOfBins1
0289   00DE           00974         movwf           countdown
                      00975         Display         FrontStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
028A   01B3               M                 clrf    Table_Counter
028B   0103               M                 clrw            
028C   0833               M loop_   movf    Table_Counter,W
028D   2???               M                 call    FrontStickers
028E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
028F   1903               M                 btfsc   STATUS,Z
0290   2???               M                         goto    end_
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0291   2???               M                 call    WR_DATA
0292   0AB3               M                 incf    Table_Counter,F
0293   2???               M                 goto    loop_
0294                      M end_
0294                  00976 FrontLoop1      
0294   0A84           00977         INCF            FSR,1
0295   0ADF           00978         incf            counter
                      00979         PrintNumber     counter
                          M         ;movf       number ,W
0296   085F               M         movfw       counter
0297   2???               M         call        DectoChar
0298   2???               M         call        WR_DATA
                      00980         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
0299   01B3               M                 clrf    Table_Counter
029A   0103               M                 clrw            
029B   0833               M loop_   movf    Table_Counter,W
029C   2???               M                 call    Colon
029D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
029E   1903               M                 btfsc   STATUS,Z
029F   2???               M                         goto    end_
02A0   2???               M                 call    WR_DATA
02A1   0AB3               M                 incf    Table_Counter,F
02A2   2???               M                 goto    loop_
02A3                      M end_
02A3   0800           00981         movfw           INDF
                      00982         PrintCol        W
02A4   0800               M         movfw       W
02A5   2???               M         call        StickerColours
02A6   2???               M         call        WR_DATA
                      00983         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02A7   01B3               M                 clrf    Table_Counter
02A8   0103               M                 clrw            
02A9   0833               M loop_   movf    Table_Counter,W
02AA   2???               M                 call    Spacee
02AB   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02AC   1903               M                 btfsc   STATUS,Z
02AD   2???               M                         goto    end_
02AE   2???               M                 call    WR_DATA
02AF   0AB3               M                 incf    Table_Counter,F
02B0   2???               M                 goto    loop_
02B1                      M end_
02B1   0BDE           00984         decfsz          countdown,F
02B2   2???           00985         goto            FrontLoop1
                      00986         
02B3   2???           00987         call            Switch_Lines
                      00988         
02B4                  00989 Stickers2
                      00990         
02B4   3000           00991         movlw           0X0
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B5   00DF           00992         movwf           counter
02B6   1383           00993         BCF             STATUS, IRP
02B7   3048           00994         movlw           0x48
02B8   0084           00995         movwf           FSR
02B9   0860           00996         movfw           NumOfBins1
02BA   00DE           00997         movwf           countdown
                      00998         Display         BackStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02BB   01B3               M                 clrf    Table_Counter
02BC   0103               M                 clrw            
02BD   0833               M loop_   movf    Table_Counter,W
02BE   2???               M                 call    BackStickers
02BF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02C0   1903               M                 btfsc   STATUS,Z
02C1   2???               M                         goto    end_
02C2   2???               M                 call    WR_DATA
02C3   0AB3               M                 incf    Table_Counter,F
02C4   2???               M                 goto    loop_
02C5                      M end_
02C5                  00999 FrontLoop2
02C5   0A84           01000         INCF            FSR,1
02C6   0ADF           01001         incf            counter
                      01002         PrintNumber     counter
                          M         ;movf       number ,W
02C7   085F               M         movfw       counter
02C8   2???               M         call        DectoChar
02C9   2???               M         call        WR_DATA
                      01003         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02CA   01B3               M                 clrf    Table_Counter
02CB   0103               M                 clrw            
02CC   0833               M loop_   movf    Table_Counter,W
02CD   2???               M                 call    Colon
02CE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02CF   1903               M                 btfsc   STATUS,Z
02D0   2???               M                         goto    end_
02D1   2???               M                 call    WR_DATA
02D2   0AB3               M                 incf    Table_Counter,F
02D3   2???               M                 goto    loop_
02D4                      M end_
02D4   0800           01004         movfw           INDF
                      01005         PrintCol        W
02D5   0800               M         movfw       W
02D6   2???               M         call        StickerColours
02D7   2???               M         call        WR_DATA
                      01006         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02D8   01B3               M                 clrf    Table_Counter
02D9   0103               M                 clrw            
02DA   0833               M loop_   movf    Table_Counter,W
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02DB   2???               M                 call    Spacee
02DC   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02DD   1903               M                 btfsc   STATUS,Z
02DE   2???               M                         goto    end_
02DF   2???               M                 call    WR_DATA
02E0   0AB3               M                 incf    Table_Counter,F
02E1   2???               M                 goto    loop_
02E2                      M end_
02E2   0BDE           01007         decfsz          countdown,F
02E3   2???           01008         goto            FrontLoop2
                      01009         
02E4   0008           01010         return
                      01011         
02E5                  01012 Locations
02E5   2???           01013         call            Clear_Display
02E6   3000           01014         movlw           0X0
02E7   00DF           01015         movwf           counter
02E8   1383           01016         BCF             STATUS, IRP
02E9   304F           01017         movlw           0x4f
02EA   0084           01018         movwf           FSR
02EB   0860           01019         movfw           NumOfBins1
02EC   00DE           01020         movwf           countdown
                      01021         Display         Distances
  0000                    M                 local   loop_
  0000                    M                 local   end_
02ED   01B3               M                 clrf    Table_Counter
02EE   0103               M                 clrw            
02EF   0833               M loop_   movf    Table_Counter,W
02F0   2???               M                 call    Distances
02F1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02F2   1903               M                 btfsc   STATUS,Z
02F3   2???               M                         goto    end_
02F4   2???               M                 call    WR_DATA
02F5   0AB3               M                 incf    Table_Counter,F
02F6   2???               M                 goto    loop_
02F7                      M end_
02F7                  01022 FrontLoop       
02F7   0A84           01023         INCF            FSR,1
02F8   0ADF           01024         incf            counter
                      01025         PrintNumber     counter
                          M         ;movf       number ,W
02F9   085F               M         movfw       counter
02FA   2???               M         call        DectoChar
02FB   2???               M         call        WR_DATA
                      01026         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02FC   01B3               M                 clrf    Table_Counter
02FD   0103               M                 clrw            
02FE   0833               M loop_   movf    Table_Counter,W
02FF   2???               M                 call    Colon
0300   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0301   1903               M                 btfsc   STATUS,Z
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0302   2???               M                         goto    end_
0303   2???               M                 call    WR_DATA
0304   0AB3               M                 incf    Table_Counter,F
0305   2???               M                 goto    loop_
0306                      M end_
0306   0800           01027         movfw           INDF
                      01028         Display_Dist    W
0307   01D2               M         clrf    NumL
0308   01D1               M         clrf    NumH
0309   0800               M         movfw   W
                          M         ;movfw  TMR0
030A   00D2               M         movwf   NumL
030B   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
030C   0855               M         movfw       Hund
030D   2???               M         call        DectoChar
030E   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
030F   0856               M         movfw       Tens
0310   2???               M         call        DectoChar
0311   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
0312   0857               M         movfw       Ones
0313   2???               M         call        DectoChar
0314   2???               M         call        WR_DATA
                      01029         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
0315   01B3               M                 clrf    Table_Counter
0316   0103               M                 clrw            
0317   0833               M loop_   movf    Table_Counter,W
0318   2???               M                 call    Spacee
0319   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
031A   1903               M                 btfsc   STATUS,Z
031B   2???               M                         goto    end_
031C   2???               M                 call    WR_DATA
031D   0AB3               M                 incf    Table_Counter,F
031E   2???               M                 goto    loop_
031F                      M end_
031F   0BDE           01030         decfsz          countdown,F
0320   2???           01031         goto            FrontLoop
                      01032         
0321   0008           01033         return
                      01034         
                      01035 
                      01036                 
0322                  01037 LEDControlON
                      01038         
0322   1862           01039         btfsc       LEDcounter0,0
0323   2???           01040         goto        $+4
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0324   1406           01041         bsf         LED
0325   1462           01042         bsf         LEDcounter0,0
0326   0008           01043         return
                      01044         
                      01045         
0327   1006           01046         bcf         LED
0328   1062           01047         bcf         LEDcounter0,0
0329   0008           01048         return
                      01049         
                      01050         
032A                  01051 DisplayBlackWhiteIR1
                      01052         
032A   30C5           01053         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
032B   009F           01054         movwf   ADCON0  
                      01055                 
032C   2???           01056         call            ReadBW  
032D   00C2           01057         movwf           Front1
                      01058         PrintCol        Front1
032E   0842               M         movfw       Front1
032F   2???               M         call        StickerColours
0330   2???               M         call        WR_DATA
0331   2???           01059         call            HalfS
0332   2???           01060         call            HalfS
                      01061         
0333   2???           01062         goto            DisplayBlackWhiteIR1
                      01063         
0334                  01064 DisplayBlackWhiteIR2
                      01065         
0334   30CD           01066         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra as the reader pin
0335   009F           01067         movwf   ADCON0  
                      01068         
0336   2???           01069         call            ReadBW  
0337   00C2           01070         movwf           Front1
                      01071         PrintCol        Front1
0338   0842               M         movfw       Front1
0339   2???               M         call        StickerColours
033A   2???               M         call        WR_DATA
033B   2???           01072         call            HalfS
033C   2???           01073         call            HalfS
                      01074         
033D   0008           01075         return
                      01076 
                      01077         
033E                  01078 DisplayUSSensor1
                      01079         
033E   2???           01080         call            Read1_US
033F   2???           01081         call            ClrLCD
0340   00DA           01082         movwf           isBinThere                  ;sets the bin bit 1 or 0
                      01083         PrintYN         isBinThere
0341   085A               M         movfw       isBinThere
0342   2???               M         call        ColumnValues
0343   2???               M         call        WR_DATA
0344   2???           01084         call            HalfS
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0345   2???           01085         call            HalfS
                      01086         
0346   0008           01087         return
                      01088         
0347                  01089 DisplayUSSensor2
                      01090         
0347   2???           01091         call            Read2_US
0348   2???           01092         call            ClrLCD
0349   00D9           01093         movwf           isColumnThere               ;sets the bin bit 1 or 0
                      01094         PrintYN         isColumnThere
034A   0859               M         movfw       isColumnThere
034B   2???               M         call        ColumnValues
034C   2???               M         call        WR_DATA
034D   2???           01095         call            HalfS
034E   2???           01096         call            HalfS
                      01097         
034F   0008           01098         return
                      01099         
0350                  01100 StdRotation1
                      01101         
0350   1863           01102         btfsc       LEDcounter1,0
0351   2???           01103         goto        $+4
0352   1287           01104         bcf             Std1
0353   1463           01105         bsf         LEDcounter1,0
0354   0008           01106         return
                      01107         
0355   1687           01108         bsf             Std1
0356   1063           01109         bcf         LEDcounter1,0
0357   0008           01110         return
                      01111         
0358                  01112 StdRotation2
                      01113         
0358   1864           01114         btfsc       LEDcounter2,0
0359   2???           01115         goto        $+4
035A   1307           01116         bcf             Std2
035B   1464           01117         bsf         LEDcounter2,0
035C   0008           01118         return
                      01119         
                      01120         
035D   1707           01121         bsf             Std2
035E   1064           01122         bcf         LEDcounter2,0
035F   0008           01123         return
                      01124                 
0360                  01125 StdRotation1Backwards
                      01126         
0360   1866           01127         btfsc       LEDcounter4,0
0361   2???           01128         goto        $+4
0362   1506           01129         bsf             Std1Backwards
0363   1466           01130         bsf         LEDcounter4,0
0364   0008           01131         return
                      01132         
0365   1106           01133         bcf             Std1Backwards
0366   1066           01134         bcf         LEDcounter4,0
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0367   0008           01135         return
                      01136         
0368                  01137 StdRotation2Backwards
                      01138         
0368   1867           01139         btfsc       LEDcounter5,0
0369   2???           01140         goto        $+4
036A   1586           01141         bsf             Std2Backwards
036B   1467           01142         bsf         LEDcounter5,0
036C   0008           01143         return
                      01144         
036D   1186           01145         bcf             Std2Backwards
036E   1067           01146         bcf         LEDcounter5,0
036F   0008           01147         return
                      01148         
0370                  01149 PWMFWD  
                      01150         
                      01151     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01152     
                      01153     ;save   pr2 value so that you can zero it after
                      01154     
0370   1868           01155     btfsc           LEDcounter7,0
0371   2???           01156     goto            $+4
0372   0197           01157     clrf            CCP1CON
0373   1468           01158     bsf             LEDcounter7,0
0374   0008           01159     return
                      01160     
0375   1683 1303      01161     BANKSEL TRISC
0377   1107           01162     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01163     
0378   0817           01164     MOVF     CCP1CON,W          ;set CCP1 as PWM
0379   39F0           01165     ANDLW    0xF0
037A   380C           01166     IORLW    0x0C
037B   0097           01167     MOVWF    CCP1CON
                      01168 
037C   0812           01169     movfw   PR2
037D   00D0           01170     movwf   pr2temp
                      01171     
                      01172     ;11000011
037E   30C3           01173     MOVLW    b'11000011'        ;set highest PWM value
037F   1683 1303      01174     BANKSEL  PR2                
0381   0092           01175     MOVWF    PR2                
0382   1283 1303      01176     BANKSEL  TMR2               
                      01177     
0384   1492           01178     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01179     
0385   0195           01180     CLRF    CCPR1L              ;set PWM to zero
                      01181     
0386   1712           01182     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0387   1692           01183     BSF     T2CON, TOUTPS2
0388   1612           01184     BSF     T2CON, TOUTPS1
0389   1592           01185     BSF     T2CON, TOUTPS0
                      01186     
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01187     ; SET PWM duty cycle
                      01188     ;01001110
038A   1697           01189     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
038B   1617           01190     BSF     CCP1CON, 4
                      01191     MOVLF   B'01100001', CCPR1L                 ; previous was 01101
038C   3061               M     MOVLW  B'01100001'  ; move literal into working register
038D   0095               M     MOVWF   CCPR1L      ; move working register into reg
038E   1597           01192     BSF     CCP1CON, 3
038F   1517           01193     BSF     CCP1CON, 2
                      01194     
0390   1512           01195     BSF     T2CON, TMR2ON       ;and start the timer running
                      01196     
0391   1068           01197     bcf             LEDcounter7,0
                      01198     
0392   0008           01199     return
                      01200     
0393                  01201 PWMBACK
                      01202     
                      01203     ;************ SECOND PWM - Positive one ******************************
                      01204     
0393   1869           01205     btfsc           LEDcounter8,0
0394   2???           01206     goto            $+4
0395   019D           01207     clrf            CCP2CON
                      01208     ;bcf                    PORTC,1
0396   1469           01209     bsf             LEDcounter8,0
0397   0008           01210     return
                      01211     
                      01212  
                      01213     
0398   1683 1303      01214     BANKSEL TRISC
039A   1087           01215     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01216     
039B   081D           01217     MOVF     CCP2CON,W          ;set CCP2 as PWM
039C   39F0           01218     ANDLW    0xF0
039D   380C           01219     IORLW    0x0C
039E   009D           01220     MOVWF    CCP2CON
                      01221     
                      01222     ;11000011
039F   30C3           01223     MOVLW    b'11000011'        ;set highest PWM value
03A0   1683 1303      01224     BANKSEL  PR2                
03A2   0092           01225     MOVWF    PR2                
03A3   1283 1303      01226     BANKSEL  TMR2               
                      01227     
03A5   1492           01228     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01229     
03A6   019B           01230     CLRF    CCPR2L              ;set PWM to zero
                      01231     
03A7   1712           01232     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
03A8   1692           01233     BSF     T2CON, TOUTPS2
03A9   1612           01234     BSF     T2CON, TOUTPS1
03AA   1592           01235     BSF     T2CON, TOUTPS0
                      01236     
                      01237     ; SET PWM duty cycle
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01238     ;01001110
03AB   169D           01239     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
03AC   161D           01240     BSF     CCP2CON, 4
03AD   3061           01241     MOVLW   B'01100001'
03AE   009B           01242     MOVWF   CCPR2L      
03AF   159D           01243     BSF     CCP2CON, 3
03B0   151D           01244     BSF     CCP2CON, 2
                      01245     
03B1   1512           01246     BSF     T2CON, TMR2ON       ;and start the timer running
03B2   1283           01247     BCF     STATUS,RP0
                      01248     
                      01249     ;bsf                    PORTC,1
                      01250     
03B3   1069           01251     bcf             LEDcounter8,0
                      01252     
03B4   0008           01253     return
                      01254     
03B5                  01255 PWMSTOP
                      01256     
03B5   0197           01257     clrf   CCP1CON
03B6   019D           01258     clrf   CCP2CON
03B7   0850           01259     movfw   pr2temp
03B8   0092           01260     movwf   PR2
                      01261     
03B9   0008           01262     return
                      01263         
                      01264         
                      01265 ;***************************************
                      01266 ; LCD control
                      01267 ;***************************************
03BA                  01268 Switch_Lines
03BA   30C0           01269                 movlw   B'11000000'
03BB   2???           01270                 call    WR_INS
03BC   0008           01271                 return
                      01272 
03BD                  01273 Clear_Display
03BD   3001           01274                 movlw   B'00000001'
03BE   2???           01275                 call    WR_INS
03BF   0008           01276                 return
                      01277 
                      01278 ;***************************************
                      01279 ; Delay 0.5s
                      01280 ;***************************************
03C0                  01281 HalfS   
  0000                01282         local   HalfS_0
03C0   3088           01283       movlw 0x88
03C1   00B0           01284       movwf COUNTH
03C2   30BD           01285       movlw 0xBD
03C3   00B1           01286       movwf COUNTM
03C4   3003           01287       movlw 0x03
03C5   00B2           01288       movwf COUNTL
                      01289 
03C6                  01290 HalfS_0
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03C6   0BB0           01291       decfsz COUNTH, f
03C7   2???           01292       goto   $+2
03C8   0BB1           01293       decfsz COUNTM, f
03C9   2???           01294       goto   $+2
03CA   0BB2           01295       decfsz COUNTL, f
03CB   2???           01296       goto   HalfS_0
                      01297 
03CC   2???           01298       goto $+1
03CD   0000           01299       nop
03CE   0000           01300       nop
03CF   0008           01301                 return
                      01302                 
                      01303 ;***************************************
                      01304 ; Delay: ~ 5ms
                      01305 ;***************************************
03D0                  01306 DELAY1 
                      01307                                 ;4998 cycles
03D0   30E7           01308         movlw   0xE7
03D1   00B5           01309         movwf   lcd_d1
03D2   3004           01310         movlw   0x04
03D3   00B6           01311         movwf   lcd_d2
03D4                  01312 Delay_0
03D4   0BB5           01313         decfsz  lcd_d1, f
03D5   2???           01314         goto    $+2
03D6   0BB6           01315         decfsz  lcd_d2, f
03D7   2???           01316         goto    Delay_0
                      01317 
                      01318                         ;2 cycles
03D8   2???           01319         goto    $+1
03D9   0008           01320         return
                      01321         
                      01322 ;***************************************
                      01323 ; Delay: ~10us
                      01324 ;***************************************
03DA                  01325 delay10us
03DA   3014           01326     movlw       d'20'
03DB   00E1           01327     movwf       delay3
03DC                  01328 Delay10usLoop
03DC   0BE1           01329     decfsz      delay3, f
03DD   2???           01330     goto        Delay10usLoop
03DE   0008           01331     return
                      01332 
                      01333 ;***************************************
                      01334 ;Init_TMR0
                      01335 ;   Input:  RA4
                      01336 ;   Output: TMR0 register
                      01337 ;   desc:   Counts the clock pulses for the
                      01338 ;           rotary encoder
                      01339 ;****************************************
03DF                  01340 Init_TMR0                           ; INITIALIZE TIMER 0   
03DF   1683 1303      01341     BANKSEL OPTION_REG
                      01342     MOVLF   B'00101000', OPTION_REG
03E1   3028               M     MOVLW  B'00101000'  ; move literal into working register
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E2   0081               M     MOVWF   OPTION_REG  ; move working register into reg
                      01343     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01344     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
                      01345     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01346     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01347     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01348     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01349     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01350     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
03E3   1283 1303      01351     BANKSEL TMR0
03E5   0181           01352     CLRF   TMR0                     ; Clear timer 0
03E6   0008           01353     return  
                      01354     
                      01355 ;************************************
                      01356 ; RTC Sublabels
                      01357 ;************************************
                      01358     
03E7                  01359 show_RTC
                      01360                 ;clear LCD screen
03E7   3001           01361                 movlw   b'00000001'
03E8   2???           01362                 call    WR_INS
                      01363 
                      01364                 ;Get year
03E9   3032           01365                 movlw   "2"                             ;First line shows 20**/**/**
03EA   2???           01366                 call    WR_DATA
03EB   3030           01367                 movlw   "0"
03EC   2???           01368                 call    WR_DATA
                      01369                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03ED   3006               M         movlw   0x06
03EE   1283 1303          M         banksel 0x73
03F0   00F3               M         movwf   0x73
03F1   2???               M         call    read_rtc
03F2   1283 1303          M         banksel 0x75
03F4   0875               M         movf    0x75,w
03F5   2???               M         call    rtc_convert   
03F6   0877           01370                 movfw   0x77
03F7   2???           01371                 call    WR_DATA
03F8   0878           01372                 movfw   0x78
03F9   2???           01373                 call    WR_DATA
                      01374 
03FA   302F           01375                 movlw   "/"
03FB   2???           01376                 call    WR_DATA
                      01377 
                      01378                 ;Get month
                      01379                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03FC   3005               M         movlw   0x05
03FD   1283 1303          M         banksel 0x73
03FF   00F3               M         movwf   0x73
0400   2???               M         call    read_rtc
0401   1283 1303          M         banksel 0x75
0403   0875               M         movf    0x75,w
0404   2???               M         call    rtc_convert   
0405   0877           01380                 movfw   0x77
0406   2???           01381                 call    WR_DATA
0407   0878           01382                 movfw   0x78
0408   2???           01383                 call    WR_DATA
                      01384 
0409   302F           01385                 movlw   "/"
040A   2???           01386                 call    WR_DATA
                      01387 
                      01388                 ;Get day
                      01389                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
040B   3004               M         movlw   0x04
040C   1283 1303          M         banksel 0x73
040E   00F3               M         movwf   0x73
040F   2???               M         call    read_rtc
0410   1283 1303          M         banksel 0x75
0412   0875               M         movf    0x75,w
0413   2???               M         call    rtc_convert   
0414   0877           01390                 movfw   0x77
0415   2???           01391                 call    WR_DATA
0416   0878           01392                 movfw   0x78
0417   2???           01393                 call    WR_DATA
                      01394 
0418   30C0           01395                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
0419   2???           01396                 call    WR_INS
                      01397 
                      01398                 ;Get hour
                      01399                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
041A   3002               M         movlw   0x02
041B   1283 1303          M         banksel 0x73
041D   00F3               M         movwf   0x73
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

041E   2???               M         call    read_rtc
041F   1283 1303          M         banksel 0x75
0421   0875               M         movf    0x75,w
0422   2???               M         call    rtc_convert   
0423   0877           01400                 movfw   0x77
0424   2???           01401                 call    WR_DATA
0425   0878           01402                 movfw   0x78
0426   2???           01403                 call    WR_DATA
0427   303A           01404                 movlw                   ":"
0428   2???           01405                 call    WR_DATA
                      01406 
                      01407                 ;Get minute             
                      01408                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0429   3001               M         movlw   0x01
042A   1283 1303          M         banksel 0x73
042C   00F3               M         movwf   0x73
042D   2???               M         call    read_rtc
042E   1283 1303          M         banksel 0x75
0430   0875               M         movf    0x75,w
0431   2???               M         call    rtc_convert   
0432   0877           01409                 movfw   0x77
0433   2???           01410                 call    WR_DATA
0434   0878           01411                 movfw   0x78
0435   2???           01412                 call    WR_DATA         
0436   303A           01413                 movlw                   ":"
0437   2???           01414                 call    WR_DATA
                      01415                 
                      01416                 ;Get seconds
                      01417                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0438   3000               M         movlw   0x00
0439   1283 1303          M         banksel 0x73
043B   00F3               M         movwf   0x73
043C   2???               M         call    read_rtc
043D   1283 1303          M         banksel 0x75
043F   0875               M         movf    0x75,w
0440   2???               M         call    rtc_convert   
0441   0877           01418                 movfw   0x77
0442   2???           01419                 call    WR_DATA
0443   0878           01420                 movfw   0x78
0444   2???           01421                 call    WR_DATA
                      01422                 
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0445   2???           01423                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
                      01424                 ;goto   show_RTC                ;use return instead to check for key press
0446   0008           01425                 return
                      01426 
                      01427 ;***************************************
                      01428 ; Setup RTC with time defined by user
                      01429 ;***************************************
0447                  01430 set_rtc_time
                      01431 
                      01432                 rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0447   1283 1303          M         banksel         0x74
0449   01F4               M         clrf            0x74
044A   1283 1303          M         banksel         0x73
044C   01F3               M         clrf            0x73
044D   2???               M     call        write_rtc               ;Write 0 to Seconds
044E   1283 1303          M         banksel         0x73
0450   0AF3               M     incf        0x73                    ;Set register address to 1
0451   2???               M         call            write_rtc
0452   1283 1303          M         banksel         0x73
0454   0AF3               M     incf        0x73                    ;Set register address to 2
0455   2???               M         call            write_rtc
0456   1283 1303          M         banksel         0x73
0458   0AF3               M     incf        0x73                    ;Set register address to 3
0459   2???               M         call            write_rtc
045A   1283 1303          M         banksel         0x73
045C   0AF3               M     incf        0x73                    ;Set register address to 4
045D   2???               M         call            write_rtc
045E   1283 1303          M         banksel         0x73
0460   0AF3               M     incf        0x73                    ;Set register address to 5
0461   2???               M         call            write_rtc
0462   1283 1303          M         banksel         0x73
0464   0AF3               M     incf        0x73                    ;Set register address to 6
0465   2???               M         call            write_rtc
                      01433 
                      01434                 rtc_set 0x00,   B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0466   1283 1303          M         banksel 0x73
0468   3000               M         movlw   0x00
0469   00F3               M         movwf   0x73
046A   1283 1303          M         banksel 0x74
046C   3080               M         movlw   B'10000000'
046D   00F4               M         movwf   0x74    
046E   2???               M         call    write_rtc
                      01435 
                      01436                 ;set time 
                      01437                 rtc_set 0x06,   B'00010110'             ; Year
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
046F   1283 1303          M         banksel 0x73
0471   3006               M         movlw   0x06
0472   00F3               M         movwf   0x73
0473   1283 1303          M         banksel 0x74
0475   3016               M         movlw   B'00010110'
0476   00F4               M         movwf   0x74    
0477   2???               M         call    write_rtc
                      01438                 rtc_set 0x05,   B'00000010'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0478   1283 1303          M         banksel 0x73
047A   3005               M         movlw   0x05
047B   00F3               M         movwf   0x73
047C   1283 1303          M         banksel 0x74
047E   3002               M         movlw   B'00000010'
047F   00F4               M         movwf   0x74    
0480   2???               M         call    write_rtc
                      01439                 rtc_set 0x04,   B'00010110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0481   1283 1303          M         banksel 0x73
0483   3004               M         movlw   0x04
0484   00F3               M         movwf   0x73
0485   1283 1303          M         banksel 0x74
0487   3016               M         movlw   B'00010110'
0488   00F4               M         movwf   0x74    
0489   2???               M         call    write_rtc
                      01440                 rtc_set 0x03,   B'00100001'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
048A   1283 1303          M         banksel 0x73
048C   3003               M         movlw   0x03
048D   00F3               M         movwf   0x73
048E   1283 1303          M         banksel 0x74
0490   3021               M         movlw   B'00100001'
0491   00F4               M         movwf   0x74    
0492   2???               M         call    write_rtc
                      01441                 rtc_set 0x02,   B'00000001'             ; Hours
                          M ;input:         addliteral: value of address
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0493   1283 1303          M         banksel 0x73
0495   3002               M         movlw   0x02
0496   00F3               M         movwf   0x73
0497   1283 1303          M         banksel 0x74
0499   3001               M         movlw   B'00000001'
049A   00F4               M         movwf   0x74    
049B   2???               M         call    write_rtc
                      01442                 rtc_set 0x01,   B'00110101'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
049C   1283 1303          M         banksel 0x73
049E   3001               M         movlw   0x01
049F   00F3               M         movwf   0x73
04A0   1283 1303          M         banksel 0x74
04A2   3035               M         movlw   B'00110101'
04A3   00F4               M         movwf   0x74    
04A4   2???               M         call    write_rtc
                      01443                 rtc_set 0x00,   B'01010000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
04A5   1283 1303          M         banksel 0x73
04A7   3000               M         movlw   0x00
04A8   00F3               M         movwf   0x73
04A9   1283 1303          M         banksel 0x74
04AB   3050               M         movlw   B'01010000'
04AC   00F4               M         movwf   0x74    
04AD   2???               M         call    write_rtc
04AE   0008           01444                 return
                      01445 
                      01446 
                      01447 ;***************************************
                      01448 ; Delay 1s
                      01449 ;***************************************
04AF                  01450 OneS
  0000                01451                 local   OneS_0
04AF   3010           01452       movlw 0x10
04B0   00B0           01453       movwf COUNTH
04B1   307A           01454       movlw 0x7A
04B2   00B1           01455       movwf COUNTM
04B3   3006           01456       movlw 0x06
04B4   00B2           01457       movwf COUNTL
                      01458 
04B5                  01459 OneS_0
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04B5   0BB0           01460       decfsz COUNTH, f
04B6   2???           01461       goto   $+2
04B7   0BB1           01462       decfsz COUNTM, f
04B8   2???           01463       goto   $+2
04B9   0BB2           01464       decfsz COUNTL, f
04BA   2???           01465       goto   OneS_0
                      01466 
04BB   2???           01467       goto $+1
04BC   0000           01468       nop
04BD   0000           01469       nop
04BE   0008           01470                 return
                      01471 
                      01472 ;***************************************
                      01473 ; Print sticker values
                      01474 ;***************************************
04BF                  01475 PrintBlackSticker
04BF   3000           01476         movlw       b'0'
04C0   2???           01477         call        StickerColours
04C1   2???           01478         call        WR_DATA
04C2   0008           01479         return
                      01480 
04C3                  01481 PrintWhiteSticker
04C3   3001           01482         movlw       b'1'
04C4   2???           01483         call        StickerColours
04C5   2???           01484         call        WR_DATA
04C6   0008           01485         return
                      01486         
04C7                  01487 lcdLongDelay
04C7   3014           01488     movlw d'20'
04C8   00B6           01489     movwf lcd_d2
04C9                  01490 LLD_LOOP
                      01491     LCD_DELAY
04C9   30FF               M         movlw   0xFF
04CA   00B5               M         movwf   lcd_d1
04CB   0BB5               M         decfsz  lcd_d1,f
04CC   2???               M         goto    $-1
04CD   0BB6           01492     decfsz lcd_d2,f
04CE   2???           01493     goto LLD_LOOP
04CF   0008           01494     return
                      01495     
                      01496 ;***************************************
                      01497 ; Look up table
                      01498 ;***************************************
                      01499     
04D0                  01500 Welcome_Msg
                      01501         
                      01502         ;Change Page
04D0   00BA           01503         movwf   Temp
04D1   30??           01504         movlw   HIGH Welcome_MsgEntries
04D2   008A           01505         movwf   PCLATH
04D3   083A           01506         movf    Temp,w
04D4   3E??           01507         addlw   LOW Welcome_MsgEntries
04D5   1803           01508         btfsc   STATUS,C
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04D6   0A8A           01509             incf    PCLATH,f
04D7   0082           01510         movwf   PCL     
04D8   0782           01511         addwf    PCL,F
04D9                  01512 Welcome_MsgEntries
04D9   3431 343A 3453 01513         dt        "1:Start|#/D:PWM|2:Col|3:B/W", 0
       3474 3461 3472 
       3474 347C 3423 
       342F 3444 343A 
       3450 3457 344D 
       347C 3432 343A 
       3443 346F 346C 
       347C 3433 343A 
       3442 342F 3457 
       3400 
                      01514         
04F5                  01515 Welcome_Msg2
                      01516         
                      01517         ;Change Page
04F5   00BA           01518         movwf   Temp
04F6   30??           01519         movlw   HIGH Welcome_Msg2Entries
04F7   008A           01520         movwf   PCLATH
04F8   083A           01521         movf    Temp,w
04F9   3E??           01522         addlw   LOW Welcome_Msg2Entries
04FA   1803           01523         btfsc   STATUS,C
04FB   0A8A           01524             incf    PCLATH,f
04FC   0082           01525         movwf   PCL     
04FD   0782           01526         addwf    PCL,F
04FE                  01527 Welcome_Msg2Entries
04FE   3435 343A 3441 01528         dt        "5:AddBin|6:Stickers|7:B/Wstore", 0
       3464 3464 3442 
       3469 346E 347C 
       3436 343A 3453 
       3474 3469 3463 
       346B 3465 3472 
       3473 347C 3437 
       343A 3442 342F 
       3457 3473 3474 
       346F 3472 3465 
       3400 
                      01529         
051D                  01530 Operation
                      01531         
                      01532         ;Change Page
051D   00BA           01533         movwf    Temp
051E   30??           01534         movlw   HIGH OperationEntries
051F   008A           01535         movwf   PCLATH
0520   083A           01536         movf    Temp,w
0521   3E??           01537         addlw   LOW OperationEntries
0522   1803           01538         btfsc   STATUS,C
0523   0A8A           01539             incf    PCLATH,f
0524   0082           01540         movwf   PCL
0525   0782           01541         addwf    PCL,F
0526                  01542 OperationEntries
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0526   344F 3470 3465 01543         dt        "Operating...",0
       3472 3461 3474 
       3469 346E 3467 
       342E 342E 342E 
       3400 
                      01544 
0533                  01545 WantResults
                      01546         
                      01547         ;Change Page
0533   00BA           01548         movwf    Temp
0534   30??           01549         movlw   HIGH WantResultsEntries
0535   008A           01550         movwf   PCLATH
0536   083A           01551         movf    Temp,w
0537   3E??           01552         addlw   LOW WantResultsEntries
0538   1803           01553         btfsc   STATUS,C
0539   0A8A           01554             incf    PCLATH,f
053A   0082           01555         movwf   PCL
053B   0782           01556         addwf    PCL,F
053C                  01557 WantResultsEntries
053C   3450 3472 3465 01558         dt        "Press 2 to display results",0
       3473 3473 3420 
       3432 3420 3474 
       346F 3420 3464 
       3469 3473 3470 
       346C 3461 3479 
       3420 3472 3465 
       3473 3475 346C 
       3474 3473 3400 
                      01559 
                      01560 
0557                  01561 WantRotate
                      01562                 
                      01563         ;Change Page
0557   00BA           01564         movwf    Temp
0558   30??           01565         movlw   HIGH WantRotateEntries
0559   008A           01566         movwf   PCLATH
055A   083A           01567         movf    Temp,w
055B   3E??           01568         addlw   LOW WantRotateEntries
055C   1803           01569         btfsc   STATUS,C
055D   0A8A           01570             incf    PCLATH,f
055E   0082           01571         movwf   PCL
055F   0782           01572         addwf    PCL,F
0560                  01573 WantRotateEntries
0560   3450 3472 3465 01574         dt        "Press A to rotate screen",0
       3473 3473 3420 
       3441 3420 3474 
       346F 3420 3472 
       346F 3474 3461 
       3474 3465 3420 
       3473 3463 3472 
       3465 3465 346E 
       3400 
                      01575         
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0579                  01576 Results1 
                      01577                 
                      01578         ;Change Page
0579   00BA           01579         movwf    Temp
057A   30??           01580         movlw   HIGH Results1Entries
057B   008A           01581         movwf   PCLATH
057C   083A           01582         movf    Temp,w
057D   3E??           01583         addlw   LOW Results1Entries
057E   1803           01584         btfsc   STATUS,C
057F   0A8A           01585             incf    PCLATH,f
0580   0082           01586         movwf   PCL
0581   0782           01587         addwf    PCL,F
0582                  01588 Results1Entries 
0582   3433 343A 3420 01589         dt        "3: PWM test, 4: Sensor Test",0
       3450 3457 344D 
       3420 3474 3465 
       3473 3474 342C 
       3420 3434 343A 
       3420 3453 3465 
       346E 3473 346F 
       3472 3420 3454 
       3465 3473 3474 
       3400 
                      01590         
059E                  01591 Results2
                      01592         
                      01593         ;Change Page
059E   00BA           01594         movwf    Temp
059F   30??           01595         movlw   HIGH Results2Entries
05A0   008A           01596         movwf   PCLATH
05A1   083A           01597         movf    Temp,w
05A2   3E??           01598         addlw   LOW Results2Entries
05A3   1803           01599         btfsc   STATUS,C
05A4   0A8A           01600             incf    PCLATH,f
05A5   0082           01601         movwf   PCL     
05A6   0782           01602         addwf    PCL,F
05A7                  01603 Results2Entries 
05A7   3436 343A 3420 01604         dt        "6: bin locations, 8: operation time",0
       3462 3469 346E 
       3420 346C 346F 
       3463 3461 3474 
       3469 346F 346E 
       3473 342C 3420 
       3438 343A 3420 
       346F 3470 3465 
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
       346D 3465 3400 
                      01605         
05CB                  01606 Bins
                      01607         ;Change Page
05CB   00BA           01608         movwf    Temp
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05CC   30??           01609         movlw   HIGH BinsEntries
05CD   008A           01610         movwf   PCLATH
05CE   083A           01611         movf    Temp,w
05CF   3E??           01612         addlw   LOW BinsEntries
05D0   1803           01613         btfsc   STATUS,C
05D1   0A8A           01614             incf    PCLATH,f
05D2   0082           01615         movwf   PCL     
05D3   0782           01616         addwf    PCL,F
05D4                  01617 BinsEntries
05D4   3434 3420 3462 01618         dt        "4 bins in total",0
       3469 346E 3473 
       3420 3469 346E 
       3420 3474 346F 
       3474 3461 346C 
       3400 
                      01619         
05E4                  01620 OperationTime
                      01621         ;Change Page
05E4   00BA           01622         movwf    Temp
05E5   30??           01623         movlw   HIGH OperationTimeEntries
05E6   008A           01624         movwf   PCLATH
05E7   083A           01625         movf    Temp,w
05E8   3E??           01626         addlw   LOW OperationTimeEntries
05E9   1803           01627         btfsc   STATUS,C
05EA   0A8A           01628             incf    PCLATH,f
05EB   0082           01629         movwf   PCL     
05EC   0782           01630         addwf    PCL,F
05ED                  01631 OperationTimeEntries
05ED   344D 346F 3476 01632         dt        "Moving Arm",0
       3469 346E 3467 
       3420 3441 3472 
       346D 3400 
                      01633         
05F8                  01634 DectoChar
                      01635         
                      01636         ;Change Page
05F8   00BA           01637         movwf   Temp
05F9   30??           01638         movlw   HIGH DectoCharEntries
05FA   008A           01639         movwf   PCLATH
05FB   083A           01640         movf    Temp,w
05FC   3E??           01641         addlw   LOW DectoCharEntries
05FD   1803           01642         btfsc   STATUS,C
05FE   0A8A           01643             incf    PCLATH,f
05FF   0082           01644         movwf   PCL     
0600   0782           01645         addwf    PCL,F
0601                  01646 DectoCharEntries
0601   3430 3431 3432 01647         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01648         
060C                  01649 StickerColours
                      01650         
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01651         ;Change Page
060C   00BA           01652         movwf   Temp
060D   30??           01653         movlw   HIGH StickerColoursEntries
060E   008A           01654         movwf   PCLATH
060F   083A           01655         movf    Temp,w
0610   3E??           01656         addlw   LOW StickerColoursEntries
0611   1803           01657         btfsc   STATUS,C
0612   0A8A           01658             incf    PCLATH,f
0613   0082           01659         movwf   PCL     
0614   0782           01660         addwf    PCL,F
0615                  01661 StickerColoursEntries
0615   3442 3457 3400 01662         dt        "BW",  0
                      01663         
0618                  01664 ColumnValues
                      01665         
                      01666         ;Change Page
0618   00BA           01667         movwf   Temp
0619   30??           01668         movlw   HIGH ColumnValuesEntries
061A   008A           01669         movwf   PCLATH
061B   083A           01670         movf    Temp,w
061C   3E??           01671         addlw   LOW ColumnValuesEntries
061D   1803           01672         btfsc   STATUS,C
061E   0A8A           01673             incf    PCLATH,f
061F   0082           01674         movwf   PCL     
0620   0782           01675         addwf    PCL,F
0621                  01676 ColumnValuesEntries
0621   344E 3459 3400 01677         dt        "NY",  0
                      01678         
0624                  01679 FrontStickers
                      01680 
                      01681         ;Change Page
0624   00BA           01682         movwf   Temp
0625   30??           01683         movlw   HIGH FrontStickersEntries
0626   008A           01684         movwf   PCLATH
0627   083A           01685         movf    Temp,w
0628   3E??           01686         addlw   LOW FrontStickersEntries
0629   1803           01687         btfsc   STATUS,C
062A   0A8A           01688             incf    PCLATH,f
062B   0082           01689         movwf   PCL     
062C   0782           01690         addwf    PCL,F
062D                  01691 FrontStickersEntries
062D   3446 3472 346F 01692         dt        "Front",  0
       346E 3474 3400 
                      01693         
0633                  01694 BackStickers
                      01695 
                      01696         ;Change Page
0633   00BA           01697         movwf   Temp
0634   30??           01698         movlw   HIGH BackStickersEntries
0635   008A           01699         movwf   PCLATH
0636   083A           01700         movf    Temp,w
0637   3E??           01701         addlw   LOW BackStickersEntries
0638   1803           01702         btfsc   STATUS,C
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0639   0A8A           01703             incf    PCLATH,f
063A   0082           01704         movwf   PCL     
063B   0782           01705         addwf    PCL,F
063C                  01706 BackStickersEntries
063C   3442 3461 3463 01707         dt        "Back",  0
       346B 3400 
                      01708         
0641                  01709 Spacee
                      01710 
                      01711         ;Change Page
0641   00BA           01712         movwf   Temp
0642   30??           01713         movlw   HIGH SpaceeEntries
0643   008A           01714         movwf   PCLATH
0644   083A           01715         movf    Temp,w
0645   3E??           01716         addlw   LOW SpaceeEntries
0646   1803           01717         btfsc   STATUS,C
0647   0A8A           01718             incf    PCLATH,f
0648   0082           01719         movwf   PCL     
0649   0782           01720         addwf    PCL,F
064A                  01721 SpaceeEntries
064A   3420 3400      01722         dt        " ",  0
                      01723         
064C                  01724 Colon
                      01725 
                      01726         ;Change Page
064C   00BA           01727         movwf   Temp
064D   30??           01728         movlw   HIGH ColonEntries
064E   008A           01729         movwf   PCLATH
064F   083A           01730         movf    Temp,w
0650   3E??           01731         addlw   LOW ColonEntries
0651   1803           01732         btfsc   STATUS,C
0652   0A8A           01733             incf    PCLATH,f
0653   0082           01734         movwf   PCL     
0654   0782           01735         addwf    PCL,F
0655                  01736 ColonEntries
0655   343A 3400      01737         dt        ":",  0
                      01738         
0657                  01739 Distances
                      01740 
                      01741         ;Change Page
0657   00BA           01742         movwf   Temp
0658   30??           01743         movlw   HIGH DistancesEntries
0659   008A           01744         movwf   PCLATH
065A   083A           01745         movf    Temp,w
065B   3E??           01746         addlw   LOW DistancesEntries
065C   1803           01747         btfsc   STATUS,C
065D   0A8A           01748             incf    PCLATH,f
065E   0082           01749         movwf   PCL     
065F   0782           01750         addwf    PCL,F
0660                  01751 DistancesEntries
0660   3444 3469 3473 01752         dt        "Dist (cm)",  0
       3474 3420 3428 
       3463 346D 3429 
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3400 
                      01753             
3F72                  01754         END
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AddBin                            00000277
BANK0                             
BANK1                             
BANK2                             
BANK3                             
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
BWStoreModule1                    00000128
BWStoreModule2                    0000014E
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BackStickers                      00000633
BackStickersEntries               0000063C
Bins                              000005CB
BinsDisplay                       00000248
BinsEntries                       000005D4
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHECKCOLUMN                       000000CD
CHECKSWITCH                       00000122
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Clear_Display                     000003BD
ClrLCD                            00000000
ColMotor                          PORTC,7
Colon                             0000064C
ColonEntries                      00000655
ColumnValues                      00000618
ColumnValuesEntries               00000621
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DCMotor                           PORTC,6
DELAY1                            000003D0
D_A                               00000005
D_NOT_A                           00000005
Decode_check_done                 00000204
Decode_loop                       000001F9
DectoChar                         000005F8
DectoCharEntries                  00000601
Delay10usLoop                     000003DC
Delay_0                           000003D4
Display                           
DisplayBlackWhiteIR1              0000032A
DisplayBlackWhiteIR2              00000334
DisplayUSSensor1                  0000033E
DisplayUSSensor2                  00000347
Display_Dist                      
Dist_Decoder                      000001F1
Distances                         00000657
DistancesEntries                  00000660
E                                 PORTD,3
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
Finalize                          0000021A
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         000002F7
FrontLoop1                        00000294
FrontLoop2                        000002C5
FrontStickers                     00000624
FrontStickersEntries              0000062D
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000003C0
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         000003DF
Key                               
KeypadandLCD                      00000076
LCD_DELAY                         
LED                               PORTB,0
LEDControlON                      00000322
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter7                       00000068
LEDcounter8                       00000069
LLD_LOOP                          000004C9
Lb1                               00000022
Lb2                               00000026
Lb3                               0000002A
Lb4                               0000002E
ListDisplay                       00000231
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
Locations                         000002E5
MOV                               
MOVLF                             
MoveBackwards                     00000126
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              00000051
NumL                              00000052
NumOfBins1                        00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              000004AF
Ones                              00000057
Operation                         0000051D
OperationEntries                  00000526
OperationTime                     000005E4
OperationTimeDisplay              00000254
OperationTimeEntries              000005ED
P                                 00000004
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           00000393
PWMFWD                            00000370
PWMSTOP                           000003B5
PrintBlackSticker                 000004BF
PrintCol                          
PrintNumber                       
PrintWhiteSticker                 000004C3
PrintYN                           
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        00000264
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          0000019D
Read1_US1                         000001BB
Read2_US                          000001C7
Read2_US1                         000001E5
ReadBW                            00000174
Results1                          00000579
Results1Entries                   00000582
Results2                          0000059E
Results2Entries                   000005A7
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STOP                              0000019C
STOREDISTANCE                     000000EB
SYNC                              00000004
Set_LED                           00000199
ShaftIR                           00000194
ShiftLeft                         00000260
Spacee                            00000641
SpaceeEntries                     0000064A
StartInit                         000000CA
StartMove                         000000CA
Std1                              PORTC,5
Std1Backwards                     PORTB,2
Std2                              PORTC,6
Std2Backwards                     PORTB,3
Std3                              PORTC,7
Std3Backwards                     PORTC,0
StdRotation1                      00000350
StdRotation1Backwards             00000360
StdRotation2                      00000358
StdRotation2Backwards             00000368
StickerColours                    0000060C
StickerColoursEntries             00000615
Stickers1                         00000282
Stickers2                         000002B4
StoreBW1                          0000026E
StoreBW2                          00000272
StoreThisDistance                 0000020D
Store_Dist                        
Switch                            PORTA,5
Switch_Lines                      000003BA
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
WantResults                       00000533
WantResultsEntries                0000053C
WantRotate                        00000557
WantRotateEntries                 00000560
Welcome_Msg                       000004D0
Welcome_Msg2                      000004F5
Welcome_Msg2Entries               000004FE
Welcome_MsgEntries                000004D9
Z                                 00000002
_.org_0_0077                      00000077
_.org_0_00C7                      000000C7
_.org_0_012A                      0000012A
_.org_0_0150                      00000150
_.org_0_0176                      00000176
_.org_0_01C1                      000001C1
_.org_0_01C4                      000001C4
_.org_0_01EB                      000001EB
_.org_0_01EE                      000001EE
_.org_0_0323                      00000323
_.org_0_0351                      00000351
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_0359                      00000359
_.org_0_0361                      00000361
_.org_0_0369                      00000369
_.org_0_0371                      00000371
_.org_0_0394                      00000394
_.org_0_03C7                      000003C7
_.org_0_03C9                      000003C9
_.org_0_03CC                      000003CC
_.org_0_03D5                      000003D5
_.org_0_03D8                      000003D8
_.org_0_04B6                      000004B6
_.org_0_04B8                      000004B8
_.org_0_04BB                      000004BB
_.org_0_04CC                      000004CC
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
MPASM 5.65                          MAIN.ASM   3-19-2016  13:20:15         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

backstickerValues                 0000005C
backwardsDCMotor                  PORTC,5
bin16_BCD                         00000001
binCounter                        0000005D
cm                                0000006A
com                               00000037
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay10us                         000003DA
delay3                            00000061
distanceMoved                     00000058
distreg                           0000006C
frontstickerValues                0000005B
goback                            000000C9
i2c_common_setup                  00000000
init                              00000034
isBinThere                        0000005A
isColumnThere                     00000059
lcdLongDelay                      000004C7
lcd_d1                            00000035
lcd_d2                            00000036
lcd_tmp                           00000034
mm                                0000006B
mm_overflow                       00000209
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      00000447
show_RTC                          000003E7
temp                              00000039
write_rtc                         00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    34 suppressed

