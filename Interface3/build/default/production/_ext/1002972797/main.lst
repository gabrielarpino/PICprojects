MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1       ;3B PC
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5       
  00000040            00038                 Location6       ;40 PC
  00000041            00039                 Location7
  00000042            00040                 Front1          ;42 PC7
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ; 49 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7           ;50
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins1                      
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0, LEDcounter1,LEDcounter2,LEDcounter3,LEDcounter4,LEDcounter5,LEDcounter7,LED
                            counter8
  0000006A            00073                 cm
  0000006B            00074                 mm
  0000006C            00075                 m
  0000006D            00076                 distreg
  0000006E            00077                 lcd_d1_2
  0000006F            00078                 count_highs             ;the number of consecutive high counter for the US sensor
  00000070            00079                 temp_2
  00000071            00080                 hour1,hour2,min1,min2,sec1,sec2
                      00081         endc    
                      00082 
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083         ;Declare constants for pin assignments (LCD on PORTD)
                      00084                 #define RS      PORTD,2
                      00085                 #define E       PORTD,3
                      00086                 #define IR1     PORTA,0
                      00087                 #define IR2     PORTA,1
                      00088                 #define ColMotor PORTC,7
                      00089                 #define UST1    PORTD,0
                      00090                 #define US1E1   PORTA,2
                      00091                 #define UST2    PORTD,1
                      00092                 #define US1E2   PORTA,3
                      00093                 #define LED     PORTB,0
                      00094                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00095                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00096                 #define Std1Backwards   PORTC,0
                      00097                 #define Std2Backwards   PORTC,7
                      00098                 #define SwitchWhite             PORTB,2     ; or gated switch to stop motor motion
                      00099                 #define SwitchArm               PORTB,3
                      00100                 #define NOTPWMFWD               PORTC,2
                      00101                 #define NOTPWMBACK              PORTC,1
                      00102                 #define MAX_HIGHS       0x3                 ; number of consecutive highs we want to det
                            ect US
                      00103                 #define MAX_TICKS       d'200'              ; number of ticks where it reaches 4 metres,
                             max time to get back from 4 meters is 36 seconds
                      00104                 ;SHAFTIR is PORTA,4
                      00105                 ;PWMFWD is RC2
                      00106                 ;PWMBACK is RC1
                      00107                 
                      00108 
                      00109          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00110          goto      init       ;Just jump to the main code section.
                      00111 
                      00112 ;*******************************************************************************
                      00113 ; MACROS
                      00114 ;*******************************************************************************
                      00115 Key      macro  value, subroutine
                      00116          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00117          andlw          0x0F
                      00118          xorlw          value
                      00119          btfsc          STATUS, Z
                      00120          call           subroutine
                      00121         endm
                      00122 
                      00123 Rotation macro  value
                      00124          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00125          andlw          0x0F
                      00126          xorlw          value
                      00127          btfsc          STATUS, Z
                      00128          call           ShiftLeft
                      00129         endm
                      00130 ;***************************************
                      00131 ; Delay: ~160us macro
                      00132 ;***************************************
                      00133 LCD_DELAY macro
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00134         movlw   0xFF
                      00135         movwf   lcd_d1
                      00136         decfsz  lcd_d1,f
                      00137         goto    $-1
                      00138         endm
                      00139         
                      00140 ;***************************************
                      00141 ; Display macro
                      00142 ;***************************************
                      00143 Display macro   Message
                      00144                 local   loop_
                      00145                 local   end_
                      00146                 clrf    Table_Counter
                      00147                 clrw            
                      00148 loop_   movf    Table_Counter,W
                      00149                 call    Message
                      00150                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00151                 btfsc   STATUS,Z
                      00152                         goto    end_
                      00153                 call    WR_DATA
                      00154                 incf    Table_Counter,F
                      00155                 goto    loop_
                      00156 end_
                      00157                 endm
                      00158                 
                      00159 ;***************************************
                      00160 ; MOVLF macro   [TESTED]
                      00161 ;***************************************
                      00162 MOVLF   Macro   literal, reg
                      00163     MOVLW  literal      ; move literal into working register
                      00164     MOVWF   reg         ; move working register into reg
                      00165     endm
                      00166 
                      00167 ;***************************************
                      00168 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00169 ;***************************************
                      00170 MOV     Macro   reg1, reg2
                      00171     MOVF  reg1,W        ; move reg1 into working register
                      00172     MOVWF   reg2        ; reg2 <- reg1
                      00173     endm
                      00174     
                      00175 ;***************************************
                      00176 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00177 ;***************************************
                      00178 ADDL    Macro   Destination, reg, literal
                      00179     MOVLW  literal      ; move literal into working register
                      00180     ADDWF   reg,W       ; W <- literal + reg
                      00181     MOVWF   Destination ; Destination <- literal + reg
                      00182     endm
                      00183     
                      00184 ;***************************************
                      00185 ; ADD macro, Adds two registers together    [TESTED]
                      00186 ;***************************************
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00187 ADD     Macro   Destination, reg1, reg2
                      00188     MOVF    reg1,W      ; move literal into working register
                      00189     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00190     MOVWF   Destination ; Destination <- reg1 + reg2
                      00191     endm
                      00192 ;***************************************
                      00193 ; Number to Printable
                      00194 ;***************************************
                      00195 PrintNumber macro       number
                      00196         ;movf       number ,W
                      00197         movfw       number
                      00198         call        DectoChar
                      00199         call        WR_DATA
                      00200         endm
                      00201 ;***************************************
                      00202 ; Store_Dist macro --> Stores current
                      00203 ;   distance and stores it in Bin_Dist_reg
                      00204 ;***************************************                
                      00205 Put_Dist_In_Reg macro    Bin_Dist_reg
                      00206         lcall   Dist_Decoder
                      00207         movfw   cm
                      00208         movwf   Bin_Dist_reg
                      00209     endm
                      00210     
                      00211 ;***************************************
                      00212 ; Display_Dist macro --> Takes value in Bin_Dist_reg
                      00213 ;   and converts it into a BCD and prints it
                      00214 ;   To the LCD
                      00215 ;***************************************                
                      00216 Display_Dist macro    Bin_Dist_reg
                      00217     MOV     Bin_Dist_reg, temp  ; Bin_Dist_reg --> temp
                      00218     call    Distance_Display
                      00219     endm
                      00220 ;*********************************************************
                      00221 ;   Distance_Display            
                      00222 ;   input:      temp
                      00223 ;   Output:     LCD
                      00224 ;   desc:       Decodes the distance and prints to the LCD
                      00225 ;*********************************************************      
0001                  00226 Distance_Display
0001   2???           00227         call    Dist_Decoder        ; outputs m and cm regs to display
                      00228         PrintNumber     m
                          M         ;movf       number ,W
0002   086C               M         movfw       m
0003   2???               M         call        DectoChar
0004   2???               M         call        WR_DATA
0005   01D2           00229         clrf    NumL
0006   01D1           00230         clrf    NumH
                      00231         MOV     cm, NumL
0007   086A               M     MOVF  cm,W          ; move reg1 into working register
0008   00D2               M     MOVWF   NumL        ; reg2 <- reg1
0009   2???           00232         call    bin16_BCD
                      00233         PrintNumber     Tens        ; Print cm
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;movf       number ,W
000A   0856               M         movfw       Tens
000B   2???               M         call        DectoChar
000C   2???               M         call        WR_DATA
                      00234         PrintNumber     Ones
                          M         ;movf       number ,W
000D   0857               M         movfw       Ones
000E   2???               M         call        DectoChar
000F   2???               M         call        WR_DATA
0010   0008           00235         return
                      00236 ;***************************************
                      00237 ; Number to Colour
                      00238 ;***************************************
                      00239 PrintCol macro      number
                      00240         movfw       number
                      00241         call        StickerColours
                      00242         call        WR_DATA
                      00243         endm    
                      00244 
                      00245 ;***************************************
                      00246 ;           US READ MACRO
                      00247 ;****************************************
                      00248 ReadUltrasonic macro    trigger, trigger_bit, echo, echo_bit
                      00249     clrf        TMR1H
                      00250     clrf        TMR1L
                      00251 
                      00252     bcf trigger, trigger_bit            ;make sure trigger is clear
                      00253     call lcdLongDelay
                      00254 
                      00255     bsf trigger, trigger_bit    ;trigger high, bottom sensor
                      00256     call lcdLongDelay           ;10us delay
                      00257     bcf trigger, trigger_bit    ;trigger low
                      00258 
                      00259     btfss       echo, echo_bit          ;wait for echo to go high
                      00260     goto        $-1
                      00261     bsf T1CON,TMR1ON    ;turn on timer
                      00262 
                      00263     btfsc       echo, echo_bit          ;wait for echo to go low
                      00264     goto        $-1
                      00265 
                      00266     bcf T1CON,TMR1ON    ;turn off timer
                      00267     endm
                      00268         
                      00269 ;*******************************************************
                      00270 ;******             BCD                 ****************
                      00271 ;*******************************************************
                      00272         
                      00273 ;---------------- Binary (16-bit) to BCD -----------------------
                      00274 ;
                      00275 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00276 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00277                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00278 ;
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00279 ; Uses variables
                      00280 ; NumH, NumL
                      00281 ; TenK, Thou, Hund, Tens, Ones
                      00282                 
                      00283 ;BCD    macro   NumH, NumL
                      00284 
0011                  00285 bin16_BCD
0011   0E51           00286         swapf   NumH, W
0012   390F           00287         andlw   0x0F
0013   3EF0           00288         addlw   0xF0
0014   00D4           00289         movwf   Thou 
0015   07D4           00290         addwf   Thou, F 
0016   3EE2           00291         addlw   0xE2 
0017   00D5           00292         movwf   Hund 
0018   3E32           00293         addlw   0x32 
0019   00D7           00294         movwf   Ones 
                      00295 
001A   0851           00296         movf    NumH, W 
001B   390F           00297         andlw   0x0F 
001C   07D5           00298         addwf   Hund, F 
001D   07D5           00299         addwf   Hund, F 
001E   07D7           00300         addwf   Ones, F 
001F   3EE9           00301         addlw   0xE9 
0020   00D6           00302         movwf   Tens 
0021   07D6           00303         addwf   Tens, F 
0022   07D6           00304         addwf   Tens, F 
                      00305 
0023   0E52           00306         swapf   NumL, W 
0024   390F           00307         andlw   0x0F 
0025   07D6           00308         addwf   Tens, F 
0026   07D7           00309         addwf   Ones, F 
                      00310 
0027   0DD6           00311         rlf    Tens, F 
0028   0DD7           00312         rlf    Ones, F 
0029   09D7           00313         comf    Ones, F 
002A   0DD7           00314         rlf    Ones, F 
                      00315 
002B   0852           00316         movf    NumL, W 
002C   390F           00317         andlw   0x0F 
002D   07D7           00318         addwf   Ones, F 
002E   0DD4           00319         rlf    Thou,F 
                      00320 
002F   3007           00321         movlw   0x07 
0030   00D3           00322         movwf   TenK 
                      00323 
0031   300A           00324         movlw   0x0A
0032                  00325 Lb1
0032   03D6           00326         decf    Tens, F 
0033   07D7           00327         addwf   Ones, F 
0034   1C03           00328         btfss   STATUS, C 
0035   2???           00329         goto            Lb1 
0036                  00330 Lb2
0036   03D5           00331         decf    Hund, F 
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0037   07D6           00332         addwf   Tens, F 
0038   1C03           00333         btfss   STATUS,C 
0039   2???           00334         goto            Lb2 
003A                  00335 Lb3
003A   03D4           00336         decf    Thou, F 
003B   07D5           00337         addwf   Hund, F 
003C   1C03           00338         btfss   STATUS,C
003D   2???           00339         goto            Lb3 
003E                  00340 Lb4
003E   03D3           00341         decf    TenK, F 
003F   07D4           00342         addwf   Thou, F 
0040   1C03           00343         btfss   STATUS,C 
0041   2???           00344         goto            Lb4 
                      00345 
0042   3400           00346         retlw   0
0043   0008           00347         return
                      00348 ;***************************************
                      00349 ; Initialize
                      00350 ;***************************************
0044                  00351 init
0044   018B           00352          clrf      INTCON         ; No interrupts
                      00353 
0045   1683           00354          bsf       STATUS,RP0     ; select bank 1
0046   30FF           00355          movlw      0xFF            ; need to make A input
0047   0085           00356          movwf      TRISA          ; All port A is input
0048   30FE           00357          movlw     b'11111110'    ; Set required keypad inputs
0049   0086           00358          movwf     TRISB
004A   0187           00359          clrf      TRISC          ; All port C is output
004B   0188           00360          clrf      TRISD          ; All port D is output
004C   0189           00361          clrf      TRISE        
                      00362          
                      00363                   ;Set SDA and SCL to high-Z first as required for I2C
004D   1607           00364                  bsf       TRISC,4                
004E   1587           00365                  bsf       TRISC,3
                      00366 
004F   1283           00367          bcf       STATUS,RP0     ; select bank 0
0050   0185           00368          clrf      PORTA
0051   0186           00369          clrf      PORTB
0052   0187           00370          clrf      PORTC
0053   0188           00371          clrf      PORTD
0054   0189           00372          clrf      PORTE
                      00373          
                      00374         ;Set up I2C for communication
                      00375                  
0055   2???           00376         call       i2c_common_setup
                      00377 ;*******************************************************************************
                      00378 ;        UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00379         rtc_resetAll                                    ;works;\
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0056   1283 1303          M         banksel         0x74
0058   01F4               M         clrf            0x74
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0059   1283 1303          M         banksel         0x73
005B   01F3               M         clrf            0x73
005C   2???               M     call        write_rtc               ;Write 0 to Seconds
005D   1283 1303          M         banksel         0x73
005F   0AF3               M     incf        0x73                    ;Set register address to 1
0060   2???               M         call            write_rtc
0061   1283 1303          M         banksel         0x73
0063   0AF3               M     incf        0x73                    ;Set register address to 2
0064   2???               M         call            write_rtc
0065   1283 1303          M         banksel         0x73
0067   0AF3               M     incf        0x73                    ;Set register address to 3
0068   2???               M         call            write_rtc
0069   1283 1303          M         banksel         0x73
006B   0AF3               M     incf        0x73                    ;Set register address to 4
006C   2???               M         call            write_rtc
006D   1283 1303          M         banksel         0x73
006F   0AF3               M     incf        0x73                    ;Set register address to 5
0070   2???               M         call            write_rtc
0071   1283 1303          M         banksel         0x73
0073   0AF3               M     incf        0x73                    ;Set register address to 6
0074   2???               M         call            write_rtc
0075   2???           00380         call set_rtc_time
                      00381 ;*******************************************************************************          
0076   2???           00382          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00383          ;A/D converter attempt
                      00384                  
                      00385         ; Set ADCON1 to use RA0 as analog input 
0077   1303           00386         bcf     STATUS,RP1
0078   1683           00387         bsf     STATUS,RP0      ;Select bank 1
0079   3006           00388         movlw   b'00000110'     ;left justified, all inputs digital
007A   009F           00389         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00390 
                      00391         ;ADCON0
007B   1283           00392         bcf     STATUS,RP0      
                      00393 ;***************************************************
                      00394 ; Initialize variables and Displays
                      00395 ;****************************************************
                      00396         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
007C   01B3               M                 clrf    Table_Counter
007D   0103               M                 clrw            
007E   0833               M loop_   movf    Table_Counter,W
007F   2???               M                 call    Welcome_Msg
0080   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0081   1903               M                 btfsc   STATUS,Z
0082   2???               M                         goto    end_
0083   2???               M                 call    WR_DATA
0084   0AB3               M                 incf    Table_Counter,F
0085   2???               M                 goto    loop_
0086                      M end_
0086   2???           00397         call            Switch_Lines
                      00398         Display         Welcome_Msg2
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
0087   01B3               M                 clrf    Table_Counter
0088   0103               M                 clrw            
0089   0833               M loop_   movf    Table_Counter,W
008A   2???               M                 call    Welcome_Msg2
008B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
008C   1903               M                 btfsc   STATUS,Z
008D   2???               M                         goto    end_
008E   2???               M                 call    WR_DATA
008F   0AB3               M                 incf    Table_Counter,F
0090   2???               M                 goto    loop_
0091                      M end_
0091   01E0           00399         clrf            NumOfBins1
0092   01ED           00400         clrf            distreg             ; clear register for distance
0093   2???           00401         call            Init_TMR0           ; Initialize shaft encoder
0094   1408           00402         bsf             PORTD,0
0095   1462           00403         bsf             LEDcounter0,0               ;counter for LED
0096   1463           00404         bsf             LEDcounter1,0               ;forward motor counters
0097   1464           00405         bsf             LEDcounter2,0
0098   1465           00406         bsf             LEDcounter3,0               
0099   1466           00407         bsf             LEDcounter4,0               ;backward motor counters
009A   1467           00408         bsf             LEDcounter5,0       
009B   1468           00409         bsf             LEDcounter7,0               ;pwm counters
009C   1469           00410         bsf             LEDcounter8,0               
                      00411         
009D   01F1           00412         clrf            hour1
009E   01F2           00413         clrf            hour2
009F   01F3           00414         clrf            min1
00A0   01F4           00415         clrf            min2
00A1   01F5           00416         clrf            sec1
00A2   01F6           00417         clrf            sec2
                      00418         
00A3   1287           00419         bcf             Std1                        ;use this one for negative for when need to move ful
                            l motor                 
00A4   1707           00420         bsf             Std2
00A5   1007           00421         bcf             Std1Backwards
00A6   1787           00422         bsf             Std2Backwards
00A7   1507           00423         bsf             PORTC,2             
00A8   1487           00424         bsf             PORTC,1                 ; PWM now negative, so start by clearing
                      00425         
                      00426         ;trying to fix the switch bs
00A9   1106           00427         bcf             SwitchWhite
00AA   1186           00428         bcf             SwitchArm
                      00429 
                      00430 ;*************************************
                      00431 ;       Keypad and LCD forms        
                      00432 ;*************************************
                      00433         
00AB   1C86           00434 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
00AC   2???           00435                 goto            $-1 
                      00436 
00AD   0E06           00437                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AE   390F           00438                 andlw           0x0F
00AF   00B9           00439                 movwf           temp
                      00440                 
                      00441                 Key     0x00, TOTAL
00B0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B1   390F               M          andlw          0x0F
00B2   3A00               M          xorlw          0x00
00B3   1903               M          btfsc          STATUS, Z
00B4   2???               M          call           TOTAL
                      00442                 Key     0x01, DisplayBlackWhiteIR1
00B5   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B6   390F               M          andlw          0x0F
00B7   3A01               M          xorlw          0x01
00B8   1903               M          btfsc          STATUS, Z
00B9   2???               M          call           DisplayBlackWhiteIR1
                      00443                 Key     0x02, DisplayBlackWhiteIR2
00BA   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BB   390F               M          andlw          0x0F
00BC   3A02               M          xorlw          0x02
00BD   1903               M          btfsc          STATUS, Z
00BE   2???               M          call           DisplayBlackWhiteIR2
                      00444                 Rotation        0x03
00BF   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C0   390F               M          andlw          0x0F
00C1   3A03               M          xorlw          0x03
00C2   1903               M          btfsc          STATUS, Z
00C3   2???               M          call           ShiftLeft
                      00445                 Key     0x04, EXIT
00C4   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C5   390F               M          andlw          0x0F
00C6   3A04               M          xorlw          0x04
00C7   1903               M          btfsc          STATUS, Z
00C8   2???               M          call           EXIT
                      00446                 Key     0x05, Read1_US
00C9   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00CA   390F               M          andlw          0x0F
00CB   3A05               M          xorlw          0x05
00CC   1903               M          btfsc          STATUS, Z
00CD   2???               M          call           Read1_US
                      00447                 Key     0x06, Read2_US
00CE   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00CF   390F               M          andlw          0x0F
00D0   3A06               M          xorlw          0x06
00D1   1903               M          btfsc          STATUS, Z
00D2   2???               M          call           Read2_US
                      00448                 Key     0x07, set_rtc_time
00D3   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D4   390F               M          andlw          0x0F
00D5   3A07               M          xorlw          0x07
00D6   1903               M          btfsc          STATUS, Z
00D7   2???               M          call           set_rtc_time
                      00449                 Key     0x08, Stickers1
00D8   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D9   390F               M          andlw          0x0F
00DA   3A08               M          xorlw          0x08
00DB   1903               M          btfsc          STATUS, Z
00DC   2???               M          call           Stickers1
                      00450                 Key     0x09, LEDControlON
00DD   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00DE   390F               M          andlw          0x0F
00DF   3A09               M          xorlw          0x09
00E0   1903               M          btfsc          STATUS, Z
00E1   2???               M          call           LEDControlON
                      00451                 Key     0x0A, CHECKSWITCH               
00E2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00E3   390F               M          andlw          0x0F
00E4   3A0A               M          xorlw          0x0A
00E5   1903               M          btfsc          STATUS, Z
00E6   2???               M          call           CHECKSWITCH
                      00452                 Key     0x0C, StdRotation2
00E7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00E8   390F               M          andlw          0x0F
00E9   3A0C               M          xorlw          0x0C
00EA   1903               M          btfsc          STATUS, Z
00EB   2???               M          call           StdRotation2
                      00453                 Key     0x0D, StdRotation2Backwards
00EC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00ED   390F               M          andlw          0x0F
00EE   3A0D               M          xorlw          0x0D
00EF   1903               M          btfsc          STATUS, Z
00F0   2???               M          call           StdRotation2Backwards
                      00454                 Key     0x0E, PWMFWD
00F1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00F2   390F               M          andlw          0x0F
00F3   3A0E               M          xorlw          0x0E
00F4   1903               M          btfsc          STATUS, Z
00F5   2???               M          call           PWMFWD
                      00455                 Key     0x0F, PWMBACK
00F6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00F7   390F               M          andlw          0x0F
00F8   3A0F               M          xorlw          0x0F
00F9   1903               M          btfsc          STATUS, Z
00FA   2???               M          call           PWMBACK
00FB   1886           00456                 btfsc           PORTB,1     ;Wait until key is released
00FC   2???           00457                 goto            $-1
00FD   2???           00458                 goto            KeypadandLCD
                      00459                 
00FE                  00460 goback
00FE   0008           00461                 return  
                      00462         
                      00463 
                      00464 ;*******************************************************************************************************
                            *******************************************
                      00465 ;                                                                 MAIN CODE
                      00466 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00467 
00FF                  00468 AVOIDCOLUMN1
                      00469     
00FF   1287           00470     bcf     Std1                ;motor will stop move fwd
                      00471     
                      00472     ;WORKSSSSSSSSSSSSSSSSSSSSSSSSSSSS
0100   1307           00473     bcf     Std2                ; start white thing fwd
0101   2???           00474     call    HalfS       
0102   1906           00475     btfsc   SwitchWhite
0103   2???           00476     goto    $-2
0104   2???           00477     call    lcdLongDelay
0105   1D06           00478     btfss   SwitchWhite
0106   2???           00479     goto    $-2
                      00480     
0107   1707           00481     bsf     Std2                   ; stop white thing fwd
                      00482     
0108   2???           00483      call    HalfS
0109   2???           00484     call    HalfS
010A   2???           00485      call    HalfS
010B   2???           00486     call    HalfS
                      00487     
010C   2???           00488     call    PWMFWD          ;start arm forward
010D   2???           00489     call    HalfS       
010E   1986           00490     btfsc   SwitchArm
010F   2???           00491     goto    $-2
0110   2???           00492     call    lcdLongDelay
0111   1D86           00493     btfss   SwitchArm
0112   2???           00494     goto    $-2
                      00495     
0113   2???           00496     call    PWMFWD          ;stop arm forward
                      00497     
0114   0008           00498     return
                      00499     
                      00500 ;-------------------------------------------------
                      00501     
0115                  00502 AVOIDCOLUMN2
                      00503     
0115   1687           00504     bsf     Std1                ;move forward until no more column in the way
                      00505     
0116   2???           00506     call    OneS
0117   2???           00507     call    OneS
0118   2???           00508     call    OneS
0119   2???           00509     call    OneS
011A   2???           00510     call    OneS
                      00511     ;wait to see the thing
011B   2???           00512     call    Read2_US            ;checks to see if bin present
011C   3008           00513     movlw   0x8         ; read the bin
011D   028F           00514     subwf   TMR1H
011E   1803           00515     btfsc   STATUS,C
011F   2???           00516     goto    $-4
0120   2???           00517     call    Read2_US            ;checks to see if bin present
0121   3006           00518     movlw   0x6         ; read the bin
0122   028F           00519     subwf   TMR1H
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0123   1C03           00520     btfss   STATUS,C
0124   2???           00521     goto    $-4
0125   2???           00522     call    RETURNFROMCOLUMN
0126   2???           00523     call    READBIN     
0127   2???           00524     goto    ENDTHIS
                      00525 
                      00526     
0128                  00527 RETURNFROMCOLUMN
                      00528     
0128   1287           00529     bcf     Std1
                      00530     
0129   2???           00531     call    PWMBACK         ;start arm BACK
012A   2???           00532     call    HalfS
012B   1D86           00533     btfss   SwitchArm
012C   2???           00534     goto    $-1
                      00535     
012D   2???           00536     call    PWMBACK         ;stop arm BACK
                      00537         
012E   2???           00538     call    HalfS
012F   2???           00539     call    HalfS
                      00540     
0130   1387           00541     bcf     Std2Backwards
0131   2???           00542     call    HalfS
0132   1D06           00543     btfss   SwitchWhite
0133   2???           00544     goto    $-1 
                      00545     
0134   1787           00546     bsf     Std2Backwards
                      00547     
0135   1687           00548     bsf     Std1            ; make it start moving right after column
                      00549     
0136   0008           00550     return
                      00551     
0137                  00552 READBIN
0137   1406           00553     bsf     LED
0138   1287           00554     bcf     Std1
0139   2???           00555     call    AddBin              ;adds bin to list
                      00556     
013A   2???           00557     call    Dist_Decoder        ; stores the distance
                      00558     Put_Dist_In_Reg     distreg
013B   ???? ???? 2???     M         lcall   Dist_Decoder
013E   086A               M         movfw   cm
013F   00ED               M         movwf   distreg
                      00559     Display_Dist        distreg
                          M     MOV     distreg,      temp  ; Bin_Dist_reg --> temp
0140   086D               M     MOVF  distreg,W     ; move reg1 into working register
0141   00B9               M     MOVWF   temp        ; reg2 <- reg1
0142   2???               M     call    Distance_Display
0143   2???           00560     call    StoreThisTick
                      00561     
0144   2???           00562     call    Clear_Display    
                      00563     
                      00564         
0145   2???           00565     call    DisplayBlackWhiteIR1        ;warms up IR
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0146   2???           00566     call    DisplayBlackWhiteIR1        ;warms up IR  
0147   2???           00567     call    StoreBW1            ;reads & stores first IR data
                      00568     
                      00569 ;*****THRESHHOLD TEST ON IR 1************
                      00570 ;    nothing in front: 02056
                      00571 ;    black in front: 10000-41000
                      00572 ;    white in front: >60000
                      00573     
                      00574     ;READ 2 ALGORITHM IMPLEMENT HERE
                      00575     
0148   2???           00576     call    HalfS
0149   2???           00577     call    HalfS
014A   2???           00578     call    HalfS
014B   2???           00579     call    HalfS
                      00580     
014C   2???           00581     call    Clear_Display
                      00582     
014D   2???           00583     call    DisplayBlackWhiteIR2        ;warms up IR
014E   2???           00584     call    DisplayBlackWhiteIR2        ;warms up IR
014F   2???           00585     call    StoreBW2
                      00586     
0150   2???           00587     call    HalfS
0151   2???           00588     call    HalfS
                      00589     
0152   1006           00590     bcf     LED
                      00591     
0153   0008           00592     return
                      00593     
                      00594     ;goto    EXIT    
                      00595      
                      00596     
0154                  00597 TOTAL
                      00598     
0154   2???           00599     call    Read1_US            ;warms up us sensors that was weird
0155   2???           00600     call    Read2_US
                      00601    
0156                  00602 TOTAL1
                      00603     
0156   1687           00604     bsf     Std1                ;moving
0157   01EF           00605     clrf    count_highs         ;reset the high value counter
                      00606     
0158                  00607 COLREADINGSTART
0158   2???           00608     call    Read1_US            ;checks to see if column present
                      00609     
                      00610 ;********THRESHOLD CALCULATION FOR COLUMN**************:
                      00611 ;   At around cm from col, reading: 02303
                      00612 ;       So, this will be the max value.
                      00613 ;       To be safe, will minus 02603 from the TMR variables.
                      00614 ;       This means, subtract 0x4 from TMR1H 
                      00615 ;       Value before at integration was 0x14, now trying 0x4
                      00616 ;       THE FOLLOWING CODE COUNTS 3 HIGHS
                      00617     
0159   300F           00618     movlw   0xF         ; if column present, it'll move forward
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015A   028F           00619     subwf   TMR1H
015B   1803           00620     btfsc   STATUS,C        
015C   2???           00621     goto    $+8
015D   0AEF           00622     incf    count_highs
015E   3003           00623     movlw   MAX_HIGHS
015F   026F           00624     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
0160   1D03           00625     btfss   STATUS,Z                ; if result is zero, Z bit is set.
0161   2???           00626     goto    COLREADINGSTART
0162   2???           00627     call    AVOIDCOLUMN1
0163   2???           00628     call    AVOIDCOLUMN2
                      00629     
0164   01EF           00630     clrf    count_highs         ;reset the high value counter
                      00631  
0165                  00632 BINREADINGSTART
                      00633     
0165   1687           00634     bsf     Std1                ;gotta always be moving
                      00635     
0166   2???           00636     call    Read2_US            ;checks to see if bin present
                      00637     
                      00638 ;********THRESHOLD CALCULATION FOR BIN**************:
                      00639 ;   At around 6cm from white bin, reading: 01103
                      00640 ;       So, this will be the max value.
                      00641 ;       To be safe, will minus 01210 from the TMR variables.
                      00642 ;       This means, subtract 0x4 from TMR1H 
                      00643 ;       Value before at integration was 0x14, now trying 0x4
                      00644 ;       CODE COUNTS 3 HIGHS
                      00645 
                      00646     
0167   3008           00647     movlw   0x8         ; read the bin
0168   028F           00648     subwf   TMR1H
0169   1803           00649     btfsc   STATUS,C
016A   2???           00650     goto    $+8
016B   0AEF           00651     incf    count_highs
016C   2???           00652     call    lcdLongDelay
016D   3003           00653     movlw   MAX_HIGHS
016E   026F           00654     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
016F   1D03           00655     btfss   STATUS,Z                ; if result is zero, Z bit is set.
0170   2???           00656     goto    BINREADINGSTART
0171   2???           00657     call    DELAYEDREAD
                      00658 
0172   2???           00659     goto    ENDTHIS   
                      00660     
0173                  00661 DELAYEDREAD
0173   2???           00662     call    DELAY1              ; do a 0.25s delay in order to move it forward a lil
0174   2???           00663     call    Read2_US            ;checks to see if bin present
0175   3006           00664     movlw   0x6         ; read the bin
0176   028F           00665     subwf   TMR1H
0177   1C03           00666     btfss   STATUS,C
0178   2???           00667     goto    DELAYEDREAD
0179   2???           00668     call    READBIN
017A   1006           00669     bcf     LED                 ; turn off LED After reading    
017B                  00670 ENDTHIS       
017B   3007           00671     movlw       0X7                     ;checks if max of 7 bins has been reached
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017C   0260           00672     subwf       NumOfBins1,W            
017D   1903           00673     btfsc       STATUS,Z
017E   2???           00674     goto        EXIT
                      00675     
017F   0801           00676     movfw       TMR0                    ;checks if max ticks has been reached
0180   0248           00677     subwf       MAX_TICKS,W
0181   1903           00678     btfsc       STATUS,Z
0182   2???           00679     goto        EXIT
                      00680     
0183   2???           00681     goto        TOTAL1    
                      00682     
0184                  00683 CHECKSWITCH
                      00684     ;WORKSSSSSSSSSSSSSSSSSSSSSSSSSSSS
0184   1307           00685     bcf     Std2                ; start white thing fwd
0185   2???           00686     call    HalfS       
0186   1906           00687     btfsc   SwitchWhite
0187   2???           00688     goto    $-2
0188   2???           00689     call    lcdLongDelay
0189   1D06           00690     btfss   SwitchWhite
018A   2???           00691     goto    $-2
                      00692     
                      00693    
018B   1707           00694     bsf     Std2                   ; stop white thing fwd
                      00695     
018C   0008           00696     return
                      00697 
018D                  00698 EXIT
                      00699     
018D   1287           00700     bcf         Std1
018E   2???           00701     call        AVOIDCOLUMN1     ;RETRACT ARM
018F   1407           00702     bsf         Std1Backwards
                      00703     
                      00704     ;add delays
0190   2???           00705     call        DELAY2
                      00706 
0191   1007           00707     bcf         Std1Backwards
                      00708     
0192   2???           00709     call        Clear_Display
                      00710     Display     FinalMessage     ;display final interface for choosing stuff
  0000                    M                 local   loop_
  0000                    M                 local   end_
0193   01B3               M                 clrf    Table_Counter
0194   0103               M                 clrw            
0195   0833               M loop_   movf    Table_Counter,W
0196   2???               M                 call    FinalMessage
0197   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0198   1903               M                 btfsc   STATUS,Z
0199   2???               M                         goto    end_
019A   2???               M                 call    WR_DATA
019B   0AB3               M                 incf    Table_Counter,F
019C   2???               M                 goto    loop_
019D                      M end_
019D   2???           00711     call        Switch_Lines
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019E   2???           00712     call        show_RTC
                      00713     
019F   2???           00714     goto        EXITDISPLAY
                      00715     
                      00716 
                      00717 
01A0   1C86           00718 EXITDISPLAY     btfss           PORTB,1     ;Wait until data is available from the keypad
01A1   2???           00719                 goto            $-1 
                      00720 
01A2   0E06           00721                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
01A3   390F           00722                 andlw           0x0F
01A4   00B9           00723                 movwf           temp
                      00724                 Key     0x00, Stickers1
01A5   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01A6   390F               M          andlw          0x0F
01A7   3A00               M          xorlw          0x00
01A8   1903               M          btfsc          STATUS, Z
01A9   2???               M          call           Stickers1
                      00725                 Key     0x01, ShowBins
01AA   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01AB   390F               M          andlw          0x0F
01AC   3A01               M          xorlw          0x01
01AD   1903               M          btfsc          STATUS, Z
01AE   2???               M          call           ShowBins
                      00726                 Key     0x02, Locations
01AF   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01B0   390F               M          andlw          0x0F
01B1   3A02               M          xorlw          0x02
01B2   1903               M          btfsc          STATUS, Z
01B3   2???               M          call           Locations
                      00727                 Rotation        0x03
01B4   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01B5   390F               M          andlw          0x0F
01B6   3A03               M          xorlw          0x03
01B7   1903               M          btfsc          STATUS, Z
01B8   2???               M          call           ShiftLeft
                      00728                 Key     0x04, show_RTC
01B9   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01BA   390F               M          andlw          0x0F
01BB   3A04               M          xorlw          0x04
01BC   1903               M          btfsc          STATUS, Z
01BD   2???               M          call           show_RTC
01BE   1886           00729                 btfsc           PORTB,1     ;Wait until key is released
01BF   2???           00730                 goto            $-1
01C0   2???           00731                 goto            EXITDISPLAY
                      00732 
01C1   2???           00733     goto    EXIT
                      00734     
01C2                  00735 MoveBackwards
                      00736     
01C2   2???           00737     call    PWMSTOP
                      00738     
                      00739         
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00740 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00741 
                      00742 ;*********************************************************
                      00743 ; A to D conversion with LCD display for IR sensor
                      00744 ;*********************************************************
                      00745         
                      00746 ;******************************************
                      00747 ;       Sticker Print Modules
                      00748 ;*****************************************
                      00749         
01C3                  00750 BWScanModule1
                      00751 
01C3   151F           00752         bsf     ADCON0,2                ;start conversion and wait for it to complete
01C4   191F           00753         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01C5   2???           00754         goto    $-1
                      00755         
01C6   081E           00756         movf    ADRESH, W
01C7   00D1           00757         movwf   NumH
01C8   081E           00758         movf    ADRESL, W
01C9   00D2           00759         movwf   NumL
01CA   2???           00760         call    Clear_Display
01CB   2???           00761         call    bin16_BCD
                      00762         PrintNumber     TenK
                          M         ;movf       number ,W
01CC   0853               M         movfw       TenK
01CD   2???               M         call        DectoChar
01CE   2???               M         call        WR_DATA
                      00763         PrintNumber     Thou
                          M         ;movf       number ,W
01CF   0854               M         movfw       Thou
01D0   2???               M         call        DectoChar
01D1   2???               M         call        WR_DATA
                      00764         PrintNumber     Hund
                          M         ;movf       number ,W
01D2   0855               M         movfw       Hund
01D3   2???               M         call        DectoChar
01D4   2???               M         call        WR_DATA
                      00765         PrintNumber     Tens
                          M         ;movf       number ,W
01D5   0856               M         movfw       Tens
01D6   2???               M         call        DectoChar
01D7   2???               M         call        WR_DATA
                      00766         PrintNumber     Ones
                          M         ;movf       number ,W
01D8   0857               M         movfw       Ones
01D9   2???               M         call        DectoChar
01DA   2???               M         call        WR_DATA
01DB   0008           00767         return
01DC                  00768 BWStoreModule1
01DC   1383           00769         BCF     STATUS, IRP
01DD   3042           00770         movlw   0x42
01DE   0084           00771         movwf   FSR
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DF   3000           00772         movlw   0X0
01E0   0360           00773         decf    NumOfBins1,W            ;want bin number to be decreased when back checks it
01E1   0784           00774         addwf   FSR,F
01E2   3055           00775         movlw   0X55                    ; roughly 21000
01E3   02D1           00776         subwf   NumH
01E4   3000           00777         movlw   0x0
01E5   1803           00778         btfsc   STATUS, C
01E6   3001           00779         movlw   0x1
01E7   0080           00780         movwf   INDF
01E8   0008           00781         return  
                      00782         
01E9                  00783 BWScanModule2
                      00784 
01E9   151F           00785         bsf     ADCON0,2                ;start conversion and wait for it to complete
01EA   191F           00786         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01EB   2???           00787         goto    $-1
                      00788         
01EC   081E           00789         movf    ADRESH, W
01ED   00D1           00790         movwf   NumH
01EE   081E           00791         movf    ADRESL, W
01EF   00D2           00792         movwf   NumL
01F0   2???           00793         call    Clear_Display
01F1   2???           00794         call    bin16_BCD
                      00795         PrintNumber     TenK
                          M         ;movf       number ,W
01F2   0853               M         movfw       TenK
01F3   2???               M         call        DectoChar
01F4   2???               M         call        WR_DATA
                      00796         PrintNumber     Thou
                          M         ;movf       number ,W
01F5   0854               M         movfw       Thou
01F6   2???               M         call        DectoChar
01F7   2???               M         call        WR_DATA
                      00797         PrintNumber     Hund
                          M         ;movf       number ,W
01F8   0855               M         movfw       Hund
01F9   2???               M         call        DectoChar
01FA   2???               M         call        WR_DATA
                      00798         PrintNumber     Tens
                          M         ;movf       number ,W
01FB   0856               M         movfw       Tens
01FC   2???               M         call        DectoChar
01FD   2???               M         call        WR_DATA
                      00799         PrintNumber     Ones
                          M         ;movf       number ,W
01FE   0857               M         movfw       Ones
01FF   2???               M         call        DectoChar
0200   2???               M         call        WR_DATA
0201   0008           00800         return
0202                  00801 BWStoreModule2
0202   1383           00802         BCF     STATUS, IRP
0203   3049           00803         movlw   0x49                    ;number 49 to try to get registers for back of bin
0204   0084           00804         movwf   FSR
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0205   3000           00805         movlw   0X0
0206   0360           00806         decf    NumOfBins1,W
0207   0784           00807         addwf   FSR,F
0208   3003           00808         movlw   0X3
0209   02D1           00809         subwf   NumH
020A   3000           00810         movlw   0x0
020B   1803           00811         btfsc   STATUS, C
020C   3001           00812         movlw   0x1
020D   0080           00813         movwf   INDF
020E   0008           00814         return  
                      00815         
                      00816 ;***************************************************
                      00817 ;       US Sensor Modules                           [TESTED]
                      00818 ;***************************************************
                      00819         
020F                  00820 Read1_US                    
                      00821          
                      00822         ;call           Read1_US1 
                      00823          
                      00824         ReadUltrasonic  UST1,US1E1
020F   018F               M     clrf        TMR1H
0210   018E               M     clrf        TMR1L
                          M 
0211   1008               M     bcf PORTD,   0                      ;make sure trigger is clear
0212   2???               M     call lcdLongDelay
                          M 
0213   1408               M     bsf PORTD,   0              ;trigger high, bottom sensor
0214   2???               M     call lcdLongDelay           ;10us delay
0215   1008               M     bcf PORTD,   0              ;trigger low
                          M 
0216   1D05               M     btfss       PORTA, 2                ;wait for echo to go high
0217   2???               M     goto        $-1
0218   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
0219   1905               M     btfsc       PORTA, 2                ;wait for echo to go low
021A   2???               M     goto        $-1
                          M 
021B   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00825         
021C   2???           00826         call            Clear_Display
                      00827         
021D   080F           00828         movf            TMR1H, W
021E   00D1           00829         movwf           NumH
021F   080E           00830         movf            TMR1L, W
0220   00D2           00831         movwf           NumL
                      00832         
0221   2???           00833         call            bin16_BCD
                      00834         
                      00835         PrintNumber     TenK
                          M         ;movf       number ,W
0222   0853               M         movfw       TenK
0223   2???               M         call        DectoChar
0224   2???               M         call        WR_DATA
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00836         PrintNumber     Thou
                          M         ;movf       number ,W
0225   0854               M         movfw       Thou
0226   2???               M         call        DectoChar
0227   2???               M         call        WR_DATA
                      00837 ;       PrintNumber     Hund
                      00838 ;       PrintNumber     Tens
                      00839 ;       PrintNumber     Ones
0228   2???           00840         call            Clear_Display
0229   0008           00841         return
                      00842 
022A                  00843 Read2_US                    
                      00844          
                      00845         ;call           Read2_US1 
                      00846         
                      00847         ReadUltrasonic  UST2,US1E2
022A   018F               M     clrf        TMR1H
022B   018E               M     clrf        TMR1L
                          M 
022C   1088               M     bcf PORTD,   1                      ;make sure trigger is clear
022D   2???               M     call lcdLongDelay
                          M 
022E   1488               M     bsf PORTD,   1              ;trigger high, bottom sensor
022F   2???               M     call lcdLongDelay           ;10us delay
0230   1088               M     bcf PORTD,   1              ;trigger low
                          M 
0231   1D85               M     btfss       PORTA, 3                ;wait for echo to go high
0232   2???               M     goto        $-1
0233   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
0234   1985               M     btfsc       PORTA, 3                ;wait for echo to go low
0235   2???               M     goto        $-1
                          M 
0236   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00848          
0237   2???           00849         call            Clear_Display
                      00850         
0238   080F           00851         movf            TMR1H, W
0239   00D1           00852         movwf           NumH
023A   080E           00853         movf            TMR1L, W
023B   00D2           00854         movwf           NumL
                      00855         
023C   2???           00856         call            bin16_BCD
                      00857         
                      00858         PrintNumber     TenK
                          M         ;movf       number ,W
023D   0853               M         movfw       TenK
023E   2???               M         call        DectoChar
023F   2???               M         call        WR_DATA
                      00859         PrintNumber     Thou
                          M         ;movf       number ,W
0240   0854               M         movfw       Thou
0241   2???               M         call        DectoChar
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0242   2???               M         call        WR_DATA
                      00860 ;       PrintNumber     Hund
                      00861 ;       PrintNumber     Tens
                      00862 ;       PrintNumber     Ones
0243   2???           00863         call            Clear_Display
0244   0008           00864         return
                      00865                 
                      00866 ;*******************************************************
                      00867 ; Dist_Decoder
                      00868 ;   input:  temp (holds bin_dist_reg)
                      00869 ;   output: cm, mm, m
                      00870 ;   Desc:   Converts the count in the rotary encoder
                      00871 ;           into physical distance
                      00872 ;*******************************************************
0245                  00873 Dist_Decoder
                      00874         ; Initalize all registers
0245   01EA           00875         clrf    cm              
0246   01EB           00876         clrf    mm
0247   01EC           00877         clrf    m
                      00878 
                      00879         ; Check if its already zero
0248   0839           00880         movfw   temp
0249   3C00           00881         sublw   D'0'
024A   1903           00882         btfsc   STATUS, Z
024B   0008           00883         return
                      00884         
024C                  00885 Decode_loop                     ; Assume each step is 3.6 cm
                      00886         ; Perform decode
                      00887         ADDL    cm, cm, D'5'        ;perimeter of 2*pi
024C   3005               M     MOVLW  D'5'         ; move literal into working register
024D   076A               M     ADDWF   cm,W        ; W <- literal + reg
024E   00EA               M     MOVWF   cm          ; Destination <- literal + reg
                      00888         ADDL    mm, mm, D'9'
024F   3009               M     MOVLW  D'9'         ; move literal into working register
0250   076B               M     ADDWF   mm,W        ; W <- literal + reg
0251   00EB               M     MOVWF   mm          ; Destination <- literal + reg
0252   03B9           00889         decf    temp
                      00890         
0253                  00891 Check_mm_overflow
                      00892         ; Test if mm has overflowed! (mm >= 10)
0253   300A           00893         movlw   D'10'
0254   026B           00894         subwf   mm, w           ; mm - 10 --> w (w = f - w, when d = 0) 
0255   1803           00895         btfsc   STATUS, C       ; Y = mm, w = 10, Y-w
0256   2???           00896         goto    mm_overflow     ; Run overflow routine if it did overflow
                      00897         
0257                  00898 Check_cm_overflow       
                      00899         ; Test if cm has overflowed! (cm >= 100)
0257   086A           00900         movfw   cm
0258   00F0           00901         movwf   temp_2
0259   3064           00902         movlw   D'100'
025A   0270           00903         subwf   temp_2, w       ; cm - 100 --> w (w = f - w, when d = 0) 
025B   1803           00904         btfsc   STATUS, C       ; Y = cm, w = 100, Y-w
025C   2???           00905         goto    cm_overflow     ; Run overflow routine if it did overflow
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00906 
025D                  00907 Decode_check_done       
                      00908         ; Test if done decoding 
025D   0839           00909         movfw   temp
025E   3C00           00910         sublw   D'0'            ; MAKE THIS A LARGER NUMBER TO ACCOUNT FOR 
025F   1D03           00911         btfss   STATUS, Z       ; DIFFERENCE IN DISTANCE
0260   2???           00912         goto    Decode_loop
0261   0008           00913         return  
                      00914         
0262                  00915 mm_overflow
0262   0AEA           00916         incf    cm              ; cm + 1 --> cm
0263   300A           00917         movlw   D'10'           ; 10 --> w
0264   02EB           00918         subwf   mm, f           ; mm - 10 --> mm (f = f - w, when d = 1) 
0265   2???           00919         goto    Decode_check_done       ; Check cm overflow
                      00920         
0266                  00921 cm_overflow
0266   0AEC           00922         incf    m               ; m + 1 --> m
0267   3064           00923         movlw   D'100'          ; 100 --> w
0268   02EA           00924         subwf   cm, f           ; cm - 100 --> cm (f = f - w, when d = 1) 
0269   2???           00925         goto    Decode_check_done       ; Continue decoding
                      00926         
026A                  00927 StoreThisTick
026A   1383           00928         BCF     STATUS, IRP
026B   303B           00929         movlw   0x3B                    ;number 56 to try to get location registers in cblock
026C   0084           00930         movwf   FSR
026D   3000           00931         movlw   0X0
026E   0360           00932         decf    NumOfBins1,W
026F   0784           00933         addwf   FSR,F
0270   0801           00934         movfw   TMR0            ; poll encoder for current state
0271   00B9           00935         movwf   temp
0272   0080           00936         movwf   INDF
                      00937         
0273   0008           00938         return
                      00939 ;*********************************************
                      00940 ; Keypad Modules
                      00941 ;*******************************************
                      00942          
                      00943 
0274                  00944 ShiftLeft
0274   3018           00945         movlw           b'00011000'             ;Move to the left
0275   2???           00946         call            WR_INS
0276   0008           00947         return
                      00948 
0277   2???           00949         goto    KeypadandLCD
                      00950         
0278                  00951 RTCDisplay
0278   2???           00952         call    show_RTC
                      00953         
0279   1886           00954         btfsc           PORTB,1     ;Wait until data is available from the keypad
027A   0008           00955         return
027B   1886           00956         btfsc           PORTB,1     ;Wait until data is available from the keypad
027C   0008           00957         return
027D   1886           00958         btfsc           PORTB,1     ;Wait until data is available from the keypad
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027E   0008           00959         return
027F   1886           00960         btfsc           PORTB,1     ;Wait until data is available from the keypad
0280   0008           00961         return
0281   2???           00962         goto        RTCDisplay
                      00963         
0282                  00964 StoreBW1
0282   1283           00965         bcf     STATUS,RP0
0283   30C5           00966         movlw   b'11000101'             
0284   009F           00967         movwf   ADCON0                  ;choose RA0
                      00968         
0285   2???           00969         call    BWScanModule1   
0286   2???           00970         call    BWStoreModule1
                      00971         
0287   0008           00972         return                          ; why was there not a return here before?
                      00973         
0288                  00974 StoreBW2
0288   1283           00975         bcf     STATUS,RP0
0289   30CD           00976         movlw   b'11001101'             
028A   009F           00977         movwf   ADCON0                  ;choose RA1
                      00978         
028B   2???           00979         call    BWScanModule2
028C   2???           00980         call    BWStoreModule2
                      00981         
028D   0008           00982         return
                      00983         
028E                  00984 AddBin
028E   2???           00985         Call Clear_Display
028F   0AE0           00986         incf    NumOfBins1,F
                      00987         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
0290   0860               M         movfw       NumOfBins1
0291   2???               M         call        DectoChar
0292   2???               M         call        WR_DATA
0293   3008           00988         movlw   0X8                     ;checks if max of 7 bins has been reached
0294   0260           00989         subwf   NumOfBins1,W            
0295   1903           00990         btfsc   STATUS,Z
0296   2???           00991         goto    EXIT
0297   0008           00992         return
                      00993         
0298                  00994 ShowBins
0298   2???           00995         call            Clear_Display
                      00996         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
0299   0860               M         movfw       NumOfBins1
029A   2???               M         call        DectoChar
029B   2???               M         call        WR_DATA
029C   0008           00997         return
                      00998         
029D                  00999 Stickers1                   ;TESTED
029D   2???           01000         call            Clear_Display
029E   3000           01001         movlw           0X0
029F   00DF           01002         movwf           counter
02A0   1383           01003         BCF             STATUS, IRP
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A1   3041           01004         movlw           0x41
02A2   0084           01005         movwf           FSR
02A3   0860           01006         movfw           NumOfBins1
02A4   00DE           01007         movwf           countdown
                      01008         Display         FrontStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02A5   01B3               M                 clrf    Table_Counter
02A6   0103               M                 clrw            
02A7   0833               M loop_   movf    Table_Counter,W
02A8   2???               M                 call    FrontStickers
02A9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02AA   1903               M                 btfsc   STATUS,Z
02AB   2???               M                         goto    end_
02AC   2???               M                 call    WR_DATA
02AD   0AB3               M                 incf    Table_Counter,F
02AE   2???               M                 goto    loop_
02AF                      M end_
02AF                  01009 FrontLoop1      
02AF   0A84           01010         INCF            FSR,1
02B0   0ADF           01011         incf            counter
                      01012         PrintNumber     counter
                          M         ;movf       number ,W
02B1   085F               M         movfw       counter
02B2   2???               M         call        DectoChar
02B3   2???               M         call        WR_DATA
                      01013         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02B4   01B3               M                 clrf    Table_Counter
02B5   0103               M                 clrw            
02B6   0833               M loop_   movf    Table_Counter,W
02B7   2???               M                 call    Colon
02B8   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02B9   1903               M                 btfsc   STATUS,Z
02BA   2???               M                         goto    end_
02BB   2???               M                 call    WR_DATA
02BC   0AB3               M                 incf    Table_Counter,F
02BD   2???               M                 goto    loop_
02BE                      M end_
02BE   0800           01014         movfw           INDF
                      01015         PrintCol        W
02BF   0800               M         movfw       W
02C0   2???               M         call        StickerColours
02C1   2???               M         call        WR_DATA
                      01016         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02C2   01B3               M                 clrf    Table_Counter
02C3   0103               M                 clrw            
02C4   0833               M loop_   movf    Table_Counter,W
02C5   2???               M                 call    Spacee
02C6   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C7   1903               M                 btfsc   STATUS,Z
02C8   2???               M                         goto    end_
02C9   2???               M                 call    WR_DATA
02CA   0AB3               M                 incf    Table_Counter,F
02CB   2???               M                 goto    loop_
02CC                      M end_
02CC   0BDE           01017         decfsz          countdown,F
02CD   2???           01018         goto            FrontLoop1
                      01019         
02CE   2???           01020         call            Switch_Lines
                      01021         
02CF                  01022 Stickers2                       ;TESTED
                      01023         
02CF   3000           01024         movlw           0X0
02D0   00DF           01025         movwf           counter
02D1   1383           01026         BCF             STATUS, IRP
02D2   3048           01027         movlw           0x48
02D3   0084           01028         movwf           FSR
02D4   0860           01029         movfw           NumOfBins1
02D5   00DE           01030         movwf           countdown
                      01031         Display         BackStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02D6   01B3               M                 clrf    Table_Counter
02D7   0103               M                 clrw            
02D8   0833               M loop_   movf    Table_Counter,W
02D9   2???               M                 call    BackStickers
02DA   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02DB   1903               M                 btfsc   STATUS,Z
02DC   2???               M                         goto    end_
02DD   2???               M                 call    WR_DATA
02DE   0AB3               M                 incf    Table_Counter,F
02DF   2???               M                 goto    loop_
02E0                      M end_
02E0                  01032 FrontLoop2
02E0   0A84           01033         INCF            FSR,1
02E1   0ADF           01034         incf            counter
                      01035         PrintNumber     counter
                          M         ;movf       number ,W
02E2   085F               M         movfw       counter
02E3   2???               M         call        DectoChar
02E4   2???               M         call        WR_DATA
                      01036         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02E5   01B3               M                 clrf    Table_Counter
02E6   0103               M                 clrw            
02E7   0833               M loop_   movf    Table_Counter,W
02E8   2???               M                 call    Colon
02E9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02EA   1903               M                 btfsc   STATUS,Z
02EB   2???               M                         goto    end_
02EC   2???               M                 call    WR_DATA
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02ED   0AB3               M                 incf    Table_Counter,F
02EE   2???               M                 goto    loop_
02EF                      M end_
02EF   0800           01037         movfw           INDF
                      01038         PrintCol        W
02F0   0800               M         movfw       W
02F1   2???               M         call        StickerColours
02F2   2???               M         call        WR_DATA
                      01039         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02F3   01B3               M                 clrf    Table_Counter
02F4   0103               M                 clrw            
02F5   0833               M loop_   movf    Table_Counter,W
02F6   2???               M                 call    Spacee
02F7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02F8   1903               M                 btfsc   STATUS,Z
02F9   2???               M                         goto    end_
02FA   2???               M                 call    WR_DATA
02FB   0AB3               M                 incf    Table_Counter,F
02FC   2???               M                 goto    loop_
02FD                      M end_
02FD   0BDE           01040         decfsz          countdown,F
02FE   2???           01041         goto            FrontLoop2
                      01042         
02FF   0008           01043         return
                      01044         
0300                  01045 Locations                       ;TESTED
0300   2???           01046         call            Clear_Display
0301   3000           01047         movlw           0X0
0302   00DF           01048         movwf           counter
0303   1383           01049         BCF             STATUS, IRP
0304   303A           01050         movlw           0x3A
0305   0084           01051         movwf           FSR
0306   0860           01052         movfw           NumOfBins1
0307   00DE           01053         movwf           countdown
                      01054         Display         Distances
  0000                    M                 local   loop_
  0000                    M                 local   end_
0308   01B3               M                 clrf    Table_Counter
0309   0103               M                 clrw            
030A   0833               M loop_   movf    Table_Counter,W
030B   2???               M                 call    Distances
030C   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
030D   1903               M                 btfsc   STATUS,Z
030E   2???               M                         goto    end_
030F   2???               M                 call    WR_DATA
0310   0AB3               M                 incf    Table_Counter,F
0311   2???               M                 goto    loop_
0312                      M end_
0312   2???           01055         call            Switch_Lines
0313                  01056 FrontLoop       
0313   0A84           01057         INCF            FSR,1
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0314   0ADF           01058         incf            counter
                      01059         PrintNumber     counter
                          M         ;movf       number ,W
0315   085F               M         movfw       counter
0316   2???               M         call        DectoChar
0317   2???               M         call        WR_DATA
                      01060         ;Display                Colon
                      01061         Display_Dist    INDF
                          M     MOV     INDF,         temp  ; Bin_Dist_reg --> temp
0318   0800               M     MOVF  INDF,W        ; move reg1 into working register
0319   00B9               M     MOVWF   temp        ; reg2 <- reg1
031A   2???               M     call    Distance_Display
                      01062         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
031B   01B3               M                 clrf    Table_Counter
031C   0103               M                 clrw            
031D   0833               M loop_   movf    Table_Counter,W
031E   2???               M                 call    Spacee
031F   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0320   1903               M                 btfsc   STATUS,Z
0321   2???               M                         goto    end_
0322   2???               M                 call    WR_DATA
0323   0AB3               M                 incf    Table_Counter,F
0324   2???               M                 goto    loop_
0325                      M end_
0325   0BDE           01063         decfsz          countdown,F
0326   2???           01064         goto            FrontLoop
                      01065         
0327   0008           01066         return
                      01067         
0328                  01068 LEDControlON
                      01069         
0328   1862           01070         btfsc       LEDcounter0,0
0329   2???           01071         goto        $+4
032A   1406           01072         bsf         LED
032B   1462           01073         bsf         LEDcounter0,0
032C   0008           01074         return
                      01075         
                      01076         
032D   1006           01077         bcf         LED
032E   1062           01078         bcf         LEDcounter0,0
032F   0008           01079         return
                      01080         
                      01081         
0330                  01082 DisplayBlackWhiteIR1
                      01083         
0330   30C5           01084         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
0331   009F           01085         movwf   ADCON0  
                      01086                 
0332   2???           01087         call            BWScanModule1   
0333   0008           01088         return
                      01089         
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01090         
0334                  01091 DisplayBlackWhiteIR2
                      01092         
0334   30CD           01093         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra as the reader pin
0335   009F           01094         movwf   ADCON0  
                      01095         
0336   2???           01096         call            BWScanModule1   
0337   0008           01097         return
                      01098 
                      01099         
0338                  01100 StdRotation1
                      01101         
0338   1863           01102         btfsc       LEDcounter1,0
0339   2???           01103         goto        $+4
033A   1287           01104         bcf             Std1
033B   1463           01105         bsf         LEDcounter1,0
033C   0008           01106         return
                      01107         
033D   1687           01108         bsf             Std1
033E   1063           01109         bcf         LEDcounter1,0
033F   0008           01110         return
                      01111         
0340                  01112 StdRotation2
                      01113 
0340   1864           01114         btfsc       LEDcounter2,0
0341   2???           01115         goto        $+4
                      01116         
0342   1307           01117         bcf             Std2
0343   1464           01118         bsf         LEDcounter2,0
0344   0008           01119         return
                      01120         
0345   1D06           01121         btfss       SwitchWhite
0346   1707           01122         bsf         Std2
                      01123         
0347   1707           01124         bsf             Std2
0348   1064           01125         bcf         LEDcounter2,0
                      01126 
0349   0008           01127         return
                      01128                 
034A                  01129 StdRotation1Backwards
                      01130         
034A   1866           01131         btfsc       LEDcounter4,0
034B   2???           01132         goto        $+4
034C   1407           01133         bsf             Std1Backwards
034D   1466           01134         bsf         LEDcounter4,0
034E   0008           01135         return
                      01136         
034F   1007           01137         bcf             Std1Backwards
0350   1066           01138         bcf         LEDcounter4,0
0351   0008           01139         return
                      01140         
0352                  01141 StdRotation2Backwards
                      01142 
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0352   1867           01143         btfsc       LEDcounter5,0
0353   2???           01144         goto        $+4
0354   1787           01145         bsf             Std2Backwards
0355   1467           01146         bsf         LEDcounter5,0
0356   0008           01147         return
                      01148         
0357   1D06           01149         btfss       SwitchWhite
0358   1707           01150         bsf         Std2
                      01151         
0359   1387           01152         bcf             Std2Backwards
035A   1067           01153         bcf         LEDcounter5,0
035B   0008           01154         return
                      01155 
035C                  01156 PWMFWD  
                      01157         
                      01158     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01159     
                      01160     ;save   pr2 value so that you can zero it after
                      01161     
035C   1868           01162     btfsc           LEDcounter7,0
035D   2???           01163     goto            $+4
035E   0197           01164     clrf            CCP1CON
035F   1468           01165     bsf             LEDcounter7,0
0360   0008           01166     return
                      01167     
0361   1683 1303      01168     BANKSEL TRISC
0363   1107           01169     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01170     
0364   0817           01171     MOVF     CCP1CON,W          ;set CCP1 as PWM
0365   39F0           01172     ANDLW    0xF0
0366   380C           01173     IORLW    0x0C
0367   0097           01174     MOVWF    CCP1CON
                      01175 
0368   0812           01176     movfw   PR2
0369   00D0           01177     movwf   pr2temp
                      01178     
                      01179     ;11000011
036A   30C3           01180     MOVLW    b'11000011'        ;set highest PWM value
036B   1683 1303      01181     BANKSEL  PR2                
036D   0092           01182     MOVWF    PR2                
036E   1283 1303      01183     BANKSEL  TMR2               
                      01184     
0370   1492           01185     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01186     
0371   0195           01187     CLRF    CCPR1L              ;set PWM to zero
                      01188     
0372   1712           01189     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0373   1692           01190     BSF     T2CON, TOUTPS2
0374   1612           01191     BSF     T2CON, TOUTPS1
0375   1592           01192     BSF     T2CON, TOUTPS0
                      01193     
                      01194     ; SET PWM duty cycle
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01195     ;01001110
0376   1697           01196     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
0377   1617           01197     BSF     CCP1CON, 4
                      01198     MOVLF   B'01100000', CCPR1L                 ; previous was 01101
0378   3060               M     MOVLW  B'01100000'  ; move literal into working register
0379   0095               M     MOVWF   CCPR1L      ; move working register into reg
037A   1597           01199     BSF     CCP1CON, 3
037B   1517           01200     BSF     CCP1CON, 2
                      01201     
037C   1512           01202     BSF     T2CON, TMR2ON       ;and start the timer running
                      01203  
037D   1068           01204     bcf             LEDcounter7,0
                      01205     
037E   0008           01206     return
                      01207     
037F                  01208 PWMBACK
                      01209     
                      01210     ;************ SECOND PWM - Positive one ******************************
                      01211     
037F   1869           01212     btfsc           LEDcounter8,0
0380   2???           01213     goto            $+4
0381   019D           01214     clrf            CCP2CON
                      01215     ;bcf                    PORTC,1
0382   1469           01216     bsf             LEDcounter8,0
0383   0008           01217     return
                      01218     
                      01219  
                      01220     
0384   1683 1303      01221     BANKSEL TRISC
0386   1087           01222     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01223     
0387   081D           01224     MOVF     CCP2CON,W          ;set CCP2 as PWM
0388   39F0           01225     ANDLW    0xF0
0389   380C           01226     IORLW    0x0C
038A   009D           01227     MOVWF    CCP2CON
                      01228     
                      01229     ;11000011
038B   30C3           01230     MOVLW    b'11000011'        ;set highest PWM value
038C   1683 1303      01231     BANKSEL  PR2                
038E   0092           01232     MOVWF    PR2                
038F   1283 1303      01233     BANKSEL  TMR2               
                      01234     
0391   1492           01235     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01236     
0392   019B           01237     CLRF    CCPR2L              ;set PWM to zero
                      01238     
0393   1712           01239     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0394   1692           01240     BSF     T2CON, TOUTPS2
0395   1612           01241     BSF     T2CON, TOUTPS1
0396   1592           01242     BSF     T2CON, TOUTPS0
                      01243     
                      01244     ; SET PWM duty cycle
                      01245     ;01001110
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0397   169D           01246     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
0398   161D           01247     BSF     CCP2CON, 4
0399   3060           01248     MOVLW   B'01100000'                         ; good speed for moving the arm
039A   009B           01249     MOVWF   CCPR2L      
039B   159D           01250     BSF     CCP2CON, 3
039C   151D           01251     BSF     CCP2CON, 2
                      01252     
039D   1512           01253     BSF     T2CON, TMR2ON       ;and start the timer running
039E   1283           01254     BCF     STATUS,RP0
                      01255     
                      01256     ;bsf                    PORTC,1
                      01257     
039F   1069           01258     bcf             LEDcounter8,0
                      01259     
03A0   0008           01260     return
                      01261     
03A1                  01262 PWMSTOP
                      01263     
03A1   0197           01264     clrf   CCP1CON
03A2   019D           01265     clrf   CCP2CON
03A3   0850           01266     movfw   pr2temp
03A4   0092           01267     movwf   PR2
                      01268     
03A5   0008           01269     return
                      01270         
                      01271         
                      01272 ;***************************************
                      01273 ; LCD control
                      01274 ;***************************************
03A6                  01275 Switch_Lines
03A6   30C0           01276                 movlw   B'11000000'
03A7   2???           01277                 call    WR_INS
03A8   0008           01278                 return
                      01279 
03A9                  01280 Clear_Display
03A9   3001           01281                 movlw   B'00000001'
03AA   2???           01282                 call    WR_INS
03AB   0008           01283                 return
                      01284 
                      01285 ;***************************************
                      01286 ; Delay 0.5s
                      01287 ;***************************************
03AC                  01288 HalfS   
  0000                01289         local   HalfS_0
03AC   3088           01290       movlw 0x88
03AD   00B0           01291       movwf COUNTH
03AE   30BD           01292       movlw 0xBD
03AF   00B1           01293       movwf COUNTM
03B0   3003           01294       movlw 0x03
03B1   00B2           01295       movwf COUNTL
                      01296 
03B2                  01297 HalfS_0
03B2   0BB0           01298       decfsz COUNTH, f
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B3   2???           01299       goto   $+2
03B4   0BB1           01300       decfsz COUNTM, f
03B5   2???           01301       goto   $+2
03B6   0BB2           01302       decfsz COUNTL, f
03B7   2???           01303       goto   HalfS_0
                      01304 
03B8   2???           01305       goto $+1
03B9   0000           01306       nop
03BA   0000           01307       nop
03BB   0008           01308                 return
                      01309                 
                      01310 ;***************************************
                      01311 ;***************************************
                      01312 ; Delay = 0.6 seconds
                      01313 ; Clock frequency = 4 MHz
03BC                  01314 DELAY1
                      01315                         ;599996 cycles
03BC   30D1           01316         movlw   0xD1
03BD   00B5           01317         movwf   lcd_d1
03BE   304F           01318         movlw   0x4F
03BF   00B6           01319         movwf   lcd_d2
03C0   3002           01320         movlw   0x02
03C1   00EE           01321         movwf   lcd_d1_2
03C2                  01322 Delay_0
03C2   0BB5           01323         decfsz  lcd_d1, f
03C3   2???           01324         goto    $+2
03C4   0BB6           01325         decfsz  lcd_d2, f
03C5   2???           01326         goto    $+2
03C6   0BEE           01327         decfsz  lcd_d1_2, f
03C7   2???           01328         goto    Delay_0
                      01329 
                      01330                         ;4 cycles
03C8   0008           01331         return
                      01332         
                      01333 
03C9                  01334 DELAY2          ;80s
                      01335 
                      01336                         ;79999995 cycles
03C9   30DA           01337         movlw   0xDA
03CA   00B5           01338         movwf   lcd_d1
03CB   3063           01339         movlw   0x63
03CC   00B6           01340         movwf   lcd_d2
03CD   30AF           01341         movlw   0xAF
03CE   00EE           01342         movwf   lcd_d1_2
03CF                  01343 Delay_01
03CF   0BB5           01344         decfsz  lcd_d1, f
03D0   2???           01345         goto    $+2
03D1   0BB6           01346         decfsz  lcd_d2, f
03D2   2???           01347         goto    $+2
03D3   0BEE           01348         decfsz  lcd_d1_2, f
03D4   2???           01349         goto    Delay_01
                      01350         
03D5   0008           01351         return
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01352         
                      01353 ;***************************************
                      01354 ;Init_TMR0
                      01355 ;   Input:  RA4
                      01356 ;   Output: TMR0 register
                      01357 ;   desc:   Counts the clock pulses for the
                      01358 ;           rotary encoder
                      01359 ;****************************************
03D6                  01360 Init_TMR0                           ; INITIALIZE TIMER 0   
03D6   1683 1303      01361     BANKSEL OPTION_REG
                      01362     MOVLF   B'00101000', OPTION_REG
03D8   3028               M     MOVLW  B'00101000'  ; move literal into working register
03D9   0081               M     MOVWF   OPTION_REG  ; move working register into reg
                      01363     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01364     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
                      01365     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01366     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01367     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01368     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01369     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01370     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
03DA   1283 1303      01371     BANKSEL TMR0
03DC   0181           01372     CLRF   TMR0                     ; Clear timer 0
03DD   0008           01373     return  
                      01374     
                      01375 ;************************************
                      01376 ; RTC Sublabels
                      01377 ;************************************
                      01378     
03DE                  01379 show_RTC
                      01380 ;               ;clear LCD screen
                      01381 ;               movlw   b'00000001'
                      01382 ;               call    WR_INS
                      01383 ;
                      01384 ;               ;Get year
                      01385 ;               movlw   "2"                             ;First line shows 20**/**/**
                      01386 ;               call    WR_DATA
                      01387 ;               movlw   "0"
                      01388 ;               call    WR_DATA
                      01389 ;               rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                      01390 ;               movfw   0x77
                      01391 ;               call    WR_DATA
                      01392 ;               movfw   0x78
                      01393 ;               call    WR_DATA
                      01394 ;
                      01395 ;               movlw   "/"
                      01396 ;               call    WR_DATA
                      01397 ;
                      01398 ;               ;Get month
                      01399 ;               rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                      01400 ;               movfw   0x77
                      01401 ;               call    WR_DATA
                      01402 ;               movfw   0x78
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01403 ;               call    WR_DATA
                      01404 ;
                      01405 ;               movlw   "/"
                      01406 ;               call    WR_DATA
                      01407 ;
                      01408 ;               ;Get day
                      01409 ;               rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                      01410 ;               movfw   0x77
                      01411 ;               call    WR_DATA
                      01412 ;               movfw   0x78
                      01413 ;               call    WR_DATA
                      01414 ;
                      01415 ;               movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
                      01416 ;               call    WR_INS
                      01417 ;               ONLY GONNA DISPLAY THE TIME HAHA
                      01418                 ;Get hour
                      01419                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03DE   3002               M         movlw   0x02
03DF   1283 1303          M         banksel 0x73
03E1   00F3               M         movwf   0x73
03E2   2???               M         call    read_rtc
03E3   1283 1303          M         banksel 0x75
03E5   0875               M         movf    0x75,w
03E6   2???               M         call    rtc_convert   
03E7   0877           01420                 movfw   0x77
03E8   2???           01421                 call    WR_DATA
03E9   0878           01422                 movfw   0x78
03EA   2???           01423                 call    WR_DATA
03EB   303A           01424                 movlw                   ":"
03EC   2???           01425                 call    WR_DATA
                      01426 
                      01427                 ;Get minute             
                      01428                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03ED   3001               M         movlw   0x01
03EE   1283 1303          M         banksel 0x73
03F0   00F3               M         movwf   0x73
03F1   2???               M         call    read_rtc
03F2   1283 1303          M         banksel 0x75
03F4   0875               M         movf    0x75,w
03F5   2???               M         call    rtc_convert   
03F6   0877           01429                 movfw   0x77
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F7   2???           01430                 call    WR_DATA
03F8   0878           01431                 movfw   0x78
03F9   2???           01432                 call    WR_DATA         
03FA   303A           01433                 movlw                   ":"
03FB   2???           01434                 call    WR_DATA
                      01435                 
                      01436                 ;Get seconds
                      01437                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03FC   3000               M         movlw   0x00
03FD   1283 1303          M         banksel 0x73
03FF   00F3               M         movwf   0x73
0400   2???               M         call    read_rtc
0401   1283 1303          M         banksel 0x75
0403   0875               M         movf    0x75,w
0404   2???               M         call    rtc_convert   
0405   0877           01438                 movfw   0x77
0406   2???           01439                 call    WR_DATA
0407   0878           01440                 movfw   0x78
0408   2???           01441                 call    WR_DATA
                      01442                 
0409   2???           01443                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
040A   0008           01444                 return
                      01445 
                      01446 ;***************************************
                      01447 ; Setup RTC with time defined by user
                      01448 ;***************************************
040B                  01449 set_rtc_time
                      01450 
                      01451                 ;rtc_resetAll   ;reset rtc
                      01452                 ;works up to here
                      01453 
                      01454                 ;rtc_set        0x00,   B'10000000'
                      01455                 ;works up to here
                      01456                 
                      01457                 ;set time 
                      01458 ;               rtc_set 0x06,   B'00010110'             ; Year
                      01459 ;               ;works up to here
                      01460 ;               rtc_set 0x05,   B'00000011'             ; Month
                      01461 ;               rtc_set 0x04,   B'00100000'             ; Date
                      01462                 ;works up to here
                      01463                 ;rtc_set        0x03,   B'00100010'             ; Day
                      01464                 ;stops working on this one^
                      01465                 ;seems like day is the one that crashes it
                      01466                 rtc_set 0x02,   B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
040B   1283 1303          M         banksel 0x73
040D   3002               M         movlw   0x02
040E   00F3               M         movwf   0x73
040F   1283 1303          M         banksel 0x74
0411   3000               M         movlw   B'00000000'
0412   00F4               M         movwf   0x74    
0413   2???               M         call    write_rtc
                      01467                 ;works on this one
                      01468                 rtc_set 0x01,   B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0414   1283 1303          M         banksel 0x73
0416   3001               M         movlw   0x01
0417   00F3               M         movwf   0x73
0418   1283 1303          M         banksel 0x74
041A   3000               M         movlw   B'00000000'
041B   00F4               M         movwf   0x74    
041C   2???               M         call    write_rtc
                      01469                 ;works on this one
                      01470                 rtc_set 0x00,   B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
041D   1283 1303          M         banksel 0x73
041F   3000               M         movlw   0x00
0420   00F3               M         movwf   0x73
0421   1283 1303          M         banksel 0x74
0423   3000               M         movlw   B'00000000'
0424   00F4               M         movwf   0x74    
0425   2???               M         call    write_rtc
                      01471                 ;works on this one
0426   0008           01472                 return
                      01473 
                      01474 ;***************************************
                      01475 ; Delay 1s
                      01476 ;***************************************
0427                  01477 OneS
  0000                01478                 local   OneS_0
0427   3010           01479       movlw 0x10
0428   00B0           01480       movwf COUNTH
0429   307A           01481       movlw 0x7A
042A   00B1           01482       movwf COUNTM
042B   3006           01483       movlw 0x06
042C   00B2           01484       movwf COUNTL
                      01485 
042D                  01486 OneS_0
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

042D   0BB0           01487       decfsz COUNTH, f
042E   2???           01488       goto   $+2
042F   0BB1           01489       decfsz COUNTM, f
0430   2???           01490       goto   $+2
0431   0BB2           01491       decfsz COUNTL, f
0432   2???           01492       goto   OneS_0
                      01493 
0433   2???           01494       goto $+1
0434   0000           01495       nop
0435   0000           01496       nop
0436   0008           01497                 return
                      01498                 
0437                  01499 lcdLongDelay
0437   3014           01500     movlw d'20'
0438   00B6           01501     movwf lcd_d2
0439                  01502 LLD_LOOP
                      01503     LCD_DELAY
0439   30FF               M         movlw   0xFF
043A   00B5               M         movwf   lcd_d1
043B   0BB5               M         decfsz  lcd_d1,f
043C   2???               M         goto    $-1
043D   0BB6           01504     decfsz lcd_d2,f
043E   2???           01505     goto LLD_LOOP
043F   0008           01506     return
                      01507     
                      01508 ;***************************************
                      01509 ; Look up table
                      01510 ;***************************************
                      01511     
0440                  01512 Welcome_Msg
                      01513         
                      01514         ;Change Page
0440   00BA           01515         movwf   Temp
0441   30??           01516         movlw   HIGH Welcome_MsgEntries
0442   008A           01517         movwf   PCLATH
0443   083A           01518         movf    Temp,w
0444   3E??           01519         addlw   LOW Welcome_MsgEntries
0445   1803           01520         btfsc   STATUS,C
0446   0A8A           01521             incf    PCLATH,f
0447   0082           01522         movwf   PCL     
0448   0782           01523         addwf    PCL,F
0449                  01524 Welcome_MsgEntries
0449   3431 343A 3453 01525         dt        "1:Simulation|#/D:PWM|*/0:Std1&Std2|3:B/W", 0
       3469 346D 3475 
       346C 3461 3474 
       3469 346F 346E 
       347C 3423 342F 
       3444 343A 3450 
       3457 344D 347C 
       342A 342F 3430 
       343A 3453 3474 
       3464 3431 3426 
       3453 3474 3464 
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3432 347C 3433 
       343A 3442 342F 
       3457 3400 
                      01526         
0472                  01527 Welcome_Msg2
                      01528         
                      01529         ;Change Page
0472   00BA           01530         movwf   Temp
0473   30??           01531         movlw   HIGH Welcome_Msg2Entries
0474   008A           01532         movwf   PCLATH
0475   083A           01533         movf    Temp,w
0476   3E??           01534         addlw   LOW Welcome_Msg2Entries
0477   1803           01535         btfsc   STATUS,C
0478   0A8A           01536             incf    PCLATH,f
0479   0082           01537         movwf   PCL     
047A   0782           01538         addwf    PCL,F
047B                  01539 Welcome_Msg2Entries
047B   3435 3444 3469 01540         dt        "5Distance 6Locations", 0
       3473 3474 3461 
       346E 3463 3465 
       3420 3436 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01541         
0490                  01542 FinalMessage
                      01543         
                      01544         ;Change Page
0490   00BA           01545         movwf    Temp
0491   30??           01546         movlw   HIGH FinalMessageEntries
0492   008A           01547         movwf   PCLATH
0493   083A           01548         movf    Temp,w
0494   3E??           01549         addlw   LOW FinalMessageEntries
0495   1803           01550         btfsc   STATUS,C
0496   0A8A           01551             incf    PCLATH,f
0497   0082           01552         movwf   PCL
0498   0782           01553         addwf    PCL,F
0499                  01554 FinalMessageEntries
0499   3431 3453 3474 01555         dt        "1Stickers 2Bins 3Locations",0
       3469 3463 346B 
       3465 3472 3473 
       3420 3432 3442 
       3469 346E 3473 
       3420 3433 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01556         
04B4                  01557 DectoChar
                      01558         
                      01559         ;Change Page
04B4   00BA           01560         movwf   Temp
04B5   30??           01561         movlw   HIGH DectoCharEntries
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04B6   008A           01562         movwf   PCLATH
04B7   083A           01563         movf    Temp,w
04B8   3E??           01564         addlw   LOW DectoCharEntries
04B9   1803           01565         btfsc   STATUS,C
04BA   0A8A           01566             incf    PCLATH,f
04BB   0082           01567         movwf   PCL     
04BC   0782           01568         addwf    PCL,F
04BD                  01569 DectoCharEntries
04BD   3430 3431 3432 01570         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01571         
04C8                  01572 StickerColours
                      01573         
                      01574         ;Change Page
04C8   00BA           01575         movwf   Temp
04C9   30??           01576         movlw   HIGH StickerColoursEntries
04CA   008A           01577         movwf   PCLATH
04CB   083A           01578         movf    Temp,w
04CC   3E??           01579         addlw   LOW StickerColoursEntries
04CD   1803           01580         btfsc   STATUS,C
04CE   0A8A           01581             incf    PCLATH,f
04CF   0082           01582         movwf   PCL     
04D0   0782           01583         addwf    PCL,F
04D1                  01584 StickerColoursEntries
04D1   3442 3457 3400 01585         dt        "BW",  0
                      01586         
04D4                  01587 FrontStickers
                      01588 
                      01589         ;Change Page
04D4   00BA           01590         movwf   Temp
04D5   30??           01591         movlw   HIGH FrontStickersEntries
04D6   008A           01592         movwf   PCLATH
04D7   083A           01593         movf    Temp,w
04D8   3E??           01594         addlw   LOW FrontStickersEntries
04D9   1803           01595         btfsc   STATUS,C
04DA   0A8A           01596             incf    PCLATH,f
04DB   0082           01597         movwf   PCL     
04DC   0782           01598         addwf    PCL,F
04DD                  01599 FrontStickersEntries
04DD   3446 3472 346F 01600         dt        "Front",  0
       346E 3474 3400 
                      01601         
04E3                  01602 BackStickers
                      01603 
                      01604         ;Change Page
04E3   00BA           01605         movwf   Temp
04E4   30??           01606         movlw   HIGH BackStickersEntries
04E5   008A           01607         movwf   PCLATH
04E6   083A           01608         movf    Temp,w
04E7   3E??           01609         addlw   LOW BackStickersEntries
04E8   1803           01610         btfsc   STATUS,C
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04E9   0A8A           01611             incf    PCLATH,f
04EA   0082           01612         movwf   PCL     
04EB   0782           01613         addwf    PCL,F
04EC                  01614 BackStickersEntries
04EC   3442 3461 3463 01615         dt        "Back",  0
       346B 3400 
                      01616         
04F1                  01617 Spacee
                      01618 
                      01619         ;Change Page
04F1   00BA           01620         movwf   Temp
04F2   30??           01621         movlw   HIGH SpaceeEntries
04F3   008A           01622         movwf   PCLATH
04F4   083A           01623         movf    Temp,w
04F5   3E??           01624         addlw   LOW SpaceeEntries
04F6   1803           01625         btfsc   STATUS,C
04F7   0A8A           01626             incf    PCLATH,f
04F8   0082           01627         movwf   PCL     
04F9   0782           01628         addwf    PCL,F
04FA                  01629 SpaceeEntries
04FA   3420 3400      01630         dt        " ",  0
                      01631         
04FC                  01632 Colon
                      01633 
                      01634         ;Change Page
04FC   00BA           01635         movwf   Temp
04FD   30??           01636         movlw   HIGH ColonEntries
04FE   008A           01637         movwf   PCLATH
04FF   083A           01638         movf    Temp,w
0500   3E??           01639         addlw   LOW ColonEntries
0501   1803           01640         btfsc   STATUS,C
0502   0A8A           01641             incf    PCLATH,f
0503   0082           01642         movwf   PCL     
0504   0782           01643         addwf    PCL,F
0505                  01644 ColonEntries
0505   343A 3400      01645         dt        ":",  0
                      01646         
0507                  01647 Distances
                      01648 
                      01649         ;Change Page
0507   00BA           01650         movwf   Temp
0508   30??           01651         movlw   HIGH DistancesEntries
0509   008A           01652         movwf   PCLATH
050A   083A           01653         movf    Temp,w
050B   3E??           01654         addlw   LOW DistancesEntries
050C   1803           01655         btfsc   STATUS,C
050D   0A8A           01656             incf    PCLATH,f
050E   0082           01657         movwf   PCL     
050F   0782           01658         addwf    PCL,F
0510                  01659 DistancesEntries
0510   3444 3469 3473 01660         dt        "Dist (cm)",  0
       3474 3420 3428 
       3463 346D 3429 
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3400 
                      01661             
3F72                  01662         END
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AVOIDCOLUMN1                      000000FF
AVOIDCOLUMN2                      00000115
AddBin                            0000028E
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BINREADINGSTART                   00000165
BRGH                              00000002
BWScanModule1                     000001C3
BWScanModule2                     000001E9
BWStoreModule1                    000001DC
BWStoreModule2                    00000202
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BackStickers                      000004E3
BackStickersEntries               000004EC
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHECKSWITCH                       00000184
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COLREADINGSTART                   00000158
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Check_cm_overflow                 00000257
Check_mm_overflow                 00000253
Clear_Display                     000003A9
ClrLCD                            00000000
ColMotor                          PORTC,7
Colon                             000004FC
ColonEntries                      00000505
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DELAY1                            000003BC
DELAY2                            000003C9
DELAYEDREAD                       00000173
D_A                               00000005
D_NOT_A                           00000005
Decode_check_done                 0000025D
Decode_loop                       0000024C
DectoChar                         000004B4
DectoCharEntries                  000004BD
Delay_0                           000003C2
Delay_01                          000003CF
Display                           
DisplayBlackWhiteIR1              00000330
DisplayBlackWhiteIR2              00000334
Display_Dist                      
Dist_Decoder                      00000245
Distance_Display                  00000001
Distances                         00000507
DistancesEntries                  00000510
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENDTHIS                           0000017B
EXIT                              0000018D
EXITDISPLAY                       000001A0
F                                 00000001
FERR                              00000002
FSR                               00000004
FinalMessage                      00000490
FinalMessageEntries               00000499
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         00000313
FrontLoop1                        000002AF
FrontLoop2                        000002E0
FrontStickers                     000004D4
FrontStickersEntries              000004DD
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000003AC
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         000003D6
Key                               
KeypadandLCD                      000000AB
LCD_DELAY                         
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

LED                               PORTB,0
LEDControlON                      00000328
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter7                       00000068
LEDcounter8                       00000069
LLD_LOOP                          00000439
Lb1                               00000032
Lb2                               00000036
Lb3                               0000003A
Lb4                               0000003E
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
Locations                         00000300
MAX_HIGHS                         0x3
MAX_TICKS                         d'200'
MOV                               
MOVLF                             
MoveBackwards                     000001C2
NOTPWMBACK                        PORTC,1
NOTPWMFWD                         PORTC,2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              00000051
NumL                              00000052
NumOfBins1                        00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              00000427
Ones                              00000057
P                                 00000004
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           0000037F
PWMFWD                            0000035C
PWMSTOP                           000003A1
PrintCol                          
PrintNumber                       
Put_Dist_In_Reg                   
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READBIN                           00000137
READ_WRITE                        00000002
RETURNFROMCOLUMN                  00000128
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        00000278
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          0000020F
Read2_US                          0000022A
ReadUltrasonic                    
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         00000274
ShowBins                          00000298
Spacee                            000004F1
SpaceeEntries                     000004FA
Std1                              PORTC,5
Std1Backwards                     PORTC,0
Std2                              PORTC,6
Std2Backwards                     PORTC,7
StdRotation1                      00000338
StdRotation1Backwards             0000034A
StdRotation2                      00000340
StdRotation2Backwards             00000352
StickerColours                    000004C8
StickerColoursEntries             000004D1
Stickers1                         0000029D
Stickers2                         000002CF
StoreBW1                          00000282
StoreBW2                          00000288
StoreThisTick                     0000026A
SwitchArm                         PORTB,3
SwitchWhite                       PORTB,2
Switch_Lines                      000003A6
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTAL                             00000154
TOTAL1                            00000156
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
Welcome_Msg                       00000440
Welcome_Msg2                      00000472
Welcome_Msg2Entries               0000047B
Welcome_MsgEntries                00000449
Z                                 00000002
_.org_0_00AC                      000000AC
_.org_0_00FC                      000000FC
_.org_0_0103                      00000103
_.org_0_0106                      00000106
_.org_0_010F                      0000010F
_.org_0_0112                      00000112
_.org_0_011F                      0000011F
_.org_0_0124                      00000124
_.org_0_012C                      0000012C
_.org_0_0133                      00000133
_.org_0_015C                      0000015C
_.org_0_016A                      0000016A
_.org_0_0187                      00000187
_.org_0_018A                      0000018A
_.org_0_01A1                      000001A1
_.org_0_01BF                      000001BF
_.org_0_01C5                      000001C5
_.org_0_01EB                      000001EB
_.org_0_0217                      00000217
_.org_0_021A                      0000021A
_.org_0_0232                      00000232
_.org_0_0235                      00000235
_.org_0_0329                      00000329
_.org_0_0339                      00000339
_.org_0_0341                      00000341
_.org_0_034B                      0000034B
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_0353                      00000353
_.org_0_035D                      0000035D
_.org_0_0380                      00000380
_.org_0_03B3                      000003B3
_.org_0_03B5                      000003B5
_.org_0_03B8                      000003B8
_.org_0_03C3                      000003C3
_.org_0_03C5                      000003C5
_.org_0_03D0                      000003D0
_.org_0_03D2                      000003D2
_.org_0_042E                      0000042E
_.org_0_0430                      00000430
_.org_0_0433                      00000433
_.org_0_043C                      0000043C
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
MPASM 5.65                          MAIN.ASM   4-5-2016  3:25:39         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

backstickerValues                 0000005C
bin16_BCD                         00000011
binCounter                        0000005D
cm                                0000006A
cm_overflow                       00000266
com                               00000037
count_highs                       0000006F
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay3                            00000061
distanceMoved                     00000058
distreg                           0000006D
frontstickerValues                0000005B
goback                            000000FE
hour1                             00000071
hour2                             00000072
i2c_common_setup                  00000000
init                              00000044
isBinThere                        0000005A
isColumnThere                     00000059
lcdLongDelay                      00000437
lcd_d1                            00000035
lcd_d1_2                          0000006E
lcd_d2                            00000036
lcd_tmp                           00000034
m                                 0000006C
min1                              00000073
min2                              00000074
mm                                0000006B
mm_overflow                       00000262
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
sec1                              00000075
sec2                              00000076
set_rtc_time                      0000040B
show_RTC                          000003DE
temp                              00000039
temp_2                            00000070
write_rtc                         00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    39 suppressed

