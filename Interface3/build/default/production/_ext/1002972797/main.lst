MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5
  00000040            00038                 Location6
  00000041            00039                 Location7
  00000042            00040                 Front1          ;51 PC
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ;58 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0
  00000063            00073                 LEDcounter1
  00000064            00074                 LEDcounter2
  00000065            00075                 LEDcounter3
  00000066            00076                 LEDcounter4
                      00077         endc    
                      00078 
                      00079         ;Declare constants for pin assignments (LCD on PORTD)
                      00080                 #define RS      PORTD,2
                      00081                 #define E       PORTD,3
                      00082                 #define IR1     PORTA,0
                      00083                 #define IR2     PORTA,1
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00084                 #define backwardsDCMotor        PORTC,5
                      00085                 #define DCMotor PORTC,6
                      00086                 #define ColMotor PORTC,7
                      00087                 #define UST1    PORTD,0
                      00088                 #define US1E1   PORTA,4
                      00089                 #define UST2    PORTD,1
                      00090                 #define US1E2   PORTA,5
                      00091                 #define LED     PORTB,0
                      00092                 #define Arm1    PORTC,5
                      00093                 #define Arm2    PORTC,6
                      00094                 #define Arm1Backwards   PORTB,2
                      00095                 #define Arm2Backwards   PORTB,3
                      00096                 
                      00097                 
                      00098 ;distanceMoved  equ     b'0'
                      00099 
                      00100          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00101          goto      init       ;Just jump to the main code section.
                      00102          
                      00103          ;ORG      0x100        ;this command is sketchy
                      00104          
                      00105 ;*******************************************************************************
                      00106 ; MACROS
                      00107 ;*******************************************************************************
                      00108          
                      00109 Key      macro  value, subroutine
                      00110          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00111          andlw          0x0F
                      00112          xorlw          value
                      00113          btfsc          STATUS, Z
                      00114          call           subroutine
                      00115         endm
                      00116 
                      00117 Rotation macro  value
                      00118          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00119          andlw          0x0F
                      00120          xorlw          value
                      00121          btfsc          STATUS, Z
                      00122          call           ShiftLeft
                      00123         endm
                      00124 
                      00125 ;***************************************
                      00126 ; Delay: ~160us macro
                      00127 ;***************************************
                      00128 LCD_DELAY macro
                      00129         movlw   0xFF
                      00130         movwf   lcd_d1
                      00131         decfsz  lcd_d1,f
                      00132         goto    $-1
                      00133         endm
                      00134         
                      00135 ;***************************************
                      00136 ; Display macro
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00137 ;***************************************
                      00138 Display macro   Message
                      00139                 local   loop_
                      00140                 local   end_
                      00141                 clrf    Table_Counter
                      00142                 clrw            
                      00143 loop_   movf    Table_Counter,W
                      00144                 call    Message
                      00145                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00146                 btfsc   STATUS,Z
                      00147                         goto    end_
                      00148                 call    WR_DATA
                      00149                 incf    Table_Counter,F
                      00150                 goto    loop_
                      00151 end_
                      00152                 endm
                      00153                 
                      00154 ;***************************************
                      00155 ; BANK0 macro   [TESTED]
                      00156 ;***************************************
                      00157 BANK0 Macro
                      00158     bcf STATUS,RP0 
                      00159     bcf STATUS,RP1
                      00160     endm
                      00161 ;***************************************
                      00162 ; BANK1 macro   [TESTED]
                      00163 ;***************************************
                      00164 BANK1 Macro
                      00165     bsf STATUS,RP0 
                      00166     bcf STATUS,RP1
                      00167     endm
                      00168         
                      00169 ;***************************************
                      00170 ; BANK2 macro   [TESTED]
                      00171 ;***************************************
                      00172 BANK2 Macro
                      00173     bsf STATUS,RP0 
                      00174     bsf STATUS,RP1
                      00175     endm
                      00176     
                      00177 ;***************************************
                      00178 ; BANK3 macro   [TESTED]
                      00179 ;***************************************
                      00180 BANK3 Macro
                      00181     bcf STATUS,RP0 
                      00182     bsf STATUS,RP1
                      00183     endm
                      00184     
                      00185 ;***************************************
                      00186 ; MOVLF macro   [TESTED]
                      00187 ;***************************************
                      00188 MOVLF   Macro   literal, reg
                      00189     MOVLW  literal      ; move literal into working register
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00190     MOVWF   reg         ; move working register into reg
                      00191     endm
                      00192 
                      00193 ;***************************************
                      00194 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00195 ;***************************************
                      00196 MOV     Macro   reg1, reg2
                      00197     MOVF  reg1,W        ; move reg1 into working register
                      00198     MOVWF   reg2        ; reg2 <- reg1
                      00199     endm
                      00200     
                      00201 ;***************************************
                      00202 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00203 ;***************************************
                      00204 ADDL    Macro   Destination, reg, literal
                      00205     MOVLW  literal      ; move literal into working register
                      00206     ADDWF   reg,W       ; W <- literal + reg
                      00207     MOVWF   Destination ; Destination <- literal + reg
                      00208     endm
                      00209     
                      00210 ;***************************************
                      00211 ; ADD macro, Adds two registers together    [TESTED]
                      00212 ;***************************************
                      00213 ADD     Macro   Destination, reg1, reg2
                      00214     MOVF    reg1,W      ; move literal into working register
                      00215     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00216     MOVWF   Destination ; Destination <- reg1 + reg2
                      00217     endm
                      00218                 
                      00219 ;***************************************
                      00220 ; Number to Printable
                      00221 ;***************************************
                      00222 PrintNumber macro       number
                      00223         ;movf       number ,W
                      00224         movfw       number
                      00225         call        DectoChar
                      00226         call        WR_DATA
                      00227         endm
                      00228         
                      00229 ;***************************************
                      00230 ; Number to Colour
                      00231 ;***************************************
                      00232 PrintCol macro      number
                      00233         movfw       number
                      00234         call        StickerColours
                      00235         call        WR_DATA
                      00236         endm    
                      00237 
                      00238 PrintYN macro       number
                      00239         movfw       number
                      00240         call        ColumnValues
                      00241         call        WR_DATA
                      00242         endm    
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00243 ;*******************************************************
                      00244 ;******             BCD                 ****************
                      00245 ;*******************************************************
                      00246         
                      00247 ;---------------- Binary (16-bit) to BCD -----------------------
                      00248 ;
                      00249 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00250 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00251                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00252 ;
                      00253 ; Uses variables
                      00254 ; NumH, NumL
                      00255 ; TenK, Thou, Hund, Tens, Ones
                      00256                 
                      00257 ;BCD    macro   NumH, NumL
                      00258 
0001                  00259 bin16_BCD
0001   0E51           00260         swapf   NumH, W
0002   390F           00261         andlw   0x0F
0003   3EF0           00262         addlw   0xF0
0004   00D4           00263         movwf   Thou 
0005   07D4           00264         addwf   Thou, F 
0006   3EE2           00265         addlw   0xE2 
0007   00D5           00266         movwf   Hund 
0008   3E32           00267         addlw   0x32 
0009   00D7           00268         movwf   Ones 
                      00269 
000A   0851           00270         movf    NumH, W 
000B   390F           00271         andlw   0x0F 
000C   07D5           00272         addwf   Hund, F 
000D   07D5           00273         addwf   Hund, F 
000E   07D7           00274         addwf   Ones, F 
000F   3EE9           00275         addlw   0xE9 
0010   00D6           00276         movwf   Tens 
0011   07D6           00277         addwf   Tens, F 
0012   07D6           00278         addwf   Tens, F 
                      00279 
0013   0E52           00280         swapf   NumL, W 
0014   390F           00281         andlw   0x0F 
0015   07D6           00282         addwf   Tens, F 
0016   07D7           00283         addwf   Ones, F 
                      00284 
0017   0DD6           00285         rlf    Tens, F 
0018   0DD7           00286         rlf    Ones, F 
0019   09D7           00287         comf    Ones, F 
001A   0DD7           00288         rlf    Ones, F 
                      00289 
001B   0852           00290         movf    NumL, W 
001C   390F           00291         andlw   0x0F 
001D   07D7           00292         addwf   Ones, F 
001E   0DD4           00293         rlf    Thou,F 
                      00294 
001F   3007           00295         movlw   0x07 
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0020   00D3           00296         movwf   TenK 
                      00297 
0021   300A           00298         movlw   0x0A
0022                  00299 Lb1
0022   03D6           00300         decf    Tens, F 
0023   07D7           00301         addwf   Ones, F 
0024   1C03           00302         btfss   STATUS, C 
0025   2???           00303         goto            Lb1 
0026                  00304 Lb2
0026   03D5           00305         decf    Hund, F 
0027   07D6           00306         addwf   Tens, F 
0028   1C03           00307         btfss   STATUS,C 
0029   2???           00308         goto            Lb2 
002A                  00309 Lb3
002A   03D4           00310         decf    Thou, F 
002B   07D5           00311         addwf   Hund, F 
002C   1C03           00312         btfss   STATUS,C
002D   2???           00313         goto            Lb3 
002E                  00314 Lb4
002E   03D3           00315         decf    TenK, F 
002F   07D4           00316         addwf   Thou, F 
0030   1C03           00317         btfss   STATUS,C 
0031   2???           00318         goto            Lb4 
                      00319 
0032   3400           00320         retlw   0
0033   0008           00321         return
                      00322 ;endm
                      00323 
                      00324 ;***************************************
                      00325 ; Initialize
                      00326 ;***************************************
0034                  00327 init
0034   018B           00328          clrf      INTCON         ; No interrupts
                      00329 
0035   1683           00330          bsf       STATUS,RP0     ; select bank 1
0036   30FF           00331          movlw      0xFF            ; need to make A input for US sensors
0037   0085           00332          movwf      TRISA          ; All port A is input
0038   30F2           00333          movlw     b'11110010'    ; Set required keypad inputs
0039   0086           00334          movwf     TRISB
003A   0187           00335          clrf      TRISC          ; All port C is output
003B   0188           00336          clrf      TRISD          ; All port D is output
                      00337          
                      00338                   ;Set SDA and SCL to high-Z first as required for I2C
003C   1607           00339                  bsf       TRISC,4                
003D   1587           00340                  bsf       TRISC,3
                      00341 
003E   1283           00342          bcf       STATUS,RP0     ; select bank 0
003F   0185           00343          clrf      PORTA
0040   0186           00344          clrf      PORTB
0041   0187           00345          clrf      PORTC
0042   0188           00346          clrf      PORTD
                      00347          
                      00348         ;Set up I2C for communication
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00349                  
0043   2???           00350         call       i2c_common_setup
                      00351 ;*******************************************************************************
                      00352         ; UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00353         ;rtc_resetAll
                      00354         ;call set_rtc_time
                      00355 ;*******************************************************************************
                      00356                  
                      00357                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00358                  ;call     set_rtc_time
                      00359           
0044   2???           00360          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00361           ;A/D converter attempt
                      00362          
0045   1303           00363          bcf    STATUS,RP1
0046   1683           00364          bsf    STATUS,RP0      ;Select bank 1
                      00365          
0047   1405           00366          bsf    IR1             ;makes RA0 an input
0048   1283           00367          bcf    STATUS,RP0      ; go back to bank 0
                      00368          
                      00369         ;bsf    PORTC,2         ; gives RC2 5 volts
                      00370          
                      00371         ; Set ADCON1 to use RA0 as analog input
                      00372         
                      00373         
0049   1683           00374         bsf     STATUS,RP0      ;Select bank 1
004A   3006           00375         movlw   b'00000110'     ;left justified, all inputs digital
004B   009F           00376         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00377 
                      00378         ;ADCON0
004C   1283           00379         bcf     STATUS,RP0
004D   30C5           00380         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
004E   009F           00381         movwf   ADCON0
                      00382         
                      00383 ;***************************************************
                      00384 ; Initialize variables and Displays
                      00385 ;****************************************************   
                      00386         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
004F   01B3               M                 clrf    Table_Counter
0050   0103               M                 clrw            
0051   0833               M loop_   movf    Table_Counter,W
0052   2???               M                 call    Welcome_Msg
0053   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0054   1903               M                 btfsc   STATUS,Z
0055   2???               M                         goto    end_
0056   2???               M                 call    WR_DATA
0057   0AB3               M                 incf    Table_Counter,F
0058   2???               M                 goto    loop_
0059                      M end_
0059   2???           00387         call            Switch_Lines
                      00388         Display         Welcome_Msg2
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
005A   01B3               M                 clrf    Table_Counter
005B   0103               M                 clrw            
005C   0833               M loop_   movf    Table_Counter,W
005D   2???               M                 call    Welcome_Msg2
005E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
005F   1903               M                 btfsc   STATUS,Z
0060   2???               M                         goto    end_
0061   2???               M                 call    WR_DATA
0062   0AB3               M                 incf    Table_Counter,F
0063   2???               M                 goto    loop_
0064                      M end_
0064   1408           00389         bsf             PORTD,0
0065   3000           00390         movlw           0X00
0066   00E0           00391         movwf           NumOfBins   ;shivs bin counter init
0067   01E2           00392         clrf            LEDcounter0
0068   1463           00393         bsf             LEDcounter1,0
0069   1464           00394         bsf             LEDcounter2,0
006A   1465           00395         bsf             LEDcounter3,0               ;RC2
006B   1466           00396         bsf             LEDcounter4,0               ;RC1
006C   1687           00397         bsf             PORTC,5
006D   1307           00398         bcf             PORTC,6         ;give it a voltage so that the negative h bridge turns the motor
                             off initially
006E   1106           00399         bcf             Arm1Backwards           ; don't move arm 1 backwards yet (PORTB2)
006F   1507           00400         bsf             PORTC,2             ;positive one
0070   1487           00401         bsf             PORTC,1             ;negative one
                      00402         
                      00403         
                      00404 
                      00405 
                      00406 ;*************************************
                      00407 ;       Keypad and LCD forms        
                      00408 ;*************************************
                      00409         
                      00410         
                      00411         
0071   1C86           00412 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0072   2???           00413                 goto            $-1 
                      00414 
0073   0E06           00415                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0074   390F           00416                 andlw           0x0F
0075   00B9           00417                 movwf           temp
                      00418                 ;Key    0x00, OperationDisplay
                      00419                 Key     0x00, DisplayUSSensor2
0076   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0077   390F               M          andlw          0x0F
0078   3A00               M          xorlw          0x00
0079   1903               M          btfsc          STATUS, Z
007A   2???               M          call           DisplayUSSensor2
                      00420                 Key     0x01, pollColumnSensor          ;B/W
007B   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
007C   390F               M          andlw          0x0F
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007D   3A01               M          xorlw          0x01
007E   1903               M          btfsc          STATUS, Z
007F   2???               M          call           pollColumnSensor
                      00421                 Key     0x02, DisplayBlackWhiteIR1
0080   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0081   390F               M          andlw          0x0F
0082   3A02               M          xorlw          0x02
0083   1903               M          btfsc          STATUS, Z
0084   2???               M          call           DisplayBlackWhiteIR1
                      00422                 Rotation        0x03
0085   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0086   390F               M          andlw          0x0F
0087   3A03               M          xorlw          0x03
0088   1903               M          btfsc          STATUS, Z
0089   2???               M          call           ShiftLeft
                      00423                 Key     0x04, DisplayBlackWhiteIR2
008A   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008B   390F               M          andlw          0x0F
008C   3A04               M          xorlw          0x04
008D   1903               M          btfsc          STATUS, Z
008E   2???               M          call           DisplayBlackWhiteIR2
                      00424                 Key     0x05, LEDControlON
008F   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0090   390F               M          andlw          0x0F
0091   3A05               M          xorlw          0x05
0092   1903               M          btfsc          STATUS, Z
0093   2???               M          call           LEDControlON
                      00425                 Key     0x06, DisplayUSSensor1
0094   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0095   390F               M          andlw          0x0F
0096   3A06               M          xorlw          0x06
0097   1903               M          btfsc          STATUS, Z
0098   2???               M          call           DisplayUSSensor1
                      00426                 Key     0x07, AddBin
0099   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009A   390F               M          andlw          0x0F
009B   3A07               M          xorlw          0x07
009C   1903               M          btfsc          STATUS, Z
009D   2???               M          call           AddBin
                      00427                 Key     0x08, Stickers
009E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009F   390F               M          andlw          0x0F
00A0   3A08               M          xorlw          0x08
00A1   1903               M          btfsc          STATUS, Z
00A2   2???               M          call           Stickers
                      00428                 Key     0x09, LCDConversionFront
00A3   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A4   390F               M          andlw          0x0F
00A5   3A09               M          xorlw          0x09
00A6   1903               M          btfsc          STATUS, Z
00A7   2???               M          call           LCDConversionFront
                      00429                 Key     0x0A, ArmRotation2Backwards
00A8   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A9   390F               M          andlw          0x0F
00AA   3A0A               M          xorlw          0x0A
00AB   1903               M          btfsc          STATUS, Z
00AC   2???               M          call           ArmRotation2Backwards
                      00430                 Key     0x0B, PWMSTOP
00AD   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00AE   390F               M          andlw          0x0F
00AF   3A0B               M          xorlw          0x0B
00B0   1903               M          btfsc          STATUS, Z
00B1   2???               M          call           PWMSTOP
                      00431                 Key     0x0C, ArmRotation1
00B2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B3   390F               M          andlw          0x0F
00B4   3A0C               M          xorlw          0x0C
00B5   1903               M          btfsc          STATUS, Z
00B6   2???               M          call           ArmRotation1
                      00432                 Key     0x0D, ArmRotation2
00B7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B8   390F               M          andlw          0x0F
00B9   3A0D               M          xorlw          0x0D
00BA   1903               M          btfsc          STATUS, Z
00BB   2???               M          call           ArmRotation2
                      00433                 Key     0x0E, PWMSTART1
00BC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BD   390F               M          andlw          0x0F
00BE   3A0E               M          xorlw          0x0E
00BF   1903               M          btfsc          STATUS, Z
00C0   2???               M          call           PWMSTART1
                      00434                 Key     0x0F, PWMSTART2
00C1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C2   390F               M          andlw          0x0F
00C3   3A0F               M          xorlw          0x0F
00C4   1903               M          btfsc          STATUS, Z
00C5   2???               M          call           PWMSTART2
00C6   1886           00435                 btfsc           PORTB,1     ;Wait until key is released
00C7   2???           00436                 goto            $-1
00C8   2???           00437                 goto            KeypadandLCD
                      00438                 
00C9                  00439 goback
00C9   0008           00440                 return  
                      00441         
                      00442 
                      00443 ;*******************************************************************************************************
                            *******************************************
                      00444 ;                                                                 MAIN CODE
                      00445 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
00CA                  00446 StartInit
                      00447                 
                      00448 ; WAIT FOR INITIAL INPUT
00CA   3000           00449         movlw   b'00'
00CB   00DD           00450         movwf   binCounter      ;initialize bincounter with 0
00CC   00D8           00451         movwf   distanceMoved   ;initialize distance moved with 0
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CD   3000           00452         movlw           0X00
00CE   00E0           00453         movwf           NumOfBins   ;shivs bin counter init
                      00454 
                      00455 ;    goto    getTimeRTC     ; gets time from RTC clock
                      00456 
00CF                  00457 StartMove
                      00458 ;   MOTOR ON
                      00459     
00CF   2???           00460     call    PWMSTART1
                      00461     ADDL    distanceMoved, distanceMoved, b'1'      ;increase distance moved
00D0   3001               M     MOVLW  b'1'         ; move literal into working register
00D1   0758               M     ADDWF   distanceMoved,W ; W <- literal + reg
00D2   00D8               M     MOVWF   distanceMoved ; Destination <- literal + reg
                      00462     
00D3   3004           00463     movlw               0x4                     ;checking whether distance moved is 4
00D4   02D8           00464     subwf               distanceMoved
00D5   3000           00465     movlw               0x0
00D6   1803           00466     btfsc               STATUS,C
00D7   3001           00467     movlw               0x1
00D8   1800           00468     btfsc               W,0
                      00469 ;    btfsc              distanceMoved,3         ;count seven
00D9   2???           00470     call                MoveBackwards
                      00471 
                      00472 ;    bsf            DCMotor                 ; begin forward movement, set appropriate bit to 1
                      00473 ;    movlw   b'1'
                      00474 ;    addwf  distanceMoved,f     ; increments distanceMoved by 1 (will experimentally find binary value f
                            or 4 m)
                      00475     
                      00476     
                      00477     
                      00478     
                      00479 ;;   CHECK COLUMN
                      00480 
                      00481     ;call    ChooseIR1          ;selects IR1 for data conversion
00DA   2???           00482     call    DisplayBlackWhiteIR1        ;checks to see if column present
00DB   1C42           00483     btfss   Front1,0
00DC   2???           00484     goto    StartMove
00DD   2???           00485     call    PWMSTART1           ;stops motor from moving forward
00DE   2???           00486     call    HalfS
00DF   2???           00487     call    PWMSTART2           ;starts motor to move arm
00E0   2???           00488     call    Clear_Display
                      00489     Display OperationTime
  0000                    M                 local   loop_
  0000                    M                 local   end_
00E1   01B3               M                 clrf    Table_Counter
00E2   0103               M                 clrw            
00E3   0833               M loop_   movf    Table_Counter,W
00E4   2???               M                 call    OperationTime
00E5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00E6   1903               M                 btfsc   STATUS,Z
00E7   2???               M                         goto    end_
00E8   2???               M                 call    WR_DATA
00E9   0AB3               M                 incf    Table_Counter,F
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EA   2???               M                 goto    loop_
00EB                      M end_
00EB   2???           00490     call    HalfS
00EC   2???           00491     call    HalfS
00ED   2???           00492     call    HalfS               ;emulates arm movement
00EE   2???           00493     call    PWMSTART2           ;turns off motor to move arm
00EF   2???           00494     goto    StartMove
                      00495     
                      00496 ;   CHECK IF AT THE END OF BUCKET Line
                      00497     
                      00498 
                      00499     
                      00500     
                      00501 ;    call    pollUSsensor       ; call ultrasonic sensor
                      00502 ;    btfsc   nothingAhead,0     ;   checks if there is nothing ahead
                      00503 ;    goto    Finalize
                      00504     
                      00505 ;;   CHECK IF CONTAINER IS THERE
                      00506 ;    
                      00507 ;    btfss   withinDetectionRange,0  ; checks whether container ahead is within detection range
                      00508 ;    goto    Main
                      00509 ;   call start arm motor
                      00510 ;   call other motor
                      00511 ;    call    frontscanContainer     ; label to begin container scanning
                      00512 ;    call    backscanContainer      ; label to begin container scanning
                      00513 ;    movlw  b'1'
                      00514 ;    addwf   frontbinCounter,f      ;increment the bin counters
                      00515 ;    addwf   backbinCounter,f
00F0   2???           00516     goto    Finalize
                      00517     
00F1                  00518 MoveBackwards
                      00519     
00F1   2???           00520     call    PWMSTOP
                      00521     
00F2   2???           00522     goto    Finalize            
                      00523 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00524 
                      00525 ;*********************************************************
                      00526 ; A to D conversion with LCD display for IR sensor
                      00527 ;*********************************************************
                      00528         
                      00529 ;*** Shiv lcdconvfront ***
                      00530         
00F3                  00531 LCDConversionFront
00F3   1283           00532         bcf     STATUS,RP0
00F4   3015           00533         movlw   b'00010101'             ;RA0
                      00534         
00F5   009F           00535         movwf   ADCON0                  ;RA1
00F6   151F           00536         bsf     ADCON0,2                ;start conversion and wait for it to complete
00F7   191F           00537         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
00F8   2???           00538         goto    $-1
                      00539         
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F9   081E           00540         movf    ADRESH, W
00FA   00D1           00541         movwf   NumH
00FB   081E           00542         movf    ADRESL, W
00FC   00D2           00543         movwf   NumL
00FD   2???           00544         call    Clear_Display
00FE   2???           00545         Call    bin16_BCD
                      00546         PrintNumber     TenK
                          M         ;movf       number ,W
00FF   0853               M         movfw       TenK
0100   2???               M         call        DectoChar
0101   2???               M         call        WR_DATA
                      00547         PrintNumber     Thou
                          M         ;movf       number ,W
0102   0854               M         movfw       Thou
0103   2???               M         call        DectoChar
0104   2???               M         call        WR_DATA
                      00548         PrintNumber     Hund
                          M         ;movf       number ,W
0105   0855               M         movfw       Hund
0106   2???               M         call        DectoChar
0107   2???               M         call        WR_DATA
                      00549         PrintNumber     Tens
                          M         ;movf       number ,W
0108   0856               M         movfw       Tens
0109   2???               M         call        DectoChar
010A   2???               M         call        WR_DATA
                      00550         PrintNumber     Ones
                          M         ;movf       number ,W
010B   0857               M         movfw       Ones
010C   2???               M         call        DectoChar
010D   2???               M         call        WR_DATA
010E   1383           00551         BCF     STATUS, IRP
010F   3042           00552         movlw   0x42
0110   0084           00553         movwf   FSR
0111   3000           00554         movlw   0X0
0112   0360           00555         decf    NumOfBins,W
0113   0784           00556         addwf   FSR,F
0114   3003           00557         movlw   0X3
0115   02D3           00558         subwf   TenK
0116   3000           00559         movlw   0x0
0117   1803           00560         btfsc   STATUS, C
0118   3001           00561         movlw   0x1
0119   0080           00562         movwf   INDF
011A   0008           00563         return  
                      00564         
                      00565 ;******************************************
                      00566 ;       Sticker Print Modules
                      00567 ;*****************************************
                      00568         
011B                  00569 ReadStickers
011B   1507           00570         bsf     PORTC,2         ; gives RC2 5 volts
                      00571         
                      00572         PrintNumber     TenK
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;movf       number ,W
011C   0853               M         movfw       TenK
011D   2???               M         call        DectoChar
011E   2???               M         call        WR_DATA
                      00573                 
011F   151F           00574         bsf     ADCON0,2                ;start conversion and wait for it to complete
0120   191F           00575         btfsc   ADCON0,2                ;                                                               
                                                                                                                            
0121   2???           00576         goto    $-1
                      00577         
0122   081E           00578         movf    ADRESH, W
0123   00D1           00579         movwf   NumH
0124   081E           00580         movf    ADRESL, W
0125   00D2           00581         movwf   NumL
                      00582         
0126   2???           00583         call            Clear_Display
0127   2???           00584         call            bin16_BCD
0128   1383           00585         BCF             STATUS, IRP
0129   3043           00586         movlw           0x43
012A   0804           00587         movfw           FSR
012B   3000           00588         movlw           0x0
012C   0B5D           00589         decfsz          binCounter, W
012D   2???           00590         goto    $+3
012E   0008           00591         return
                      00592                         
012F   0784           00593         addwf           FSR,F
0130   3003           00594         movlw           0x3
0131   02D3           00595         subwf           TenK
0132   3000           00596         movlw           0x0
0133   1803           00597         btfsc           STATUS,C
0134   3001           00598         movlw           0x1
0135   0080           00599         movwf           INDF
                      00600         
                      00601         
                      00602         PrintNumber     Thou
                          M         ;movf       number ,W
0136   0854               M         movfw       Thou
0137   2???               M         call        DectoChar
0138   2???               M         call        WR_DATA
                      00603         PrintNumber     Hund
                          M         ;movf       number ,W
0139   0855               M         movfw       Hund
013A   2???               M         call        DectoChar
013B   2???               M         call        WR_DATA
                      00604         PrintNumber     Tens
                          M         ;movf       number ,W
013C   0856               M         movfw       Tens
013D   2???               M         call        DectoChar
013E   2???               M         call        WR_DATA
                      00605         PrintNumber     Ones
                          M         ;movf       number ,W
013F   0857               M         movfw       Ones
0140   2???               M         call        DectoChar
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0141   2???               M         call        WR_DATA
0142   2???           00606         call            HalfS
0143   2???           00607         call            HalfS
                      00608         
                      00609         
0144   1107           00610         bcf     PORTC,2         ; gives RC2 5 volts
0145   2???           00611         goto        ReadStickers
                      00612         
0146                  00613 ReadBW
                      00614                         
0146   151F           00615         bsf     ADCON0,2                ;start conversion and wait for it to complete
0147   191F           00616         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
0148   2???           00617         goto    $-1
                      00618         
0149   081E           00619         movf    ADRESH, W
014A   00D1           00620         movwf   NumH
014B   081E           00621         movf    ADRESL, W
014C   00D2           00622         movwf   NumL
                      00623         
014D   2???           00624         call            Clear_Display
014E   2???           00625         call            bin16_BCD
                      00626         PrintNumber     TenK
                          M         ;movf       number ,W
014F   0853               M         movfw       TenK
0150   2???               M         call        DectoChar
0151   2???               M         call        WR_DATA
                      00627         PrintNumber     Thou
                          M         ;movf       number ,W
0152   0854               M         movfw       Thou
0153   2???               M         call        DectoChar
0154   2???               M         call        WR_DATA
                      00628         PrintNumber     Hund
                          M         ;movf       number ,W
0155   0855               M         movfw       Hund
0156   2???               M         call        DectoChar
0157   2???               M         call        WR_DATA
                      00629         PrintNumber     Tens
                          M         ;movf       number ,W
0158   0856               M         movfw       Tens
0159   2???               M         call        DectoChar
015A   2???               M         call        WR_DATA
                      00630         PrintNumber     Ones
                          M         ;movf       number ,W
015B   0857               M         movfw       Ones
015C   2???               M         call        DectoChar
015D   2???               M         call        WR_DATA
015E   2???           00631         call            HalfS
015F   2???           00632         call            Clear_Display
                      00633         
                      00634 ;       BCF             STATUS, IRP
                      00635 ;       movlw           0x43
                      00636 ;       movfw           FSR
                      00637 ;       movlw           0x0
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00638 ;       decfsz          binCounter, W
                      00639 ;       goto    $+3
                      00640 ;       return
                      00641         
                      00642 ;       addwf           FSR,F
0160   3001           00643         movlw           0x1
0161   02D3           00644         subwf           TenK
0162   3000           00645         movlw           0x0
0163   1803           00646         btfsc           STATUS,C
0164   3001           00647         movlw           0x1
                      00648 ;       movwf           INDF
                      00649         
0165   0008           00650         return
                      00651         
0166                  00652 ReadColumn                      ; not using anymore cus apparently column is ultrasonic
                      00653         
0166   1507           00654         bsf     PORTC,2         ; gives RC2 5 volts
                      00655                 
0167   151F           00656         bsf     ADCON0,2                ;start conversion and wait for it to complete
0168   191F           00657         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
0169   2???           00658         goto    $-1
                      00659         
016A   081E           00660         movf    ADRESH, W
016B   00D1           00661         movwf   NumH
016C   081E           00662         movf    ADRESL, W
016D   00D2           00663         movwf   NumL
                      00664         
016E   2???           00665         call            Clear_Display
016F   2???           00666         call            bin16_BCD
                      00667         PrintNumber     TenK
                          M         ;movf       number ,W
0170   0853               M         movfw       TenK
0171   2???               M         call        DectoChar
0172   2???               M         call        WR_DATA
                      00668         PrintNumber     Thou
                          M         ;movf       number ,W
0173   0854               M         movfw       Thou
0174   2???               M         call        DectoChar
0175   2???               M         call        WR_DATA
                      00669         PrintNumber     Hund
                          M         ;movf       number ,W
0176   0855               M         movfw       Hund
0177   2???               M         call        DectoChar
0178   2???               M         call        WR_DATA
                      00670         PrintNumber     Tens
                          M         ;movf       number ,W
0179   0856               M         movfw       Tens
017A   2???               M         call        DectoChar
017B   2???               M         call        WR_DATA
                      00671         PrintNumber     Ones
                          M         ;movf       number ,W
017C   0857               M         movfw       Ones
017D   2???               M         call        DectoChar
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017E   2???               M         call        WR_DATA
017F   2???           00672         call            HalfS
0180   2???           00673         call            Clear_Display
                      00674         
0181   3001           00675         movlw           0x1
0182   02D3           00676         subwf           TenK                ;check tenK
0183   3000           00677         movlw           0x0
0184   1803           00678         btfsc           STATUS,C
0185   3001           00679         movlw           0x1
                      00680         
0186   0008           00681         return
                      00682         
                      00683 ;***************************************************
                      00684 ;       US Sensor Modules                           [TESTED]
                      00685 ;***************************************************
                      00686         
0187                  00687 Read1_US                    
                      00688          
0187   2???           00689         call            Read1_US1 
                      00690          
0188   2???           00691         call            Clear_Display
                      00692         
0189   080F           00693         movf            TMR1H, W
018A   00D1           00694         movwf           NumH
018B   080E           00695         movf            TMR1L, W
018C   00D2           00696         movwf           NumL
                      00697         
018D   2???           00698         call            bin16_BCD
                      00699         
                      00700         PrintNumber     TenK
                          M         ;movf       number ,W
018E   0853               M         movfw       TenK
018F   2???               M         call        DectoChar
0190   2???               M         call        WR_DATA
                      00701         PrintNumber     Thou
                          M         ;movf       number ,W
0191   0854               M         movfw       Thou
0192   2???               M         call        DectoChar
0193   2???               M         call        WR_DATA
                      00702         PrintNumber     Hund
                          M         ;movf       number ,W
0194   0855               M         movfw       Hund
0195   2???               M         call        DectoChar
0196   2???               M         call        WR_DATA
                      00703         PrintNumber     Tens
                          M         ;movf       number ,W
0197   0856               M         movfw       Tens
0198   2???               M         call        DectoChar
0199   2???               M         call        WR_DATA
                      00704         PrintNumber     Ones
                          M         ;movf       number ,W
019A   0857               M         movfw       Ones
019B   2???               M         call        DectoChar
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019C   2???               M         call        WR_DATA
                      00705         
019D   2???           00706         call            HalfS
                      00707         
019E   2???           00708         call            Clear_Display
                      00709         
019F   3001           00710         movlw           0x1
01A0   02D3           00711         subwf           TenK
01A1   3001           00712         movlw           0x1
01A2   1803           00713         btfsc           STATUS,C
01A3   3000           00714         movlw           0x0
                      00715         
                      00716 
01A4   0008           00717         return
                      00718         
01A5                  00719 Read1_US1
                      00720                 
01A5   018F           00721                 clrf    TMR1H
01A6   018E           00722                 clrf    TMR1L
                      00723                 
01A7   1008           00724                 bcf     UST1            ;make sure trigger is clear
01A8   2???           00725                 call    DELAY1
                      00726                 ;Delay_5ms
                      00727                 
01A9   1408           00728                 bsf     UST1            ;trigger high, bottom sensor
01AA   2???           00729                 call    delay10us               ;10us delay
01AB   1008           00730                 bcf     UST1            ;trigger low
                      00731                 
01AC   1E05           00732                 btfss   US1E1           ;wait for echo to go high
01AD   2???           00733                 goto    $-1
01AE   1410           00734                 bsf     T1CON,TMR1ON    ;turn on timer
                      00735                 
01AF   1A05           00736                 btfsc   US1E1           ;wait for echo to go low
01B0   2???           00737                 goto    $-1
                      00738                 
01B1   1010           00739                 bcf     T1CON,TMR1ON    ;turn off timer
01B2   0008           00740                 return
                      00741                 
01B3                  00742 Read2_US
                      00743          
01B3   2???           00744         call            Read2_US1 
                      00745          
01B4   2???           00746         call            Clear_Display
                      00747         
01B5   080F           00748         movf            TMR1H, W
01B6   00D1           00749         movwf           NumH
01B7   080E           00750         movf            TMR1L, W
01B8   00D2           00751         movwf           NumL
                      00752         
01B9   2???           00753         call            bin16_BCD
                      00754         
                      00755         PrintNumber     TenK
                          M         ;movf       number ,W
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BA   0853               M         movfw       TenK
01BB   2???               M         call        DectoChar
01BC   2???               M         call        WR_DATA
                      00756         PrintNumber     Thou
                          M         ;movf       number ,W
01BD   0854               M         movfw       Thou
01BE   2???               M         call        DectoChar
01BF   2???               M         call        WR_DATA
                      00757         PrintNumber     Hund
                          M         ;movf       number ,W
01C0   0855               M         movfw       Hund
01C1   2???               M         call        DectoChar
01C2   2???               M         call        WR_DATA
                      00758         PrintNumber     Tens
                          M         ;movf       number ,W
01C3   0856               M         movfw       Tens
01C4   2???               M         call        DectoChar
01C5   2???               M         call        WR_DATA
                      00759         PrintNumber     Ones
                          M         ;movf       number ,W
01C6   0857               M         movfw       Ones
01C7   2???               M         call        DectoChar
01C8   2???               M         call        WR_DATA
                      00760         
01C9   2???           00761         call            HalfS
                      00762         
01CA   2???           00763         call            Clear_Display
                      00764         
01CB   3001           00765         movlw           0x1
01CC   02D3           00766         subwf           TenK
01CD   3001           00767         movlw           0x1
01CE   1803           00768         btfsc           STATUS,C
01CF   3000           00769         movlw           0x0
                      00770         
                      00771         
01D0   2???           00772         goto            Read2_US
                      00773         
01D1                  00774 Read2_US1
01D1   018F           00775                 clrf    TMR1H
01D2   018E           00776                 clrf    TMR1L
                      00777                 
01D3   1088           00778                 bcf     UST2            ;make sure trigger is clear
01D4   2???           00779                 call    DELAY1
                      00780                 ;Delay_5ms
                      00781                 
01D5   1488           00782                 bsf     UST2            ;trigger high, bottom sensor
01D6   2???           00783                 call    delay10us               ;10us delay
01D7   1088           00784                 bcf     UST2            ;trigger low
                      00785                 
01D8   1E85           00786                 btfss   US1E2           ;wait for echo to go high
01D9   2???           00787                 goto    $-1
01DA   1410           00788                 bsf     T1CON,TMR1ON    ;turn on timer
                      00789                 
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DB   1A85           00790                 btfsc   US1E2           ;wait for echo to go low
01DC   2???           00791                 goto    $-1
                      00792                 
01DD   1010           00793                 bcf     T1CON,TMR1ON    ;turn off timer
01DE   0008           00794                 return
                      00795         
                      00796 
                      00797 ;*********************************************
                      00798 ; Keypad Modules
                      00799 ;*******************************************
                      00800          
                      00801 
01DF                  00802 Finalize
01DF   2???           00803         call        Clear_Display
                      00804         Display     WantResults
  0000                    M                 local   loop_
  0000                    M                 local   end_
01E0   01B3               M                 clrf    Table_Counter
01E1   0103               M                 clrw            
01E2   0833               M loop_   movf    Table_Counter,W
01E3   2???               M                 call    WantResults
01E4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01E5   1903               M                 btfsc   STATUS,Z
01E6   2???               M                         goto    end_
01E7   2???               M                 call    WR_DATA
01E8   0AB3               M                 incf    Table_Counter,F
01E9   2???               M                 goto    loop_
01EA                      M end_
01EA   2???           00805         call        Switch_Lines
                      00806         Display     WantRotate
  0000                    M                 local   loop_
  0000                    M                 local   end_
01EB   01B3               M                 clrf    Table_Counter
01EC   0103               M                 clrw            
01ED   0833               M loop_   movf    Table_Counter,W
01EE   2???               M                 call    WantRotate
01EF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01F0   1903               M                 btfsc   STATUS,Z
01F1   2???               M                         goto    end_
01F2   2???               M                 call    WR_DATA
01F3   0AB3               M                 incf    Table_Counter,F
01F4   2???               M                 goto    loop_
01F5                      M end_
                      00807         
                      00808         
01F5   2???           00809         goto        KeypadandLCD
                      00810         
01F6                  00811 ListDisplay
01F6   2???           00812         call        Clear_Display
                      00813         Display     Results1
  0000                    M                 local   loop_
  0000                    M                 local   end_
01F7   01B3               M                 clrf    Table_Counter
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F8   0103               M                 clrw            
01F9   0833               M loop_   movf    Table_Counter,W
01FA   2???               M                 call    Results1
01FB   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01FC   1903               M                 btfsc   STATUS,Z
01FD   2???               M                         goto    end_
01FE   2???               M                 call    WR_DATA
01FF   0AB3               M                 incf    Table_Counter,F
0200   2???               M                 goto    loop_
0201                      M end_
0201   2???           00814         call        Switch_Lines
                      00815         Display     Results2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0202   01B3               M                 clrf    Table_Counter
0203   0103               M                 clrw            
0204   0833               M loop_   movf    Table_Counter,W
0205   2???               M                 call    Results2
0206   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0207   1903               M                 btfsc   STATUS,Z
0208   2???               M                         goto    end_
0209   2???               M                 call    WR_DATA
020A   0AB3               M                 incf    Table_Counter,F
020B   2???               M                 goto    loop_
020C                      M end_
                      00816         
020C   0008           00817         return
                      00818                 
020D                  00819 BinsDisplay
020D   2???           00820         call        Clear_Display
                      00821         Display     Bins
  0000                    M                 local   loop_
  0000                    M                 local   end_
020E   01B3               M                 clrf    Table_Counter
020F   0103               M                 clrw            
0210   0833               M loop_   movf    Table_Counter,W
0211   2???               M                 call    Bins
0212   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0213   1903               M                 btfsc   STATUS,Z
0214   2???               M                         goto    end_
0215   2???               M                 call    WR_DATA
0216   0AB3               M                 incf    Table_Counter,F
0217   2???               M                 goto    loop_
0218                      M end_
                      00822                 
0218   0008           00823         return
                      00824         
0219                  00825 BinLocationsDisplay
0219   2???           00826         call        Clear_Display
                      00827         Display     BinLocations
  0000                    M                 local   loop_
  0000                    M                 local   end_
021A   01B3               M                 clrf    Table_Counter
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021B   0103               M                 clrw            
021C   0833               M loop_   movf    Table_Counter,W
021D   2???               M                 call    BinLocations
021E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
021F   1903               M                 btfsc   STATUS,Z
0220   2???               M                         goto    end_
0221   2???               M                 call    WR_DATA
0222   0AB3               M                 incf    Table_Counter,F
0223   2???               M                 goto    loop_
0224                      M end_
                      00828                 
0224   0008           00829         return
                      00830 
0225                  00831 OperationTimeDisplay
0225   2???           00832         call        Clear_Display
                      00833         Display     OperationTime
  0000                    M                 local   loop_
  0000                    M                 local   end_
0226   01B3               M                 clrf    Table_Counter
0227   0103               M                 clrw            
0228   0833               M loop_   movf    Table_Counter,W
0229   2???               M                 call    OperationTime
022A   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
022B   1903               M                 btfsc   STATUS,Z
022C   2???               M                         goto    end_
022D   2???               M                 call    WR_DATA
022E   0AB3               M                 incf    Table_Counter,F
022F   2???               M                 goto    loop_
0230                      M end_
                      00834                 
0230   0008           00835         return
                      00836         
0231                  00837 ShiftLeft
0231   3018           00838         movlw           b'00011000'             ;Move to the left
0232   2???           00839         call            WR_INS
0233   0008           00840         return
                      00841 
0234   2???           00842         goto    KeypadandLCD
                      00843         
0235                  00844 RTCDisplay
0235   2???           00845         call    show_RTC
                      00846         
0236   1886           00847         btfsc           PORTB,1     ;Wait until data is available from the keypad
0237   0008           00848         return
0238   1886           00849         btfsc           PORTB,1     ;Wait until data is available from the keypad
0239   0008           00850         return
023A   1886           00851         btfsc           PORTB,1     ;Wait until data is available from the keypad
023B   0008           00852         return
023C   1886           00853         btfsc           PORTB,1     ;Wait until data is available from the keypad
023D   0008           00854         return
023E   2???           00855         goto        RTCDisplay
                      00856         
023F                  00857 StickerDisplay
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00858         
                      00859         ;movlw      0x1
                      00860         ;movwf      Front1
                      00861         
                      00862         
                      00863         
023F   2???           00864         call        Clear_Display
0240   3000           00865         movlw       0x0
0241   00DF           00866         movwf       counter
0242   1383           00867         BCF         STATUS,IRP
0243   3043           00868         movlw       0x43                                ;0x43 is the front1
                      00869                                                         ;0x4A should be the back1       
0244   0084           00870         movwf       FSR
0245   085D           00871         movfw       binCounter
0246   00DE           00872         movwf       countdown
                      00873         PrintNumber     TenK
                          M         ;movf       number ,W
0247   0853               M         movfw       TenK
0248   2???               M         call        DectoChar
0249   2???               M         call        WR_DATA
024A   2???           00874         call        ReadStickers
                      00875         
024B                  00876 AddBin
024B   2???           00877         Call Clear_Display
024C   0AE0           00878         incf    NumOfBins,F
                      00879         PrintNumber     NumOfBins
                          M         ;movf       number ,W
024D   0860               M         movfw       NumOfBins
024E   2???               M         call        DectoChar
024F   2???               M         call        WR_DATA
0250   2???           00880         Call        HalfS
0251   3007           00881         movlw   0X7                     ;checks if max of 7 bins has been reached
0252   0260           00882         subwf   NumOfBins,W             
0253   1903           00883         btfsc   STATUS,Z
0254   2???           00884         goto    Finalize
0255   0008           00885         return
                      00886         
0256                  00887 Stickers
0256   2???           00888         call            Clear_Display
0257   3000           00889         movlw           0X0
0258   00DF           00890         movwf           counter
0259   1383           00891         BCF             STATUS, IRP
025A   3041           00892         movlw           0x41
025B   0084           00893         movwf           FSR
025C   0860           00894         movfw           NumOfBins
025D   00DE           00895         movwf           countdown
025E                  00896 FrontLoop       
025E   0A84           00897                 INCF            FSR,1
025F   0ADF           00898                 incf            counter 
                      00899                 PrintNumber     counter
                          M         ;movf       number ,W
0260   085F               M         movfw       counter
0261   2???               M         call        DectoChar
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0262   2???               M         call        WR_DATA
0263   2???           00900                 call            HalfS
0264   0800           00901                 movfw           INDF
                      00902                 PrintCol        W
0265   0800               M         movfw       W
0266   2???               M         call        StickerColours
0267   2???               M         call        WR_DATA
0268   0BDE           00903                 decfsz          countdown,F
0269   2???           00904                 goto            FrontLoop
026A   0008           00905 Next            return
                      00906                 
026B                  00907 LEDControlON
                      00908         
026B   1862           00909         btfsc       LEDcounter0,0
026C   2???           00910         goto        $+4
026D   1406           00911         bsf         LED
026E   1462           00912         bsf         LEDcounter0,0
026F   0008           00913         return
                      00914         
                      00915         
0270   1006           00916         bcf         LED
0271   1062           00917         bcf         LEDcounter0,0
0272   0008           00918         return
                      00919         
                      00920         
0273                  00921 DisplayBlackWhiteIR1
                      00922         
0273   30C5           00923         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
0274   009F           00924         movwf   ADCON0  
                      00925                 
0275   2???           00926         call            ReadBW  
0276   00C2           00927         movwf           Front1
                      00928         PrintCol        Front1
0277   0842               M         movfw       Front1
0278   2???               M         call        StickerColours
0279   2???               M         call        WR_DATA
027A   2???           00929         call            HalfS
027B   2???           00930         call            HalfS
                      00931         
027C   2???           00932         goto            DisplayBlackWhiteIR1
                      00933         
027D                  00934 DisplayBlackWhiteIR2
                      00935         
027D   30CD           00936         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
027E   009F           00937         movwf   ADCON0  
                      00938         
027F   2???           00939         call            ReadBW  
0280   00C2           00940         movwf           Front1
                      00941         PrintCol        Front1
0281   0842               M         movfw       Front1
0282   2???               M         call        StickerColours
0283   2???               M         call        WR_DATA
0284   2???           00942         call            HalfS
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0285   2???           00943         call            HalfS
                      00944         
0286   0008           00945         return
                      00946         
0287                  00947 pollColumnSensor        ;checks to see if column present
                      00948  
0287   2???           00949         call            ReadColumn
0288   00D9           00950         movwf           isColumnThere               ;sets the column bit 1 or 0
                      00951         PrintYN         isColumnThere
0289   0859               M         movfw       isColumnThere
028A   2???               M         call        ColumnValues
028B   2???               M         call        WR_DATA
028C   2???           00952         call            HalfS
028D   2???           00953         call            HalfS
                      00954         
028E   0008           00955         return
                      00956         
028F                  00957 DisplayUSSensor1
                      00958         
028F   2???           00959         call            ClrLCD
0290   2???           00960         call            Read1_US
0291   2???           00961         call            ClrLCD
0292   00DA           00962         movwf           isBinThere                  ;sets the bin bit 1 or 0
                      00963         PrintYN         isBinThere
0293   085A               M         movfw       isBinThere
0294   2???               M         call        ColumnValues
0295   2???               M         call        WR_DATA
0296   2???           00964         call            HalfS
0297   2???           00965         call            HalfS
                      00966         
0298   0008           00967         return
                      00968         
0299                  00969 DisplayUSSensor2
                      00970         
0299   2???           00971         call            Read2_US
029A   2???           00972         call            ClrLCD
029B   00D9           00973         movwf           isColumnThere               ;sets the bin bit 1 or 0
                      00974         PrintYN         isColumnThere
029C   0859               M         movfw       isColumnThere
029D   2???               M         call        ColumnValues
029E   2???               M         call        WR_DATA
029F   2???           00975         call            HalfS
02A0   2???           00976         call            HalfS
                      00977         
02A1   0008           00978         return
                      00979         
02A2                  00980 ArmRotation1
                      00981         
02A2   1863           00982         btfsc       LEDcounter1,0
02A3   2???           00983         goto        $+4
02A4   1287           00984         bcf             Arm1
02A5   1463           00985         bsf         LEDcounter1,0
02A6   0008           00986         return
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00987         
02A7   1687           00988         bsf             Arm1
02A8   1063           00989         bcf         LEDcounter1,0
02A9   0008           00990         return
                      00991         
02AA                  00992 ArmRotation2
                      00993         
02AA   1864           00994         btfsc       LEDcounter2,0
02AB   2???           00995         goto        $+4
02AC   1707           00996         bsf             Arm2
02AD   1464           00997         bsf         LEDcounter2,0
02AE   0008           00998         return
                      00999         
                      01000         
02AF   1307           01001         bcf             Arm2
02B0   1064           01002         bcf         LEDcounter2,0
02B1   0008           01003         return
                      01004         
02B2                  01005 ArmRotation2Backwards
                      01006         
02B2   1863           01007         btfsc       LEDcounter1,0
02B3   2???           01008         goto        $+4
02B4   1586           01009         bsf             Arm2Backwards
02B5   1463           01010         bsf         LEDcounter1,0
02B6   0008           01011         return
                      01012         
02B7   1186           01013         bcf             Arm2Backwards
02B8   1063           01014         bcf         LEDcounter1,0
02B9   0008           01015         return
                      01016         
                      01017         
02BA                  01018 PWMSTART1       
                      01019         
                      01020     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01021     
                      01022     ;save   pr2 value so that you can zero it after
                      01023     
                      01024  
                      01025     
02BA   1865           01026     btfsc           LEDcounter3,0
02BB   2???           01027     goto            $+4
02BC   0197           01028     clrf            CCP1CON
02BD   1465           01029     bsf             LEDcounter3,0
02BE   0008           01030     return
                      01031     
02BF   1683 1303      01032     BANKSEL TRISC
02C1   1107           01033     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01034     
02C2   0817           01035     MOVF     CCP1CON,W          ;set CCP1 as PWM
02C3   39F0           01036     ANDLW    0xF0
02C4   380C           01037     IORLW    0x0C
02C5   0097           01038     MOVWF    CCP1CON
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01039 
02C6   0812           01040     movfw   PR2
02C7   00D0           01041     movwf   pr2temp
                      01042     
                      01043     ;11000011
02C8   30C3           01044     MOVLW    b'11000011'        ;set highest PWM value
02C9   1683 1303      01045     BANKSEL  PR2                
02CB   0092           01046     MOVWF    PR2                
02CC   1283 1303      01047     BANKSEL  TMR2               
                      01048     
02CE   1492           01049     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01050     
02CF   0195           01051     CLRF    CCPR1L              ;set PWM to zero
                      01052     
02D0   1712           01053     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
02D1   1692           01054     BSF     T2CON, TOUTPS2
02D2   1612           01055     BSF     T2CON, TOUTPS1
02D3   1592           01056     BSF     T2CON, TOUTPS0
                      01057     
                      01058     ; SET PWM duty cycle
                      01059     ;01001110
02D4   1697           01060     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
02D5   1617           01061     BSF     CCP1CON, 4
                      01062     MOVLF   B'01100001', CCPR1L                 ; previous was 01101
02D6   3061               M     MOVLW  B'01100001'  ; move literal into working register
02D7   0095               M     MOVWF   CCPR1L      ; move working register into reg
02D8   1597           01063     BSF     CCP1CON, 3
02D9   1517           01064     BSF     CCP1CON, 2
                      01065     
02DA   1512           01066     BSF     T2CON, TMR2ON       ;and start the timer running
                      01067     
02DB   1065           01068     bcf             LEDcounter3,0
                      01069     
02DC   0008           01070     return
                      01071     
02DD                  01072 PWMSTART2
                      01073     
                      01074     ;************ SECOND PWM - Positive one ******************************
                      01075     
02DD   1C66           01076     btfss           LEDcounter4,0
02DE   2???           01077     goto            $+4
02DF   019D           01078     clrf            CCP2CON
                      01079     ;bcf                    PORTC,1
02E0   1066           01080     bcf             LEDcounter4,0
02E1   0008           01081     return
                      01082     
                      01083  
                      01084     
02E2   1683 1303      01085     BANKSEL TRISC
02E4   1087           01086     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01087     
02E5   081D           01088     MOVF     CCP2CON,W          ;set CCP2 as PWM
02E6   39F0           01089     ANDLW    0xF0
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E7   380C           01090     IORLW    0x0C
02E8   009D           01091     MOVWF    CCP2CON
                      01092     
                      01093     ;11000011
02E9   30C3           01094     MOVLW    b'11000011'        ;set highest PWM value
02EA   1683 1303      01095     BANKSEL  PR2                
02EC   0092           01096     MOVWF    PR2                
02ED   1283 1303      01097     BANKSEL  TMR2               
                      01098     
02EF   1492           01099     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01100     
02F0   019B           01101     CLRF    CCPR2L              ;set PWM to zero
                      01102     
02F1   1712           01103     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
02F2   1692           01104     BSF     T2CON, TOUTPS2
02F3   1612           01105     BSF     T2CON, TOUTPS1
02F4   1592           01106     BSF     T2CON, TOUTPS0
                      01107     
                      01108     ; SET PWM duty cycle
                      01109     ;01001110
02F5   169D           01110     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
02F6   161D           01111     BSF     CCP2CON, 4
02F7   3061           01112     MOVLW   B'01100001'
02F8   009B           01113     MOVWF   CCPR2L      
02F9   159D           01114     BSF     CCP2CON, 3
02FA   151D           01115     BSF     CCP2CON, 2
                      01116     
02FB   1512           01117     BSF     T2CON, TMR2ON       ;and start the timer running
02FC   1283           01118     BCF     STATUS,RP0
                      01119     
                      01120     ;bsf                    PORTC,1
                      01121     
02FD   1466           01122     bsf             LEDcounter4,0
                      01123     
02FE   0008           01124     return
                      01125     
02FF                  01126 PWMSTOP
                      01127     
02FF   0197           01128     clrf   CCP1CON
0300   019D           01129     clrf   CCP2CON
0301   0850           01130     movfw   pr2temp
0302   0092           01131     movwf   PR2
                      01132     
0303   0008           01133     return
                      01134         
                      01135         
                      01136 ;***************************************
                      01137 ; LCD control
                      01138 ;***************************************
0304                  01139 Switch_Lines
0304   30C0           01140                 movlw   B'11000000'
0305   2???           01141                 call    WR_INS
0306   0008           01142                 return
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01143 
0307                  01144 Clear_Display
0307   3001           01145                 movlw   B'00000001'
0308   2???           01146                 call    WR_INS
0309   0008           01147                 return
                      01148 
                      01149 ;***************************************
                      01150 ; Delay 0.5s
                      01151 ;***************************************
030A                  01152 HalfS   
  0000                01153         local   HalfS_0
030A   3088           01154       movlw 0x88
030B   00B0           01155       movwf COUNTH
030C   30BD           01156       movlw 0xBD
030D   00B1           01157       movwf COUNTM
030E   3003           01158       movlw 0x03
030F   00B2           01159       movwf COUNTL
                      01160 
0310                  01161 HalfS_0
0310   0BB0           01162       decfsz COUNTH, f
0311   2???           01163       goto   $+2
0312   0BB1           01164       decfsz COUNTM, f
0313   2???           01165       goto   $+2
0314   0BB2           01166       decfsz COUNTL, f
0315   2???           01167       goto   HalfS_0
                      01168 
0316   2???           01169       goto $+1
0317   0000           01170       nop
0318   0000           01171       nop
0319   0008           01172                 return
                      01173                 
                      01174 ;***************************************
                      01175 ; Delay: ~ 5ms
                      01176 ;***************************************
031A                  01177 DELAY1 
                      01178                                 ;4998 cycles
031A   30E7           01179         movlw   0xE7
031B   00B5           01180         movwf   lcd_d1
031C   3004           01181         movlw   0x04
031D   00B6           01182         movwf   lcd_d2
031E                  01183 Delay_0
031E   0BB5           01184         decfsz  lcd_d1, f
031F   2???           01185         goto    $+2
0320   0BB6           01186         decfsz  lcd_d2, f
0321   2???           01187         goto    Delay_0
                      01188 
                      01189                         ;2 cycles
0322   2???           01190         goto    $+1
0323   0008           01191         return
                      01192         
                      01193 ;***************************************
                      01194 ; Delay: ~10us
                      01195 ;***************************************
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0324                  01196 delay10us
0324   3014           01197     movlw       d'20'
0325   00E1           01198     movwf       delay3
0326                  01199 Delay10usLoop
0326   0BE1           01200     decfsz      delay3, f
0327   2???           01201     goto        Delay10usLoop
0328   0008           01202     return
                      01203 
                      01204     
                      01205 ;************************************
                      01206 ; RTC Sublabels
                      01207 ;************************************
                      01208     
0329                  01209 show_RTC
                      01210                 ;clear LCD screen
0329   3001           01211                 movlw   b'00000001'
032A   2???           01212                 call    WR_INS
                      01213 
                      01214                 ;Get year
032B   3032           01215                 movlw   "2"                             ;First line shows 20**/**/**
032C   2???           01216                 call    WR_DATA
032D   3030           01217                 movlw   "0"
032E   2???           01218                 call    WR_DATA
                      01219                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
032F   3006               M         movlw   0x06
0330   1283 1303          M         banksel 0x73
0332   00F3               M         movwf   0x73
0333   2???               M         call    read_rtc
0334   1283 1303          M         banksel 0x75
0336   0875               M         movf    0x75,w
0337   2???               M         call    rtc_convert   
0338   0877           01220                 movfw   0x77
0339   2???           01221                 call    WR_DATA
033A   0878           01222                 movfw   0x78
033B   2???           01223                 call    WR_DATA
                      01224 
033C   302F           01225                 movlw   "/"
033D   2???           01226                 call    WR_DATA
                      01227 
                      01228                 ;Get month
                      01229                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

033E   3005               M         movlw   0x05
033F   1283 1303          M         banksel 0x73
0341   00F3               M         movwf   0x73
0342   2???               M         call    read_rtc
0343   1283 1303          M         banksel 0x75
0345   0875               M         movf    0x75,w
0346   2???               M         call    rtc_convert   
0347   0877           01230                 movfw   0x77
0348   2???           01231                 call    WR_DATA
0349   0878           01232                 movfw   0x78
034A   2???           01233                 call    WR_DATA
                      01234 
034B   302F           01235                 movlw   "/"
034C   2???           01236                 call    WR_DATA
                      01237 
                      01238                 ;Get day
                      01239                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
034D   3004               M         movlw   0x04
034E   1283 1303          M         banksel 0x73
0350   00F3               M         movwf   0x73
0351   2???               M         call    read_rtc
0352   1283 1303          M         banksel 0x75
0354   0875               M         movf    0x75,w
0355   2???               M         call    rtc_convert   
0356   0877           01240                 movfw   0x77
0357   2???           01241                 call    WR_DATA
0358   0878           01242                 movfw   0x78
0359   2???           01243                 call    WR_DATA
                      01244 
035A   30C0           01245                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
035B   2???           01246                 call    WR_INS
                      01247 
                      01248                 ;Get hour
                      01249                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
035C   3002               M         movlw   0x02
035D   1283 1303          M         banksel 0x73
035F   00F3               M         movwf   0x73
0360   2???               M         call    read_rtc
0361   1283 1303          M         banksel 0x75
0363   0875               M         movf    0x75,w
0364   2???               M         call    rtc_convert   
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0365   0877           01250                 movfw   0x77
0366   2???           01251                 call    WR_DATA
0367   0878           01252                 movfw   0x78
0368   2???           01253                 call    WR_DATA
0369   303A           01254                 movlw                   ":"
036A   2???           01255                 call    WR_DATA
                      01256 
                      01257                 ;Get minute             
                      01258                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
036B   3001               M         movlw   0x01
036C   1283 1303          M         banksel 0x73
036E   00F3               M         movwf   0x73
036F   2???               M         call    read_rtc
0370   1283 1303          M         banksel 0x75
0372   0875               M         movf    0x75,w
0373   2???               M         call    rtc_convert   
0374   0877           01259                 movfw   0x77
0375   2???           01260                 call    WR_DATA
0376   0878           01261                 movfw   0x78
0377   2???           01262                 call    WR_DATA         
0378   303A           01263                 movlw                   ":"
0379   2???           01264                 call    WR_DATA
                      01265                 
                      01266                 ;Get seconds
                      01267                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
037A   3000               M         movlw   0x00
037B   1283 1303          M         banksel 0x73
037D   00F3               M         movwf   0x73
037E   2???               M         call    read_rtc
037F   1283 1303          M         banksel 0x75
0381   0875               M         movf    0x75,w
0382   2???               M         call    rtc_convert   
0383   0877           01268                 movfw   0x77
0384   2???           01269                 call    WR_DATA
0385   0878           01270                 movfw   0x78
0386   2???           01271                 call    WR_DATA
                      01272                 
0387   2???           01273                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
                      01274                 ;goto   show_RTC                ;use return instead to check for key press
0388   0008           01275                 return
                      01276 
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01277 ;***************************************
                      01278 ; Setup RTC with time defined by user
                      01279 ;***************************************
0389                  01280 set_rtc_time
                      01281 
                      01282                 rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0389   1283 1303          M         banksel         0x74
038B   01F4               M         clrf            0x74
038C   1283 1303          M         banksel         0x73
038E   01F3               M         clrf            0x73
038F   2???               M     call        write_rtc               ;Write 0 to Seconds
0390   1283 1303          M         banksel         0x73
0392   0AF3               M     incf        0x73                    ;Set register address to 1
0393   2???               M         call            write_rtc
0394   1283 1303          M         banksel         0x73
0396   0AF3               M     incf        0x73                    ;Set register address to 2
0397   2???               M         call            write_rtc
0398   1283 1303          M         banksel         0x73
039A   0AF3               M     incf        0x73                    ;Set register address to 3
039B   2???               M         call            write_rtc
039C   1283 1303          M         banksel         0x73
039E   0AF3               M     incf        0x73                    ;Set register address to 4
039F   2???               M         call            write_rtc
03A0   1283 1303          M         banksel         0x73
03A2   0AF3               M     incf        0x73                    ;Set register address to 5
03A3   2???               M         call            write_rtc
03A4   1283 1303          M         banksel         0x73
03A6   0AF3               M     incf        0x73                    ;Set register address to 6
03A7   2???               M         call            write_rtc
                      01283 
                      01284                 rtc_set 0x00,   B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03A8   1283 1303          M         banksel 0x73
03AA   3000               M         movlw   0x00
03AB   00F3               M         movwf   0x73
03AC   1283 1303          M         banksel 0x74
03AE   3080               M         movlw   B'10000000'
03AF   00F4               M         movwf   0x74    
03B0   2???               M         call    write_rtc
                      01285 
                      01286                 ;set time 
                      01287                 rtc_set 0x06,   B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       address specified by addliteral in the RTC
03B1   1283 1303          M         banksel 0x73
03B3   3006               M         movlw   0x06
03B4   00F3               M         movwf   0x73
03B5   1283 1303          M         banksel 0x74
03B7   3016               M         movlw   B'00010110'
03B8   00F4               M         movwf   0x74    
03B9   2???               M         call    write_rtc
                      01288                 rtc_set 0x05,   B'00000010'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03BA   1283 1303          M         banksel 0x73
03BC   3005               M         movlw   0x05
03BD   00F3               M         movwf   0x73
03BE   1283 1303          M         banksel 0x74
03C0   3002               M         movlw   B'00000010'
03C1   00F4               M         movwf   0x74    
03C2   2???               M         call    write_rtc
                      01289                 rtc_set 0x04,   B'00010110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03C3   1283 1303          M         banksel 0x73
03C5   3004               M         movlw   0x04
03C6   00F3               M         movwf   0x73
03C7   1283 1303          M         banksel 0x74
03C9   3016               M         movlw   B'00010110'
03CA   00F4               M         movwf   0x74    
03CB   2???               M         call    write_rtc
                      01290                 rtc_set 0x03,   B'00100001'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03CC   1283 1303          M         banksel 0x73
03CE   3003               M         movlw   0x03
03CF   00F3               M         movwf   0x73
03D0   1283 1303          M         banksel 0x74
03D2   3021               M         movlw   B'00100001'
03D3   00F4               M         movwf   0x74    
03D4   2???               M         call    write_rtc
                      01291                 rtc_set 0x02,   B'00000001'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D5   1283 1303          M         banksel 0x73
03D7   3002               M         movlw   0x02
03D8   00F3               M         movwf   0x73
03D9   1283 1303          M         banksel 0x74
03DB   3001               M         movlw   B'00000001'
03DC   00F4               M         movwf   0x74    
03DD   2???               M         call    write_rtc
                      01292                 rtc_set 0x01,   B'00110101'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03DE   1283 1303          M         banksel 0x73
03E0   3001               M         movlw   0x01
03E1   00F3               M         movwf   0x73
03E2   1283 1303          M         banksel 0x74
03E4   3035               M         movlw   B'00110101'
03E5   00F4               M         movwf   0x74    
03E6   2???               M         call    write_rtc
                      01293                 rtc_set 0x00,   B'01010000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03E7   1283 1303          M         banksel 0x73
03E9   3000               M         movlw   0x00
03EA   00F3               M         movwf   0x73
03EB   1283 1303          M         banksel 0x74
03ED   3050               M         movlw   B'01010000'
03EE   00F4               M         movwf   0x74    
03EF   2???               M         call    write_rtc
03F0   0008           01294                 return
                      01295 
                      01296 
                      01297 ;***************************************
                      01298 ; Delay 1s
                      01299 ;***************************************
03F1                  01300 OneS
  0000                01301                 local   OneS_0
03F1   3010           01302       movlw 0x10
03F2   00B0           01303       movwf COUNTH
03F3   307A           01304       movlw 0x7A
03F4   00B1           01305       movwf COUNTM
03F5   3006           01306       movlw 0x06
03F6   00B2           01307       movwf COUNTL
                      01308 
03F7                  01309 OneS_0
03F7   0BB0           01310       decfsz COUNTH, f
03F8   2???           01311       goto   $+2
03F9   0BB1           01312       decfsz COUNTM, f
03FA   2???           01313       goto   $+2
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03FB   0BB2           01314       decfsz COUNTL, f
03FC   2???           01315       goto   OneS_0
                      01316 
03FD   2???           01317       goto $+1
03FE   0000           01318       nop
03FF   0000           01319       nop
0400   0008           01320                 return
                      01321 
                      01322 ;***************************************
                      01323 ; Print sticker values
                      01324 ;***************************************
0401                  01325 PrintBlackSticker
0401   3000           01326         movlw       b'0'
0402   2???           01327         call        StickerColours
0403   2???           01328         call        WR_DATA
0404   0008           01329         return
                      01330 
0405                  01331 PrintWhiteSticker
0405   3001           01332         movlw       b'1'
0406   2???           01333         call        StickerColours
0407   2???           01334         call        WR_DATA
0408   0008           01335         return
                      01336         
                      01337 ;***************************************
                      01338 ; Look up table
                      01339 ;***************************************
                      01340     
0409                  01341 Welcome_Msg
                      01342         
                      01343         ;Change Page
0409   00BA           01344         movwf   Temp
040A   30??           01345         movlw   HIGH Welcome_MsgEntries
040B   008A           01346         movwf   PCLATH
040C   083A           01347         movf    Temp,w
040D   3E??           01348         addlw   LOW Welcome_MsgEntries
040E   1803           01349         btfsc   STATUS,C
040F   0A8A           01350             incf    PCLATH,f
0410   0082           01351         movwf   PCL     
0411   0782           01352         addwf    PCL,F
0412                  01353 Welcome_MsgEntries
0412   3431 343A 3453 01354         dt        "1:Start|#/D:PWM|2:Col|3:B/W", 0
       3474 3461 3472 
       3474 347C 3423 
       342F 3444 343A 
       3450 3457 344D 
       347C 3432 343A 
       3443 346F 346C 
       347C 3433 343A 
       3442 342F 3457 
       3400 
                      01355         
042E                  01356 Welcome_Msg2
                      01357         
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01358         ;Change Page
042E   00BA           01359         movwf   Temp
042F   30??           01360         movlw   HIGH Welcome_Msg2Entries
0430   008A           01361         movwf   PCLATH
0431   083A           01362         movf    Temp,w
0432   3E??           01363         addlw   LOW Welcome_Msg2Entries
0433   1803           01364         btfsc   STATUS,C
0434   0A8A           01365             incf    PCLATH,f
0435   0082           01366         movwf   PCL     
0436   0782           01367         addwf    PCL,F
0437                  01368 Welcome_Msg2Entries
0437   3435 343A 3441 01369         dt        "5:AddBin|6:Stickers|7:B/Wstore", 0
       3464 3464 3442 
       3469 346E 347C 
       3436 343A 3453 
       3474 3469 3463 
       346B 3465 3472 
       3473 347C 3437 
       343A 3442 342F 
       3457 3473 3474 
       346F 3472 3465 
       3400 
                      01370         
0456                  01371 Operation
                      01372         
                      01373         ;Change Page
0456   00BA           01374         movwf    Temp
0457   30??           01375         movlw   HIGH OperationEntries
0458   008A           01376         movwf   PCLATH
0459   083A           01377         movf    Temp,w
045A   3E??           01378         addlw   LOW OperationEntries
045B   1803           01379         btfsc   STATUS,C
045C   0A8A           01380             incf    PCLATH,f
045D   0082           01381         movwf   PCL
045E   0782           01382         addwf    PCL,F
045F                  01383 OperationEntries
045F   344F 3470 3465 01384         dt        "Operating...",0
       3472 3461 3474 
       3469 346E 3467 
       342E 342E 342E 
       3400 
                      01385 
046C                  01386 WantResults
                      01387         
                      01388         ;Change Page
046C   00BA           01389         movwf    Temp
046D   30??           01390         movlw   HIGH WantResultsEntries
046E   008A           01391         movwf   PCLATH
046F   083A           01392         movf    Temp,w
0470   3E??           01393         addlw   LOW WantResultsEntries
0471   1803           01394         btfsc   STATUS,C
0472   0A8A           01395             incf    PCLATH,f
0473   0082           01396         movwf   PCL
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0474   0782           01397         addwf    PCL,F
0475                  01398 WantResultsEntries
0475   3450 3472 3465 01399         dt        "Press 2 to display results",0
       3473 3473 3420 
       3432 3420 3474 
       346F 3420 3464 
       3469 3473 3470 
       346C 3461 3479 
       3420 3472 3465 
       3473 3475 346C 
       3474 3473 3400 
                      01400 
                      01401 
0490                  01402 WantRotate
                      01403                 
                      01404         ;Change Page
0490   00BA           01405         movwf    Temp
0491   30??           01406         movlw   HIGH WantRotateEntries
0492   008A           01407         movwf   PCLATH
0493   083A           01408         movf    Temp,w
0494   3E??           01409         addlw   LOW WantRotateEntries
0495   1803           01410         btfsc   STATUS,C
0496   0A8A           01411             incf    PCLATH,f
0497   0082           01412         movwf   PCL
0498   0782           01413         addwf    PCL,F
0499                  01414 WantRotateEntries
0499   3450 3472 3465 01415         dt        "Press A to rotate screen",0
       3473 3473 3420 
       3441 3420 3474 
       346F 3420 3472 
       346F 3474 3461 
       3474 3465 3420 
       3473 3463 3472 
       3465 3465 346E 
       3400 
                      01416         
04B2                  01417 Results1 
                      01418                 
                      01419         ;Change Page
04B2   00BA           01420         movwf    Temp
04B3   30??           01421         movlw   HIGH Results1Entries
04B4   008A           01422         movwf   PCLATH
04B5   083A           01423         movf    Temp,w
04B6   3E??           01424         addlw   LOW Results1Entries
04B7   1803           01425         btfsc   STATUS,C
04B8   0A8A           01426             incf    PCLATH,f
04B9   0082           01427         movwf   PCL
04BA   0782           01428         addwf    PCL,F
04BB                  01429 Results1Entries 
04BB   3433 343A 3420 01430         dt        "3: PWM test, 4: Sensor Test",0
       3450 3457 344D 
       3420 3474 3465 
       3473 3474 342C 
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3420 3434 343A 
       3420 3453 3465 
       346E 3473 346F 
       3472 3420 3454 
       3465 3473 3474 
       3400 
                      01431         
04D7                  01432 Results2
                      01433         
                      01434         ;Change Page
04D7   00BA           01435         movwf    Temp
04D8   30??           01436         movlw   HIGH Results2Entries
04D9   008A           01437         movwf   PCLATH
04DA   083A           01438         movf    Temp,w
04DB   3E??           01439         addlw   LOW Results2Entries
04DC   1803           01440         btfsc   STATUS,C
04DD   0A8A           01441             incf    PCLATH,f
04DE   0082           01442         movwf   PCL     
04DF   0782           01443         addwf    PCL,F
04E0                  01444 Results2Entries 
04E0   3436 343A 3420 01445         dt        "6: bin locations, 8: operation time",0
       3462 3469 346E 
       3420 346C 346F 
       3463 3461 3474 
       3469 346F 346E 
       3473 342C 3420 
       3438 343A 3420 
       346F 3470 3465 
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
       346D 3465 3400 
                      01446         
0504                  01447 Bins
                      01448         ;Change Page
0504   00BA           01449         movwf    Temp
0505   30??           01450         movlw   HIGH BinsEntries
0506   008A           01451         movwf   PCLATH
0507   083A           01452         movf    Temp,w
0508   3E??           01453         addlw   LOW BinsEntries
0509   1803           01454         btfsc   STATUS,C
050A   0A8A           01455             incf    PCLATH,f
050B   0082           01456         movwf   PCL     
050C   0782           01457         addwf    PCL,F
050D                  01458 BinsEntries
050D   3434 3420 3462 01459         dt        "4 bins in total",0
       3469 346E 3473 
       3420 3469 346E 
       3420 3474 346F 
       3474 3461 346C 
       3400 
                      01460         
051D                  01461 StickerStatus
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01462         
                      01463         ;Change Page
051D   00BA           01464         movwf    Temp
051E   30??           01465         movlw   HIGH StickerStatusEntries
051F   008A           01466         movwf   PCLATH
0520   083A           01467         movf    Temp,w
0521   3E??           01468         addlw   LOW StickerStatusEntries
0522   1803           01469         btfsc   STATUS,C
0523   0A8A           01470             incf    PCLATH,f
0524   0082           01471         movwf   PCL     
0525   0782           01472         addwf    PCL,F
0526                  01473 StickerStatusEntries
0526   3442 3442 3457 01474         dt        "BBWBWWWB",0
       3442 3457 3457 
       3457 3442 3400 
                      01475         
052F                  01476 BinLocations
                      01477         ;Change Page
052F   00BA           01478         movwf    Temp
0530   30??           01479         movlw   HIGH BinLocationsEntries
0531   008A           01480         movwf   PCLATH
0532   083A           01481         movf    Temp,w
0533   3E??           01482         addlw   LOW BinLocationsEntries
0534   1803           01483         btfsc   STATUS,C
0535   0A8A           01484             incf    PCLATH,f
0536   0082           01485         movwf   PCL     
0537   0782           01486         addwf    PCL,F
0538                  01487 BinLocationsEntries
0538   3430 342E 3433 01488         dt        "0.35,0.56,0.79",0
       3435 342C 3430 
       342E 3435 3436 
       342C 3430 342E 
       3437 3439 3400 
                      01489         
0547                  01490 OperationTime
                      01491         ;Change Page
0547   00BA           01492         movwf    Temp
0548   30??           01493         movlw   HIGH OperationTimeEntries
0549   008A           01494         movwf   PCLATH
054A   083A           01495         movf    Temp,w
054B   3E??           01496         addlw   LOW OperationTimeEntries
054C   1803           01497         btfsc   STATUS,C
054D   0A8A           01498             incf    PCLATH,f
054E   0082           01499         movwf   PCL     
054F   0782           01500         addwf    PCL,F
0550                  01501 OperationTimeEntries
0550   344D 346F 3476 01502         dt        "Moving Arm",0
       3469 346E 3467 
       3420 3441 3472 
       346D 3400 
                      01503         
055B                  01504 ReceivedInput
                      01505         ;Change Page
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

055B   00BA           01506         movwf    Temp
055C   30??           01507         movlw   HIGH ReceivedInputEntries
055D   008A           01508         movwf   PCLATH
055E   083A           01509         movf    Temp,w
055F   3E??           01510         addlw   LOW ReceivedInputEntries
0560   1803           01511         btfsc   STATUS,C
0561   0A8A           01512             incf    PCLATH,f
0562   0082           01513         movwf   PCL     
0563   0782           01514         addwf    PCL,F
0564                  01515 ReceivedInputEntries
0564   3474 3461 346B 01516         dt        "takin in large value",0
       3469 346E 3420 
       3469 346E 3420 
       346C 3461 3472 
       3467 3465 3420 
       3476 3461 346C 
       3475 3465 3400 
                      01517         
0579                  01518 SmallValueInput
                      01519         ;Change Page
0579   00BA           01520         movwf    Temp
057A   30??           01521         movlw   HIGH SmallValueInputEntries
057B   008A           01522         movwf   PCLATH
057C   083A           01523         movf    Temp,w
057D   3E??           01524         addlw   LOW SmallValueInputEntries
057E   1803           01525         btfsc   STATUS,C
057F   0A8A           01526             incf    PCLATH,f
0580   0082           01527         movwf   PCL     
0581   0782           01528         addwf    PCL,F
0582                  01529 SmallValueInputEntries
0582   3473 346D 3461 01530         dt        "small value",0
       346C 346C 3420 
       3476 3461 346C 
       3475 3465 3400 
                      01531         
058E                  01532 DectoChar
                      01533         
                      01534         ;Change Page
058E   00BA           01535         movwf   Temp
058F   30??           01536         movlw   HIGH DectoCharEntries
0590   008A           01537         movwf   PCLATH
0591   083A           01538         movf    Temp,w
0592   3E??           01539         addlw   LOW DectoCharEntries
0593   1803           01540         btfsc   STATUS,C
0594   0A8A           01541             incf    PCLATH,f
0595   0082           01542         movwf   PCL     
0596   0782           01543         addwf    PCL,F
0597                  01544 DectoCharEntries
0597   3430 3431 3432 01545         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01546         
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05A2                  01547 StickerColours
                      01548         
                      01549         ;Change Page
05A2   00BA           01550         movwf   Temp
05A3   30??           01551         movlw   HIGH StickerColoursEntries
05A4   008A           01552         movwf   PCLATH
05A5   083A           01553         movf    Temp,w
05A6   3E??           01554         addlw   LOW StickerColoursEntries
05A7   1803           01555         btfsc   STATUS,C
05A8   0A8A           01556             incf    PCLATH,f
05A9   0082           01557         movwf   PCL     
05AA   0782           01558         addwf    PCL,F
05AB                  01559 StickerColoursEntries
05AB   3442 3457 3400 01560         dt        "BW",  0
                      01561         
05AE                  01562 ColumnValues
                      01563         
                      01564         ;Change Page
05AE   00BA           01565         movwf   Temp
05AF   30??           01566         movlw   HIGH ColumnValuesEntries
05B0   008A           01567         movwf   PCLATH
05B1   083A           01568         movf    Temp,w
05B2   3E??           01569         addlw   LOW ColumnValuesEntries
05B3   1803           01570         btfsc   STATUS,C
05B4   0A8A           01571             incf    PCLATH,f
05B5   0082           01572         movwf   PCL     
05B6   0782           01573         addwf    PCL,F
05B7                  01574 ColumnValuesEntries
05B7   344E 3459 3400 01575         dt        "NY",  0
                      01576 
                      01577     
3F72                  01578         END
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AddBin                            0000024B
Arm1                              PORTC,5
Arm1Backwards                     PORTB,2
Arm2                              PORTC,6
Arm2Backwards                     PORTB,3
ArmRotation1                      000002A2
ArmRotation2                      000002AA
ArmRotation2Backwards             000002B2
BANK0                             
BANK1                             
BANK2                             
BANK3                             
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BinLocations                      0000052F
BinLocationsDisplay               00000219
BinLocationsEntries               00000538
Bins                              00000504
BinsDisplay                       0000020D
BinsEntries                       0000050D
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Clear_Display                     00000307
ClrLCD                            00000000
ColMotor                          PORTC,7
ColumnValues                      000005AE
ColumnValuesEntries               000005B7
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DCMotor                           PORTC,6
DELAY1                            0000031A
D_A                               00000005
D_NOT_A                           00000005
DectoChar                         0000058E
DectoCharEntries                  00000597
Delay10usLoop                     00000326
Delay_0                           0000031E
Display                           
DisplayBlackWhiteIR1              00000273
DisplayBlackWhiteIR2              0000027D
DisplayUSSensor1                  0000028F
DisplayUSSensor2                  00000299
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
Finalize                          000001DF
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         0000025E
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             0000030A
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Key                               
KeypadandLCD                      00000071
LCDConversionFront                000000F3
LCD_DELAY                         
LED                               PORTB,0
LEDControlON                      0000026B
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
Lb1                               00000022
Lb2                               00000026
Lb3                               0000002A
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

Lb4                               0000002E
ListDisplay                       000001F6
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
MOV                               
MOVLF                             
MoveBackwards                     000000F1
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
Next                              0000026A
NumH                              00000051
NumL                              00000052
NumOfBins                         00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              000003F1
Ones                              00000057
Operation                         00000456
OperationEntries                  0000045F
OperationTime                     00000547
OperationTimeDisplay              00000225
OperationTimeEntries              00000550
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMSTART1                         000002BA
PWMSTART2                         000002DD
PWMSTOP                           000002FF
PrintBlackSticker                 00000401
PrintCol                          
PrintNumber                       
PrintWhiteSticker                 00000405
PrintYN                           
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        00000235
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          00000187
Read1_US1                         000001A5
Read2_US                          000001B3
Read2_US1                         000001D1
ReadBW                            00000146
ReadColumn                        00000166
ReadStickers                      0000011B
ReceivedInput                     0000055B
ReceivedInputEntries              00000564
Results1                          000004B2
Results1Entries                   000004BB
Results2                          000004D7
Results2Entries                   000004E0
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         00000231
SmallValueInput                   00000579
SmallValueInputEntries            00000582
StartInit                         000000CA
StartMove                         000000CF
StickerColours                    000005A2
StickerColoursEntries             000005AB
StickerDisplay                    0000023F
StickerStatus                     0000051D
StickerStatusEntries              00000526
Stickers                          00000256
Switch_Lines                      00000304
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
UA                                00000001
US1E1                             PORTA,4
US1E2                             PORTA,5
UST1                              PORTD,0
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
WantResults                       0000046C
WantResultsEntries                00000475
WantRotate                        00000490
WantRotateEntries                 00000499
Welcome_Msg                       00000409
Welcome_Msg2                      0000042E
Welcome_Msg2Entries               00000437
Welcome_MsgEntries                00000412
Z                                 00000002
_.org_0_0072                      00000072
_.org_0_00C7                      000000C7
_.org_0_00F8                      000000F8
_.org_0_0121                      00000121
_.org_0_012D                      0000012D
_.org_0_0148                      00000148
_.org_0_0169                      00000169
_.org_0_01AD                      000001AD
_.org_0_01B0                      000001B0
_.org_0_01D9                      000001D9
_.org_0_01DC                      000001DC
_.org_0_026C                      0000026C
_.org_0_02A3                      000002A3
_.org_0_02AB                      000002AB
_.org_0_02B3                      000002B3
_.org_0_02BB                      000002BB
_.org_0_02DE                      000002DE
_.org_0_0311                      00000311
_.org_0_0313                      00000313
_.org_0_0316                      00000316
_.org_0_031F                      0000031F
_.org_0_0322                      00000322
_.org_0_03F8                      000003F8
_.org_0_03FA                      000003FA
_.org_0_03FD                      000003FD
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
backstickerValues                 0000005C
backwardsDCMotor                  PORTC,5
bin16_BCD                         00000001
binCounter                        0000005D
com                               00000037
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay10us                         00000324
delay3                            00000061
distanceMoved                     00000058
frontstickerValues                0000005B
goback                            000000C9
i2c_common_setup                  00000000
init                              00000034
isBinThere                        0000005A
isColumnThere                     00000059
lcd_d1                            00000035
lcd_d2                            00000036
lcd_tmp                           00000034
pollColumnSensor                  00000287
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
MPASM 5.65                          MAIN.ASM   3-11-2016  16:55:15         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

rtc_resetAll                      
rtc_set                           
set_rtc_time                      00000389
show_RTC                          00000329
temp                              00000039
write_rtc                         00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    31 suppressed

