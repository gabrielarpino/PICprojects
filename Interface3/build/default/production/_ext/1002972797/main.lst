MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1       ;3B PC
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5       
  00000040            00038                 Location6       ;40 PC
  00000041            00039                 Location7
  00000042            00040                 Front1          ;42 PC7
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ; 49 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7           ;50
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins1                      
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0, LEDcounter1,LEDcounter2,LEDcounter3,LEDcounter4,LEDcounter5,LEDcounter7,LED
                            counter8
  0000006A            00073                 cm
  0000006B            00074                 mm
  0000006C            00075                 m
  0000006D            00076                 distreg
  0000006E            00077                 lcd_d1_2
  0000006F            00078                 count_highs             ;the number of consecutive high counter for the US sensor
  00000070            00079                 temp_2
  00000071            00080                 hour1,hour2,min1,min2,sec1,sec2
                      00081         endc    
                      00082 
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083         ;Declare constants for pin assignments (LCD on PORTD)
                      00084                 #define RS      PORTD,2
                      00085                 #define E       PORTD,3
                      00086                 #define IR1     PORTA,0
                      00087                 #define IR2     PORTA,1
                      00088                 #define ColMotor PORTC,7
                      00089                 #define UST1    PORTD,0
                      00090                 #define US1E1   PORTA,2
                      00091                 #define UST2    PORTD,1
                      00092                 #define US1E2   PORTA,3
                      00093                 #define LED     PORTB,0
                      00094                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00095                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00096                 #define Std1Backwards   PORTC,0
                      00097                 #define Std2Backwards   PORTC,7
                      00098                 #define SwitchWhite             PORTB,2     ; or gated switch to stop motor motion
                      00099                 #define SwitchArm               PORTB,3
                      00100                 #define NOTPWMFWD               PORTC,2
                      00101                 #define NOTPWMBACK              PORTC,1
                      00102                 #define MAX_HIGHS       0x3                 ; number of consecutive highs we want to det
                            ect US
                      00103                 #define MAX_TICKS       d'70'               ; number of ticks where it reaches 4 metres,
                             max time to get back from 4 meters is 36 seconds
                      00104                 ;SHAFTIR is PORTA,4
                      00105                 ;PWMFWD is RC2
                      00106                 ;PWMBACK is RC1
                      00107                 
                      00108 
                      00109          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00110          goto      init       ;Just jump to the main code section.
                      00111 
                      00112 ;*******************************************************************************
                      00113 ; MACROS
                      00114 ;*******************************************************************************
                      00115 Key      macro  value, subroutine
                      00116          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00117          andlw          0x0F
                      00118          xorlw          value
                      00119          btfsc          STATUS, Z
                      00120          call           subroutine
                      00121         endm
                      00122 
                      00123 Rotation macro  value
                      00124          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00125          andlw          0x0F
                      00126          xorlw          value
                      00127          btfsc          STATUS, Z
                      00128          call           ShiftLeft
                      00129         endm
                      00130 ;***************************************
                      00131 ; Delay: ~160us macro
                      00132 ;***************************************
                      00133 LCD_DELAY macro
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00134         movlw   0xFF
                      00135         movwf   lcd_d1
                      00136         decfsz  lcd_d1,f
                      00137         goto    $-1
                      00138         endm
                      00139         
                      00140 ;***************************************
                      00141 ; Display macro
                      00142 ;***************************************
                      00143 Display macro   Message
                      00144                 local   loop_
                      00145                 local   end_
                      00146                 clrf    Table_Counter
                      00147                 clrw            
                      00148 loop_   movf    Table_Counter,W
                      00149                 call    Message
                      00150                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00151                 btfsc   STATUS,Z
                      00152                         goto    end_
                      00153                 call    WR_DATA
                      00154                 incf    Table_Counter,F
                      00155                 goto    loop_
                      00156 end_
                      00157                 endm
                      00158                 
                      00159 ;***************************************
                      00160 ; MOVLF macro   [TESTED]
                      00161 ;***************************************
                      00162 MOVLF   Macro   literal, reg
                      00163     MOVLW  literal      ; move literal into working register
                      00164     MOVWF   reg         ; move working register into reg
                      00165     endm
                      00166 
                      00167 ;***************************************
                      00168 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00169 ;***************************************
                      00170 MOV     Macro   reg1, reg2
                      00171     MOVF  reg1,W        ; move reg1 into working register
                      00172     MOVWF   reg2        ; reg2 <- reg1
                      00173     endm
                      00174     
                      00175 ;***************************************
                      00176 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00177 ;***************************************
                      00178 ADDL    Macro   Destination, reg, literal
                      00179     MOVLW  literal      ; move literal into working register
                      00180     ADDWF   reg,W       ; W <- literal + reg
                      00181     MOVWF   Destination ; Destination <- literal + reg
                      00182     endm
                      00183     
                      00184 ;***************************************
                      00185 ; ADD macro, Adds two registers together    [TESTED]
                      00186 ;***************************************
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00187 ADD     Macro   Destination, reg1, reg2
                      00188     MOVF    reg1,W      ; move literal into working register
                      00189     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00190     MOVWF   Destination ; Destination <- reg1 + reg2
                      00191     endm
                      00192 ;***************************************
                      00193 ; Number to Printable
                      00194 ;***************************************
                      00195 PrintNumber macro       number
                      00196         ;movf       number ,W
                      00197         movfw       number
                      00198         call        DectoChar
                      00199         call        WR_DATA
                      00200         endm
                      00201 ;***************************************
                      00202 ; Store_Dist macro --> Stores current
                      00203 ;   distance and stores it in Bin_Dist_reg
                      00204 ;***************************************                
                      00205 Put_Dist_In_Reg macro    Bin_Dist_reg
                      00206         lcall   Dist_Decoder
                      00207         movfw   cm
                      00208         movwf   Bin_Dist_reg
                      00209     endm
                      00210     
                      00211 ;***************************************
                      00212 ; Display_Dist macro --> Takes value in Bin_Dist_reg
                      00213 ;   and converts it into a BCD and prints it
                      00214 ;   To the LCD
                      00215 ;***************************************                
                      00216 Display_Dist macro    Bin_Dist_reg
                      00217     MOV     Bin_Dist_reg, temp  ; Bin_Dist_reg --> temp
                      00218     call    Distance_Display
                      00219     endm
                      00220 ;*********************************************************
                      00221 ;   Distance_Display            
                      00222 ;   input:      temp
                      00223 ;   Output:     LCD
                      00224 ;   desc:       Decodes the distance and prints to the LCD
                      00225 ;*********************************************************      
0001                  00226 Distance_Display
0001   2???           00227         call    Dist_Decoder        ; outputs m and cm regs to display
                      00228         PrintNumber     m
                          M         ;movf       number ,W
0002   086C               M         movfw       m
0003   2???               M         call        DectoChar
0004   2???               M         call        WR_DATA
0005   01D2           00229         clrf    NumL
0006   01D1           00230         clrf    NumH
                      00231         MOV     cm, NumL
0007   086A               M     MOVF  cm,W          ; move reg1 into working register
0008   00D2               M     MOVWF   NumL        ; reg2 <- reg1
0009   2???           00232         call    bin16_BCD
                      00233         PrintNumber     Tens        ; Print cm
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;movf       number ,W
000A   0856               M         movfw       Tens
000B   2???               M         call        DectoChar
000C   2???               M         call        WR_DATA
                      00234         PrintNumber     Ones
                          M         ;movf       number ,W
000D   0857               M         movfw       Ones
000E   2???               M         call        DectoChar
000F   2???               M         call        WR_DATA
0010   0008           00235         return
                      00236 ;***************************************
                      00237 ; Number to Colour
                      00238 ;***************************************
                      00239 PrintCol macro      number
                      00240         movfw       number
                      00241         call        StickerColours
                      00242         call        WR_DATA
                      00243         endm    
                      00244 
                      00245 ;***************************************
                      00246 ;           US READ MACRO
                      00247 ;****************************************
                      00248 ReadUltrasonic macro    trigger, trigger_bit, echo, echo_bit
                      00249     clrf        TMR1H
                      00250     clrf        TMR1L
                      00251 
                      00252     bcf trigger, trigger_bit            ;make sure trigger is clear
                      00253     call lcdLongDelay
                      00254 
                      00255     bsf trigger, trigger_bit    ;trigger high, bottom sensor
                      00256     call lcdLongDelay           ;10us delay
                      00257     bcf trigger, trigger_bit    ;trigger low
                      00258 
                      00259     btfss       echo, echo_bit          ;wait for echo to go high
                      00260     goto        $-1
                      00261     bsf T1CON,TMR1ON    ;turn on timer
                      00262 
                      00263     btfsc       echo, echo_bit          ;wait for echo to go low
                      00264     goto        $-1
                      00265 
                      00266     bcf T1CON,TMR1ON    ;turn off timer
                      00267     endm
                      00268         
                      00269 ;*******************************************************
                      00270 ;******             BCD                 ****************
                      00271 ;*******************************************************
                      00272         
                      00273 ;---------------- Binary (16-bit) to BCD -----------------------
                      00274 ;
                      00275 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00276 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00277                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00278 ;
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00279 ; Uses variables
                      00280 ; NumH, NumL
                      00281 ; TenK, Thou, Hund, Tens, Ones
                      00282                 
                      00283 ;BCD    macro   NumH, NumL
                      00284 
0011                  00285 bin16_BCD
0011   0E51           00286         swapf   NumH, W
0012   390F           00287         andlw   0x0F
0013   3EF0           00288         addlw   0xF0
0014   00D4           00289         movwf   Thou 
0015   07D4           00290         addwf   Thou, F 
0016   3EE2           00291         addlw   0xE2 
0017   00D5           00292         movwf   Hund 
0018   3E32           00293         addlw   0x32 
0019   00D7           00294         movwf   Ones 
                      00295 
001A   0851           00296         movf    NumH, W 
001B   390F           00297         andlw   0x0F 
001C   07D5           00298         addwf   Hund, F 
001D   07D5           00299         addwf   Hund, F 
001E   07D7           00300         addwf   Ones, F 
001F   3EE9           00301         addlw   0xE9 
0020   00D6           00302         movwf   Tens 
0021   07D6           00303         addwf   Tens, F 
0022   07D6           00304         addwf   Tens, F 
                      00305 
0023   0E52           00306         swapf   NumL, W 
0024   390F           00307         andlw   0x0F 
0025   07D6           00308         addwf   Tens, F 
0026   07D7           00309         addwf   Ones, F 
                      00310 
0027   0DD6           00311         rlf    Tens, F 
0028   0DD7           00312         rlf    Ones, F 
0029   09D7           00313         comf    Ones, F 
002A   0DD7           00314         rlf    Ones, F 
                      00315 
002B   0852           00316         movf    NumL, W 
002C   390F           00317         andlw   0x0F 
002D   07D7           00318         addwf   Ones, F 
002E   0DD4           00319         rlf    Thou,F 
                      00320 
002F   3007           00321         movlw   0x07 
0030   00D3           00322         movwf   TenK 
                      00323 
0031   300A           00324         movlw   0x0A
0032                  00325 Lb1
0032   03D6           00326         decf    Tens, F 
0033   07D7           00327         addwf   Ones, F 
0034   1C03           00328         btfss   STATUS, C 
0035   2???           00329         goto            Lb1 
0036                  00330 Lb2
0036   03D5           00331         decf    Hund, F 
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0037   07D6           00332         addwf   Tens, F 
0038   1C03           00333         btfss   STATUS,C 
0039   2???           00334         goto            Lb2 
003A                  00335 Lb3
003A   03D4           00336         decf    Thou, F 
003B   07D5           00337         addwf   Hund, F 
003C   1C03           00338         btfss   STATUS,C
003D   2???           00339         goto            Lb3 
003E                  00340 Lb4
003E   03D3           00341         decf    TenK, F 
003F   07D4           00342         addwf   Thou, F 
0040   1C03           00343         btfss   STATUS,C 
0041   2???           00344         goto            Lb4 
                      00345 
0042   3400           00346         retlw   0
0043   0008           00347         return
                      00348 ;***************************************
                      00349 ; Initialize
                      00350 ;***************************************
0044                  00351 init
0044   018B           00352          clrf      INTCON         ; No interrupts
                      00353 
0045   1683           00354          bsf       STATUS,RP0     ; select bank 1
0046   30FF           00355          movlw      0xFF            ; need to make A input
0047   0085           00356          movwf      TRISA          ; All port A is input
0048   30FE           00357          movlw     b'11111110'    ; Set required keypad inputs
0049   0086           00358          movwf     TRISB
004A   0187           00359          clrf      TRISC          ; All port C is output
004B   0188           00360          clrf      TRISD          ; All port D is output
004C   0189           00361          clrf      TRISE        
                      00362          
                      00363                   ;Set SDA and SCL to high-Z first as required for I2C
004D   1607           00364                  bsf       TRISC,4                
004E   1587           00365                  bsf       TRISC,3
                      00366 
004F   1283           00367          bcf       STATUS,RP0     ; select bank 0
0050   0185           00368          clrf      PORTA
0051   0186           00369          clrf      PORTB
0052   0187           00370          clrf      PORTC
0053   0188           00371          clrf      PORTD
0054   0189           00372          clrf      PORTE
                      00373          
                      00374         ;Set up I2C for communication
                      00375                  
0055   2???           00376         call       i2c_common_setup
                      00377 ;*******************************************************************************
                      00378 ;        UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00379         rtc_resetAll                                    ;works;\
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0056   1283 1303          M         banksel         0x74
0058   01F4               M         clrf            0x74
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0059   1283 1303          M         banksel         0x73
005B   01F3               M         clrf            0x73
005C   2???               M     call        write_rtc               ;Write 0 to Seconds
005D   1283 1303          M         banksel         0x73
005F   0AF3               M     incf        0x73                    ;Set register address to 1
0060   2???               M         call            write_rtc
0061   1283 1303          M         banksel         0x73
0063   0AF3               M     incf        0x73                    ;Set register address to 2
0064   2???               M         call            write_rtc
0065   1283 1303          M         banksel         0x73
0067   0AF3               M     incf        0x73                    ;Set register address to 3
0068   2???               M         call            write_rtc
0069   1283 1303          M         banksel         0x73
006B   0AF3               M     incf        0x73                    ;Set register address to 4
006C   2???               M         call            write_rtc
006D   1283 1303          M         banksel         0x73
006F   0AF3               M     incf        0x73                    ;Set register address to 5
0070   2???               M         call            write_rtc
0071   1283 1303          M         banksel         0x73
0073   0AF3               M     incf        0x73                    ;Set register address to 6
0074   2???               M         call            write_rtc
0075   2???           00380         call set_rtc_time
                      00381 ;*******************************************************************************          
0076   2???           00382          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00383          ;A/D converter attempt
                      00384                  
                      00385         ; Set ADCON1 to use RA0 as analog input 
0077   1303           00386         bcf     STATUS,RP1
0078   1683           00387         bsf     STATUS,RP0      ;Select bank 1
0079   3006           00388         movlw   b'00000110'     ;left justified, all inputs digital
007A   009F           00389         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00390 
                      00391         ;ADCON0
007B   1283           00392         bcf     STATUS,RP0      
                      00393 ;***************************************************
                      00394 ; Initialize variables and Displays
                      00395 ;****************************************************
                      00396         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
007C   01B3               M                 clrf    Table_Counter
007D   0103               M                 clrw            
007E   0833               M loop_   movf    Table_Counter,W
007F   2???               M                 call    Welcome_Msg
0080   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0081   1903               M                 btfsc   STATUS,Z
0082   2???               M                         goto    end_
0083   2???               M                 call    WR_DATA
0084   0AB3               M                 incf    Table_Counter,F
0085   2???               M                 goto    loop_
0086                      M end_
0086   2???           00397         call            Switch_Lines
                      00398         Display         Welcome_Msg2
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
0087   01B3               M                 clrf    Table_Counter
0088   0103               M                 clrw            
0089   0833               M loop_   movf    Table_Counter,W
008A   2???               M                 call    Welcome_Msg2
008B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
008C   1903               M                 btfsc   STATUS,Z
008D   2???               M                         goto    end_
008E   2???               M                 call    WR_DATA
008F   0AB3               M                 incf    Table_Counter,F
0090   2???               M                 goto    loop_
0091                      M end_
0091   01E0           00399         clrf            NumOfBins1
0092   01ED           00400         clrf            distreg             ; clear register for distance
0093   2???           00401         call            Init_TMR0           ; Initialize shaft encoder
0094   1408           00402         bsf             PORTD,0
0095   1462           00403         bsf             LEDcounter0,0               ;counter for LED
0096   1463           00404         bsf             LEDcounter1,0               ;forward motor counters
0097   1464           00405         bsf             LEDcounter2,0
0098   1465           00406         bsf             LEDcounter3,0               
0099   1466           00407         bsf             LEDcounter4,0               ;backward motor counters
009A   1467           00408         bsf             LEDcounter5,0       
009B   1468           00409         bsf             LEDcounter7,0               ;pwm counters
009C   1469           00410         bsf             LEDcounter8,0               
                      00411         
009D   01F1           00412         clrf            hour1
009E   01F2           00413         clrf            hour2
009F   01F3           00414         clrf            min1
00A0   01F4           00415         clrf            min2
00A1   01F5           00416         clrf            sec1
00A2   01F6           00417         clrf            sec2
                      00418         
00A3   1287           00419         bcf             Std1                        ;use this one for negative for when need to move ful
                            l motor                 
00A4   1707           00420         bsf             Std2
00A5   1007           00421         bcf             Std1Backwards
00A6   1787           00422         bsf             Std2Backwards
00A7   1507           00423         bsf             PORTC,2             
00A8   1487           00424         bsf             PORTC,1                 ; PWM now negative, so start by clearing
                      00425         
                      00426         ;trying to fix the switch bs
00A9   1106           00427         bcf             SwitchWhite
00AA   1186           00428         bcf             SwitchArm
                      00429 
                      00430 ;*************************************
                      00431 ;       Keypad and LCD forms        
                      00432 ;*************************************
                      00433         
00AB   1C86           00434 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
00AC   2???           00435                 goto            $-1 
                      00436 
00AD   0E06           00437                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AE   390F           00438                 andlw           0x0F
00AF   00B9           00439                 movwf           temp
                      00440                 
                      00441                 Key     0x00, TOTAL
00B0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B1   390F               M          andlw          0x0F
00B2   3A00               M          xorlw          0x00
00B3   1903               M          btfsc          STATUS, Z
00B4   2???               M          call           TOTAL
                      00442                 Key     0x01, DisplayBlackWhiteIR1
00B5   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B6   390F               M          andlw          0x0F
00B7   3A01               M          xorlw          0x01
00B8   1903               M          btfsc          STATUS, Z
00B9   2???               M          call           DisplayBlackWhiteIR1
                      00443                 Key     0x02, DisplayBlackWhiteIR2
00BA   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BB   390F               M          andlw          0x0F
00BC   3A02               M          xorlw          0x02
00BD   1903               M          btfsc          STATUS, Z
00BE   2???               M          call           DisplayBlackWhiteIR2
                      00444                 Rotation        0x03
00BF   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C0   390F               M          andlw          0x0F
00C1   3A03               M          xorlw          0x03
00C2   1903               M          btfsc          STATUS, Z
00C3   2???               M          call           ShiftLeft
                      00445                 Key     0x04, EXIT
00C4   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C5   390F               M          andlw          0x0F
00C6   3A04               M          xorlw          0x04
00C7   1903               M          btfsc          STATUS, Z
00C8   2???               M          call           EXIT
                      00446                 Key     0x05, Read1_US
00C9   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00CA   390F               M          andlw          0x0F
00CB   3A05               M          xorlw          0x05
00CC   1903               M          btfsc          STATUS, Z
00CD   2???               M          call           Read1_US
                      00447                 Key     0x06, Read2_US
00CE   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00CF   390F               M          andlw          0x0F
00D0   3A06               M          xorlw          0x06
00D1   1903               M          btfsc          STATUS, Z
00D2   2???               M          call           Read2_US
                      00448                 Key     0x07, set_rtc_time
00D3   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D4   390F               M          andlw          0x0F
00D5   3A07               M          xorlw          0x07
00D6   1903               M          btfsc          STATUS, Z
00D7   2???               M          call           set_rtc_time
                      00449                 Key     0x08, Stickers1
00D8   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D9   390F               M          andlw          0x0F
00DA   3A08               M          xorlw          0x08
00DB   1903               M          btfsc          STATUS, Z
00DC   2???               M          call           Stickers1
                      00450                 Key     0x09, LEDControlON
00DD   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00DE   390F               M          andlw          0x0F
00DF   3A09               M          xorlw          0x09
00E0   1903               M          btfsc          STATUS, Z
00E1   2???               M          call           LEDControlON
                      00451                 Key     0x0A, CHECKSWITCH               
00E2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00E3   390F               M          andlw          0x0F
00E4   3A0A               M          xorlw          0x0A
00E5   1903               M          btfsc          STATUS, Z
00E6   2???               M          call           CHECKSWITCH
                      00452                 Key     0x0C, StdRotation2
00E7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00E8   390F               M          andlw          0x0F
00E9   3A0C               M          xorlw          0x0C
00EA   1903               M          btfsc          STATUS, Z
00EB   2???               M          call           StdRotation2
                      00453                 Key     0x0D, StdRotation2Backwards
00EC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00ED   390F               M          andlw          0x0F
00EE   3A0D               M          xorlw          0x0D
00EF   1903               M          btfsc          STATUS, Z
00F0   2???               M          call           StdRotation2Backwards
                      00454                 Key     0x0E, PWMFWD
00F1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00F2   390F               M          andlw          0x0F
00F3   3A0E               M          xorlw          0x0E
00F4   1903               M          btfsc          STATUS, Z
00F5   2???               M          call           PWMFWD
                      00455                 Key     0x0F, PWMBACK
00F6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00F7   390F               M          andlw          0x0F
00F8   3A0F               M          xorlw          0x0F
00F9   1903               M          btfsc          STATUS, Z
00FA   2???               M          call           PWMBACK
00FB   1886           00456                 btfsc           PORTB,1     ;Wait until key is released
00FC   2???           00457                 goto            $-1
00FD   2???           00458                 goto            KeypadandLCD
                      00459                 
00FE                  00460 goback
00FE   0008           00461                 return  
                      00462         
                      00463 
                      00464 ;*******************************************************************************************************
                            *******************************************
                      00465 ;                                                                 MAIN CODE
                      00466 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00467 
00FF                  00468 AVOIDCOLUMN1
                      00469     
00FF   1287           00470     bcf     Std1                ;motor will stop move fwd
                      00471     
                      00472     ;WORKSSSSSSSSSSSSSSSSSSSSSSSSSSSS
0100   1307           00473     bcf     Std2                ; start white thing fwd
0101   2???           00474     call    HalfS       
0102   1906           00475     btfsc   SwitchWhite
0103   2???           00476     goto    $-2
0104   2???           00477     call    lcdLongDelay
0105   1D06           00478     btfss   SwitchWhite
0106   2???           00479     goto    $-2
                      00480     
0107   1707           00481     bsf     Std2                   ; stop white thing fwd
                      00482     
0108   2???           00483      call    HalfS
0109   2???           00484     call    HalfS
010A   2???           00485      call    HalfS
010B   2???           00486     call    HalfS
                      00487     
010C   2???           00488     call    PWMFWD          ;start arm forward
010D   2???           00489     call    HalfS       
010E   1986           00490     btfsc   SwitchArm
010F   2???           00491     goto    $-2
0110   2???           00492     call    lcdLongDelay
0111   1D86           00493     btfss   SwitchArm
0112   2???           00494     goto    $-2
                      00495     
0113   2???           00496     call    PWMFWD          ;stop arm forward
                      00497  
0114   2???           00498     call    HalfS
                      00499     
0115   0008           00500     return
                      00501     
                      00502 ;-------------------------------------------------
                      00503     
0116                  00504 AVOIDCOLUMN2
                      00505     
0116   1687           00506     bsf     Std1                ;move forward until no more column in the way
                      00507     
0117   2???           00508     call    OneS
0118   2???           00509     call    OneS
0119   2???           00510     call    OneS
011A   2???           00511     call    OneS
011B   2???           00512     call    OneS
                      00513     ;wait to see the thing
011C   2???           00514     call    Read2_US            ;checks to see if bin present
011D   3008           00515     movlw   0x8         ; read the bin
011E   028F           00516     subwf   TMR1H
011F   1803           00517     btfsc   STATUS,C
0120   2???           00518     goto    $-4
0121   2???           00519     call    Read2_US            ;checks to see if bin present
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0122   3006           00520     movlw   0x6         ; read the bin
0123   028F           00521     subwf   TMR1H
0124   1C03           00522     btfss   STATUS,C
0125   2???           00523     goto    $-4
0126   2???           00524     call    RETURNFROMCOLUMN
0127   2???           00525     call    READBIN     
0128   2???           00526     goto    ENDTHIS
                      00527 
                      00528     
0129                  00529 RETURNFROMCOLUMN
                      00530     
0129   1287           00531     bcf     Std1
                      00532     
012A   2???           00533     call    PWMBACK         ;start arm BACK
012B   2???           00534     call    HalfS
012C   2???           00535     call    PWMBACK
                      00536     
012D   2???           00537     call    PWMBACK         ;start arm BACK
012E   2???           00538     call    HalfS
012F   1D86           00539     btfss   SwitchArm
0130   2???           00540     goto    $-1
                      00541     
0131   2???           00542     call    PWMBACK         ;stop arm BACK
                      00543         
0132   2???           00544     call    HalfS
0133   2???           00545     call    HalfS
                      00546     
0134   1387           00547     bcf     Std2Backwards
0135   2???           00548     call    HalfS
0136   1D06           00549     btfss   SwitchWhite
0137   2???           00550     goto    $-1 
                      00551     
0138   1787           00552     bsf     Std2Backwards
                      00553     
0139   1687           00554     bsf     Std1            ; make it start moving right after column
                      00555     
013A   0008           00556     return
                      00557     
013B                  00558 READBIN
013B   1406           00559     bsf     LED
013C   1287           00560     bcf     Std1
013D   2???           00561     call    AddBin              ;adds bin to list
                      00562     
013E   2???           00563     call    Dist_Decoder        ; stores the distance
                      00564     Put_Dist_In_Reg     distreg
013F   ???? ???? 2???     M         lcall   Dist_Decoder
0142   086A               M         movfw   cm
0143   00ED               M         movwf   distreg
                      00565     Display_Dist        distreg
                          M     MOV     distreg,      temp  ; Bin_Dist_reg --> temp
0144   086D               M     MOVF  distreg,W     ; move reg1 into working register
0145   00B9               M     MOVWF   temp        ; reg2 <- reg1
0146   2???               M     call    Distance_Display
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0147   2???           00566     call    StoreThisTick
                      00567     
0148   2???           00568     call    Clear_Display    
                      00569     
                      00570         
0149   2???           00571     call    DisplayBlackWhiteIR1        ;warms up IR
014A   2???           00572     call    DisplayBlackWhiteIR1        ;warms up IR  
014B   2???           00573     call    StoreBW1            ;reads & stores first IR data
                      00574     
                      00575 ;*****THRESHHOLD TEST ON IR 1************
                      00576 ;    nothing in front: 02056
                      00577 ;    black in front: 10000-41000
                      00578 ;    white in front: >60000
                      00579     
                      00580     ;READ 2 ALGORITHM IMPLEMENT HERE
                      00581     
014C   2???           00582     call    HalfS
                      00583 
014D   2???           00584     call    Clear_Display
                      00585     
014E   2???           00586     call    DisplayBlackWhiteIR2        ;warms up IR
014F   2???           00587     call    DisplayBlackWhiteIR2        ;warms up IR
0150   2???           00588     call    StoreBW2
                      00589     
0151   2???           00590     call    HalfS
                      00591     
0152   1006           00592     bcf     LED
                      00593     
0153   0008           00594     return
                      00595     
                      00596     ;goto    EXIT    
                      00597      
                      00598     
0154                  00599 TOTAL
                      00600     
0154   2???           00601     call    Read1_US            ;warms up us sensors that was weird
0155   2???           00602     call    Read2_US
                      00603    
0156                  00604 TOTAL1
                      00605     
0156   1687           00606     bsf     Std1                ;moving
0157   01EF           00607     clrf    count_highs         ;reset the high value counter
                      00608     
0158                  00609 COLREADINGSTART
0158   2???           00610     call    Read1_US            ;checks to see if column present
                      00611     
                      00612 ;********THRESHOLD CALCULATION FOR COLUMN**************:
                      00613 ;   At around cm from col, reading: 02303
                      00614 ;       So, this will be the max value.
                      00615 ;       To be safe, will minus 02603 from the TMR variables.
                      00616 ;       This means, subtract 0x4 from TMR1H 
                      00617 ;       Value before at integration was 0x14, now trying 0x4
                      00618 ;       THE FOLLOWING CODE COUNTS 3 HIGHS
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00619     
0159   300F           00620     movlw   0xF         ; if column present, it'll move forward
015A   028F           00621     subwf   TMR1H
015B   1803           00622     btfsc   STATUS,C        
015C   2???           00623     goto    $+8
015D   0AEF           00624     incf    count_highs
015E   3003           00625     movlw   MAX_HIGHS
015F   026F           00626     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
0160   1D03           00627     btfss   STATUS,Z                ; if result is zero, Z bit is set.
0161   2???           00628     goto    COLREADINGSTART
0162   2???           00629     call    AVOIDCOLUMN1
0163   2???           00630     call    AVOIDCOLUMN2
                      00631     
0164   01EF           00632     clrf    count_highs         ;reset the high value counter
                      00633  
0165                  00634 BINREADINGSTART
                      00635     
0165   1687           00636     bsf     Std1                ;gotta always be moving
                      00637     
0166   2???           00638     call    Read2_US            ;checks to see if bin present
                      00639     
                      00640 ;********THRESHOLD CALCULATION FOR BIN**************:
                      00641 ;   At around 6cm from white bin, reading: 01103
                      00642 ;       So, this will be the max value.
                      00643 ;       To be safe, will minus 01210 from the TMR variables.
                      00644 ;       This means, subtract 0x4 from TMR1H 
                      00645 ;       Value before at integration was 0x14, now trying 0x4
                      00646 ;       CODE COUNTS 3 HIGHS
                      00647 
                      00648     
0167   3008           00649     movlw   0x8         ; read the bin
0168   028F           00650     subwf   TMR1H
0169   1803           00651     btfsc   STATUS,C
016A   2???           00652     goto    $+8
016B   0AEF           00653     incf    count_highs
016C   2???           00654     call    lcdLongDelay
016D   3003           00655     movlw   MAX_HIGHS
016E   026F           00656     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
016F   1D03           00657     btfss   STATUS,Z                ; if result is zero, Z bit is set.
0170   2???           00658     goto    BINREADINGSTART
0171   2???           00659     call    DELAYEDREAD
                      00660 
0172   2???           00661     goto    ENDTHIS   
                      00662     
0173                  00663 DELAYEDREAD
0173   2???           00664     call    DELAY1              ; do a 0.25s delay in order to move it forward a lil
0174   2???           00665     call    Read2_US            ;checks to see if bin present
0175   3006           00666     movlw   0x6         ; read the bin
0176   028F           00667     subwf   TMR1H
0177   1C03           00668     btfss   STATUS,C
0178   2???           00669     goto    DELAYEDREAD
0179   2???           00670     call    READBIN
017A   1006           00671     bcf     LED                 ; turn off LED After reading    
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017B                  00672 ENDTHIS       
017B   3005           00673     movlw       0X5             ;checks if max of 7 bins has been reached
017C   0260           00674     subwf       NumOfBins1,W            
017D   1D03           00675     btfss       STATUS,Z
017E   2???           00676     goto        ENDTHIS1
017F   1687           00677     bsf         Std1
0180   2???           00678     call        OneS
0181   2???           00679     call        OneS
0182   2???           00680     call        HalfS
0183   2???           00681     goto        EXIT
                      00682     
0184                  00683 ENDTHIS1  
                      00684     
0184   0801           00685     movfw       TMR0                    ;checks if max ticks has been reached
0185   0246           00686     subwf       MAX_TICKS,W
0186   1903           00687     btfsc       STATUS,Z
0187   2???           00688     goto        EXIT
                      00689     
0188   2???           00690     goto        TOTAL1    
                      00691     
0189                  00692 CHECKSWITCH
                      00693     ;WORKSSSSSSSSSSSSSSSSSSSSSSSSSSSS
0189   1307           00694     bcf     Std2                ; start white thing fwd
018A   2???           00695     call    HalfS       
018B   1906           00696     btfsc   SwitchWhite
018C   2???           00697     goto    $-2
018D   2???           00698     call    lcdLongDelay
018E   1D06           00699     btfss   SwitchWhite
018F   2???           00700     goto    $-2
                      00701     
                      00702    
0190   1707           00703     bsf     Std2                   ; stop white thing fwd
                      00704     
0191   0008           00705     return
                      00706 
0192                  00707 EXIT
                      00708     
0192   1287           00709     bcf         Std1
0193   2???           00710     call        AVOIDCOLUMN1     ;RETRACT ARM
0194   1407           00711     bsf         Std1Backwards
                      00712     
                      00713     ;add delays
0195   2???           00714     call        DELAY2
                      00715 
0196   1007           00716     bcf         Std1Backwards
                      00717     
0197   2???           00718     call        Clear_Display
                      00719     Display     FinalMessage     ;display final interface for choosing stuff
  0000                    M                 local   loop_
  0000                    M                 local   end_
0198   01B3               M                 clrf    Table_Counter
0199   0103               M                 clrw            
019A   0833               M loop_   movf    Table_Counter,W
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019B   2???               M                 call    FinalMessage
019C   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
019D   1903               M                 btfsc   STATUS,Z
019E   2???               M                         goto    end_
019F   2???               M                 call    WR_DATA
01A0   0AB3               M                 incf    Table_Counter,F
01A1   2???               M                 goto    loop_
01A2                      M end_
01A2   2???           00720     call        Switch_Lines
01A3   2???           00721     call        show_RTC
                      00722     
01A4   2???           00723     goto        EXITDISPLAY
                      00724     
                      00725 
                      00726 
01A5   1C86           00727 EXITDISPLAY     btfss           PORTB,1     ;Wait until data is available from the keypad
01A6   2???           00728                 goto            $-1 
                      00729 
01A7   0E06           00730                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
01A8   390F           00731                 andlw           0x0F
01A9   00B9           00732                 movwf           temp
                      00733                 Key     0x00, Stickers1
01AA   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01AB   390F               M          andlw          0x0F
01AC   3A00               M          xorlw          0x00
01AD   1903               M          btfsc          STATUS, Z
01AE   2???               M          call           Stickers1
                      00734                 Key     0x01, ShowBins
01AF   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01B0   390F               M          andlw          0x0F
01B1   3A01               M          xorlw          0x01
01B2   1903               M          btfsc          STATUS, Z
01B3   2???               M          call           ShowBins
                      00735                 Key     0x02, Locations
01B4   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01B5   390F               M          andlw          0x0F
01B6   3A02               M          xorlw          0x02
01B7   1903               M          btfsc          STATUS, Z
01B8   2???               M          call           Locations
                      00736                 Rotation        0x03
01B9   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01BA   390F               M          andlw          0x0F
01BB   3A03               M          xorlw          0x03
01BC   1903               M          btfsc          STATUS, Z
01BD   2???               M          call           ShiftLeft
                      00737                 Key     0x04, show_RTC
01BE   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01BF   390F               M          andlw          0x0F
01C0   3A04               M          xorlw          0x04
01C1   1903               M          btfsc          STATUS, Z
01C2   2???               M          call           show_RTC
01C3   1886           00738                 btfsc           PORTB,1     ;Wait until key is released
01C4   2???           00739                 goto            $-1
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C5   2???           00740                 goto            EXITDISPLAY
                      00741 
01C6   2???           00742     goto    EXIT
                      00743     
01C7                  00744 MoveBackwards
                      00745     
01C7   2???           00746     call    PWMSTOP
                      00747     
                      00748         
                      00749 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00750 
                      00751 ;*********************************************************
                      00752 ; A to D conversion with LCD display for IR sensor
                      00753 ;*********************************************************
                      00754         
                      00755 ;******************************************
                      00756 ;       Sticker Print Modules
                      00757 ;*****************************************
                      00758         
01C8                  00759 BWScanModule1
                      00760 
01C8   151F           00761         bsf     ADCON0,2                ;start conversion and wait for it to complete
01C9   191F           00762         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01CA   2???           00763         goto    $-1
                      00764         
01CB   081E           00765         movf    ADRESH, W
01CC   00D1           00766         movwf   NumH
01CD   081E           00767         movf    ADRESL, W
01CE   00D2           00768         movwf   NumL
01CF   2???           00769         call    Clear_Display
01D0   2???           00770         call    bin16_BCD
                      00771         PrintNumber     TenK
                          M         ;movf       number ,W
01D1   0853               M         movfw       TenK
01D2   2???               M         call        DectoChar
01D3   2???               M         call        WR_DATA
                      00772         PrintNumber     Thou
                          M         ;movf       number ,W
01D4   0854               M         movfw       Thou
01D5   2???               M         call        DectoChar
01D6   2???               M         call        WR_DATA
                      00773         PrintNumber     Hund
                          M         ;movf       number ,W
01D7   0855               M         movfw       Hund
01D8   2???               M         call        DectoChar
01D9   2???               M         call        WR_DATA
                      00774         PrintNumber     Tens
                          M         ;movf       number ,W
01DA   0856               M         movfw       Tens
01DB   2???               M         call        DectoChar
01DC   2???               M         call        WR_DATA
                      00775         PrintNumber     Ones
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;movf       number ,W
01DD   0857               M         movfw       Ones
01DE   2???               M         call        DectoChar
01DF   2???               M         call        WR_DATA
01E0   0008           00776         return
01E1                  00777 BWStoreModule1
01E1   1383           00778         BCF     STATUS, IRP
01E2   3042           00779         movlw   0x42
01E3   0084           00780         movwf   FSR
01E4   3000           00781         movlw   0X0
01E5   0360           00782         decf    NumOfBins1,W            ;want bin number to be decreased when back checks it
01E6   0784           00783         addwf   FSR,F
01E7   309C           00784         movlw   0X9c                    ; roughly 40000
01E8   02D1           00785         subwf   NumH
01E9   3000           00786         movlw   0x0
01EA   1803           00787         btfsc   STATUS, C
01EB   3001           00788         movlw   0x1
01EC   0080           00789         movwf   INDF
01ED   0008           00790         return  
                      00791         
01EE                  00792 BWScanModule2
                      00793 
01EE   151F           00794         bsf     ADCON0,2                ;start conversion and wait for it to complete
01EF   191F           00795         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01F0   2???           00796         goto    $-1
                      00797         
01F1   081E           00798         movf    ADRESH, W
01F2   00D1           00799         movwf   NumH
01F3   081E           00800         movf    ADRESL, W
01F4   00D2           00801         movwf   NumL
01F5   2???           00802         call    Clear_Display
01F6   2???           00803         call    bin16_BCD
                      00804         PrintNumber     TenK
                          M         ;movf       number ,W
01F7   0853               M         movfw       TenK
01F8   2???               M         call        DectoChar
01F9   2???               M         call        WR_DATA
                      00805         PrintNumber     Thou
                          M         ;movf       number ,W
01FA   0854               M         movfw       Thou
01FB   2???               M         call        DectoChar
01FC   2???               M         call        WR_DATA
                      00806         PrintNumber     Hund
                          M         ;movf       number ,W
01FD   0855               M         movfw       Hund
01FE   2???               M         call        DectoChar
01FF   2???               M         call        WR_DATA
                      00807         PrintNumber     Tens
                          M         ;movf       number ,W
0200   0856               M         movfw       Tens
0201   2???               M         call        DectoChar
0202   2???               M         call        WR_DATA
                      00808         PrintNumber     Ones
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;movf       number ,W
0203   0857               M         movfw       Ones
0204   2???               M         call        DectoChar
0205   2???               M         call        WR_DATA
0206   0008           00809         return
0207                  00810 BWStoreModule2
0207   1383           00811         BCF     STATUS, IRP
0208   3049           00812         movlw   0x49                    ;number 49 to try to get registers for back of bin
0209   0084           00813         movwf   FSR
020A   3000           00814         movlw   0X0
020B   0360           00815         decf    NumOfBins1,W
020C   0784           00816         addwf   FSR,F
020D   300A           00817         movlw   0XA                     ;2800 threshold
020E   02D1           00818         subwf   NumH
020F   3000           00819         movlw   0x0
0210   1803           00820         btfsc   STATUS, C
0211   3001           00821         movlw   0x1
0212   0080           00822         movwf   INDF
0213   0008           00823         return  
                      00824         
                      00825 ;***************************************************
                      00826 ;       US Sensor Modules                           [TESTED]
                      00827 ;***************************************************
                      00828         
0214                  00829 Read1_US                    
                      00830          
                      00831         ;call           Read1_US1 
                      00832          
                      00833         ReadUltrasonic  UST1,US1E1
0214   018F               M     clrf        TMR1H
0215   018E               M     clrf        TMR1L
                          M 
0216   1008               M     bcf PORTD,   0                      ;make sure trigger is clear
0217   2???               M     call lcdLongDelay
                          M 
0218   1408               M     bsf PORTD,   0              ;trigger high, bottom sensor
0219   2???               M     call lcdLongDelay           ;10us delay
021A   1008               M     bcf PORTD,   0              ;trigger low
                          M 
021B   1D05               M     btfss       PORTA, 2                ;wait for echo to go high
021C   2???               M     goto        $-1
021D   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
021E   1905               M     btfsc       PORTA, 2                ;wait for echo to go low
021F   2???               M     goto        $-1
                          M 
0220   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00834         
0221   2???           00835         call            Clear_Display
                      00836         
0222   080F           00837         movf            TMR1H, W
0223   00D1           00838         movwf           NumH
0224   080E           00839         movf            TMR1L, W
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0225   00D2           00840         movwf           NumL
                      00841         
0226   2???           00842         call            bin16_BCD
                      00843         
                      00844         PrintNumber     TenK
                          M         ;movf       number ,W
0227   0853               M         movfw       TenK
0228   2???               M         call        DectoChar
0229   2???               M         call        WR_DATA
                      00845         PrintNumber     Thou
                          M         ;movf       number ,W
022A   0854               M         movfw       Thou
022B   2???               M         call        DectoChar
022C   2???               M         call        WR_DATA
                      00846 ;       PrintNumber     Hund
                      00847 ;       PrintNumber     Tens
                      00848 ;       PrintNumber     Ones
022D   2???           00849         call            Clear_Display
022E   0008           00850         return
                      00851 
022F                  00852 Read2_US                    
                      00853          
                      00854         ;call           Read2_US1 
                      00855         
                      00856         ReadUltrasonic  UST2,US1E2
022F   018F               M     clrf        TMR1H
0230   018E               M     clrf        TMR1L
                          M 
0231   1088               M     bcf PORTD,   1                      ;make sure trigger is clear
0232   2???               M     call lcdLongDelay
                          M 
0233   1488               M     bsf PORTD,   1              ;trigger high, bottom sensor
0234   2???               M     call lcdLongDelay           ;10us delay
0235   1088               M     bcf PORTD,   1              ;trigger low
                          M 
0236   1D85               M     btfss       PORTA, 3                ;wait for echo to go high
0237   2???               M     goto        $-1
0238   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
0239   1985               M     btfsc       PORTA, 3                ;wait for echo to go low
023A   2???               M     goto        $-1
                          M 
023B   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00857          
023C   2???           00858         call            Clear_Display
                      00859         
023D   080F           00860         movf            TMR1H, W
023E   00D1           00861         movwf           NumH
023F   080E           00862         movf            TMR1L, W
0240   00D2           00863         movwf           NumL
                      00864         
0241   2???           00865         call            bin16_BCD
                      00866         
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00867         PrintNumber     TenK
                          M         ;movf       number ,W
0242   0853               M         movfw       TenK
0243   2???               M         call        DectoChar
0244   2???               M         call        WR_DATA
                      00868         PrintNumber     Thou
                          M         ;movf       number ,W
0245   0854               M         movfw       Thou
0246   2???               M         call        DectoChar
0247   2???               M         call        WR_DATA
                      00869 ;       PrintNumber     Hund
                      00870 ;       PrintNumber     Tens
                      00871 ;       PrintNumber     Ones
0248   2???           00872         call            Clear_Display
0249   0008           00873         return
                      00874                 
                      00875 ;*******************************************************
                      00876 ; Dist_Decoder
                      00877 ;   input:  temp (holds bin_dist_reg)
                      00878 ;   output: cm, mm, m
                      00879 ;   Desc:   Converts the count in the rotary encoder
                      00880 ;           into physical distance
                      00881 ;*******************************************************
024A                  00882 Dist_Decoder
                      00883         ; Initalize all registers
024A   01EA           00884         clrf    cm              
024B   01EB           00885         clrf    mm
024C   01EC           00886         clrf    m
                      00887 
                      00888         ; Check if its already zero
024D   0839           00889         movfw   temp
024E   3C00           00890         sublw   D'0'
024F   1903           00891         btfsc   STATUS, Z
0250   0008           00892         return
                      00893         
0251                  00894 Decode_loop                     ; Assume each step is 3.6 cm
                      00895         ; Perform decode
                      00896         ADDL    cm, cm, D'5'        ;perimeter of 2*pi
0251   3005               M     MOVLW  D'5'         ; move literal into working register
0252   076A               M     ADDWF   cm,W        ; W <- literal + reg
0253   00EA               M     MOVWF   cm          ; Destination <- literal + reg
                      00897         ADDL    mm, mm, D'9'
0254   3009               M     MOVLW  D'9'         ; move literal into working register
0255   076B               M     ADDWF   mm,W        ; W <- literal + reg
0256   00EB               M     MOVWF   mm          ; Destination <- literal + reg
0257   03B9           00898         decf    temp
                      00899         
0258                  00900 Check_mm_overflow
                      00901         ; Test if mm has overflowed! (mm >= 10)
0258   300A           00902         movlw   D'10'
0259   026B           00903         subwf   mm, w           ; mm - 10 --> w (w = f - w, when d = 0) 
025A   1803           00904         btfsc   STATUS, C       ; Y = mm, w = 10, Y-w
025B   2???           00905         goto    mm_overflow     ; Run overflow routine if it did overflow
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00906         
025C                  00907 Check_cm_overflow       
                      00908         ; Test if cm has overflowed! (cm >= 100)
025C   086A           00909         movfw   cm
025D   00F0           00910         movwf   temp_2
025E   3064           00911         movlw   D'100'
025F   0270           00912         subwf   temp_2, w       ; cm - 100 --> w (w = f - w, when d = 0) 
0260   1803           00913         btfsc   STATUS, C       ; Y = cm, w = 100, Y-w
0261   2???           00914         goto    cm_overflow     ; Run overflow routine if it did overflow
                      00915 
0262                  00916 Decode_check_done       
                      00917         ; Test if done decoding 
0262   0839           00918         movfw   temp
0263   3C00           00919         sublw   D'0'            ; MAKE THIS A LARGER NUMBER TO ACCOUNT FOR 
0264   1D03           00920         btfss   STATUS, Z       ; DIFFERENCE IN DISTANCE
0265   2???           00921         goto    Decode_loop
0266   0008           00922         return  
                      00923         
0267                  00924 mm_overflow
0267   0AEA           00925         incf    cm              ; cm + 1 --> cm
0268   300A           00926         movlw   D'10'           ; 10 --> w
0269   02EB           00927         subwf   mm, f           ; mm - 10 --> mm (f = f - w, when d = 1) 
026A   2???           00928         goto    Decode_check_done       ; Check cm overflow
                      00929         
026B                  00930 cm_overflow
026B   0AEC           00931         incf    m               ; m + 1 --> m
026C   3064           00932         movlw   D'100'          ; 100 --> w
026D   02EA           00933         subwf   cm, f           ; cm - 100 --> cm (f = f - w, when d = 1) 
026E   2???           00934         goto    Decode_check_done       ; Continue decoding
                      00935         
026F                  00936 StoreThisTick
026F   1383           00937         BCF     STATUS, IRP
0270   303B           00938         movlw   0x3B                    ;number 56 to try to get location registers in cblock
0271   0084           00939         movwf   FSR
0272   3000           00940         movlw   0X0
0273   0360           00941         decf    NumOfBins1,W
0274   0784           00942         addwf   FSR,F
0275   0801           00943         movfw   TMR0            ; poll encoder for current state
0276   00B9           00944         movwf   temp
0277   0080           00945         movwf   INDF
                      00946         
0278   0008           00947         return
                      00948 ;*********************************************
                      00949 ; Keypad Modules
                      00950 ;*******************************************
                      00951          
                      00952 
0279                  00953 ShiftLeft
0279   3018           00954         movlw           b'00011000'             ;Move to the left
027A   2???           00955         call            WR_INS
027B   0008           00956         return
                      00957 
027C   2???           00958         goto    KeypadandLCD
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00959         
027D                  00960 RTCDisplay
027D   2???           00961         call    show_RTC
                      00962         
027E   1886           00963         btfsc           PORTB,1     ;Wait until data is available from the keypad
027F   0008           00964         return
0280   1886           00965         btfsc           PORTB,1     ;Wait until data is available from the keypad
0281   0008           00966         return
0282   1886           00967         btfsc           PORTB,1     ;Wait until data is available from the keypad
0283   0008           00968         return
0284   1886           00969         btfsc           PORTB,1     ;Wait until data is available from the keypad
0285   0008           00970         return
0286   2???           00971         goto        RTCDisplay
                      00972         
0287                  00973 StoreBW1
0287   1283           00974         bcf     STATUS,RP0
0288   30C5           00975         movlw   b'11000101'             
0289   009F           00976         movwf   ADCON0                  ;choose RA0
                      00977         
028A   2???           00978         call    BWScanModule1   
028B   2???           00979         call    BWStoreModule1
                      00980         
028C   0008           00981         return                          ; why was there not a return here before?
                      00982         
028D                  00983 StoreBW2
028D   1283           00984         bcf     STATUS,RP0
028E   30CD           00985         movlw   b'11001101'             
028F   009F           00986         movwf   ADCON0                  ;choose RA1
                      00987         
0290   2???           00988         call    BWScanModule2
0291   2???           00989         call    BWStoreModule2
                      00990         
0292   0008           00991         return
                      00992         
0293                  00993 AddBin
0293   2???           00994         Call Clear_Display
0294   0AE0           00995         incf    NumOfBins1,F
                      00996         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
0295   0860               M         movfw       NumOfBins1
0296   2???               M         call        DectoChar
0297   2???               M         call        WR_DATA
0298   3008           00997         movlw   0X8                     ;checks if max of 7 bins has been reached
0299   0260           00998         subwf   NumOfBins1,W            
029A   1903           00999         btfsc   STATUS,Z
029B   2???           01000         goto    EXIT
029C   0008           01001         return
                      01002         
029D                  01003 ShowBins
029D   2???           01004         call            Clear_Display
                      01005         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
029E   0860               M         movfw       NumOfBins1
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029F   2???               M         call        DectoChar
02A0   2???               M         call        WR_DATA
02A1   0008           01006         return
                      01007         
02A2                  01008 Stickers1                   ;TESTED
02A2   2???           01009         call            Clear_Display
02A3   3000           01010         movlw           0X0
02A4   00DF           01011         movwf           counter
02A5   1383           01012         BCF             STATUS, IRP
02A6   3041           01013         movlw           0x41
02A7   0084           01014         movwf           FSR
02A8   0860           01015         movfw           NumOfBins1
02A9   00DE           01016         movwf           countdown
                      01017         Display         FrontStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02AA   01B3               M                 clrf    Table_Counter
02AB   0103               M                 clrw            
02AC   0833               M loop_   movf    Table_Counter,W
02AD   2???               M                 call    FrontStickers
02AE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02AF   1903               M                 btfsc   STATUS,Z
02B0   2???               M                         goto    end_
02B1   2???               M                 call    WR_DATA
02B2   0AB3               M                 incf    Table_Counter,F
02B3   2???               M                 goto    loop_
02B4                      M end_
02B4                  01018 FrontLoop1      
02B4   0A84           01019         INCF            FSR,1
02B5   0ADF           01020         incf            counter
                      01021         PrintNumber     counter
                          M         ;movf       number ,W
02B6   085F               M         movfw       counter
02B7   2???               M         call        DectoChar
02B8   2???               M         call        WR_DATA
                      01022         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02B9   01B3               M                 clrf    Table_Counter
02BA   0103               M                 clrw            
02BB   0833               M loop_   movf    Table_Counter,W
02BC   2???               M                 call    Colon
02BD   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02BE   1903               M                 btfsc   STATUS,Z
02BF   2???               M                         goto    end_
02C0   2???               M                 call    WR_DATA
02C1   0AB3               M                 incf    Table_Counter,F
02C2   2???               M                 goto    loop_
02C3                      M end_
02C3   0800           01023         movfw           INDF
                      01024         PrintCol        W
02C4   0800               M         movfw       W
02C5   2???               M         call        StickerColours
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C6   2???               M         call        WR_DATA
                      01025         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02C7   01B3               M                 clrf    Table_Counter
02C8   0103               M                 clrw            
02C9   0833               M loop_   movf    Table_Counter,W
02CA   2???               M                 call    Spacee
02CB   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02CC   1903               M                 btfsc   STATUS,Z
02CD   2???               M                         goto    end_
02CE   2???               M                 call    WR_DATA
02CF   0AB3               M                 incf    Table_Counter,F
02D0   2???               M                 goto    loop_
02D1                      M end_
02D1   0BDE           01026         decfsz          countdown,F
02D2   2???           01027         goto            FrontLoop1
                      01028         
02D3   2???           01029         call            Switch_Lines
                      01030         
02D4                  01031 Stickers2                       ;TESTED
                      01032         
02D4   3000           01033         movlw           0X0
02D5   00DF           01034         movwf           counter
02D6   1383           01035         BCF             STATUS, IRP
02D7   3048           01036         movlw           0x48
02D8   0084           01037         movwf           FSR
02D9   0860           01038         movfw           NumOfBins1
02DA   00DE           01039         movwf           countdown
                      01040         Display         BackStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02DB   01B3               M                 clrf    Table_Counter
02DC   0103               M                 clrw            
02DD   0833               M loop_   movf    Table_Counter,W
02DE   2???               M                 call    BackStickers
02DF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02E0   1903               M                 btfsc   STATUS,Z
02E1   2???               M                         goto    end_
02E2   2???               M                 call    WR_DATA
02E3   0AB3               M                 incf    Table_Counter,F
02E4   2???               M                 goto    loop_
02E5                      M end_
02E5                  01041 FrontLoop2
02E5   0A84           01042         INCF            FSR,1
02E6   0ADF           01043         incf            counter
                      01044         PrintNumber     counter
                          M         ;movf       number ,W
02E7   085F               M         movfw       counter
02E8   2???               M         call        DectoChar
02E9   2???               M         call        WR_DATA
                      01045         Display         Colon
  0000                    M                 local   loop_
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_
02EA   01B3               M                 clrf    Table_Counter
02EB   0103               M                 clrw            
02EC   0833               M loop_   movf    Table_Counter,W
02ED   2???               M                 call    Colon
02EE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02EF   1903               M                 btfsc   STATUS,Z
02F0   2???               M                         goto    end_
02F1   2???               M                 call    WR_DATA
02F2   0AB3               M                 incf    Table_Counter,F
02F3   2???               M                 goto    loop_
02F4                      M end_
02F4   0800           01046         movfw           INDF
                      01047         PrintCol        W
02F5   0800               M         movfw       W
02F6   2???               M         call        StickerColours
02F7   2???               M         call        WR_DATA
                      01048         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02F8   01B3               M                 clrf    Table_Counter
02F9   0103               M                 clrw            
02FA   0833               M loop_   movf    Table_Counter,W
02FB   2???               M                 call    Spacee
02FC   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02FD   1903               M                 btfsc   STATUS,Z
02FE   2???               M                         goto    end_
02FF   2???               M                 call    WR_DATA
0300   0AB3               M                 incf    Table_Counter,F
0301   2???               M                 goto    loop_
0302                      M end_
0302   0BDE           01049         decfsz          countdown,F
0303   2???           01050         goto            FrontLoop2
                      01051         
0304   0008           01052         return
                      01053         
0305                  01054 Locations                       ;TESTED
0305   2???           01055         call            Clear_Display
0306   3000           01056         movlw           0X0
0307   00DF           01057         movwf           counter
0308   1383           01058         BCF             STATUS, IRP
0309   303A           01059         movlw           0x3A
030A   0084           01060         movwf           FSR
030B   0860           01061         movfw           NumOfBins1
030C   00DE           01062         movwf           countdown
                      01063         Display         Distances
  0000                    M                 local   loop_
  0000                    M                 local   end_
030D   01B3               M                 clrf    Table_Counter
030E   0103               M                 clrw            
030F   0833               M loop_   movf    Table_Counter,W
0310   2???               M                 call    Distances
0311   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0312   1903               M                 btfsc   STATUS,Z
0313   2???               M                         goto    end_
0314   2???               M                 call    WR_DATA
0315   0AB3               M                 incf    Table_Counter,F
0316   2???               M                 goto    loop_
0317                      M end_
0317   2???           01064         call            Switch_Lines
0318                  01065 FrontLoop       
0318   0A84           01066         INCF            FSR,1
0319   0ADF           01067         incf            counter
                      01068         ;PrintNumber    counter
                      01069         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
031A   01B3               M                 clrf    Table_Counter
031B   0103               M                 clrw            
031C   0833               M loop_   movf    Table_Counter,W
031D   2???               M                 call    Colon
031E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
031F   1903               M                 btfsc   STATUS,Z
0320   2???               M                         goto    end_
0321   2???               M                 call    WR_DATA
0322   0AB3               M                 incf    Table_Counter,F
0323   2???               M                 goto    loop_
0324                      M end_
                      01070         Display_Dist    INDF
                          M     MOV     INDF,         temp  ; Bin_Dist_reg --> temp
0324   0800               M     MOVF  INDF,W        ; move reg1 into working register
0325   00B9               M     MOVWF   temp        ; reg2 <- reg1
0326   2???               M     call    Distance_Display
                      01071         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
0327   01B3               M                 clrf    Table_Counter
0328   0103               M                 clrw            
0329   0833               M loop_   movf    Table_Counter,W
032A   2???               M                 call    Spacee
032B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
032C   1903               M                 btfsc   STATUS,Z
032D   2???               M                         goto    end_
032E   2???               M                 call    WR_DATA
032F   0AB3               M                 incf    Table_Counter,F
0330   2???               M                 goto    loop_
0331                      M end_
0331   0BDE           01072         decfsz          countdown,F
0332   2???           01073         goto            FrontLoop
                      01074         
0333   0008           01075         return
                      01076         
0334                  01077 LEDControlON
                      01078         
0334   1862           01079         btfsc       LEDcounter0,0
0335   2???           01080         goto        $+4
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0336   1406           01081         bsf         LED
0337   1462           01082         bsf         LEDcounter0,0
0338   0008           01083         return
                      01084         
                      01085         
0339   1006           01086         bcf         LED
033A   1062           01087         bcf         LEDcounter0,0
033B   0008           01088         return
                      01089         
                      01090         
033C                  01091 DisplayBlackWhiteIR1
                      01092         
033C   30C5           01093         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
033D   009F           01094         movwf   ADCON0  
                      01095                 
033E   2???           01096         call            BWScanModule1   
033F   0008           01097         return
                      01098         
                      01099         
0340                  01100 DisplayBlackWhiteIR2
                      01101         
0340   30CD           01102         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra as the reader pin
0341   009F           01103         movwf   ADCON0  
                      01104         
0342   2???           01105         call            BWScanModule1   
0343   0008           01106         return
                      01107 
                      01108         
0344                  01109 StdRotation1
                      01110         
0344   1863           01111         btfsc       LEDcounter1,0
0345   2???           01112         goto        $+4
0346   1287           01113         bcf             Std1
0347   1463           01114         bsf         LEDcounter1,0
0348   0008           01115         return
                      01116         
0349   1687           01117         bsf             Std1
034A   1063           01118         bcf         LEDcounter1,0
034B   0008           01119         return
                      01120         
034C                  01121 StdRotation2
                      01122 
034C   1864           01123         btfsc       LEDcounter2,0
034D   2???           01124         goto        $+4
                      01125         
034E   1307           01126         bcf             Std2
034F   1464           01127         bsf         LEDcounter2,0
0350   0008           01128         return
                      01129         
0351   1D06           01130         btfss       SwitchWhite
0352   1707           01131         bsf         Std2
                      01132         
0353   1707           01133         bsf             Std2
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0354   1064           01134         bcf         LEDcounter2,0
                      01135 
0355   0008           01136         return
                      01137                 
0356                  01138 StdRotation1Backwards
                      01139         
0356   1866           01140         btfsc       LEDcounter4,0
0357   2???           01141         goto        $+4
0358   1407           01142         bsf             Std1Backwards
0359   1466           01143         bsf         LEDcounter4,0
035A   0008           01144         return
                      01145         
035B   1007           01146         bcf             Std1Backwards
035C   1066           01147         bcf         LEDcounter4,0
035D   0008           01148         return
                      01149         
035E                  01150 StdRotation2Backwards
                      01151 
035E   1867           01152         btfsc       LEDcounter5,0
035F   2???           01153         goto        $+4
0360   1787           01154         bsf             Std2Backwards
0361   1467           01155         bsf         LEDcounter5,0
0362   0008           01156         return
                      01157         
0363   1D06           01158         btfss       SwitchWhite
0364   1707           01159         bsf         Std2
                      01160         
0365   1387           01161         bcf             Std2Backwards
0366   1067           01162         bcf         LEDcounter5,0
0367   0008           01163         return
                      01164 
0368                  01165 PWMFWD  
                      01166         
                      01167     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01168     
                      01169     ;save   pr2 value so that you can zero it after
                      01170     
0368   1868           01171     btfsc           LEDcounter7,0
0369   2???           01172     goto            $+4
036A   0197           01173     clrf            CCP1CON
036B   1468           01174     bsf             LEDcounter7,0
036C   0008           01175     return
                      01176     
036D   1683 1303      01177     BANKSEL TRISC
036F   1107           01178     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01179     
0370   0817           01180     MOVF     CCP1CON,W          ;set CCP1 as PWM
0371   39F0           01181     ANDLW    0xF0
0372   380C           01182     IORLW    0x0C
0373   0097           01183     MOVWF    CCP1CON
                      01184 
0374   0812           01185     movfw   PR2
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0375   00D0           01186     movwf   pr2temp
                      01187     
                      01188     ;11000011
0376   30C3           01189     MOVLW    b'11000011'        ;set highest PWM value
0377   1683 1303      01190     BANKSEL  PR2                
0379   0092           01191     MOVWF    PR2                
037A   1283 1303      01192     BANKSEL  TMR2               
                      01193     
037C   1492           01194     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01195     
037D   0195           01196     CLRF    CCPR1L              ;set PWM to zero
                      01197     
037E   1712           01198     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
037F   1692           01199     BSF     T2CON, TOUTPS2
0380   1612           01200     BSF     T2CON, TOUTPS1
0381   1592           01201     BSF     T2CON, TOUTPS0
                      01202     
                      01203     ; SET PWM duty cycle
                      01204     ;01001110
0382   1697           01205     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
0383   1617           01206     BSF     CCP1CON, 4
                      01207     MOVLF   B'01101111', CCPR1L                 ; previous was 01101
0384   306F               M     MOVLW  B'01101111'  ; move literal into working register
0385   0095               M     MOVWF   CCPR1L      ; move working register into reg
0386   1597           01208     BSF     CCP1CON, 3
0387   1517           01209     BSF     CCP1CON, 2
                      01210     
0388   1512           01211     BSF     T2CON, TMR2ON       ;and start the timer running
                      01212  
0389   1068           01213     bcf             LEDcounter7,0
                      01214     
038A   0008           01215     return
                      01216     
038B                  01217 PWMBACK
                      01218     
                      01219     ;************ SECOND PWM - Positive one ******************************
                      01220     
038B   1869           01221     btfsc           LEDcounter8,0
038C   2???           01222     goto            $+4
038D   019D           01223     clrf            CCP2CON
                      01224     ;bcf                    PORTC,1
038E   1469           01225     bsf             LEDcounter8,0
038F   0008           01226     return
                      01227     
                      01228  
                      01229     
0390   1683 1303      01230     BANKSEL TRISC
0392   1087           01231     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01232     
0393   081D           01233     MOVF     CCP2CON,W          ;set CCP2 as PWM
0394   39F0           01234     ANDLW    0xF0
0395   380C           01235     IORLW    0x0C
0396   009D           01236     MOVWF    CCP2CON
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01237     
                      01238     ;11000011
0397   30C3           01239     MOVLW    b'11000011'        ;set highest PWM value
0398   1683 1303      01240     BANKSEL  PR2                
039A   0092           01241     MOVWF    PR2                
039B   1283 1303      01242     BANKSEL  TMR2               
                      01243     
039D   1492           01244     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01245     
039E   019B           01246     CLRF    CCPR2L              ;set PWM to zero
                      01247     
039F   1712           01248     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
03A0   1692           01249     BSF     T2CON, TOUTPS2
03A1   1612           01250     BSF     T2CON, TOUTPS1
03A2   1592           01251     BSF     T2CON, TOUTPS0
                      01252     
                      01253     ; SET PWM duty cycle
                      01254     ;01001110
03A3   169D           01255     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
03A4   161D           01256     BSF     CCP2CON, 4
03A5   306F           01257     MOVLW   B'01101111'                         ; good speed for moving the arm
03A6   009B           01258     MOVWF   CCPR2L      
03A7   159D           01259     BSF     CCP2CON, 3
03A8   151D           01260     BSF     CCP2CON, 2
                      01261     
03A9   1512           01262     BSF     T2CON, TMR2ON       ;and start the timer running
03AA   1283           01263     BCF     STATUS,RP0
                      01264     
                      01265     ;bsf                    PORTC,1
                      01266     
03AB   1069           01267     bcf             LEDcounter8,0
                      01268     
03AC   0008           01269     return
                      01270     
03AD                  01271 PWMSTOP
                      01272     
03AD   0197           01273     clrf   CCP1CON
03AE   019D           01274     clrf   CCP2CON
03AF   0850           01275     movfw   pr2temp
03B0   0092           01276     movwf   PR2
                      01277     
03B1   0008           01278     return
                      01279         
                      01280         
                      01281 ;***************************************
                      01282 ; LCD control
                      01283 ;***************************************
03B2                  01284 Switch_Lines
03B2   30C0           01285                 movlw   B'11000000'
03B3   2???           01286                 call    WR_INS
03B4   0008           01287                 return
                      01288 
03B5                  01289 Clear_Display
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B5   3001           01290                 movlw   B'00000001'
03B6   2???           01291                 call    WR_INS
03B7   0008           01292                 return
                      01293 
                      01294 ;***************************************
                      01295 ; Delay 0.5s
                      01296 ;***************************************
03B8                  01297 HalfS   
  0000                01298         local   HalfS_0
03B8   3088           01299       movlw 0x88
03B9   00B0           01300       movwf COUNTH
03BA   30BD           01301       movlw 0xBD
03BB   00B1           01302       movwf COUNTM
03BC   3003           01303       movlw 0x03
03BD   00B2           01304       movwf COUNTL
                      01305 
03BE                  01306 HalfS_0
03BE   0BB0           01307       decfsz COUNTH, f
03BF   2???           01308       goto   $+2
03C0   0BB1           01309       decfsz COUNTM, f
03C1   2???           01310       goto   $+2
03C2   0BB2           01311       decfsz COUNTL, f
03C3   2???           01312       goto   HalfS_0
                      01313 
03C4   2???           01314       goto $+1
03C5   0000           01315       nop
03C6   0000           01316       nop
03C7   0008           01317                 return
                      01318                 
                      01319 ;***************************************
                      01320 ;***************************************
                      01321 ; Delay = 0.6 seconds
                      01322 ; Clock frequency = 4 MHz
03C8                  01323 DELAY1
                      01324                         ;599996 cycles
03C8   30D1           01325         movlw   0xD1
03C9   00B5           01326         movwf   lcd_d1
03CA   304F           01327         movlw   0x4F
03CB   00B6           01328         movwf   lcd_d2
03CC   3002           01329         movlw   0x02
03CD   00EE           01330         movwf   lcd_d1_2
03CE                  01331 Delay_0
03CE   0BB5           01332         decfsz  lcd_d1, f
03CF   2???           01333         goto    $+2
03D0   0BB6           01334         decfsz  lcd_d2, f
03D1   2???           01335         goto    $+2
03D2   0BEE           01336         decfsz  lcd_d1_2, f
03D3   2???           01337         goto    Delay_0
                      01338 
                      01339                         ;4 cycles
03D4   0008           01340         return
                      01341         
                      01342 
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D5                  01343 DELAY2          ;95 secs                ;94999994 cycles
03D5   3063           01344         movlw   0x63
03D6   00B5           01345         movwf   lcd_d1
03D7   3016           01346         movlw   0x16
03D8   00B6           01347         movwf   lcd_d2
03D9   30D0           01348         movlw   0xD0
03DA   00EE           01349         movwf   lcd_d1_2
03DB                  01350 Delay_01
03DB   0BB5           01351         decfsz  lcd_d1, f
03DC   2???           01352         goto    $+2
03DD   0BB6           01353         decfsz  lcd_d2, f
03DE   2???           01354         goto    $+2
03DF   0BEE           01355         decfsz  lcd_d1_2, f
03E0   2???           01356         goto    Delay_01
                      01357 
                      01358                         ;1 cycle
03E1   0000           01359         nop
                      01360         
03E2   0008           01361         return
                      01362         
                      01363 ;***************************************
                      01364 ;Init_TMR0
                      01365 ;   Input:  RA4
                      01366 ;   Output: TMR0 register
                      01367 ;   desc:   Counts the clock pulses for the
                      01368 ;           rotary encoder
                      01369 ;****************************************
03E3                  01370 Init_TMR0                           ; INITIALIZE TIMER 0   
03E3   1683 1303      01371     BANKSEL OPTION_REG
                      01372     MOVLF   B'00101000', OPTION_REG
03E5   3028               M     MOVLW  B'00101000'  ; move literal into working register
03E6   0081               M     MOVWF   OPTION_REG  ; move working register into reg
                      01373     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01374     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
                      01375     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01376     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01377     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01378     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01379     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01380     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
03E7   1283 1303      01381     BANKSEL TMR0
03E9   0181           01382     CLRF   TMR0                     ; Clear timer 0
03EA   0008           01383     return  
                      01384     
                      01385 ;************************************
                      01386 ; RTC Sublabels
                      01387 ;************************************
                      01388     
03EB                  01389 show_RTC
                      01390 ;               ;clear LCD screen
                      01391 ;               movlw   b'00000001'
                      01392 ;               call    WR_INS
                      01393 ;
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01394 ;               ;Get year
                      01395 ;               movlw   "2"                             ;First line shows 20**/**/**
                      01396 ;               call    WR_DATA
                      01397 ;               movlw   "0"
                      01398 ;               call    WR_DATA
                      01399 ;               rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                      01400 ;               movfw   0x77
                      01401 ;               call    WR_DATA
                      01402 ;               movfw   0x78
                      01403 ;               call    WR_DATA
                      01404 ;
                      01405 ;               movlw   "/"
                      01406 ;               call    WR_DATA
                      01407 ;
                      01408 ;               ;Get month
                      01409 ;               rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                      01410 ;               movfw   0x77
                      01411 ;               call    WR_DATA
                      01412 ;               movfw   0x78
                      01413 ;               call    WR_DATA
                      01414 ;
                      01415 ;               movlw   "/"
                      01416 ;               call    WR_DATA
                      01417 ;
                      01418 ;               ;Get day
                      01419 ;               rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                      01420 ;               movfw   0x77
                      01421 ;               call    WR_DATA
                      01422 ;               movfw   0x78
                      01423 ;               call    WR_DATA
                      01424 ;
                      01425 ;               movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
                      01426 ;               call    WR_INS
                      01427 ;               ONLY GONNA DISPLAY THE TIME HAHA
                      01428                 ;Get hour
                      01429                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03EB   3002               M         movlw   0x02
03EC   1283 1303          M         banksel 0x73
03EE   00F3               M         movwf   0x73
03EF   2???               M         call    read_rtc
03F0   1283 1303          M         banksel 0x75
03F2   0875               M         movf    0x75,w
03F3   2???               M         call    rtc_convert   
03F4   0877           01430                 movfw   0x77
03F5   2???           01431                 call    WR_DATA
03F6   0878           01432                 movfw   0x78
03F7   2???           01433                 call    WR_DATA
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F8   303A           01434                 movlw                   ":"
03F9   2???           01435                 call    WR_DATA
                      01436 
                      01437                 ;Get minute             
                      01438                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03FA   3001               M         movlw   0x01
03FB   1283 1303          M         banksel 0x73
03FD   00F3               M         movwf   0x73
03FE   2???               M         call    read_rtc
03FF   1283 1303          M         banksel 0x75
0401   0875               M         movf    0x75,w
0402   2???               M         call    rtc_convert   
0403   0877           01439                 movfw   0x77
0404   2???           01440                 call    WR_DATA
0405   0878           01441                 movfw   0x78
0406   2???           01442                 call    WR_DATA         
0407   303A           01443                 movlw                   ":"
0408   2???           01444                 call    WR_DATA
                      01445                 
                      01446                 ;Get seconds
                      01447                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0409   3000               M         movlw   0x00
040A   1283 1303          M         banksel 0x73
040C   00F3               M         movwf   0x73
040D   2???               M         call    read_rtc
040E   1283 1303          M         banksel 0x75
0410   0875               M         movf    0x75,w
0411   2???               M         call    rtc_convert   
0412   0877           01448                 movfw   0x77
0413   2???           01449                 call    WR_DATA
0414   0878           01450                 movfw   0x78
0415   2???           01451                 call    WR_DATA
                      01452                 
0416   2???           01453                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
0417   0008           01454                 return
                      01455 
                      01456 ;***************************************
                      01457 ; Setup RTC with time defined by user
                      01458 ;***************************************
0418                  01459 set_rtc_time
                      01460 
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01461                 ;rtc_resetAll   ;reset rtc
                      01462                 ;works up to here
                      01463 
                      01464                 ;rtc_set        0x00,   B'10000000'
                      01465                 ;works up to here
                      01466                 
                      01467                 ;set time 
                      01468 ;               rtc_set 0x06,   B'00010110'             ; Year
                      01469 ;               ;works up to here
                      01470 ;               rtc_set 0x05,   B'00000011'             ; Month
                      01471 ;               rtc_set 0x04,   B'00100000'             ; Date
                      01472                 ;works up to here
                      01473                 ;rtc_set        0x03,   B'00100010'             ; Day
                      01474                 ;stops working on this one^
                      01475                 ;seems like day is the one that crashes it
                      01476                 rtc_set 0x02,   B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0418   1283 1303          M         banksel 0x73
041A   3002               M         movlw   0x02
041B   00F3               M         movwf   0x73
041C   1283 1303          M         banksel 0x74
041E   3000               M         movlw   B'00000000'
041F   00F4               M         movwf   0x74    
0420   2???               M         call    write_rtc
                      01477                 ;works on this one
                      01478                 rtc_set 0x01,   B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0421   1283 1303          M         banksel 0x73
0423   3001               M         movlw   0x01
0424   00F3               M         movwf   0x73
0425   1283 1303          M         banksel 0x74
0427   3000               M         movlw   B'00000000'
0428   00F4               M         movwf   0x74    
0429   2???               M         call    write_rtc
                      01479                 ;works on this one
                      01480                 rtc_set 0x00,   B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
042A   1283 1303          M         banksel 0x73
042C   3000               M         movlw   0x00
042D   00F3               M         movwf   0x73
042E   1283 1303          M         banksel 0x74
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0430   3000               M         movlw   B'00000000'
0431   00F4               M         movwf   0x74    
0432   2???               M         call    write_rtc
                      01481                 ;works on this one
0433   0008           01482                 return
                      01483 
                      01484 ;***************************************
                      01485 ; Delay 1s
                      01486 ;***************************************
0434                  01487 OneS
  0000                01488                 local   OneS_0
0434   3010           01489       movlw 0x10
0435   00B0           01490       movwf COUNTH
0436   307A           01491       movlw 0x7A
0437   00B1           01492       movwf COUNTM
0438   3006           01493       movlw 0x06
0439   00B2           01494       movwf COUNTL
                      01495 
043A                  01496 OneS_0
043A   0BB0           01497       decfsz COUNTH, f
043B   2???           01498       goto   $+2
043C   0BB1           01499       decfsz COUNTM, f
043D   2???           01500       goto   $+2
043E   0BB2           01501       decfsz COUNTL, f
043F   2???           01502       goto   OneS_0
                      01503 
0440   2???           01504       goto $+1
0441   0000           01505       nop
0442   0000           01506       nop
0443   0008           01507                 return
                      01508                 
0444                  01509 lcdLongDelay
0444   3014           01510     movlw d'20'
0445   00B6           01511     movwf lcd_d2
0446                  01512 LLD_LOOP
                      01513     LCD_DELAY
0446   30FF               M         movlw   0xFF
0447   00B5               M         movwf   lcd_d1
0448   0BB5               M         decfsz  lcd_d1,f
0449   2???               M         goto    $-1
044A   0BB6           01514     decfsz lcd_d2,f
044B   2???           01515     goto LLD_LOOP
044C   0008           01516     return
                      01517     
                      01518 ;***************************************
                      01519 ; Look up table
                      01520 ;***************************************
                      01521     
044D                  01522 Welcome_Msg
                      01523         
                      01524         ;Change Page
044D   00BA           01525         movwf   Temp
044E   30??           01526         movlw   HIGH Welcome_MsgEntries
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

044F   008A           01527         movwf   PCLATH
0450   083A           01528         movf    Temp,w
0451   3E??           01529         addlw   LOW Welcome_MsgEntries
0452   1803           01530         btfsc   STATUS,C
0453   0A8A           01531             incf    PCLATH,f
0454   0082           01532         movwf   PCL     
0455   0782           01533         addwf    PCL,F
0456                  01534 Welcome_MsgEntries
0456   3431 343A 3453 01535         dt        "1:Simulation|#/D:PWM|*/0:Std1&Std2|3:B/W", 0
       3469 346D 3475 
       346C 3461 3474 
       3469 346F 346E 
       347C 3423 342F 
       3444 343A 3450 
       3457 344D 347C 
       342A 342F 3430 
       343A 3453 3474 
       3464 3431 3426 
       3453 3474 3464 
       3432 347C 3433 
       343A 3442 342F 
       3457 3400 
                      01536         
047F                  01537 Welcome_Msg2
                      01538         
                      01539         ;Change Page
047F   00BA           01540         movwf   Temp
0480   30??           01541         movlw   HIGH Welcome_Msg2Entries
0481   008A           01542         movwf   PCLATH
0482   083A           01543         movf    Temp,w
0483   3E??           01544         addlw   LOW Welcome_Msg2Entries
0484   1803           01545         btfsc   STATUS,C
0485   0A8A           01546             incf    PCLATH,f
0486   0082           01547         movwf   PCL     
0487   0782           01548         addwf    PCL,F
0488                  01549 Welcome_Msg2Entries
0488   3435 3444 3469 01550         dt        "5Distance 6Locations", 0
       3473 3474 3461 
       346E 3463 3465 
       3420 3436 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01551         
049D                  01552 FinalMessage
                      01553         
                      01554         ;Change Page
049D   00BA           01555         movwf    Temp
049E   30??           01556         movlw   HIGH FinalMessageEntries
049F   008A           01557         movwf   PCLATH
04A0   083A           01558         movf    Temp,w
04A1   3E??           01559         addlw   LOW FinalMessageEntries
04A2   1803           01560         btfsc   STATUS,C
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04A3   0A8A           01561             incf    PCLATH,f
04A4   0082           01562         movwf   PCL
04A5   0782           01563         addwf    PCL,F
04A6                  01564 FinalMessageEntries
04A6   3431 3453 3474 01565         dt        "1Stickers 2Bins 3Locations",0
       3469 3463 346B 
       3465 3472 3473 
       3420 3432 3442 
       3469 346E 3473 
       3420 3433 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01566         
04C1                  01567 DectoChar
                      01568         
                      01569         ;Change Page
04C1   00BA           01570         movwf   Temp
04C2   30??           01571         movlw   HIGH DectoCharEntries
04C3   008A           01572         movwf   PCLATH
04C4   083A           01573         movf    Temp,w
04C5   3E??           01574         addlw   LOW DectoCharEntries
04C6   1803           01575         btfsc   STATUS,C
04C7   0A8A           01576             incf    PCLATH,f
04C8   0082           01577         movwf   PCL     
04C9   0782           01578         addwf    PCL,F
04CA                  01579 DectoCharEntries
04CA   3430 3431 3432 01580         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01581         
04D5                  01582 StickerColours
                      01583         
                      01584         ;Change Page
04D5   00BA           01585         movwf   Temp
04D6   30??           01586         movlw   HIGH StickerColoursEntries
04D7   008A           01587         movwf   PCLATH
04D8   083A           01588         movf    Temp,w
04D9   3E??           01589         addlw   LOW StickerColoursEntries
04DA   1803           01590         btfsc   STATUS,C
04DB   0A8A           01591             incf    PCLATH,f
04DC   0082           01592         movwf   PCL     
04DD   0782           01593         addwf    PCL,F
04DE                  01594 StickerColoursEntries
04DE   3442 3457 3400 01595         dt        "BW",  0
                      01596         
04E1                  01597 FrontStickers
                      01598 
                      01599         ;Change Page
04E1   00BA           01600         movwf   Temp
04E2   30??           01601         movlw   HIGH FrontStickersEntries
04E3   008A           01602         movwf   PCLATH
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04E4   083A           01603         movf    Temp,w
04E5   3E??           01604         addlw   LOW FrontStickersEntries
04E6   1803           01605         btfsc   STATUS,C
04E7   0A8A           01606             incf    PCLATH,f
04E8   0082           01607         movwf   PCL     
04E9   0782           01608         addwf    PCL,F
04EA                  01609 FrontStickersEntries
04EA   3446 3472 346F 01610         dt        "Front",  0
       346E 3474 3400 
                      01611         
04F0                  01612 BackStickers
                      01613 
                      01614         ;Change Page
04F0   00BA           01615         movwf   Temp
04F1   30??           01616         movlw   HIGH BackStickersEntries
04F2   008A           01617         movwf   PCLATH
04F3   083A           01618         movf    Temp,w
04F4   3E??           01619         addlw   LOW BackStickersEntries
04F5   1803           01620         btfsc   STATUS,C
04F6   0A8A           01621             incf    PCLATH,f
04F7   0082           01622         movwf   PCL     
04F8   0782           01623         addwf    PCL,F
04F9                  01624 BackStickersEntries
04F9   3442 3461 3463 01625         dt        "Back",  0
       346B 3400 
                      01626         
04FE                  01627 Spacee
                      01628 
                      01629         ;Change Page
04FE   00BA           01630         movwf   Temp
04FF   30??           01631         movlw   HIGH SpaceeEntries
0500   008A           01632         movwf   PCLATH
0501   083A           01633         movf    Temp,w
0502   3E??           01634         addlw   LOW SpaceeEntries
0503   1803           01635         btfsc   STATUS,C
0504   0A8A           01636             incf    PCLATH,f
0505   0082           01637         movwf   PCL     
0506   0782           01638         addwf    PCL,F
0507                  01639 SpaceeEntries
0507   3420 3400      01640         dt        " ",  0
                      01641         
0509                  01642 Colon
                      01643 
                      01644         ;Change Page
0509   00BA           01645         movwf   Temp
050A   30??           01646         movlw   HIGH ColonEntries
050B   008A           01647         movwf   PCLATH
050C   083A           01648         movf    Temp,w
050D   3E??           01649         addlw   LOW ColonEntries
050E   1803           01650         btfsc   STATUS,C
050F   0A8A           01651             incf    PCLATH,f
0510   0082           01652         movwf   PCL     
0511   0782           01653         addwf    PCL,F
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0512                  01654 ColonEntries
0512   343A 3400      01655         dt        ":",  0
                      01656         
0514                  01657 Distances
                      01658 
                      01659         ;Change Page
0514   00BA           01660         movwf   Temp
0515   30??           01661         movlw   HIGH DistancesEntries
0516   008A           01662         movwf   PCLATH
0517   083A           01663         movf    Temp,w
0518   3E??           01664         addlw   LOW DistancesEntries
0519   1803           01665         btfsc   STATUS,C
051A   0A8A           01666             incf    PCLATH,f
051B   0082           01667         movwf   PCL     
051C   0782           01668         addwf    PCL,F
051D                  01669 DistancesEntries
051D   3444 3469 3473 01670         dt        "Dist (cm)",  0
       3474 3420 3428 
       3463 346D 3429 
       3400 
                      01671             
3F72                  01672         END
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AVOIDCOLUMN1                      000000FF
AVOIDCOLUMN2                      00000116
AddBin                            00000293
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BINREADINGSTART                   00000165
BRGH                              00000002
BWScanModule1                     000001C8
BWScanModule2                     000001EE
BWStoreModule1                    000001E1
BWStoreModule2                    00000207
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BackStickers                      000004F0
BackStickersEntries               000004F9
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHECKSWITCH                       00000189
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COLREADINGSTART                   00000158
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Check_cm_overflow                 0000025C
Check_mm_overflow                 00000258
Clear_Display                     000003B5
ClrLCD                            00000000
ColMotor                          PORTC,7
Colon                             00000509
ColonEntries                      00000512
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DELAY1                            000003C8
DELAY2                            000003D5
DELAYEDREAD                       00000173
D_A                               00000005
D_NOT_A                           00000005
Decode_check_done                 00000262
Decode_loop                       00000251
DectoChar                         000004C1
DectoCharEntries                  000004CA
Delay_0                           000003CE
Delay_01                          000003DB
Display                           
DisplayBlackWhiteIR1              0000033C
DisplayBlackWhiteIR2              00000340
Display_Dist                      
Dist_Decoder                      0000024A
Distance_Display                  00000001
Distances                         00000514
DistancesEntries                  0000051D
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENDTHIS                           0000017B
ENDTHIS1                          00000184
EXIT                              00000192
EXITDISPLAY                       000001A5
F                                 00000001
FERR                              00000002
FSR                               00000004
FinalMessage                      0000049D
FinalMessageEntries               000004A6
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         00000318
FrontLoop1                        000002B4
FrontLoop2                        000002E5
FrontStickers                     000004E1
FrontStickersEntries              000004EA
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000003B8
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         000003E3
Key                               
KeypadandLCD                      000000AB
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

LCD_DELAY                         
LED                               PORTB,0
LEDControlON                      00000334
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter7                       00000068
LEDcounter8                       00000069
LLD_LOOP                          00000446
Lb1                               00000032
Lb2                               00000036
Lb3                               0000003A
Lb4                               0000003E
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
Locations                         00000305
MAX_HIGHS                         0x3
MAX_TICKS                         d'70'
MOV                               
MOVLF                             
MoveBackwards                     000001C7
NOTPWMBACK                        PORTC,1
NOTPWMFWD                         PORTC,2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              00000051
NumL                              00000052
NumOfBins1                        00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              00000434
Ones                              00000057
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           0000038B
PWMFWD                            00000368
PWMSTOP                           000003AD
PrintCol                          
PrintNumber                       
Put_Dist_In_Reg                   
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READBIN                           0000013B
READ_WRITE                        00000002
RETURNFROMCOLUMN                  00000129
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        0000027D
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          00000214
Read2_US                          0000022F
ReadUltrasonic                    
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         00000279
ShowBins                          0000029D
Spacee                            000004FE
SpaceeEntries                     00000507
Std1                              PORTC,5
Std1Backwards                     PORTC,0
Std2                              PORTC,6
Std2Backwards                     PORTC,7
StdRotation1                      00000344
StdRotation1Backwards             00000356
StdRotation2                      0000034C
StdRotation2Backwards             0000035E
StickerColours                    000004D5
StickerColoursEntries             000004DE
Stickers1                         000002A2
Stickers2                         000002D4
StoreBW1                          00000287
StoreBW2                          0000028D
StoreThisTick                     0000026F
SwitchArm                         PORTB,3
SwitchWhite                       PORTB,2
Switch_Lines                      000003B2
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTAL                             00000154
TOTAL1                            00000156
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
Welcome_Msg                       0000044D
Welcome_Msg2                      0000047F
Welcome_Msg2Entries               00000488
Welcome_MsgEntries                00000456
Z                                 00000002
_.org_0_00AC                      000000AC
_.org_0_00FC                      000000FC
_.org_0_0103                      00000103
_.org_0_0106                      00000106
_.org_0_010F                      0000010F
_.org_0_0112                      00000112
_.org_0_0120                      00000120
_.org_0_0125                      00000125
_.org_0_0130                      00000130
_.org_0_0137                      00000137
_.org_0_015C                      0000015C
_.org_0_016A                      0000016A
_.org_0_018C                      0000018C
_.org_0_018F                      0000018F
_.org_0_01A6                      000001A6
_.org_0_01C4                      000001C4
_.org_0_01CA                      000001CA
_.org_0_01F0                      000001F0
_.org_0_021C                      0000021C
_.org_0_021F                      0000021F
_.org_0_0237                      00000237
_.org_0_023A                      0000023A
_.org_0_0335                      00000335
_.org_0_0345                      00000345
_.org_0_034D                      0000034D
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_0357                      00000357
_.org_0_035F                      0000035F
_.org_0_0369                      00000369
_.org_0_038C                      0000038C
_.org_0_03BF                      000003BF
_.org_0_03C1                      000003C1
_.org_0_03C4                      000003C4
_.org_0_03CF                      000003CF
_.org_0_03D1                      000003D1
_.org_0_03DC                      000003DC
_.org_0_03DE                      000003DE
_.org_0_043B                      0000043B
_.org_0_043D                      0000043D
_.org_0_0440                      00000440
_.org_0_0449                      00000449
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
MPASM 5.65                          MAIN.ASM   4-5-2016  15:46:57         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

__16F877                          00000001
backstickerValues                 0000005C
bin16_BCD                         00000011
binCounter                        0000005D
cm                                0000006A
cm_overflow                       0000026B
com                               00000037
count_highs                       0000006F
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay3                            00000061
distanceMoved                     00000058
distreg                           0000006D
frontstickerValues                0000005B
goback                            000000FE
hour1                             00000071
hour2                             00000072
i2c_common_setup                  00000000
init                              00000044
isBinThere                        0000005A
isColumnThere                     00000059
lcdLongDelay                      00000444
lcd_d1                            00000035
lcd_d1_2                          0000006E
lcd_d2                            00000036
lcd_tmp                           00000034
m                                 0000006C
min1                              00000073
min2                              00000074
mm                                0000006B
mm_overflow                       00000267
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
sec1                              00000075
sec2                              00000076
set_rtc_time                      00000418
show_RTC                          000003EB
temp                              00000039
temp_2                            00000070
write_rtc                         00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    38 suppressed

