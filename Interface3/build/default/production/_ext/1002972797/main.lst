MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1       ;3B PC
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5       
  00000040            00038                 Location6       ;40 PC
  00000041            00039                 Location7
  00000042            00040                 Front1          ;42 PC7
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ; 49 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7           ;50
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins1                      
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0, LEDcounter1,LEDcounter2,LEDcounter3,LEDcounter4,LEDcounter5,LEDcounter7,LED
                            counter8
  0000006A            00073                 cm
  0000006B            00074                 mm
  0000006C            00075                 m
  0000006D            00076                 distreg
  0000006E            00077                 lcd_d1_2
  0000006F            00078                 count_highs             ;the number of consecutive high counter for the US sensor
                      00079         endc    
                      00080 
                      00081         ;Declare constants for pin assignments (LCD on PORTD)
                      00082                 #define RS      PORTD,2
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083                 #define E       PORTD,3
                      00084                 #define IR1     PORTA,0
                      00085                 #define IR2     PORTA,1
                      00086                 #define ColMotor PORTC,7
                      00087                 #define UST1    PORTD,0
                      00088                 #define US1E1   PORTA,2
                      00089                 #define UST2    PORTD,1
                      00090                 #define US1E2   PORTA,3
                      00091                 #define LED     PORTB,0
                      00092                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00093                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00094                 #define Std1Backwards   PORTC,0
                      00095                 #define Std2Backwards   PORTC,7
                      00096                 #define SwitchWhite             PORTB,2     ; or gated switch to stop motor motion
                      00097                 #define SwitchArm               PORTB,3
                      00098                 #define NOTPWMFWD               PORTC,2
                      00099                 #define NOTPWMBACK              PORTC,1
                      00100                 #define MAX_HIGHS       0x3
                      00101                 ;SHAFTIR is PORTA,4
                      00102                 ;PWMFWD is RC2
                      00103                 ;PWMBACK is RC1
                      00104                 
                      00105                 
                      00106 ;distanceMoved  equ     b'0'
                      00107 
                      00108          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00109          goto      init       ;Just jump to the main code section.
                      00110          
                      00111          ;ORG      0x100        ;this command is sketchy
                      00112 
                      00113 ;*******************************************************************************
                      00114 ; MACROS
                      00115 ;*******************************************************************************
                      00116          
                      00117 Key      macro  value, subroutine
                      00118          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00119          andlw          0x0F
                      00120          xorlw          value
                      00121          btfsc          STATUS, Z
                      00122          call           subroutine
                      00123         endm
                      00124 
                      00125 Rotation macro  value
                      00126          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00127          andlw          0x0F
                      00128          xorlw          value
                      00129          btfsc          STATUS, Z
                      00130          call           ShiftLeft
                      00131         endm
                      00132 
                      00133 ;***************************************
                      00134 ; Delay: ~160us macro
                      00135 ;***************************************
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136 LCD_DELAY macro
                      00137         movlw   0xFF
                      00138         movwf   lcd_d1
                      00139         decfsz  lcd_d1,f
                      00140         goto    $-1
                      00141         endm
                      00142         
                      00143 ;***************************************
                      00144 ; Display macro
                      00145 ;***************************************
                      00146 Display macro   Message
                      00147                 local   loop_
                      00148                 local   end_
                      00149                 clrf    Table_Counter
                      00150                 clrw            
                      00151 loop_   movf    Table_Counter,W
                      00152                 call    Message
                      00153                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00154                 btfsc   STATUS,Z
                      00155                         goto    end_
                      00156                 call    WR_DATA
                      00157                 incf    Table_Counter,F
                      00158                 goto    loop_
                      00159 end_
                      00160                 endm
                      00161                 
                      00162 ;***************************************
                      00163 ; BANK0 macro   [TESTED]
                      00164 ;***************************************
                      00165 BANK0 Macro
                      00166     bcf STATUS,RP0 
                      00167     bcf STATUS,RP1
                      00168     endm
                      00169 ;***************************************
                      00170 ; BANK1 macro   [TESTED]
                      00171 ;***************************************
                      00172 BANK1 Macro
                      00173     bsf STATUS,RP0 
                      00174     bcf STATUS,RP1
                      00175     endm
                      00176         
                      00177 ;***************************************
                      00178 ; BANK2 macro   [TESTED]
                      00179 ;***************************************
                      00180 BANK2 Macro
                      00181     bsf STATUS,RP0 
                      00182     bsf STATUS,RP1
                      00183     endm
                      00184     
                      00185 ;***************************************
                      00186 ; BANK3 macro   [TESTED]
                      00187 ;***************************************
                      00188 BANK3 Macro
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00189     bcf STATUS,RP0 
                      00190     bsf STATUS,RP1
                      00191     endm
                      00192     
                      00193 ;***************************************
                      00194 ; MOVLF macro   [TESTED]
                      00195 ;***************************************
                      00196 MOVLF   Macro   literal, reg
                      00197     MOVLW  literal      ; move literal into working register
                      00198     MOVWF   reg         ; move working register into reg
                      00199     endm
                      00200 
                      00201 ;***************************************
                      00202 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00203 ;***************************************
                      00204 MOV     Macro   reg1, reg2
                      00205     MOVF  reg1,W        ; move reg1 into working register
                      00206     MOVWF   reg2        ; reg2 <- reg1
                      00207     endm
                      00208     
                      00209 ;***************************************
                      00210 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00211 ;***************************************
                      00212 ADDL    Macro   Destination, reg, literal
                      00213     MOVLW  literal      ; move literal into working register
                      00214     ADDWF   reg,W       ; W <- literal + reg
                      00215     MOVWF   Destination ; Destination <- literal + reg
                      00216     endm
                      00217     
                      00218 ;***************************************
                      00219 ; ADD macro, Adds two registers together    [TESTED]
                      00220 ;***************************************
                      00221 ADD     Macro   Destination, reg1, reg2
                      00222     MOVF    reg1,W      ; move literal into working register
                      00223     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00224     MOVWF   Destination ; Destination <- reg1 + reg2
                      00225     endm
                      00226     
                      00227 ;***************************************
                      00228 ; Store_Dist macro --> Stores current
                      00229 ;   distance and stores it in Bin_Dist_reg
                      00230 ;***************************************                
                      00231 Put_Dist_In_Reg macro    Bin_Dist_reg
                      00232         lcall   Dist_Decoder
                      00233         movfw   cm
                      00234         movwf   Bin_Dist_reg
                      00235     endm
                      00236     
                      00237 ;***************************************
                      00238 ; Display_Dist macro --> Takes value in Bin_Dist_reg
                      00239 ;   and converts it into a BCD and prints it
                      00240 ;   To the LCD
                      00241 ;***************************************                
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00242 Display_Dist macro    Bin_Dist_reg
                      00243         clrf    NumL
                      00244         clrf    NumH
                      00245         movfw   Bin_Dist_reg
                      00246         ;movfw  TMR0
                      00247         movwf   NumL
                      00248         call    bin16_BCD
                      00249         PrintNumber     Hund
                      00250         PrintNumber     Tens
                      00251         PrintNumber     Ones
                      00252     endm
                      00253                 
                      00254 ;***************************************
                      00255 ; Number to Printable
                      00256 ;***************************************
                      00257 PrintNumber macro       number
                      00258         ;movf       number ,W
                      00259         movfw       number
                      00260         call        DectoChar
                      00261         call        WR_DATA
                      00262         endm
                      00263         
                      00264 ;***************************************
                      00265 ; Number to Colour
                      00266 ;***************************************
                      00267 PrintCol macro      number
                      00268         movfw       number
                      00269         call        StickerColours
                      00270         call        WR_DATA
                      00271         endm    
                      00272 
                      00273 ;***************************************
                      00274 ;           US READ MACRO
                      00275 ;****************************************
                      00276 ReadUltrasonic macro    trigger, trigger_bit, echo, echo_bit
                      00277     clrf        TMR1H
                      00278     clrf        TMR1L
                      00279 
                      00280     bcf trigger, trigger_bit            ;make sure trigger is clear
                      00281     call lcdLongDelay
                      00282 
                      00283     bsf trigger, trigger_bit    ;trigger high, bottom sensor
                      00284     call lcdLongDelay           ;10us delay
                      00285     bcf trigger, trigger_bit    ;trigger low
                      00286 
                      00287     btfss       echo, echo_bit          ;wait for echo to go high
                      00288     goto        $-1
                      00289     bsf T1CON,TMR1ON    ;turn on timer
                      00290 
                      00291     btfsc       echo, echo_bit          ;wait for echo to go low
                      00292     goto        $-1
                      00293 
                      00294     bcf T1CON,TMR1ON    ;turn off timer
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00295     endm
                      00296         
                      00297 ;*******************************************************
                      00298 ;******             BCD                 ****************
                      00299 ;*******************************************************
                      00300         
                      00301 ;---------------- Binary (16-bit) to BCD -----------------------
                      00302 ;
                      00303 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00304 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00305                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00306 ;
                      00307 ; Uses variables
                      00308 ; NumH, NumL
                      00309 ; TenK, Thou, Hund, Tens, Ones
                      00310                 
                      00311 ;BCD    macro   NumH, NumL
                      00312 
0001                  00313 bin16_BCD
0001   0E51           00314         swapf   NumH, W
0002   390F           00315         andlw   0x0F
0003   3EF0           00316         addlw   0xF0
0004   00D4           00317         movwf   Thou 
0005   07D4           00318         addwf   Thou, F 
0006   3EE2           00319         addlw   0xE2 
0007   00D5           00320         movwf   Hund 
0008   3E32           00321         addlw   0x32 
0009   00D7           00322         movwf   Ones 
                      00323 
000A   0851           00324         movf    NumH, W 
000B   390F           00325         andlw   0x0F 
000C   07D5           00326         addwf   Hund, F 
000D   07D5           00327         addwf   Hund, F 
000E   07D7           00328         addwf   Ones, F 
000F   3EE9           00329         addlw   0xE9 
0010   00D6           00330         movwf   Tens 
0011   07D6           00331         addwf   Tens, F 
0012   07D6           00332         addwf   Tens, F 
                      00333 
0013   0E52           00334         swapf   NumL, W 
0014   390F           00335         andlw   0x0F 
0015   07D6           00336         addwf   Tens, F 
0016   07D7           00337         addwf   Ones, F 
                      00338 
0017   0DD6           00339         rlf    Tens, F 
0018   0DD7           00340         rlf    Ones, F 
0019   09D7           00341         comf    Ones, F 
001A   0DD7           00342         rlf    Ones, F 
                      00343 
001B   0852           00344         movf    NumL, W 
001C   390F           00345         andlw   0x0F 
001D   07D7           00346         addwf   Ones, F 
001E   0DD4           00347         rlf    Thou,F 
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00348 
001F   3007           00349         movlw   0x07 
0020   00D3           00350         movwf   TenK 
                      00351 
0021   300A           00352         movlw   0x0A
0022                  00353 Lb1
0022   03D6           00354         decf    Tens, F 
0023   07D7           00355         addwf   Ones, F 
0024   1C03           00356         btfss   STATUS, C 
0025   2???           00357         goto            Lb1 
0026                  00358 Lb2
0026   03D5           00359         decf    Hund, F 
0027   07D6           00360         addwf   Tens, F 
0028   1C03           00361         btfss   STATUS,C 
0029   2???           00362         goto            Lb2 
002A                  00363 Lb3
002A   03D4           00364         decf    Thou, F 
002B   07D5           00365         addwf   Hund, F 
002C   1C03           00366         btfss   STATUS,C
002D   2???           00367         goto            Lb3 
002E                  00368 Lb4
002E   03D3           00369         decf    TenK, F 
002F   07D4           00370         addwf   Thou, F 
0030   1C03           00371         btfss   STATUS,C 
0031   2???           00372         goto            Lb4 
                      00373 
0032   3400           00374         retlw   0
0033   0008           00375         return
                      00376 ;endm
                      00377 
                      00378 ;***************************************
                      00379 ; Initialize
                      00380 ;***************************************
0034                  00381 init
0034   018B           00382          clrf      INTCON         ; No interrupts
                      00383 
0035   1683           00384          bsf       STATUS,RP0     ; select bank 1
0036   30FF           00385          movlw      0xFF            ; need to make A input
0037   0085           00386          movwf      TRISA          ; All port A is input
0038   30FE           00387          movlw     b'11111110'    ; Set required keypad inputs
0039   0086           00388          movwf     TRISB
003A   0187           00389          clrf      TRISC          ; All port C is output
003B   0188           00390          clrf      TRISD          ; All port D is output
003C   0189           00391          clrf      TRISE        
                      00392          
                      00393                   ;Set SDA and SCL to high-Z first as required for I2C
003D   1607           00394                  bsf       TRISC,4                
003E   1587           00395                  bsf       TRISC,3
                      00396 
003F   1283           00397          bcf       STATUS,RP0     ; select bank 0
0040   0185           00398          clrf      PORTA
0041   0186           00399          clrf      PORTB
0042   0187           00400          clrf      PORTC
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0043   0188           00401          clrf      PORTD
0044   0189           00402          clrf      PORTE
                      00403          
                      00404         ;Set up I2C for communication
                      00405                  
0045   2???           00406         call       i2c_common_setup
                      00407 ;*******************************************************************************
                      00408 ;        UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00409         rtc_resetAll                                    ;works
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0046   1283 1303          M         banksel         0x74
0048   01F4               M         clrf            0x74
0049   1283 1303          M         banksel         0x73
004B   01F3               M         clrf            0x73
004C   2???               M     call        write_rtc               ;Write 0 to Seconds
004D   1283 1303          M         banksel         0x73
004F   0AF3               M     incf        0x73                    ;Set register address to 1
0050   2???               M         call            write_rtc
0051   1283 1303          M         banksel         0x73
0053   0AF3               M     incf        0x73                    ;Set register address to 2
0054   2???               M         call            write_rtc
0055   1283 1303          M         banksel         0x73
0057   0AF3               M     incf        0x73                    ;Set register address to 3
0058   2???               M         call            write_rtc
0059   1283 1303          M         banksel         0x73
005B   0AF3               M     incf        0x73                    ;Set register address to 4
005C   2???               M         call            write_rtc
005D   1283 1303          M         banksel         0x73
005F   0AF3               M     incf        0x73                    ;Set register address to 5
0060   2???               M         call            write_rtc
0061   1283 1303          M         banksel         0x73
0063   0AF3               M     incf        0x73                    ;Set register address to 6
0064   2???               M         call            write_rtc
0065   2???           00410         call set_rtc_time
                      00411 ;*******************************************************************************
                      00412                  
                      00413                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00414                  ;call     set_rtc_time
                      00415           
0066   2???           00416          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00417           ;A/D converter attempt
                      00418          
                      00419 ;        bcf    STATUS,RP1
                      00420 ;        bsf    STATUS,RP0      ;Select bank 1
                      00421 ;        
                      00422 ;        bsf    IR1             ;makes RA0 an input
                      00423 ;        bcf    STATUS,RP0      ; go back to bank 0
                      00424          
                      00425         ; Set ADCON1 to use RA0 as analog input
                      00426         
0067   1303           00427         bcf     STATUS,RP1
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0068   1683           00428         bsf     STATUS,RP0      ;Select bank 1
0069   3006           00429         movlw   b'00000110'     ;left justified, all inputs digital
006A   009F           00430         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00431 
                      00432         ;ADCON0
006B   1283           00433         bcf     STATUS,RP0
                      00434         
                      00435         
                      00436         
                      00437 ;***************************************************
                      00438 ; Initialize variables and Displays
                      00439 ;****************************************************
                      00440         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
006C   01B3               M                 clrf    Table_Counter
006D   0103               M                 clrw            
006E   0833               M loop_   movf    Table_Counter,W
006F   2???               M                 call    Welcome_Msg
0070   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0071   1903               M                 btfsc   STATUS,Z
0072   2???               M                         goto    end_
0073   2???               M                 call    WR_DATA
0074   0AB3               M                 incf    Table_Counter,F
0075   2???               M                 goto    loop_
0076                      M end_
0076   2???           00441         call            Switch_Lines
                      00442         Display         Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0077   01B3               M                 clrf    Table_Counter
0078   0103               M                 clrw            
0079   0833               M loop_   movf    Table_Counter,W
007A   2???               M                 call    Welcome_Msg2
007B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
007C   1903               M                 btfsc   STATUS,Z
007D   2???               M                         goto    end_
007E   2???               M                 call    WR_DATA
007F   0AB3               M                 incf    Table_Counter,F
0080   2???               M                 goto    loop_
0081                      M end_
0081   01E0           00443         clrf            NumOfBins1
0082   01ED           00444         clrf            distreg             ; clear register for distance
0083   2???           00445         call            Init_TMR0           ; Initialize shaft encoder
0084   1408           00446         bsf             PORTD,0
0085   1462           00447         bsf             LEDcounter0,0               ;counter for LED
0086   1463           00448         bsf             LEDcounter1,0               ;forward motor counters
0087   1464           00449         bsf             LEDcounter2,0
0088   1465           00450         bsf             LEDcounter3,0               
0089   1466           00451         bsf             LEDcounter4,0               ;backward motor counters
008A   1467           00452         bsf             LEDcounter5,0       
008B   1468           00453         bsf             LEDcounter7,0               ;pwm counters
008C   1469           00454         bsf             LEDcounter8,0               
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00455         
008D   1287           00456         bcf             Std1                        ;use this one for negative for when need to move ful
                            l motor                 
008E   1707           00457         bsf             Std2
008F   1007           00458         bcf             Std1Backwards
0090   1787           00459         bsf             Std2Backwards
0091   1507           00460         bsf             PORTC,2             
0092   1487           00461         bsf             PORTC,1                 ; PWM now negative, so start by clearing        
                      00462 
                      00463 ;*************************************
                      00464 ;       Keypad and LCD forms        
                      00465 ;*************************************
                      00466         
0093   1C86           00467 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0094   2???           00468                 goto            $-1 
                      00469 
0095   0E06           00470                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0096   390F           00471                 andlw           0x0F
0097   00B9           00472                 movwf           temp
                      00473                 
                      00474                 Key     0x00, TOTAL
0098   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0099   390F               M          andlw          0x0F
009A   3A00               M          xorlw          0x00
009B   1903               M          btfsc          STATUS, Z
009C   2???               M          call           TOTAL
                      00475                 Key     0x01, DisplayBlackWhiteIR1
009D   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009E   390F               M          andlw          0x0F
009F   3A01               M          xorlw          0x01
00A0   1903               M          btfsc          STATUS, Z
00A1   2???               M          call           DisplayBlackWhiteIR1
                      00476                 Key     0x02, DisplayBlackWhiteIR2
00A2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A3   390F               M          andlw          0x0F
00A4   3A02               M          xorlw          0x02
00A5   1903               M          btfsc          STATUS, Z
00A6   2???               M          call           DisplayBlackWhiteIR2
                      00477                 Rotation        0x03
00A7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A8   390F               M          andlw          0x0F
00A9   3A03               M          xorlw          0x03
00AA   1903               M          btfsc          STATUS, Z
00AB   2???               M          call           ShiftLeft
                      00478                 Key     0x04, RTCDisplay
00AC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00AD   390F               M          andlw          0x0F
00AE   3A04               M          xorlw          0x04
00AF   1903               M          btfsc          STATUS, Z
00B0   2???               M          call           RTCDisplay
                      00479                 Key     0x05, DisplayUSSensor1
00B1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B2   390F               M          andlw          0x0F
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B3   3A05               M          xorlw          0x05
00B4   1903               M          btfsc          STATUS, Z
00B5   2???               M          call           DisplayUSSensor1
                      00480                 Key     0x06, DisplayUSSensor2
00B6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B7   390F               M          andlw          0x0F
00B8   3A06               M          xorlw          0x06
00B9   1903               M          btfsc          STATUS, Z
00BA   2???               M          call           DisplayUSSensor2
                      00481                 Key     0x07, AddBin
00BB   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BC   390F               M          andlw          0x0F
00BD   3A07               M          xorlw          0x07
00BE   1903               M          btfsc          STATUS, Z
00BF   2???               M          call           AddBin
                      00482                 Key     0x08, Stickers1
00C0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C1   390F               M          andlw          0x0F
00C2   3A08               M          xorlw          0x08
00C3   1903               M          btfsc          STATUS, Z
00C4   2???               M          call           Stickers1
                      00483                 Key     0x09, MOVEFWDFORABIT
00C5   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C6   390F               M          andlw          0x0F
00C7   3A09               M          xorlw          0x09
00C8   1903               M          btfsc          STATUS, Z
00C9   2???               M          call           MOVEFWDFORABIT
                      00484                 Key     0x0A, CHECKSWITCH               
00CA   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00CB   390F               M          andlw          0x0F
00CC   3A0A               M          xorlw          0x0A
00CD   1903               M          btfsc          STATUS, Z
00CE   2???               M          call           CHECKSWITCH
                      00485                 Key     0x0C, StdRotation2
00CF   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D0   390F               M          andlw          0x0F
00D1   3A0C               M          xorlw          0x0C
00D2   1903               M          btfsc          STATUS, Z
00D3   2???               M          call           StdRotation2
                      00486                 Key     0x0D, StdRotation2Backwards
00D4   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D5   390F               M          andlw          0x0F
00D6   3A0D               M          xorlw          0x0D
00D7   1903               M          btfsc          STATUS, Z
00D8   2???               M          call           StdRotation2Backwards
                      00487                 Key     0x0E, PWMFWD
00D9   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00DA   390F               M          andlw          0x0F
00DB   3A0E               M          xorlw          0x0E
00DC   1903               M          btfsc          STATUS, Z
00DD   2???               M          call           PWMFWD
                      00488                 Key     0x0F, PWMBACK
00DE   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DF   390F               M          andlw          0x0F
00E0   3A0F               M          xorlw          0x0F
00E1   1903               M          btfsc          STATUS, Z
00E2   2???               M          call           PWMBACK
00E3   1886           00489                 btfsc           PORTB,1     ;Wait until key is released
00E4   2???           00490                 goto            $-1
00E5   2???           00491                 goto            KeypadandLCD
                      00492                 
00E6                  00493 goback
00E6   0008           00494                 return  
                      00495         
                      00496 
                      00497 ;*******************************************************************************************************
                            *******************************************
                      00498 ;                                                                 MAIN CODE
                      00499 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
                      00500 ;StartInit
                      00501 ;
                      00502 ;    call    set_rtc_time           ; resets RTC clock to zero
                      00503 ;
                      00504 ;    call    LEDCOLUMNTESTWHILEMOVINGFRONT
                      00505 ;StartMove
                      00506 ;
                      00507 ;    call    PWMFWD
                      00508 ;    call    HalfS
                      00509 ;    call    HalfS
                      00510 ;    
                      00511 ;TIME
                      00512 ;      
                      00513 ;;     rtc_resetAll                 ; for some reason, resetting the time again breaks it
                      00514 ;;     call   set_rtc_time
                      00515 ;
                      00516 ;    call       show_RTC
                      00517 ;    
                      00518 ;    return
                      00519 ;    
                      00520 ;    
                      00521 ;CHECKCOLUMN
                      00522 ;    
                      00523 ;    bsf            Std1
                      00524 ;    call    HalfS
                      00525 ;    call    HalfS
                      00526 ;
                      00527 ;    call    Read1_US           ;checks to see if column present
                      00528 ;    
                      00529 ;;    movlw   0xff
                      00530 ;;    subwf   TMR1L
                      00531 ;    btfss   W,0
                      00532 ;    goto    CHECKCOLUMN
                      00533 ;    bsf            LED
                      00534 ;    bcf            Std1                ;stops motor from moving forward
                      00535 ;    call    HalfS
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00536 ;    return
                      00537 ;    
                      00538 ;LEDCOLUMNTESTWHILEMOVINGFRONT
                      00539 ;    
                      00540 ;    ;call    Clear_Display
                      00541 ;    
                      00542 ;    ;call    set_rtc_time          ; resets RTC clock to zero
                      00543 ;    
                      00544 ;    ;call    FINDBIN
                      00545 ;    
                      00546 ;    bsf            Std1                ;moving
                      00547 ;    bcf            LED
                      00548 ;    
                      00549 ;    call    Read1_US           ;checks to see if column present
                      00550 ;    
                      00551 ;    movlw   0x10               ; if column present, it'll move forward
                      00552 ;    subwf   TMR1H
                      00553 ;    btfsc   STATUS,C
                      00554 ;    goto    LEDCOLUMNTESTWHILEMOVINGFRONT
                      00555 ;    bcf            Std1                ;motor will move fwd
                      00556 ;    bcf            LED
                      00557 ;    
                      00558 ;    
                      00559 ;    call    AVOIDCOLUMN
                      00560 ;    
                      00561 ;    
                      00562 ;;    bsf           Std1                ;move forward until no more column in the way
                      00563 ;;    bsf           LED
                      00564 ;;    
                      00565 ;;    call    HalfS
                      00566 ;;    call    HalfS
                      00567 ;;    call    HalfS             ;wait til it drives enough forward from column
                      00568 ;;    
                      00569 ;;    call    Read1_US          ;checks to see if column present
                      00570 ;;    
                      00571 ;;    movlw   0x10              ; if column is not present, it'll go back to original form
                      00572 ;;    subwf   TMR1H
                      00573 ;;    btfss   STATUS,C          
                      00574 ;;    goto    $-6
                      00575 ;;    
                      00576 ;;    bcf           Std1
                      00577 ;;    bcf           LED
                      00578 ;    
                      00579 ;    
                      00580 ;    call    RETURNFROMCOLUMN
                      00581 ;    
                      00582 ;    ;call    FINDBIN
                      00583 ;    
                      00584 ;    goto    EXIT
00E7                  00585 AVOIDCOLUMN
                      00586     
00E7   1287           00587     bcf     Std1                ;motor will stop move fwd
                      00588     
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E8   1307           00589     bcf     Std2                ; start white thing fwd
00E9   2???           00590     call    lcdLongDelay                ;delay it
00EA   2???           00591     call    lcdLongDelay                ;delay it
00EB   1D06           00592     btfss   SwitchWhite
00EC   2???           00593     goto    $-1
                      00594    
00ED   1707           00595     bsf     Std2                   ; stop white thing fwd
                      00596     
00EE   2???           00597      call    HalfS
00EF   2???           00598     call    HalfS
00F0   2???           00599      call    HalfS
00F1   2???           00600     call    HalfS
                      00601     
00F2   2???           00602     call    PWMFWD          ;start arm forward
00F3   2???           00603     call    lcdLongDelay
00F4   2???           00604     call    lcdLongDelay
00F5   1D86           00605     btfss   SwitchArm
00F6   2???           00606     goto    $-1
                      00607     
00F7   2???           00608     call    PWMFWD          ;stop arm forward
                      00609     
                      00610 ;-------------------------------------------------
                      00611     
00F8   1687           00612     bsf     Std1                ;move forward until no more column in the way
                      00613     
00F9   2???           00614     call    HalfS
00FA   2???           00615     call    HalfS
00FB   2???           00616     call    HalfS               ;wait til it drives enough forward from column
                      00617     
00FC   2???           00618     call    HalfS
00FD   2???           00619     call    HalfS
00FE   2???           00620     call    HalfS               ;wait til it drives enough forward from column
00FF   2???           00621     call    HalfS
0100   2???           00622     call    HalfS               ;wait til it drives enough forward from column
0101   2???           00623         call    HalfS
                      00624 
                      00625     
0102   2???           00626     call    Read1_US            ;checks to see if column present
                      00627     
0103   300F           00628     movlw   0xF         ; if column is not present, it'll go back to original form
0104   028F           00629     subwf   TMR1H
0105   1C03           00630     btfss   STATUS,C            
0106   2???           00631     goto    $-6
                      00632     
0107   1287           00633     bcf     Std1
                      00634     
                      00635     
0108   2???           00636     call    RETURNFROMCOLUMN
                      00637     
0109   0008           00638     return 
                      00639     
010A                  00640 RETURNFROMCOLUMN
                      00641     
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010A   2???           00642     call    PWMBACK         ;start arm BACK
010B   2???           00643     call    lcdLongDelay
010C   2???           00644     call    lcdLongDelay
010D   1D86           00645     btfss   SwitchArm
010E   2???           00646     goto    $-1
                      00647     
010F   2???           00648     call    PWMBACK         ;stop arm BACK
                      00649     
                      00650     
0110   2???           00651     call    HalfS
0111   2???           00652     call    HalfS
                      00653     
0112   1387           00654     bcf     Std2Backwards
0113   2???           00655     call    lcdLongDelay
0114   2???           00656     call    lcdLongDelay
0115   1D06           00657     btfss   SwitchWhite
0116   2???           00658     goto    $-1 
                      00659     
0117   1787           00660     bsf     Std2Backwards
                      00661     
0118   0008           00662     return
                      00663     
                      00664 ;FINDBINA
                      00665 ;    
                      00666 ;    call    FINDBIN
                      00667 ;    call    FINDBIN
                      00668 ;    
                      00669 ;    goto    EXIT
                      00670 ;    
                      00671 ;FINDBIN
                      00672 ;    
                      00673 ;    ;call    set_rtc_time          ; resets RTC clock to zero
                      00674 ;    
                      00675 ;    bsf            Std1        ;move fwd
                      00676 ;
                      00677 ;    call    Read2_US           ;checks to see if bin present
                      00678 ;    
                      00679 ;    movlw   0x10               ; if column is not present, it'll go back to original form
                      00680 ;    subwf   TMR1H
                      00681 ;    btfsc   STATUS,C
                      00682 ;    goto    FINDBIN            ;set LED to know found bin
                      00683     
0119                  00684 READBIN
                      00685 
0119   2???           00686     call    HalfS
011A   1287           00687     bcf     Std1
                      00688     
011B   2???           00689     call    AddBin              ;adds bin to list
                      00690     
011C   2???           00691     call    Dist_Decoder        ; stores the distance
                      00692     Put_Dist_In_Reg     distreg
011D   ???? ???? 2???     M         lcall   Dist_Decoder
0120   086A               M         movfw   cm
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0121   00ED               M         movwf   distreg
                      00693     Display_Dist        distreg
0122   01D2               M         clrf    NumL
0123   01D1               M         clrf    NumH
0124   086D               M         movfw   distreg
                          M         ;movfw  TMR0
0125   00D2               M         movwf   NumL
0126   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
0127   0855               M         movfw       Hund
0128   2???               M         call        DectoChar
0129   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
012A   0856               M         movfw       Tens
012B   2???               M         call        DectoChar
012C   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
012D   0857               M         movfw       Ones
012E   2???               M         call        DectoChar
012F   2???               M         call        WR_DATA
0130   2???           00694     call    StoreThisDistance
                      00695     
0131   2???           00696     call    Clear_Display    
                      00697     
0132   2???           00698     call    StoreBW1            ;reads & stores first IR data
                      00699     
                      00700 ;*****THRESHHOLD TEST ON IR 1************
                      00701 ;    nothing in front: 02056
                      00702 ;    black in front: 10000-41000
                      00703 ;    white in front: >60000
                      00704     
                      00705     ;READ 2 ALGORITHM IMPLEMENT HERE
                      00706     
0133   2???           00707     call    HalfS
0134   2???           00708     call    HalfS
0135   2???           00709     call    HalfS
0136   2???           00710     call    HalfS
                      00711     
0137   2???           00712     call    Clear_Display
                      00713     
0138   2???           00714     call    StoreBW2
                      00715     
0139   2???           00716     call    HalfS
013A   2???           00717     call    HalfS
                      00718     
013B   1006           00719     bcf     LED
                      00720     
013C   0008           00721     return
                      00722     
013D   2???           00723     goto    EXIT    
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00724      
                      00725     
013E                  00726 TOTAL
                      00727     
013E   2???           00728     call    Read1_US            ;warms up us sensors that was weird
013F   2???           00729     call    Read2_US
                      00730     
0140   2???           00731     call    DisplayBlackWhiteIR2        ;warms up IR
0141   2???           00732     call    DisplayBlackWhiteIR1        ;warms up IR
                      00733     
0142                  00734 TOTAL1
                      00735     
0142   1687           00736     bsf     Std1                ;moving
0143   01EF           00737     clrf    count_highs         ;reset the high value counter
                      00738     
0144   2???           00739     call    Read1_US            ;checks to see if column present
                      00740     
                      00741 ;********THRESHOLD CALCULATION FOR COLUMN**************:
                      00742 ;   At around cm from col, reading: 02303
                      00743 ;       So, this will be the max value.
                      00744 ;       To be safe, will minus 02603 from the TMR variables.
                      00745 ;       This means, subtract 0x4 from TMR1H 
                      00746 ;       Value before at integration was 0x14, now trying 0x4
                      00747     
0145   300F           00748     movlw   0xF         ; if column present, it'll move forward
0146   028F           00749     subwf   TMR1H
0147   1803           00750     btfsc   STATUS,C
0148   2???           00751     goto    $+6
0149   0AEF           00752     incf    count_highs
014A   3003           00753     movlw   MAX_HIGHS
014B   026F           00754     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
014C   1903           00755     btfsc   STATUS,Z                ; if result is zero, Z bit is set.
014D   2???           00756     call    AVOIDCOLUMN
                      00757     
014E   01EF           00758     clrf    count_highs         ;reset the high value counter
                      00759     
014F   2???           00760     call    Read2_US            ;checks to see if bin present
                      00761     
                      00762 ;********THRESHOLD CALCULATION FOR BIN**************:
                      00763 ;   At around 6cm from white bin, reading: 01103
                      00764 ;       So, this will be the max value.
                      00765 ;       To be safe, will minus 01210 from the TMR variables.
                      00766 ;       This means, subtract 0x4 from TMR1H 
                      00767 ;       Value before at integration was 0x14, now trying 0x4
                      00768     
                      00769     
0150   3006           00770     movlw   0x6         ; read the bin
0151   028F           00771     subwf   TMR1H
0152   1803           00772     btfsc   STATUS,C
0153   2???           00773     goto    ENDTHIS
0154   0AEF           00774     incf    count_highs
0155   3003           00775     movlw   MAX_HIGHS
0156   026F           00776     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0157   1903           00777     btfsc   STATUS,Z                ; if result is zero, Z bit is set.
0158   2???           00778     call    DELAYEDREAD
                      00779    
                      00780     
                      00781     
0159                  00782 DELAYEDREAD
0159   2???           00783     call    HalfS           ; wait for robot to move a bit in front of bin
015A   2???           00784     call    READBIN
015B   1687           00785     bsf     Std1                ; move forward a bit so that you don't double read bin
015C   2???           00786     call    HalfS
015D   2???           00787     call    HalfS
015E   1406           00788     bsf     LED                 ; turn off LED After reading
                      00789     
015F                  00790 ENDTHIS   
                      00791     
                      00792 ;    movlw   0x4
015F   1CE0           00793     btfss   NumOfBins1,1                ;checking if its at two bins
                      00794 ;    btfsc   STATUS,C
0160   2???           00795     goto TOTAL1
                      00796     
                      00797     
                      00798 ;    bsf            Std1                ;move forward until no more column in the way
                      00799 ;    bsf            LED5
                      00800 ;    
                      00801 ;    call    HalfS
                      00802 ;    call    HalfS
                      00803 ;    call    HalfS              ;wait til it drives enough forward from column
                      00804 ;    
                      00805 ;    call    Read1_US           ;checks to see if column present
                      00806 ;    
                      00807 ;    movlw   0x10               ; if column is not present, it'll go back to original form
                      00808 ;    subwf   TMR1H
                      00809 ;    btfss   STATUS,C           
                      00810 ;    goto    $-6
                      00811 ;    
                      00812 ;    bcf            Std1
                      00813 ;    bcf            LED
                      00814 ;    
                      00815 ;    
                      00816 ;    call    RETURNFROMCOLUMN
                      00817     
                      00818     ;call    FINDBIN
                      00819     
0161   2???           00820     goto    EXIT
                      00821     
0162                  00822 CHECKSWITCH
                      00823     
                      00824     ;call    Clear_Display
                      00825     ;Display DectoChar
                      00826     
0162   1307           00827     bcf     Std2
0163   2???           00828     call    DELAY1
0164   1D06           00829     btfss   SwitchWhite
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0165   2???           00830     goto    $-2
                      00831    
0166   1707           00832     bsf     Std2
                      00833  
0167   1387           00834     bcf     Std2Backwards
0168   2???           00835     call    DELAY1
0169   1D06           00836     btfss   SwitchWhite
016A   2???           00837     goto    $-2 
                      00838     
016B   1787           00839     bsf     Std2Backwards
                      00840     
016C   2???           00841     goto    CHECKSWITCH  
                      00842 
                      00843 
016D                  00844 EXIT
                      00845     
016D   2???           00846     call        Clear_Display
                      00847     ;display final interface for choosing stuff
                      00848     Display     FinalMessage
  0000                    M                 local   loop_
  0000                    M                 local   end_
016E   01B3               M                 clrf    Table_Counter
016F   0103               M                 clrw            
0170   0833               M loop_   movf    Table_Counter,W
0171   2???               M                 call    FinalMessage
0172   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0173   1903               M                 btfsc   STATUS,Z
0174   2???               M                         goto    end_
0175   2???               M                 call    WR_DATA
0176   0AB3               M                 incf    Table_Counter,F
0177   2???               M                 goto    loop_
0178                      M end_
0178   2???           00849     call        Switch_Lines
                      00850     Display     Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0179   01B3               M                 clrf    Table_Counter
017A   0103               M                 clrw            
017B   0833               M loop_   movf    Table_Counter,W
017C   2???               M                 call    Welcome_Msg2
017D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
017E   1903               M                 btfsc   STATUS,Z
017F   2???               M                         goto    end_
0180   2???               M                 call    WR_DATA
0181   0AB3               M                 incf    Table_Counter,F
0182   2???               M                 goto    loop_
0183                      M end_
                      00851     
0183   1287           00852     bcf         Std1
0184   1407           00853     bsf         Std1Backwards
                      00854     
0185   2???           00855     goto        EXITDISPLAY
                      00856     
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0186                  00857 MOVEFWDFORABIT
                      00858     
0186   1687           00859     bsf         Std1
                      00860     
0187   2???           00861     call        OneS
0188   2???           00862     call        OneS
0189   2???           00863         call    OneS
018A   2???           00864     call        OneS
018B   2???           00865         call    OneS
018C   2???           00866     call        OneS
                      00867     
018D   1287           00868     bcf         Std1
                      00869     
018E   2???           00870     goto        EXITDISPLAY
                      00871     
018F   1C86           00872 EXITDISPLAY     btfss           PORTB,1     ;Wait until data is available from the keypad
0190   2???           00873                 goto            $-1 
                      00874 
0191   0E06           00875                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0192   390F           00876                 andlw           0x0F
0193   00B9           00877                 movwf           temp
                      00878                 Key     0x00, show_RTC
0194   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0195   390F               M          andlw          0x0F
0196   3A00               M          xorlw          0x00
0197   1903               M          btfsc          STATUS, Z
0198   2???               M          call           show_RTC
                      00879                 Key     0x02, Stickers1
0199   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
019A   390F               M          andlw          0x0F
019B   3A02               M          xorlw          0x02
019C   1903               M          btfsc          STATUS, Z
019D   2???               M          call           Stickers1
                      00880                 Rotation        0x03
019E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
019F   390F               M          andlw          0x0F
01A0   3A03               M          xorlw          0x03
01A1   1903               M          btfsc          STATUS, Z
01A2   2???               M          call           ShiftLeft
                      00881                 Key     0x04, ShowBins
01A3   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01A4   390F               M          andlw          0x0F
01A5   3A04               M          xorlw          0x04
01A6   1903               M          btfsc          STATUS, Z
01A7   2???               M          call           ShowBins
                      00882                 Key     0x05, TotalDistance
01A8   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01A9   390F               M          andlw          0x0F
01AA   3A05               M          xorlw          0x05
01AB   1903               M          btfsc          STATUS, Z
01AC   2???               M          call           TotalDistance
                      00883                 Key     0x06, Locations
01AD   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AE   390F               M          andlw          0x0F
01AF   3A06               M          xorlw          0x06
01B0   1903               M          btfsc          STATUS, Z
01B1   2???               M          call           Locations
                      00884                 Key     0x07, AddBin
01B2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01B3   390F               M          andlw          0x0F
01B4   3A07               M          xorlw          0x07
01B5   1903               M          btfsc          STATUS, Z
01B6   2???               M          call           AddBin
01B7   1886           00885                 btfsc           PORTB,1     ;Wait until key is released
01B8   2???           00886                 goto            $-1
01B9   2???           00887                 goto            EXITDISPLAY
                      00888     
                      00889     ;show location for every bin
                      00890     
                      00891     
                      00892     ;show number of bins
                      00893     
                      00894     
                      00895     ;show dist travelled
                      00896     
                      00897     
                      00898     ;show time elapsed
                      00899     
                      00900     
                      00901     
01BA   2???           00902     goto    EXIT
                      00903     
01BB                  00904 MoveBackwards
                      00905     
01BB   2???           00906     call    PWMSTOP
                      00907     
                      00908         
                      00909 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00910 
                      00911 ;*********************************************************
                      00912 ; A to D conversion with LCD display for IR sensor
                      00913 ;*********************************************************
                      00914         
                      00915 ;******************************************
                      00916 ;       Sticker Print Modules
                      00917 ;*****************************************
                      00918         
01BC                  00919 BWScanModule1
                      00920 
01BC   151F           00921         bsf     ADCON0,2                ;start conversion and wait for it to complete
01BD   191F           00922         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01BE   2???           00923         goto    $-1
                      00924         
01BF   081E           00925         movf    ADRESH, W
01C0   00D1           00926         movwf   NumH
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C1   081E           00927         movf    ADRESL, W
01C2   00D2           00928         movwf   NumL
01C3   2???           00929         call    Clear_Display
01C4   2???           00930         call    bin16_BCD
                      00931         PrintNumber     TenK
                          M         ;movf       number ,W
01C5   0853               M         movfw       TenK
01C6   2???               M         call        DectoChar
01C7   2???               M         call        WR_DATA
                      00932         PrintNumber     Thou
                          M         ;movf       number ,W
01C8   0854               M         movfw       Thou
01C9   2???               M         call        DectoChar
01CA   2???               M         call        WR_DATA
                      00933         PrintNumber     Hund
                          M         ;movf       number ,W
01CB   0855               M         movfw       Hund
01CC   2???               M         call        DectoChar
01CD   2???               M         call        WR_DATA
                      00934         PrintNumber     Tens
                          M         ;movf       number ,W
01CE   0856               M         movfw       Tens
01CF   2???               M         call        DectoChar
01D0   2???               M         call        WR_DATA
                      00935         PrintNumber     Ones
                          M         ;movf       number ,W
01D1   0857               M         movfw       Ones
01D2   2???               M         call        DectoChar
01D3   2???               M         call        WR_DATA
01D4   0008           00936         return
01D5                  00937 BWStoreModule1
01D5   1383           00938         BCF     STATUS, IRP
01D6   3042           00939         movlw   0x42
01D7   0084           00940         movwf   FSR
01D8   3000           00941         movlw   0X0
01D9   0360           00942         decf    NumOfBins1,W            ;want bin number to be decreased when back checks it
01DA   0784           00943         addwf   FSR,F
01DB   3029           00944         movlw   0X29
01DC   02D1           00945         subwf   NumH
01DD   3000           00946         movlw   0x0
01DE   1803           00947         btfsc   STATUS, C
01DF   3001           00948         movlw   0x1
01E0   0080           00949         movwf   INDF
01E1   0008           00950         return  
                      00951         
01E2                  00952 BWScanModule2
                      00953 
01E2   151F           00954         bsf     ADCON0,2                ;start conversion and wait for it to complete
01E3   191F           00955         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01E4   2???           00956         goto    $-1
                      00957         
01E5   081E           00958         movf    ADRESH, W
01E6   00D1           00959         movwf   NumH
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E7   081E           00960         movf    ADRESL, W
01E8   00D2           00961         movwf   NumL
01E9   2???           00962         call    Clear_Display
01EA   2???           00963         call    bin16_BCD
                      00964         PrintNumber     TenK
                          M         ;movf       number ,W
01EB   0853               M         movfw       TenK
01EC   2???               M         call        DectoChar
01ED   2???               M         call        WR_DATA
                      00965         PrintNumber     Thou
                          M         ;movf       number ,W
01EE   0854               M         movfw       Thou
01EF   2???               M         call        DectoChar
01F0   2???               M         call        WR_DATA
                      00966         PrintNumber     Hund
                          M         ;movf       number ,W
01F1   0855               M         movfw       Hund
01F2   2???               M         call        DectoChar
01F3   2???               M         call        WR_DATA
                      00967         PrintNumber     Tens
                          M         ;movf       number ,W
01F4   0856               M         movfw       Tens
01F5   2???               M         call        DectoChar
01F6   2???               M         call        WR_DATA
                      00968         PrintNumber     Ones
                          M         ;movf       number ,W
01F7   0857               M         movfw       Ones
01F8   2???               M         call        DectoChar
01F9   2???               M         call        WR_DATA
                      00969 ;       call            HalfS           ;wait half a second to display
01FA   0008           00970         return
01FB                  00971 BWStoreModule2
01FB   1383           00972         BCF     STATUS, IRP
01FC   3049           00973         movlw   0x49                    ;number 49 to try to get registers for back of bin
01FD   0084           00974         movwf   FSR
01FE   3000           00975         movlw   0X0
01FF   0360           00976         decf    NumOfBins1,W
0200   0784           00977         addwf   FSR,F
0201   3029           00978         movlw   0X29
0202   02D1           00979         subwf   NumH
0203   3000           00980         movlw   0x0
0204   1803           00981         btfsc   STATUS, C
0205   3001           00982         movlw   0x1
0206   0080           00983         movwf   INDF
0207   0008           00984         return  
                      00985         
0208                  00986 ReadBW
                      00987                         
0208   151F           00988         bsf     ADCON0,2                ;start conversion and wait for it to complete
0209   191F           00989         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
020A   2???           00990         goto    $-1
                      00991         
020B   081E           00992         movf    ADRESH, W
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020C   00D1           00993         movwf   NumH
020D   081E           00994         movf    ADRESL, W
020E   00D2           00995         movwf   NumL
                      00996         
020F   2???           00997         call            Clear_Display
0210   2???           00998         call            bin16_BCD
                      00999         PrintNumber     TenK
                          M         ;movf       number ,W
0211   0853               M         movfw       TenK
0212   2???               M         call        DectoChar
0213   2???               M         call        WR_DATA
                      01000         PrintNumber     Thou
                          M         ;movf       number ,W
0214   0854               M         movfw       Thou
0215   2???               M         call        DectoChar
0216   2???               M         call        WR_DATA
                      01001         PrintNumber     Hund
                          M         ;movf       number ,W
0217   0855               M         movfw       Hund
0218   2???               M         call        DectoChar
0219   2???               M         call        WR_DATA
                      01002         PrintNumber     Tens
                          M         ;movf       number ,W
021A   0856               M         movfw       Tens
021B   2???               M         call        DectoChar
021C   2???               M         call        WR_DATA
                      01003         PrintNumber     Ones
                          M         ;movf       number ,W
021D   0857               M         movfw       Ones
021E   2???               M         call        DectoChar
021F   2???               M         call        WR_DATA
0220   2???           01004         call            HalfS
0221   2???           01005         call            Clear_Display
                      01006         
0222   3001           01007         movlw           0x1
0223   02D3           01008         subwf           TenK
0224   3000           01009         movlw           0x0
0225   1803           01010         btfsc           STATUS,C
0226   3001           01011         movlw           0x1
                      01012         
0227   0008           01013         return
                      01014                 
                      01015     
                      01016 ;***************************************************
                      01017 ;       US Sensor Modules                           [TESTED]
                      01018 ;***************************************************
                      01019         
0228                  01020 Read1_US                    
                      01021          
                      01022         ;call           Read1_US1 
                      01023          
                      01024         ReadUltrasonic  UST1,US1E1
0228   018F               M     clrf        TMR1H
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0229   018E               M     clrf        TMR1L
                          M 
022A   1008               M     bcf PORTD,   0                      ;make sure trigger is clear
022B   2???               M     call lcdLongDelay
                          M 
022C   1408               M     bsf PORTD,   0              ;trigger high, bottom sensor
022D   2???               M     call lcdLongDelay           ;10us delay
022E   1008               M     bcf PORTD,   0              ;trigger low
                          M 
022F   1D05               M     btfss       PORTA, 2                ;wait for echo to go high
0230   2???               M     goto        $-1
0231   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
0232   1905               M     btfsc       PORTA, 2                ;wait for echo to go low
0233   2???               M     goto        $-1
                          M 
0234   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      01025         
0235   2???           01026         call            Clear_Display
                      01027         
0236   080F           01028         movf            TMR1H, W
0237   00D1           01029         movwf           NumH
0238   080E           01030         movf            TMR1L, W
0239   00D2           01031         movwf           NumL
                      01032         
023A   2???           01033         call            bin16_BCD
                      01034         
                      01035         PrintNumber     TenK
                          M         ;movf       number ,W
023B   0853               M         movfw       TenK
023C   2???               M         call        DectoChar
023D   2???               M         call        WR_DATA
                      01036         PrintNumber     Thou
                          M         ;movf       number ,W
023E   0854               M         movfw       Thou
023F   2???               M         call        DectoChar
0240   2???               M         call        WR_DATA
                      01037         PrintNumber     Hund
                          M         ;movf       number ,W
0241   0855               M         movfw       Hund
0242   2???               M         call        DectoChar
0243   2???               M         call        WR_DATA
                      01038         PrintNumber     Tens
                          M         ;movf       number ,W
0244   0856               M         movfw       Tens
0245   2???               M         call        DectoChar
0246   2???               M         call        WR_DATA
                      01039         PrintNumber     Ones
                          M         ;movf       number ,W
0247   0857               M         movfw       Ones
0248   2???               M         call        DectoChar
0249   2???               M         call        WR_DATA
                      01040         
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01041         ;call           HalfS
                      01042         
024A   2???           01043         call            Clear_Display
024B   0008           01044         return
                      01045         
                      01046 ;Read1_US1
                      01047 ;               
                      01048 ;               clrf    TMR1H           ; commented are sam harrison edits
                      01049 ;               clrf    TMR1L
                      01050 ;               
                      01051 ;               bsf     UST1            ;trigger high, bottom sensor
                      01052 ;               call    lcdLongDelay
                      01053 ;               bcf     UST1            ;trigger low
                      01054 ;               
                      01055 ;               btfss   US1E1           ;wait for echo to go high
                      01056 ;               goto    $-1
                      01057 ;               bsf     T1CON,TMR1ON    ;turn on timer
                      01058 ;               
                      01059 ;               btfsc   US1E1           ;wait for echo to go low
                      01060 ;               goto    $-1
                      01061 ;               
                      01062 ;               bcf     T1CON,TMR1ON    ;turn off timer
                      01063 ;               return
                      01064                 
024C                  01065 Read2_US                    
                      01066          
                      01067         ;call           Read2_US1 
                      01068         
                      01069         ReadUltrasonic  UST2,US1E2
024C   018F               M     clrf        TMR1H
024D   018E               M     clrf        TMR1L
                          M 
024E   1088               M     bcf PORTD,   1                      ;make sure trigger is clear
024F   2???               M     call lcdLongDelay
                          M 
0250   1488               M     bsf PORTD,   1              ;trigger high, bottom sensor
0251   2???               M     call lcdLongDelay           ;10us delay
0252   1088               M     bcf PORTD,   1              ;trigger low
                          M 
0253   1D85               M     btfss       PORTA, 3                ;wait for echo to go high
0254   2???               M     goto        $-1
0255   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
0256   1985               M     btfsc       PORTA, 3                ;wait for echo to go low
0257   2???               M     goto        $-1
                          M 
0258   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      01070          
0259   2???           01071         call            Clear_Display
                      01072         
025A   080F           01073         movf            TMR1H, W
025B   00D1           01074         movwf           NumH
025C   080E           01075         movf            TMR1L, W
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

025D   00D2           01076         movwf           NumL
                      01077         
025E   2???           01078         call            bin16_BCD
                      01079         
                      01080         PrintNumber     TenK
                          M         ;movf       number ,W
025F   0853               M         movfw       TenK
0260   2???               M         call        DectoChar
0261   2???               M         call        WR_DATA
                      01081         PrintNumber     Thou
                          M         ;movf       number ,W
0262   0854               M         movfw       Thou
0263   2???               M         call        DectoChar
0264   2???               M         call        WR_DATA
                      01082         PrintNumber     Hund
                          M         ;movf       number ,W
0265   0855               M         movfw       Hund
0266   2???               M         call        DectoChar
0267   2???               M         call        WR_DATA
                      01083         PrintNumber     Tens
                          M         ;movf       number ,W
0268   0856               M         movfw       Tens
0269   2???               M         call        DectoChar
026A   2???               M         call        WR_DATA
                      01084         PrintNumber     Ones
                          M         ;movf       number ,W
026B   0857               M         movfw       Ones
026C   2???               M         call        DectoChar
026D   2???               M         call        WR_DATA
                      01085         
                      01086         ;call           HalfS
                      01087         
026E   2???           01088         call            Clear_Display
026F   0008           01089         return
                      01090         
                      01091 ;Read2_US1
                      01092 ;               
                      01093 ;               clrf    TMR1H
                      01094 ;               clrf    TMR1L
                      01095 ;               
                      01096 ;               bsf     UST2            ;trigger high, bottom sensor
                      01097 ;               call    lcdLongDelay                ;sam harrison edits
                      01098 ;               bcf     UST2            ;trigger low
                      01099 ;               
                      01100 ;               btfss   US1E2           ;wait for echo to go high
                      01101 ;               goto    $-1
                      01102 ;               bsf     T1CON,TMR1ON    ;turn on timer
                      01103 ;               
                      01104 ;               btfsc   US1E2           ;wait for echo to go low
                      01105 ;               goto    $-1
                      01106 ;               
                      01107 ;               bcf     T1CON,TMR1ON    ;turn off timer
                      01108 ;               return
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01109                 
                      01110 ;*******************************************************
                      01111 ; Dist_Decoder
                      01112 ;   input:  Timer0, cm, mm
                      01113 ;   output: Bin_Dist_reg
                      01114 ;   Desc:   Converts the count in the rotary encoder
                      01115 ;           into physical distance
                      01116 ;*******************************************************
0270                  01117 Dist_Decoder
                      01118         ; Initalize all registers
0270   01EA           01119         clrf    cm              ; Clear regs
0271   01EB           01120         clrf    mm
0272   0801           01121         movfw   TMR0            ; poll encoder for current state
0273   00B9           01122         movwf   temp
                      01123         ; Check if its already zero
0274   0839           01124         movfw   temp
0275   3C00           01125         sublw   D'0'
0276   1903           01126         btfsc   STATUS, Z
0277   0008           01127         return
                      01128         
0278                  01129 Decode_loop                     ; Assume each step is 1.01 cm
                      01130         ; Perform decode
                      01131         ADDL    cm, cm, D'2'
0278   3002               M     MOVLW  D'2'         ; move literal into working register
0279   076A               M     ADDWF   cm,W        ; W <- literal + reg
027A   00EA               M     MOVWF   cm          ; Destination <- literal + reg
                      01132         ADDL    mm, mm, D'0'
027B   3000               M     MOVLW  D'0'         ; move literal into working register
027C   076B               M     ADDWF   mm,W        ; W <- literal + reg
027D   00EB               M     MOVWF   mm          ; Destination <- literal + reg
027E   03B9           01133         decf    temp
                      01134 
                      01135         ; Test if mm has overflowed! (mm >= 10)
027F   300A           01136         movlw   D'10'           
0280   026B           01137         subwf   mm, w           ; mm - 10 --> w (w = f - w, when d = 0) 
0281   1803           01138         btfsc   STATUS, C       ; Y = mm, w = 10, Y-w
0282   2???           01139         call    mm_overflow     ; Run overflow routine if it did overflow
                      01140 
0283                  01141 Decode_check_done       
                      01142         ; Test if done decoding
0283   0839           01143         movfw   temp
0284   3C00           01144         sublw   D'0'
                      01145         ;movf   temp, F
0285   1D03           01146         btfss   STATUS, Z       
0286   2???           01147         goto    Decode_loop
                      01148 ;       btfss   STATUS, C
                      01149 ;       call    Decode_loop
                      01150         ;Display            StandBy1
                      01151         ;goto       Dist_test
0287   0008           01152         return
                      01153         
0288                  01154 mm_overflow
0288   0AEA           01155         incf    cm              ; cm + 1 --> cm
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0289   300A           01156         movlw   D'10'           ; 10 --> w
028A   02EB           01157         subwf   mm, f           ; mm - 10 --> mm (f = f - w, when d = 1) 
028B   2???           01158         goto    Decode_check_done       ; Continue decoding
                      01159         
028C                  01160 StoreThisDistance
028C   1383           01161         BCF     STATUS, IRP
028D   303B           01162         movlw   0x3B                    ;number 56 to try to get location registers in cblock
028E   0084           01163         movwf   FSR
028F   3000           01164         movlw   0X0
0290   0360           01165         decf    NumOfBins1,W
0291   0784           01166         addwf   FSR,F
                      01167         Put_Dist_In_Reg W               ;move the distance into the actual register
0292   ???? ???? 2???     M         lcall   Dist_Decoder
0295   086A               M         movfw   cm
0296   0080               M         movwf   W
0297   0080           01168         movwf   INDF
                      01169         
0298   0008           01170         return
                      01171 ;*********************************************
                      01172 ; Keypad Modules
                      01173 ;*******************************************
                      01174          
                      01175 
0299                  01176 ShiftLeft
0299   3018           01177         movlw           b'00011000'             ;Move to the left
029A   2???           01178         call            WR_INS
029B   0008           01179         return
                      01180 
029C   2???           01181         goto    KeypadandLCD
                      01182         
029D                  01183 RTCDisplay
029D   2???           01184         call    show_RTC
                      01185         
029E   1886           01186         btfsc           PORTB,1     ;Wait until data is available from the keypad
029F   0008           01187         return
02A0   1886           01188         btfsc           PORTB,1     ;Wait until data is available from the keypad
02A1   0008           01189         return
02A2   1886           01190         btfsc           PORTB,1     ;Wait until data is available from the keypad
02A3   0008           01191         return
02A4   1886           01192         btfsc           PORTB,1     ;Wait until data is available from the keypad
02A5   0008           01193         return
02A6   2???           01194         goto        RTCDisplay
                      01195         
02A7                  01196 StoreBW1
02A7   1283           01197         bcf     STATUS,RP0
02A8   3005           01198         movlw   b'00000101'             
02A9   009F           01199         movwf   ADCON0                  ;choose RA0
                      01200         
02AA   2???           01201         call    BWScanModule1   
02AB   2???           01202         call    BWStoreModule1
                      01203         
02AC   0008           01204         return                          ; why was there not a return here before?
                      01205         
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02AD                  01206 StoreBW2
02AD   1283           01207         bcf     STATUS,RP0
02AE   3015           01208         movlw   b'00010101'             
02AF   009F           01209         movwf   ADCON0                  ;choose RA1
                      01210         
02B0   2???           01211         call    BWScanModule2
02B1   2???           01212         call    BWStoreModule2
                      01213         
02B2   0008           01214         return
                      01215         
02B3                  01216 AddBin
02B3   2???           01217         Call Clear_Display
02B4   0AE0           01218         incf    NumOfBins1,F
                      01219         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
02B5   0860               M         movfw       NumOfBins1
02B6   2???               M         call        DectoChar
02B7   2???               M         call        WR_DATA
02B8   3007           01220         movlw   0X7                     ;checks if max of 7 bins has been reached
02B9   0260           01221         subwf   NumOfBins1,W            
02BA   1903           01222         btfsc   STATUS,Z
02BB   2???           01223         goto    EXIT
02BC   0008           01224         return
                      01225         
02BD                  01226 ShowBins
                      01227         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
02BD   0860               M         movfw       NumOfBins1
02BE   2???               M         call        DectoChar
02BF   2???               M         call        WR_DATA
                      01228         
02C0   0008           01229         return
                      01230         
02C1                  01231 Stickers1                   ;TESTED
02C1   2???           01232         call            Clear_Display
02C2   3000           01233         movlw           0X0
02C3   00DF           01234         movwf           counter
02C4   1383           01235         BCF             STATUS, IRP
02C5   3041           01236         movlw           0x41
02C6   0084           01237         movwf           FSR
02C7   0860           01238         movfw           NumOfBins1
02C8   00DE           01239         movwf           countdown
                      01240         Display         FrontStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02C9   01B3               M                 clrf    Table_Counter
02CA   0103               M                 clrw            
02CB   0833               M loop_   movf    Table_Counter,W
02CC   2???               M                 call    FrontStickers
02CD   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02CE   1903               M                 btfsc   STATUS,Z
02CF   2???               M                         goto    end_
02D0   2???               M                 call    WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D1   0AB3               M                 incf    Table_Counter,F
02D2   2???               M                 goto    loop_
02D3                      M end_
02D3                  01241 FrontLoop1      
02D3   0A84           01242         INCF            FSR,1
02D4   0ADF           01243         incf            counter
                      01244         PrintNumber     counter
                          M         ;movf       number ,W
02D5   085F               M         movfw       counter
02D6   2???               M         call        DectoChar
02D7   2???               M         call        WR_DATA
                      01245         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02D8   01B3               M                 clrf    Table_Counter
02D9   0103               M                 clrw            
02DA   0833               M loop_   movf    Table_Counter,W
02DB   2???               M                 call    Colon
02DC   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02DD   1903               M                 btfsc   STATUS,Z
02DE   2???               M                         goto    end_
02DF   2???               M                 call    WR_DATA
02E0   0AB3               M                 incf    Table_Counter,F
02E1   2???               M                 goto    loop_
02E2                      M end_
02E2   0800           01246         movfw           INDF
                      01247         PrintCol        W
02E3   0800               M         movfw       W
02E4   2???               M         call        StickerColours
02E5   2???               M         call        WR_DATA
                      01248         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02E6   01B3               M                 clrf    Table_Counter
02E7   0103               M                 clrw            
02E8   0833               M loop_   movf    Table_Counter,W
02E9   2???               M                 call    Spacee
02EA   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02EB   1903               M                 btfsc   STATUS,Z
02EC   2???               M                         goto    end_
02ED   2???               M                 call    WR_DATA
02EE   0AB3               M                 incf    Table_Counter,F
02EF   2???               M                 goto    loop_
02F0                      M end_
02F0   0BDE           01249         decfsz          countdown,F
02F1   2???           01250         goto            FrontLoop1
                      01251         
02F2   2???           01252         call            Switch_Lines
                      01253         
02F3                  01254 Stickers2                       ;TESTED
                      01255         
02F3   3000           01256         movlw           0X0
02F4   00DF           01257         movwf           counter
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F5   1383           01258         BCF             STATUS, IRP
02F6   3048           01259         movlw           0x48
02F7   0084           01260         movwf           FSR
02F8   0860           01261         movfw           NumOfBins1
02F9   00DE           01262         movwf           countdown
                      01263         Display         BackStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02FA   01B3               M                 clrf    Table_Counter
02FB   0103               M                 clrw            
02FC   0833               M loop_   movf    Table_Counter,W
02FD   2???               M                 call    BackStickers
02FE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02FF   1903               M                 btfsc   STATUS,Z
0300   2???               M                         goto    end_
0301   2???               M                 call    WR_DATA
0302   0AB3               M                 incf    Table_Counter,F
0303   2???               M                 goto    loop_
0304                      M end_
0304                  01264 FrontLoop2
0304   0A84           01265         INCF            FSR,1
0305   0ADF           01266         incf            counter
                      01267         PrintNumber     counter
                          M         ;movf       number ,W
0306   085F               M         movfw       counter
0307   2???               M         call        DectoChar
0308   2???               M         call        WR_DATA
                      01268         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
0309   01B3               M                 clrf    Table_Counter
030A   0103               M                 clrw            
030B   0833               M loop_   movf    Table_Counter,W
030C   2???               M                 call    Colon
030D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
030E   1903               M                 btfsc   STATUS,Z
030F   2???               M                         goto    end_
0310   2???               M                 call    WR_DATA
0311   0AB3               M                 incf    Table_Counter,F
0312   2???               M                 goto    loop_
0313                      M end_
0313   0800           01269         movfw           INDF
                      01270         PrintCol        W
0314   0800               M         movfw       W
0315   2???               M         call        StickerColours
0316   2???               M         call        WR_DATA
                      01271         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
0317   01B3               M                 clrf    Table_Counter
0318   0103               M                 clrw            
0319   0833               M loop_   movf    Table_Counter,W
031A   2???               M                 call    Spacee
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
031C   1903               M                 btfsc   STATUS,Z
031D   2???               M                         goto    end_
031E   2???               M                 call    WR_DATA
031F   0AB3               M                 incf    Table_Counter,F
0320   2???               M                 goto    loop_
0321                      M end_
0321   0BDE           01272         decfsz          countdown,F
0322   2???           01273         goto            FrontLoop2
                      01274         
0323   0008           01275         return
                      01276         
0324                  01277 Locations                       ;TESTED
0324   2???           01278         call            Clear_Display
0325   3000           01279         movlw           0X0
0326   00DF           01280         movwf           counter
0327   1383           01281         BCF             STATUS, IRP
0328   303A           01282         movlw           0x3A
0329   0084           01283         movwf           FSR
032A   0860           01284         movfw           NumOfBins1
032B   00DE           01285         movwf           countdown
                      01286         Display         Distances
  0000                    M                 local   loop_
  0000                    M                 local   end_
032C   01B3               M                 clrf    Table_Counter
032D   0103               M                 clrw            
032E   0833               M loop_   movf    Table_Counter,W
032F   2???               M                 call    Distances
0330   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0331   1903               M                 btfsc   STATUS,Z
0332   2???               M                         goto    end_
0333   2???               M                 call    WR_DATA
0334   0AB3               M                 incf    Table_Counter,F
0335   2???               M                 goto    loop_
0336                      M end_
0336   2???           01287         call            Switch_Lines
0337                  01288 FrontLoop       
0337   0A84           01289         INCF            FSR,1
0338   0ADF           01290         incf            counter
                      01291         PrintNumber     counter
                          M         ;movf       number ,W
0339   085F               M         movfw       counter
033A   2???               M         call        DectoChar
033B   2???               M         call        WR_DATA
                      01292         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
033C   01B3               M                 clrf    Table_Counter
033D   0103               M                 clrw            
033E   0833               M loop_   movf    Table_Counter,W
033F   2???               M                 call    Colon
0340   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0341   1903               M                 btfsc   STATUS,Z
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0342   2???               M                         goto    end_
0343   2???               M                 call    WR_DATA
0344   0AB3               M                 incf    Table_Counter,F
0345   2???               M                 goto    loop_
0346                      M end_
0346   0800           01293         movfw           INDF
                      01294         Display_Dist    W
0347   01D2               M         clrf    NumL
0348   01D1               M         clrf    NumH
0349   0800               M         movfw   W
                          M         ;movfw  TMR0
034A   00D2               M         movwf   NumL
034B   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
034C   0855               M         movfw       Hund
034D   2???               M         call        DectoChar
034E   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
034F   0856               M         movfw       Tens
0350   2???               M         call        DectoChar
0351   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
0352   0857               M         movfw       Ones
0353   2???               M         call        DectoChar
0354   2???               M         call        WR_DATA
                      01295         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
0355   01B3               M                 clrf    Table_Counter
0356   0103               M                 clrw            
0357   0833               M loop_   movf    Table_Counter,W
0358   2???               M                 call    Spacee
0359   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
035A   1903               M                 btfsc   STATUS,Z
035B   2???               M                         goto    end_
035C   2???               M                 call    WR_DATA
035D   0AB3               M                 incf    Table_Counter,F
035E   2???               M                 goto    loop_
035F                      M end_
035F   0BDE           01296         decfsz          countdown,F
0360   2???           01297         goto            FrontLoop
                      01298         
0361   0008           01299         return
                      01300         
0362                  01301 TotalDistance
                      01302         
0362   2???           01303     call    Dist_Decoder
                      01304     Put_Dist_In_Reg     distreg
0363   ???? ???? 2???     M         lcall   Dist_Decoder
0366   086A               M         movfw   cm
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0367   00ED               M         movwf   distreg
                      01305     Display_Dist        distreg
0368   01D2               M         clrf    NumL
0369   01D1               M         clrf    NumH
036A   086D               M         movfw   distreg
                          M         ;movfw  TMR0
036B   00D2               M         movwf   NumL
036C   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
036D   0855               M         movfw       Hund
036E   2???               M         call        DectoChar
036F   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
0370   0856               M         movfw       Tens
0371   2???               M         call        DectoChar
0372   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
0373   0857               M         movfw       Ones
0374   2???               M         call        DectoChar
0375   2???               M         call        WR_DATA
                      01306    
0376   0008           01307     return
                      01308 
                      01309                 
0377                  01310 LEDControlON
                      01311         
0377   1862           01312         btfsc       LEDcounter0,0
0378   2???           01313         goto        $+4
0379   1406           01314         bsf         LED
037A   1462           01315         bsf         LEDcounter0,0
037B   0008           01316         return
                      01317         
                      01318         
037C   1006           01319         bcf         LED
037D   1062           01320         bcf         LEDcounter0,0
037E   0008           01321         return
                      01322         
                      01323         
037F                  01324 DisplayBlackWhiteIR1
                      01325         
037F   30C5           01326         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
0380   009F           01327         movwf   ADCON0  
                      01328                 
0381   2???           01329         call            ReadBW  
0382   00C2           01330         movwf           Front1
                      01331         PrintCol        Front1
0383   0842               M         movfw       Front1
0384   2???               M         call        StickerColours
0385   2???               M         call        WR_DATA
0386   2???           01332         call            HalfS
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0387   2???           01333         call            HalfS
                      01334 
0388   0008           01335         return
                      01336         
                      01337         
0389                  01338 DisplayBlackWhiteIR2
                      01339         
0389   30CD           01340         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra as the reader pin
038A   009F           01341         movwf   ADCON0  
                      01342         
038B   2???           01343         call            ReadBW  
038C   00C2           01344         movwf           Front1
                      01345         PrintCol        Front1
038D   0842               M         movfw       Front1
038E   2???               M         call        StickerColours
038F   2???               M         call        WR_DATA
0390   2???           01346         call            HalfS
0391   2???           01347         call            HalfS
                      01348         
0392   0008           01349         return
                      01350 
                      01351         
0393                  01352 DisplayUSSensor1
                      01353         
0393   2???           01354         call            Read1_US
                      01355 ;       call            ClrLCD
                      01356 ;       movwf           isBinThere                  ;sets the bin bit 1 or 0
                      01357 ;       call            HalfS
                      01358 ;       call            HalfS                       ;see if half second removes feedback
                      01359         
                      01360 
                      01361         
0394   2???           01362         goto            DisplayUSSensor1
                      01363         
0395                  01364 DisplayUSSensor2
                      01365         
0395   2???           01366         call            Read2_US
                      01367         ;call           ClrLCD
                      01368         ;movwf          isColumnThere               ;sets the bin bit 1 or 0
                      01369         
0396   2???           01370         goto            DisplayUSSensor2
                      01371         
0397                  01372 StdRotation1
                      01373         
0397   1863           01374         btfsc       LEDcounter1,0
0398   2???           01375         goto        $+4
0399   1287           01376         bcf             Std1
039A   1463           01377         bsf         LEDcounter1,0
039B   0008           01378         return
                      01379         
039C   1687           01380         bsf             Std1
039D   1063           01381         bcf         LEDcounter1,0
039E   0008           01382         return
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01383         
039F                  01384 StdRotation2
                      01385         
                      01386 ;       bcf     Std2
                      01387 ;       
039F   1864           01388         btfsc       LEDcounter2,0
03A0   2???           01389         goto        $+4
                      01390         
03A1   1307           01391         bcf             Std2
03A2   1464           01392         bsf         LEDcounter2,0
03A3   0008           01393         return
                      01394         
03A4   1D06           01395         btfss       SwitchWhite
03A5   1707           01396         bsf         Std2
                      01397         
03A6   1707           01398         bsf             Std2
03A7   1064           01399         bcf         LEDcounter2,0
                      01400 ;testingrotationfwd     
                      01401 ;       
                      01402 ;       btfsc   Switch
                      01403 ;       bsf     Std2
                      01404 ;       
                      01405 ;       goto    testingrotationfwd
                      01406         
03A8   0008           01407         return
                      01408                 
03A9                  01409 StdRotation1Backwards
                      01410         
03A9   1866           01411         btfsc       LEDcounter4,0
03AA   2???           01412         goto        $+4
03AB   1407           01413         bsf             Std1Backwards
03AC   1466           01414         bsf         LEDcounter4,0
03AD   0008           01415         return
                      01416         
03AE   1007           01417         bcf             Std1Backwards
03AF   1066           01418         bcf         LEDcounter4,0
03B0   0008           01419         return
                      01420         
03B1                  01421 StdRotation2Backwards
                      01422         
                      01423 ;       bcf         Std2Backwards
                      01424         
03B1   1867           01425         btfsc       LEDcounter5,0
03B2   2???           01426         goto        $+4
03B3   1787           01427         bsf             Std2Backwards
03B4   1467           01428         bsf         LEDcounter5,0
03B5   0008           01429         return
                      01430         
03B6   1D06           01431         btfss       SwitchWhite
03B7   1707           01432         bsf         Std2
                      01433         
03B8   1387           01434         bcf             Std2Backwards
03B9   1067           01435         bcf         LEDcounter5,0
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03BA   0008           01436         return
                      01437         
                      01438 ;testingrotationback    
                      01439 ;       
                      01440 ;       
                      01441 ;       call    Clear_Display
                      01442 ;       btfsc   Switch
                      01443 ;       bsf     Std2Backwards
                      01444 ;       
                      01445 ;       goto    testingrotationback
                      01446         
03BB                  01447 PWMFWD  
                      01448         
                      01449     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01450     
                      01451     ;save   pr2 value so that you can zero it after
                      01452     
03BB   1868           01453     btfsc           LEDcounter7,0
03BC   2???           01454     goto            $+4
03BD   0197           01455     clrf            CCP1CON
03BE   1468           01456     bsf             LEDcounter7,0
03BF   0008           01457     return
                      01458     
03C0   1683 1303      01459     BANKSEL TRISC
03C2   1107           01460     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01461     
03C3   0817           01462     MOVF     CCP1CON,W          ;set CCP1 as PWM
03C4   39F0           01463     ANDLW    0xF0
03C5   380C           01464     IORLW    0x0C
03C6   0097           01465     MOVWF    CCP1CON
                      01466 
03C7   0812           01467     movfw   PR2
03C8   00D0           01468     movwf   pr2temp
                      01469     
                      01470     ;11000011
03C9   30C3           01471     MOVLW    b'11000011'        ;set highest PWM value
03CA   1683 1303      01472     BANKSEL  PR2                
03CC   0092           01473     MOVWF    PR2                
03CD   1283 1303      01474     BANKSEL  TMR2               
                      01475     
03CF   1492           01476     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01477     
03D0   0195           01478     CLRF    CCPR1L              ;set PWM to zero
                      01479     
03D1   1712           01480     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
03D2   1692           01481     BSF     T2CON, TOUTPS2
03D3   1612           01482     BSF     T2CON, TOUTPS1
03D4   1592           01483     BSF     T2CON, TOUTPS0
                      01484     
                      01485     ; SET PWM duty cycle
                      01486     ;01001110
03D5   1697           01487     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D6   1617           01488     BSF     CCP1CON, 4
                      01489     MOVLF   B'01100000', CCPR1L                 ; previous was 01101
03D7   3060               M     MOVLW  B'01100000'  ; move literal into working register
03D8   0095               M     MOVWF   CCPR1L      ; move working register into reg
03D9   1597           01490     BSF     CCP1CON, 3
03DA   1517           01491     BSF     CCP1CON, 2
                      01492     
03DB   1512           01493     BSF     T2CON, TMR2ON       ;and start the timer running
                      01494  
03DC   1068           01495     bcf             LEDcounter7,0
                      01496     
03DD   0008           01497     return
                      01498     
03DE                  01499 PWMBACK
                      01500     
                      01501     ;************ SECOND PWM - Positive one ******************************
                      01502     
03DE   1869           01503     btfsc           LEDcounter8,0
03DF   2???           01504     goto            $+4
03E0   019D           01505     clrf            CCP2CON
                      01506     ;bcf                    PORTC,1
03E1   1469           01507     bsf             LEDcounter8,0
03E2   0008           01508     return
                      01509     
                      01510  
                      01511     
03E3   1683 1303      01512     BANKSEL TRISC
03E5   1087           01513     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01514     
03E6   081D           01515     MOVF     CCP2CON,W          ;set CCP2 as PWM
03E7   39F0           01516     ANDLW    0xF0
03E8   380C           01517     IORLW    0x0C
03E9   009D           01518     MOVWF    CCP2CON
                      01519     
                      01520     ;11000011
03EA   30C3           01521     MOVLW    b'11000011'        ;set highest PWM value
03EB   1683 1303      01522     BANKSEL  PR2                
03ED   0092           01523     MOVWF    PR2                
03EE   1283 1303      01524     BANKSEL  TMR2               
                      01525     
03F0   1492           01526     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01527     
03F1   019B           01528     CLRF    CCPR2L              ;set PWM to zero
                      01529     
03F2   1712           01530     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
03F3   1692           01531     BSF     T2CON, TOUTPS2
03F4   1612           01532     BSF     T2CON, TOUTPS1
03F5   1592           01533     BSF     T2CON, TOUTPS0
                      01534     
                      01535     ; SET PWM duty cycle
                      01536     ;01001110
03F6   169D           01537     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
03F7   161D           01538     BSF     CCP2CON, 4
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F8   3060           01539     MOVLW   B'01100000'                         ; good speed for moving the arm
03F9   009B           01540     MOVWF   CCPR2L      
03FA   159D           01541     BSF     CCP2CON, 3
03FB   151D           01542     BSF     CCP2CON, 2
                      01543     
03FC   1512           01544     BSF     T2CON, TMR2ON       ;and start the timer running
03FD   1283           01545     BCF     STATUS,RP0
                      01546     
                      01547     ;bsf                    PORTC,1
                      01548     
03FE   1069           01549     bcf             LEDcounter8,0
                      01550     
03FF   0008           01551     return
                      01552     
0400                  01553 PWMSTOP
                      01554     
0400   0197           01555     clrf   CCP1CON
0401   019D           01556     clrf   CCP2CON
0402   0850           01557     movfw   pr2temp
0403   0092           01558     movwf   PR2
                      01559     
0404   0008           01560     return
                      01561         
                      01562         
                      01563 ;***************************************
                      01564 ; LCD control
                      01565 ;***************************************
0405                  01566 Switch_Lines
0405   30C0           01567                 movlw   B'11000000'
0406   2???           01568                 call    WR_INS
0407   0008           01569                 return
                      01570 
0408                  01571 Clear_Display
0408   3001           01572                 movlw   B'00000001'
0409   2???           01573                 call    WR_INS
040A   0008           01574                 return
                      01575 
                      01576 ;***************************************
                      01577 ; Delay 0.5s
                      01578 ;***************************************
040B                  01579 HalfS   
  0000                01580         local   HalfS_0
040B   3088           01581       movlw 0x88
040C   00B0           01582       movwf COUNTH
040D   30BD           01583       movlw 0xBD
040E   00B1           01584       movwf COUNTM
040F   3003           01585       movlw 0x03
0410   00B2           01586       movwf COUNTL
                      01587 
0411                  01588 HalfS_0
0411   0BB0           01589       decfsz COUNTH, f
0412   2???           01590       goto   $+2
0413   0BB1           01591       decfsz COUNTM, f
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0414   2???           01592       goto   $+2
0415   0BB2           01593       decfsz COUNTL, f
0416   2???           01594       goto   HalfS_0
                      01595 
0417   2???           01596       goto $+1
0418   0000           01597       nop
0419   0000           01598       nop
041A   0008           01599                 return
                      01600                 
                      01601 ;***************************************
                      01602 ;***************************************
                      01603 ; Delay = 0.6 seconds
                      01604 ; Clock frequency = 4 MHz
041B                  01605 DELAY1
                      01606                         ;599996 cycles
041B   30D1           01607         movlw   0xD1
041C   00B5           01608         movwf   lcd_d1
041D   304F           01609         movlw   0x4F
041E   00B6           01610         movwf   lcd_d2
041F   3002           01611         movlw   0x02
0420   00EE           01612         movwf   lcd_d1_2
0421                  01613 Delay_0
0421   0BB5           01614         decfsz  lcd_d1, f
0422   2???           01615         goto    $+2
0423   0BB6           01616         decfsz  lcd_d2, f
0424   2???           01617         goto    $+2
0425   0BEE           01618         decfsz  lcd_d1_2, f
0426   2???           01619         goto    Delay_0
                      01620 
                      01621                         ;4 cycles
0427   0008           01622         return
                      01623         
                      01624 ;0.25s delay    
                      01625         
0428                  01626 DELAY2
                      01627                         ;249998 cycles
0428   304F           01628         movlw   0x4F
0429   00B5           01629         movwf   lcd_d1
042A   30C4           01630         movlw   0xC4
042B   00B6           01631         movwf   lcd_d2
042C                  01632 Delay_02
042C   0BB5           01633         decfsz  lcd_d1, f
042D   2???           01634         goto    $+2
042E   0BB6           01635         decfsz  lcd_d2, f
042F   2???           01636         goto    Delay_0
                      01637 
                      01638                         ;2 cycles
0430   2???           01639         goto    $+1
                      01640         
Warning[203]: Found opcode in column 1. (return)
0431   0008           01641 return
                      01642         
                      01643 ;***************************************
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01644 ;Init_TMR0
                      01645 ;   Input:  RA4
                      01646 ;   Output: TMR0 register
                      01647 ;   desc:   Counts the clock pulses for the
                      01648 ;           rotary encoder
                      01649 ;****************************************
0432                  01650 Init_TMR0                           ; INITIALIZE TIMER 0   
0432   1683 1303      01651     BANKSEL OPTION_REG
                      01652     MOVLF   B'00101000', OPTION_REG
0434   3028               M     MOVLW  B'00101000'  ; move literal into working register
0435   0081               M     MOVWF   OPTION_REG  ; move working register into reg
                      01653     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01654     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
                      01655     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01656     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01657     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01658     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01659     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01660     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
0436   1283 1303      01661     BANKSEL TMR0
0438   0181           01662     CLRF   TMR0                     ; Clear timer 0
0439   0008           01663     return  
                      01664     
                      01665 ;************************************
                      01666 ; RTC Sublabels
                      01667 ;************************************
                      01668     
043A                  01669 show_RTC
                      01670                 ;clear LCD screen
043A   3001           01671                 movlw   b'00000001'
043B   2???           01672                 call    WR_INS
                      01673 
                      01674                 ;Get year
043C   3032           01675                 movlw   "2"                             ;First line shows 20**/**/**
043D   2???           01676                 call    WR_DATA
043E   3030           01677                 movlw   "0"
043F   2???           01678                 call    WR_DATA
                      01679                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0440   3006               M         movlw   0x06
0441   1283 1303          M         banksel 0x73
0443   00F3               M         movwf   0x73
0444   2???               M         call    read_rtc
0445   1283 1303          M         banksel 0x75
0447   0875               M         movf    0x75,w
0448   2???               M         call    rtc_convert   
0449   0877           01680                 movfw   0x77
044A   2???           01681                 call    WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

044B   0878           01682                 movfw   0x78
044C   2???           01683                 call    WR_DATA
                      01684 
044D   302F           01685                 movlw   "/"
044E   2???           01686                 call    WR_DATA
                      01687 
                      01688                 ;Get month
                      01689                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
044F   3005               M         movlw   0x05
0450   1283 1303          M         banksel 0x73
0452   00F3               M         movwf   0x73
0453   2???               M         call    read_rtc
0454   1283 1303          M         banksel 0x75
0456   0875               M         movf    0x75,w
0457   2???               M         call    rtc_convert   
0458   0877           01690                 movfw   0x77
0459   2???           01691                 call    WR_DATA
045A   0878           01692                 movfw   0x78
045B   2???           01693                 call    WR_DATA
                      01694 
045C   302F           01695                 movlw   "/"
045D   2???           01696                 call    WR_DATA
                      01697 
                      01698                 ;Get day
                      01699                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
045E   3004               M         movlw   0x04
045F   1283 1303          M         banksel 0x73
0461   00F3               M         movwf   0x73
0462   2???               M         call    read_rtc
0463   1283 1303          M         banksel 0x75
0465   0875               M         movf    0x75,w
0466   2???               M         call    rtc_convert   
0467   0877           01700                 movfw   0x77
0468   2???           01701                 call    WR_DATA
0469   0878           01702                 movfw   0x78
046A   2???           01703                 call    WR_DATA
                      01704 
046B   30C0           01705                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
046C   2???           01706                 call    WR_INS
                      01707 
                      01708                 ;Get hour
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01709                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
046D   3002               M         movlw   0x02
046E   1283 1303          M         banksel 0x73
0470   00F3               M         movwf   0x73
0471   2???               M         call    read_rtc
0472   1283 1303          M         banksel 0x75
0474   0875               M         movf    0x75,w
0475   2???               M         call    rtc_convert   
0476   0877           01710                 movfw   0x77
0477   2???           01711                 call    WR_DATA
0478   0878           01712                 movfw   0x78
0479   2???           01713                 call    WR_DATA
047A   303A           01714                 movlw                   ":"
047B   2???           01715                 call    WR_DATA
                      01716 
                      01717                 ;Get minute             
                      01718                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
047C   3001               M         movlw   0x01
047D   1283 1303          M         banksel 0x73
047F   00F3               M         movwf   0x73
0480   2???               M         call    read_rtc
0481   1283 1303          M         banksel 0x75
0483   0875               M         movf    0x75,w
0484   2???               M         call    rtc_convert   
0485   0877           01719                 movfw   0x77
0486   2???           01720                 call    WR_DATA
0487   0878           01721                 movfw   0x78
0488   2???           01722                 call    WR_DATA         
0489   303A           01723                 movlw                   ":"
048A   2???           01724                 call    WR_DATA
                      01725                 
                      01726                 ;Get seconds
                      01727                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
048B   3000               M         movlw   0x00
048C   1283 1303          M         banksel 0x73
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

048E   00F3               M         movwf   0x73
048F   2???               M         call    read_rtc
0490   1283 1303          M         banksel 0x75
0492   0875               M         movf    0x75,w
0493   2???               M         call    rtc_convert   
0494   0877           01728                 movfw   0x77
0495   2???           01729                 call    WR_DATA
0496   0878           01730                 movfw   0x78
0497   2???           01731                 call    WR_DATA
                      01732                 
0498   2???           01733                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
0499   0008           01734                 return
                      01735 
                      01736 ;***************************************
                      01737 ; Setup RTC with time defined by user
                      01738 ;***************************************
049A                  01739 set_rtc_time
                      01740 
                      01741                 ;rtc_resetAll   ;reset rtc
                      01742                 ;works up to here
                      01743 
                      01744                 ;rtc_set        0x00,   B'10000000'
                      01745                 ;works up to here
                      01746                 
                      01747                 ;set time 
                      01748 ;               rtc_set 0x06,   B'00010110'             ; Year
                      01749 ;               ;works up to here
                      01750 ;               rtc_set 0x05,   B'00000011'             ; Month
                      01751 ;               rtc_set 0x04,   B'00100000'             ; Date
                      01752                 ;works up to here
                      01753                 ;rtc_set        0x03,   B'00100010'             ; Day
                      01754                 ;stops working on this one^
                      01755                 ;seems like day is the one that crashes it
                      01756                 rtc_set 0x02,   B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
049A   1283 1303          M         banksel 0x73
049C   3002               M         movlw   0x02
049D   00F3               M         movwf   0x73
049E   1283 1303          M         banksel 0x74
04A0   3000               M         movlw   B'00000000'
04A1   00F4               M         movwf   0x74    
04A2   2???               M         call    write_rtc
                      01757                 ;works on this one
                      01758                 rtc_set 0x01,   B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04A3   1283 1303          M         banksel 0x73
04A5   3001               M         movlw   0x01
04A6   00F3               M         movwf   0x73
04A7   1283 1303          M         banksel 0x74
04A9   3000               M         movlw   B'00000000'
04AA   00F4               M         movwf   0x74    
04AB   2???               M         call    write_rtc
                      01759                 ;works on this one
                      01760                 rtc_set 0x00,   B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
04AC   1283 1303          M         banksel 0x73
04AE   3000               M         movlw   0x00
04AF   00F3               M         movwf   0x73
04B0   1283 1303          M         banksel 0x74
04B2   3000               M         movlw   B'00000000'
04B3   00F4               M         movwf   0x74    
04B4   2???               M         call    write_rtc
                      01761                 ;works on this one
04B5   0008           01762                 return
                      01763 
                      01764 ;***************************************
                      01765 ; Delay 1s
                      01766 ;***************************************
04B6                  01767 OneS
  0000                01768                 local   OneS_0
04B6   3010           01769       movlw 0x10
04B7   00B0           01770       movwf COUNTH
04B8   307A           01771       movlw 0x7A
04B9   00B1           01772       movwf COUNTM
04BA   3006           01773       movlw 0x06
04BB   00B2           01774       movwf COUNTL
                      01775 
04BC                  01776 OneS_0
04BC   0BB0           01777       decfsz COUNTH, f
04BD   2???           01778       goto   $+2
04BE   0BB1           01779       decfsz COUNTM, f
04BF   2???           01780       goto   $+2
04C0   0BB2           01781       decfsz COUNTL, f
04C1   2???           01782       goto   OneS_0
                      01783 
04C2   2???           01784       goto $+1
04C3   0000           01785       nop
04C4   0000           01786       nop
04C5   0008           01787                 return
                      01788 
04C6                  01789 lcdLongDelay
04C6   3014           01790     movlw d'20'
04C7   00B6           01791     movwf lcd_d2
04C8                  01792 LLD_LOOP
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01793     LCD_DELAY
04C8   30FF               M         movlw   0xFF
04C9   00B5               M         movwf   lcd_d1
04CA   0BB5               M         decfsz  lcd_d1,f
04CB   2???               M         goto    $-1
04CC   0BB6           01794     decfsz lcd_d2,f
04CD   2???           01795     goto LLD_LOOP
04CE   0008           01796     return
                      01797     
                      01798 ;***************************************
                      01799 ; Look up table
                      01800 ;***************************************
                      01801     
04CF                  01802 Welcome_Msg
                      01803         
                      01804         ;Change Page
04CF   00BA           01805         movwf   Temp
04D0   30??           01806         movlw   HIGH Welcome_MsgEntries
04D1   008A           01807         movwf   PCLATH
04D2   083A           01808         movf    Temp,w
04D3   3E??           01809         addlw   LOW Welcome_MsgEntries
04D4   1803           01810         btfsc   STATUS,C
04D5   0A8A           01811             incf    PCLATH,f
04D6   0082           01812         movwf   PCL     
04D7   0782           01813         addwf    PCL,F
04D8                  01814 Welcome_MsgEntries
04D8   3431 343A 3453 01815         dt        "1:Simulation|#/D:PWM|*/0:Std1&Std2|3:B/W", 0
       3469 346D 3475 
       346C 3461 3474 
       3469 346F 346E 
       347C 3423 342F 
       3444 343A 3450 
       3457 344D 347C 
       342A 342F 3430 
       343A 3453 3474 
       3464 3431 3426 
       3453 3474 3464 
       3432 347C 3433 
       343A 3442 342F 
       3457 3400 
                      01816         
0501                  01817 Welcome_Msg2
                      01818         
                      01819         ;Change Page
0501   00BA           01820         movwf   Temp
0502   30??           01821         movlw   HIGH Welcome_Msg2Entries
0503   008A           01822         movwf   PCLATH
0504   083A           01823         movf    Temp,w
0505   3E??           01824         addlw   LOW Welcome_Msg2Entries
0506   1803           01825         btfsc   STATUS,C
0507   0A8A           01826             incf    PCLATH,f
0508   0082           01827         movwf   PCL     
0509   0782           01828         addwf    PCL,F
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

050A                  01829 Welcome_Msg2Entries
050A   3435 3444 3469 01830         dt        "5Distance 6Locations", 0
       3473 3474 3461 
       346E 3463 3465 
       3420 3436 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01831         
051F                  01832 FinalMessage
                      01833         
                      01834         ;Change Page
051F   00BA           01835         movwf    Temp
0520   30??           01836         movlw   HIGH FinalMessageEntries
0521   008A           01837         movwf   PCLATH
0522   083A           01838         movf    Temp,w
0523   3E??           01839         addlw   LOW FinalMessageEntries
0524   1803           01840         btfsc   STATUS,C
0525   0A8A           01841             incf    PCLATH,f
0526   0082           01842         movwf   PCL
0527   0782           01843         addwf    PCL,F
0528                  01844 FinalMessageEntries
0528   3431 3454 3469 01845         dt        "1Time 3Stickers 4#Bins",0
       346D 3465 3420 
       3433 3453 3474 
       3469 3463 346B 
       3465 3472 3473 
       3420 3434 3423 
       3442 3469 346E 
       3473 3400 
                      01846         
053F                  01847 DectoChar
                      01848         
                      01849         ;Change Page
053F   00BA           01850         movwf   Temp
0540   30??           01851         movlw   HIGH DectoCharEntries
0541   008A           01852         movwf   PCLATH
0542   083A           01853         movf    Temp,w
0543   3E??           01854         addlw   LOW DectoCharEntries
0544   1803           01855         btfsc   STATUS,C
0545   0A8A           01856             incf    PCLATH,f
0546   0082           01857         movwf   PCL     
0547   0782           01858         addwf    PCL,F
0548                  01859 DectoCharEntries
0548   3430 3431 3432 01860         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01861         
0553                  01862 StickerColours
                      01863         
                      01864         ;Change Page
0553   00BA           01865         movwf   Temp
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0554   30??           01866         movlw   HIGH StickerColoursEntries
0555   008A           01867         movwf   PCLATH
0556   083A           01868         movf    Temp,w
0557   3E??           01869         addlw   LOW StickerColoursEntries
0558   1803           01870         btfsc   STATUS,C
0559   0A8A           01871             incf    PCLATH,f
055A   0082           01872         movwf   PCL     
055B   0782           01873         addwf    PCL,F
055C                  01874 StickerColoursEntries
055C   3442 3457 3400 01875         dt        "BW",  0
                      01876         
055F                  01877 FrontStickers
                      01878 
                      01879         ;Change Page
055F   00BA           01880         movwf   Temp
0560   30??           01881         movlw   HIGH FrontStickersEntries
0561   008A           01882         movwf   PCLATH
0562   083A           01883         movf    Temp,w
0563   3E??           01884         addlw   LOW FrontStickersEntries
0564   1803           01885         btfsc   STATUS,C
0565   0A8A           01886             incf    PCLATH,f
0566   0082           01887         movwf   PCL     
0567   0782           01888         addwf    PCL,F
0568                  01889 FrontStickersEntries
0568   3446 3472 346F 01890         dt        "Front",  0
       346E 3474 3400 
                      01891         
056E                  01892 BackStickers
                      01893 
                      01894         ;Change Page
056E   00BA           01895         movwf   Temp
056F   30??           01896         movlw   HIGH BackStickersEntries
0570   008A           01897         movwf   PCLATH
0571   083A           01898         movf    Temp,w
0572   3E??           01899         addlw   LOW BackStickersEntries
0573   1803           01900         btfsc   STATUS,C
0574   0A8A           01901             incf    PCLATH,f
0575   0082           01902         movwf   PCL     
0576   0782           01903         addwf    PCL,F
0577                  01904 BackStickersEntries
0577   3442 3461 3463 01905         dt        "Back",  0
       346B 3400 
                      01906         
057C                  01907 Spacee
                      01908 
                      01909         ;Change Page
057C   00BA           01910         movwf   Temp
057D   30??           01911         movlw   HIGH SpaceeEntries
057E   008A           01912         movwf   PCLATH
057F   083A           01913         movf    Temp,w
0580   3E??           01914         addlw   LOW SpaceeEntries
0581   1803           01915         btfsc   STATUS,C
0582   0A8A           01916             incf    PCLATH,f
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0583   0082           01917         movwf   PCL     
0584   0782           01918         addwf    PCL,F
0585                  01919 SpaceeEntries
0585   3420 3400      01920         dt        " ",  0
                      01921         
0587                  01922 Colon
                      01923 
                      01924         ;Change Page
0587   00BA           01925         movwf   Temp
0588   30??           01926         movlw   HIGH ColonEntries
0589   008A           01927         movwf   PCLATH
058A   083A           01928         movf    Temp,w
058B   3E??           01929         addlw   LOW ColonEntries
058C   1803           01930         btfsc   STATUS,C
058D   0A8A           01931             incf    PCLATH,f
058E   0082           01932         movwf   PCL     
058F   0782           01933         addwf    PCL,F
0590                  01934 ColonEntries
0590   343A 3400      01935         dt        ":",  0
                      01936         
0592                  01937 Distances
                      01938 
                      01939         ;Change Page
0592   00BA           01940         movwf   Temp
0593   30??           01941         movlw   HIGH DistancesEntries
0594   008A           01942         movwf   PCLATH
0595   083A           01943         movf    Temp,w
0596   3E??           01944         addlw   LOW DistancesEntries
0597   1803           01945         btfsc   STATUS,C
0598   0A8A           01946             incf    PCLATH,f
0599   0082           01947         movwf   PCL     
059A   0782           01948         addwf    PCL,F
059B                  01949 DistancesEntries
059B   3444 3469 3473 01950         dt        "Dist (cm)",  0
       3474 3420 3428 
       3463 346D 3429 
       3400 
                      01951             
3F72                  01952         END
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AVOIDCOLUMN                       000000E7
AddBin                            000002B3
BANK0                             
BANK1                             
BANK2                             
BANK3                             
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
BWScanModule1                     000001BC
BWScanModule2                     000001E2
BWStoreModule1                    000001D5
BWStoreModule2                    000001FB
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BackStickers                      0000056E
BackStickersEntries               00000577
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHECKSWITCH                       00000162
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Clear_Display                     00000408
ClrLCD                            00000000
ColMotor                          PORTC,7
Colon                             00000587
ColonEntries                      00000590
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DELAY1                            0000041B
DELAY2                            00000428
DELAYEDREAD                       00000159
D_A                               00000005
D_NOT_A                           00000005
Decode_check_done                 00000283
Decode_loop                       00000278
DectoChar                         0000053F
DectoCharEntries                  00000548
Delay_0                           00000421
Delay_02                          0000042C
Display                           
DisplayBlackWhiteIR1              0000037F
DisplayBlackWhiteIR2              00000389
DisplayUSSensor1                  00000393
DisplayUSSensor2                  00000395
Display_Dist                      
Dist_Decoder                      00000270
Distances                         00000592
DistancesEntries                  0000059B
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENDTHIS                           0000015F
EXIT                              0000016D
EXITDISPLAY                       0000018F
F                                 00000001
FERR                              00000002
FSR                               00000004
FinalMessage                      0000051F
FinalMessageEntries               00000528
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         00000337
FrontLoop1                        000002D3
FrontLoop2                        00000304
FrontStickers                     0000055F
FrontStickersEntries              00000568
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             0000040B
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         00000432
Key                               
KeypadandLCD                      00000093
LCD_DELAY                         
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

LED                               PORTB,0
LEDControlON                      00000377
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter7                       00000068
LEDcounter8                       00000069
LLD_LOOP                          000004C8
Lb1                               00000022
Lb2                               00000026
Lb3                               0000002A
Lb4                               0000002E
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
Locations                         00000324
MAX_HIGHS                         0x3
MOV                               
MOVEFWDFORABIT                    00000186
MOVLF                             
MoveBackwards                     000001BB
NOTPWMBACK                        PORTC,1
NOTPWMFWD                         PORTC,2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              00000051
NumL                              00000052
NumOfBins1                        00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              000004B6
Ones                              00000057
P                                 00000004
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           000003DE
PWMFWD                            000003BB
PWMSTOP                           00000400
PrintCol                          
PrintNumber                       
Put_Dist_In_Reg                   
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READBIN                           00000119
READ_WRITE                        00000002
RETURNFROMCOLUMN                  0000010A
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        0000029D
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          00000228
Read2_US                          0000024C
ReadBW                            00000208
ReadUltrasonic                    
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         00000299
ShowBins                          000002BD
Spacee                            0000057C
SpaceeEntries                     00000585
Std1                              PORTC,5
Std1Backwards                     PORTC,0
Std2                              PORTC,6
Std2Backwards                     PORTC,7
StdRotation1                      00000397
StdRotation1Backwards             000003A9
StdRotation2                      0000039F
StdRotation2Backwards             000003B1
StickerColours                    00000553
StickerColoursEntries             0000055C
Stickers1                         000002C1
Stickers2                         000002F3
StoreBW1                          000002A7
StoreBW2                          000002AD
StoreThisDistance                 0000028C
SwitchArm                         PORTB,3
SwitchWhite                       PORTB,2
Switch_Lines                      00000405
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTAL                             0000013E
TOTAL1                            00000142
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
TotalDistance                     00000362
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
Welcome_Msg                       000004CF
Welcome_Msg2                      00000501
Welcome_Msg2Entries               0000050A
Welcome_MsgEntries                000004D8
Z                                 00000002
_.org_0_0094                      00000094
_.org_0_00E4                      000000E4
_.org_0_00EC                      000000EC
_.org_0_00F6                      000000F6
_.org_0_0106                      00000106
_.org_0_010E                      0000010E
_.org_0_0116                      00000116
_.org_0_0148                      00000148
_.org_0_0165                      00000165
_.org_0_016A                      0000016A
_.org_0_0190                      00000190
_.org_0_01B8                      000001B8
_.org_0_01BE                      000001BE
_.org_0_01E4                      000001E4
_.org_0_020A                      0000020A
_.org_0_0230                      00000230
_.org_0_0233                      00000233
_.org_0_0254                      00000254
_.org_0_0257                      00000257
_.org_0_0378                      00000378
_.org_0_0398                      00000398
_.org_0_03A0                      000003A0
_.org_0_03AA                      000003AA
_.org_0_03B2                      000003B2
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_03BC                      000003BC
_.org_0_03DF                      000003DF
_.org_0_0412                      00000412
_.org_0_0414                      00000414
_.org_0_0417                      00000417
_.org_0_0422                      00000422
_.org_0_0424                      00000424
_.org_0_042D                      0000042D
_.org_0_0430                      00000430
_.org_0_04BD                      000004BD
_.org_0_04BF                      000004BF
_.org_0_04C2                      000004C2
_.org_0_04CB                      000004CB
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
backstickerValues                 0000005C
MPASM 5.65                          MAIN.ASM   4-3-2016  0:59:11         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

bin16_BCD                         00000001
binCounter                        0000005D
cm                                0000006A
com                               00000037
count_highs                       0000006F
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay3                            00000061
distanceMoved                     00000058
distreg                           0000006D
frontstickerValues                0000005B
goback                            000000E6
i2c_common_setup                  00000000
init                              00000034
isBinThere                        0000005A
isColumnThere                     00000059
lcdLongDelay                      000004C6
lcd_d1                            00000035
lcd_d1_2                          0000006E
lcd_d2                            00000036
lcd_tmp                           00000034
m                                 0000006C
mm                                0000006B
mm_overflow                       00000288
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      0000049A
show_RTC                          0000043A
temp                              00000039
write_rtc                         00000000

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :     0 reported,    37 suppressed

