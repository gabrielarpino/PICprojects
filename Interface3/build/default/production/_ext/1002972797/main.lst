MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1       ;3B PC
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5       
  00000040            00038                 Location6       ;40 PC
  00000041            00039                 Location7
  00000042            00040                 Front1          ;42 PC7
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ; 49 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7           ;50
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins1                      
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0, LEDcounter1,LEDcounter2,LEDcounter3,LEDcounter4,LEDcounter5,LEDcounter7,LED
                            counter8
  0000006A            00073                 cm
  0000006B            00074                 mm
  0000006C            00075                 m
  0000006D            00076                 distreg
  0000006E            00077                 lcd_d1_2
  0000006F            00078                 count_highs             ;the number of consecutive high counter for the US sensor
                      00079         endc    
                      00080 
                      00081         ;Declare constants for pin assignments (LCD on PORTD)
                      00082                 #define RS      PORTD,2
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083                 #define E       PORTD,3
                      00084                 #define IR1     PORTA,0
                      00085                 #define IR2     PORTA,1
                      00086                 #define ColMotor PORTC,7
                      00087                 #define UST1    PORTD,0
                      00088                 #define US1E1   PORTA,2
                      00089                 #define UST2    PORTD,1
                      00090                 #define US1E2   PORTA,3
                      00091                 #define LED     PORTB,0
                      00092                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00093                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00094                 #define Std1Backwards   PORTC,0
                      00095                 #define Std2Backwards   PORTC,7
                      00096                 #define SwitchWhite             PORTB,2     ; or gated switch to stop motor motion
                      00097                 #define SwitchArm               PORTB,3
                      00098                 #define NOTPWMFWD               PORTC,2
                      00099                 #define NOTPWMBACK              PORTC,1
                      00100                 #define MAX_HIGHS       0x3
                      00101                 ;SHAFTIR is PORTA,4
                      00102                 ;PWMFWD is RC2
                      00103                 ;PWMBACK is RC1
                      00104                 
                      00105                 
                      00106 ;distanceMoved  equ     b'0'
                      00107 
                      00108          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00109          goto      init       ;Just jump to the main code section.
                      00110          
                      00111          ;ORG      0x100        ;this command is sketchy
                      00112 
                      00113 ;*******************************************************************************
                      00114 ; MACROS
                      00115 ;*******************************************************************************
                      00116          
                      00117 Key      macro  value, subroutine
                      00118          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00119          andlw          0x0F
                      00120          xorlw          value
                      00121          btfsc          STATUS, Z
                      00122          call           subroutine
                      00123         endm
                      00124 
                      00125 Rotation macro  value
                      00126          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00127          andlw          0x0F
                      00128          xorlw          value
                      00129          btfsc          STATUS, Z
                      00130          call           ShiftLeft
                      00131         endm
                      00132 
                      00133 ;***************************************
                      00134 ; Delay: ~160us macro
                      00135 ;***************************************
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136 LCD_DELAY macro
                      00137         movlw   0xFF
                      00138         movwf   lcd_d1
                      00139         decfsz  lcd_d1,f
                      00140         goto    $-1
                      00141         endm
                      00142         
                      00143 ;***************************************
                      00144 ; Display macro
                      00145 ;***************************************
                      00146 Display macro   Message
                      00147                 local   loop_
                      00148                 local   end_
                      00149                 clrf    Table_Counter
                      00150                 clrw            
                      00151 loop_   movf    Table_Counter,W
                      00152                 call    Message
                      00153                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00154                 btfsc   STATUS,Z
                      00155                         goto    end_
                      00156                 call    WR_DATA
                      00157                 incf    Table_Counter,F
                      00158                 goto    loop_
                      00159 end_
                      00160                 endm
                      00161                 
                      00162 ;***************************************
                      00163 ; BANK0 macro   [TESTED]
                      00164 ;***************************************
                      00165 BANK0 Macro
                      00166     bcf STATUS,RP0 
                      00167     bcf STATUS,RP1
                      00168     endm
                      00169 ;***************************************
                      00170 ; BANK1 macro   [TESTED]
                      00171 ;***************************************
                      00172 BANK1 Macro
                      00173     bsf STATUS,RP0 
                      00174     bcf STATUS,RP1
                      00175     endm
                      00176         
                      00177 ;***************************************
                      00178 ; BANK2 macro   [TESTED]
                      00179 ;***************************************
                      00180 BANK2 Macro
                      00181     bsf STATUS,RP0 
                      00182     bsf STATUS,RP1
                      00183     endm
                      00184     
                      00185 ;***************************************
                      00186 ; BANK3 macro   [TESTED]
                      00187 ;***************************************
                      00188 BANK3 Macro
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00189     bcf STATUS,RP0 
                      00190     bsf STATUS,RP1
                      00191     endm
                      00192     
                      00193 ;***************************************
                      00194 ; MOVLF macro   [TESTED]
                      00195 ;***************************************
                      00196 MOVLF   Macro   literal, reg
                      00197     MOVLW  literal      ; move literal into working register
                      00198     MOVWF   reg         ; move working register into reg
                      00199     endm
                      00200 
                      00201 ;***************************************
                      00202 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00203 ;***************************************
                      00204 MOV     Macro   reg1, reg2
                      00205     MOVF  reg1,W        ; move reg1 into working register
                      00206     MOVWF   reg2        ; reg2 <- reg1
                      00207     endm
                      00208     
                      00209 ;***************************************
                      00210 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00211 ;***************************************
                      00212 ADDL    Macro   Destination, reg, literal
                      00213     MOVLW  literal      ; move literal into working register
                      00214     ADDWF   reg,W       ; W <- literal + reg
                      00215     MOVWF   Destination ; Destination <- literal + reg
                      00216     endm
                      00217     
                      00218 ;***************************************
                      00219 ; ADD macro, Adds two registers together    [TESTED]
                      00220 ;***************************************
                      00221 ADD     Macro   Destination, reg1, reg2
                      00222     MOVF    reg1,W      ; move literal into working register
                      00223     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00224     MOVWF   Destination ; Destination <- reg1 + reg2
                      00225     endm
                      00226     
                      00227 ;***************************************
                      00228 ; Store_Dist macro --> Stores current
                      00229 ;   distance and stores it in Bin_Dist_reg
                      00230 ;***************************************                
                      00231 Put_Dist_In_Reg macro    Bin_Dist_reg
                      00232         lcall   Dist_Decoder
                      00233         movfw   cm
                      00234         movwf   Bin_Dist_reg
                      00235     endm
                      00236     
                      00237 ;***************************************
                      00238 ; Display_Dist macro --> Takes value in Bin_Dist_reg
                      00239 ;   and converts it into a BCD and prints it
                      00240 ;   To the LCD
                      00241 ;***************************************                
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00242 Display_Dist macro    Bin_Dist_reg
                      00243         clrf    NumL
                      00244         clrf    NumH
                      00245         movfw   Bin_Dist_reg
                      00246         ;movfw  TMR0
                      00247         movwf   NumL
                      00248         call    bin16_BCD
                      00249         PrintNumber     Hund
                      00250         PrintNumber     Tens
                      00251         PrintNumber     Ones
                      00252     endm
                      00253                 
                      00254 ;***************************************
                      00255 ; Number to Printable
                      00256 ;***************************************
                      00257 PrintNumber macro       number
                      00258         ;movf       number ,W
                      00259         movfw       number
                      00260         call        DectoChar
                      00261         call        WR_DATA
                      00262         endm
                      00263         
                      00264 ;***************************************
                      00265 ; Number to Colour
                      00266 ;***************************************
                      00267 PrintCol macro      number
                      00268         movfw       number
                      00269         call        StickerColours
                      00270         call        WR_DATA
                      00271         endm    
                      00272 
                      00273 ;***************************************
                      00274 ;           US READ MACRO
                      00275 ;****************************************
                      00276 ReadUltrasonic macro    trigger, trigger_bit, echo, echo_bit
                      00277     clrf        TMR1H
                      00278     clrf        TMR1L
                      00279 
                      00280     bcf trigger, trigger_bit            ;make sure trigger is clear
                      00281     call lcdLongDelay
                      00282 
                      00283     bsf trigger, trigger_bit    ;trigger high, bottom sensor
                      00284     call lcdLongDelay           ;10us delay
                      00285     bcf trigger, trigger_bit    ;trigger low
                      00286 
                      00287     btfss       echo, echo_bit          ;wait for echo to go high
                      00288     goto        $-1
                      00289     bsf T1CON,TMR1ON    ;turn on timer
                      00290 
                      00291     btfsc       echo, echo_bit          ;wait for echo to go low
                      00292     goto        $-1
                      00293 
                      00294     bcf T1CON,TMR1ON    ;turn off timer
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00295     endm
                      00296         
                      00297 ;*******************************************************
                      00298 ;******             BCD                 ****************
                      00299 ;*******************************************************
                      00300         
                      00301 ;---------------- Binary (16-bit) to BCD -----------------------
                      00302 ;
                      00303 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00304 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00305                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00306 ;
                      00307 ; Uses variables
                      00308 ; NumH, NumL
                      00309 ; TenK, Thou, Hund, Tens, Ones
                      00310                 
                      00311 ;BCD    macro   NumH, NumL
                      00312 
0001                  00313 bin16_BCD
0001   0E51           00314         swapf   NumH, W
0002   390F           00315         andlw   0x0F
0003   3EF0           00316         addlw   0xF0
0004   00D4           00317         movwf   Thou 
0005   07D4           00318         addwf   Thou, F 
0006   3EE2           00319         addlw   0xE2 
0007   00D5           00320         movwf   Hund 
0008   3E32           00321         addlw   0x32 
0009   00D7           00322         movwf   Ones 
                      00323 
000A   0851           00324         movf    NumH, W 
000B   390F           00325         andlw   0x0F 
000C   07D5           00326         addwf   Hund, F 
000D   07D5           00327         addwf   Hund, F 
000E   07D7           00328         addwf   Ones, F 
000F   3EE9           00329         addlw   0xE9 
0010   00D6           00330         movwf   Tens 
0011   07D6           00331         addwf   Tens, F 
0012   07D6           00332         addwf   Tens, F 
                      00333 
0013   0E52           00334         swapf   NumL, W 
0014   390F           00335         andlw   0x0F 
0015   07D6           00336         addwf   Tens, F 
0016   07D7           00337         addwf   Ones, F 
                      00338 
0017   0DD6           00339         rlf    Tens, F 
0018   0DD7           00340         rlf    Ones, F 
0019   09D7           00341         comf    Ones, F 
001A   0DD7           00342         rlf    Ones, F 
                      00343 
001B   0852           00344         movf    NumL, W 
001C   390F           00345         andlw   0x0F 
001D   07D7           00346         addwf   Ones, F 
001E   0DD4           00347         rlf    Thou,F 
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00348 
001F   3007           00349         movlw   0x07 
0020   00D3           00350         movwf   TenK 
                      00351 
0021   300A           00352         movlw   0x0A
0022                  00353 Lb1
0022   03D6           00354         decf    Tens, F 
0023   07D7           00355         addwf   Ones, F 
0024   1C03           00356         btfss   STATUS, C 
0025   2???           00357         goto            Lb1 
0026                  00358 Lb2
0026   03D5           00359         decf    Hund, F 
0027   07D6           00360         addwf   Tens, F 
0028   1C03           00361         btfss   STATUS,C 
0029   2???           00362         goto            Lb2 
002A                  00363 Lb3
002A   03D4           00364         decf    Thou, F 
002B   07D5           00365         addwf   Hund, F 
002C   1C03           00366         btfss   STATUS,C
002D   2???           00367         goto            Lb3 
002E                  00368 Lb4
002E   03D3           00369         decf    TenK, F 
002F   07D4           00370         addwf   Thou, F 
0030   1C03           00371         btfss   STATUS,C 
0031   2???           00372         goto            Lb4 
                      00373 
0032   3400           00374         retlw   0
0033   0008           00375         return
                      00376 ;endm
                      00377 
                      00378 ;***************************************
                      00379 ; Initialize
                      00380 ;***************************************
0034                  00381 init
0034   018B           00382          clrf      INTCON         ; No interrupts
                      00383 
0035   1683           00384          bsf       STATUS,RP0     ; select bank 1
0036   30FF           00385          movlw      0xFF            ; need to make A input
0037   0085           00386          movwf      TRISA          ; All port A is input
0038   30FE           00387          movlw     b'11111110'    ; Set required keypad inputs
0039   0086           00388          movwf     TRISB
003A   0187           00389          clrf      TRISC          ; All port C is output
003B   0188           00390          clrf      TRISD          ; All port D is output
003C   0189           00391          clrf      TRISE        
                      00392          
                      00393                   ;Set SDA and SCL to high-Z first as required for I2C
003D   1607           00394                  bsf       TRISC,4                
003E   1587           00395                  bsf       TRISC,3
                      00396 
003F   1283           00397          bcf       STATUS,RP0     ; select bank 0
0040   0185           00398          clrf      PORTA
0041   0186           00399          clrf      PORTB
0042   0187           00400          clrf      PORTC
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0043   0188           00401          clrf      PORTD
0044   0189           00402          clrf      PORTE
                      00403          
                      00404         ;Set up I2C for communication
                      00405                  
0045   2???           00406         call       i2c_common_setup
                      00407 ;*******************************************************************************
                      00408 ;        UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00409         ;rtc_resetAll                                   ;works
                      00410         ;call set_rtc_time
                      00411 ;*******************************************************************************
                      00412                  
                      00413                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00414                  ;call     set_rtc_time
                      00415           
0046   2???           00416          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00417           ;A/D converter attempt
                      00418          
                      00419 ;        bcf    STATUS,RP1
                      00420 ;        bsf    STATUS,RP0      ;Select bank 1
                      00421 ;        
                      00422 ;        bsf    IR1             ;makes RA0 an input
                      00423 ;        bcf    STATUS,RP0      ; go back to bank 0
                      00424          
                      00425         ; Set ADCON1 to use RA0 as analog input
                      00426         
0047   1303           00427         bcf     STATUS,RP1
0048   1683           00428         bsf     STATUS,RP0      ;Select bank 1
0049   3006           00429         movlw   b'00000110'     ;left justified, all inputs digital
004A   009F           00430         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00431 
                      00432         ;ADCON0
004B   1283           00433         bcf     STATUS,RP0
                      00434         
                      00435         
                      00436         
                      00437 ;***************************************************
                      00438 ; Initialize variables and Displays
                      00439 ;****************************************************
                      00440         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
004C   01B3               M                 clrf    Table_Counter
004D   0103               M                 clrw            
004E   0833               M loop_   movf    Table_Counter,W
004F   2???               M                 call    Welcome_Msg
0050   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0051   1903               M                 btfsc   STATUS,Z
0052   2???               M                         goto    end_
0053   2???               M                 call    WR_DATA
0054   0AB3               M                 incf    Table_Counter,F
0055   2???               M                 goto    loop_
0056                      M end_
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0056   2???           00441         call            Switch_Lines
                      00442         Display         Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0057   01B3               M                 clrf    Table_Counter
0058   0103               M                 clrw            
0059   0833               M loop_   movf    Table_Counter,W
005A   2???               M                 call    Welcome_Msg2
005B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
005C   1903               M                 btfsc   STATUS,Z
005D   2???               M                         goto    end_
005E   2???               M                 call    WR_DATA
005F   0AB3               M                 incf    Table_Counter,F
0060   2???               M                 goto    loop_
0061                      M end_
0061   01E0           00443         clrf            NumOfBins1
0062   01ED           00444         clrf            distreg             ; clear register for distance
0063   2???           00445         call            Init_TMR0           ; Initialize shaft encoder
0064   1408           00446         bsf             PORTD,0
0065   1462           00447         bsf             LEDcounter0,0               ;counter for LED
0066   1463           00448         bsf             LEDcounter1,0               ;forward motor counters
0067   1464           00449         bsf             LEDcounter2,0
0068   1465           00450         bsf             LEDcounter3,0               
0069   1466           00451         bsf             LEDcounter4,0               ;backward motor counters
006A   1467           00452         bsf             LEDcounter5,0       
006B   1468           00453         bsf             LEDcounter7,0               ;pwm counters
006C   1469           00454         bsf             LEDcounter8,0               
                      00455         
006D   1287           00456         bcf             Std1                        ;use this one for negative for when need to move ful
                            l motor                 
006E   1707           00457         bsf             Std2
006F   1007           00458         bcf             Std1Backwards
0070   1787           00459         bsf             Std2Backwards
0071   1507           00460         bsf             PORTC,2             
0072   1487           00461         bsf             PORTC,1                 ; PWM now negative, so start by clearing
                      00462         
                      00463         ;trying to fix the switch bs
0073   1106           00464         bcf             SwitchWhite
0074   1186           00465         bcf             SwitchArm
                      00466 
                      00467 ;*************************************
                      00468 ;       Keypad and LCD forms        
                      00469 ;*************************************
                      00470         
0075   1C86           00471 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0076   2???           00472                 goto            $-1 
                      00473 
0077   0E06           00474                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0078   390F           00475                 andlw           0x0F
0079   00B9           00476                 movwf           temp
                      00477                 
                      00478                 Key     0x00, TOTAL
007A   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007B   390F               M          andlw          0x0F
007C   3A00               M          xorlw          0x00
007D   1903               M          btfsc          STATUS, Z
007E   2???               M          call           TOTAL
                      00479                 Key     0x01, DisplayBlackWhiteIR1
007F   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0080   390F               M          andlw          0x0F
0081   3A01               M          xorlw          0x01
0082   1903               M          btfsc          STATUS, Z
0083   2???               M          call           DisplayBlackWhiteIR1
                      00480                 Key     0x02, DisplayBlackWhiteIR2
0084   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0085   390F               M          andlw          0x0F
0086   3A02               M          xorlw          0x02
0087   1903               M          btfsc          STATUS, Z
0088   2???               M          call           DisplayBlackWhiteIR2
                      00481                 Rotation        0x03
0089   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008A   390F               M          andlw          0x0F
008B   3A03               M          xorlw          0x03
008C   1903               M          btfsc          STATUS, Z
008D   2???               M          call           ShiftLeft
                      00482                 Key     0x04, READBIN
008E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008F   390F               M          andlw          0x0F
0090   3A04               M          xorlw          0x04
0091   1903               M          btfsc          STATUS, Z
0092   2???               M          call           READBIN
                      00483                 Key     0x05, DisplayUSSensor1
0093   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0094   390F               M          andlw          0x0F
0095   3A05               M          xorlw          0x05
0096   1903               M          btfsc          STATUS, Z
0097   2???               M          call           DisplayUSSensor1
                      00484                 Key     0x06, DisplayUSSensor2
0098   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0099   390F               M          andlw          0x0F
009A   3A06               M          xorlw          0x06
009B   1903               M          btfsc          STATUS, Z
009C   2???               M          call           DisplayUSSensor2
                      00485                 Key     0x07, AddBin
009D   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009E   390F               M          andlw          0x0F
009F   3A07               M          xorlw          0x07
00A0   1903               M          btfsc          STATUS, Z
00A1   2???               M          call           AddBin
                      00486                 Key     0x08, Stickers1
00A2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A3   390F               M          andlw          0x0F
00A4   3A08               M          xorlw          0x08
00A5   1903               M          btfsc          STATUS, Z
00A6   2???               M          call           Stickers1
                      00487                 Key     0x09, MOVEFWDFORABIT
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A8   390F               M          andlw          0x0F
00A9   3A09               M          xorlw          0x09
00AA   1903               M          btfsc          STATUS, Z
00AB   2???               M          call           MOVEFWDFORABIT
                      00488                 Key     0x0A, CHECKSWITCH               
00AC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00AD   390F               M          andlw          0x0F
00AE   3A0A               M          xorlw          0x0A
00AF   1903               M          btfsc          STATUS, Z
00B0   2???               M          call           CHECKSWITCH
                      00489                 Key     0x0C, StdRotation2
00B1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B2   390F               M          andlw          0x0F
00B3   3A0C               M          xorlw          0x0C
00B4   1903               M          btfsc          STATUS, Z
00B5   2???               M          call           StdRotation2
                      00490                 Key     0x0D, StdRotation2Backwards
00B6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B7   390F               M          andlw          0x0F
00B8   3A0D               M          xorlw          0x0D
00B9   1903               M          btfsc          STATUS, Z
00BA   2???               M          call           StdRotation2Backwards
                      00491                 Key     0x0E, PWMFWD
00BB   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BC   390F               M          andlw          0x0F
00BD   3A0E               M          xorlw          0x0E
00BE   1903               M          btfsc          STATUS, Z
00BF   2???               M          call           PWMFWD
                      00492                 Key     0x0F, PWMBACK
00C0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C1   390F               M          andlw          0x0F
00C2   3A0F               M          xorlw          0x0F
00C3   1903               M          btfsc          STATUS, Z
00C4   2???               M          call           PWMBACK
00C5   1886           00493                 btfsc           PORTB,1     ;Wait until key is released
00C6   2???           00494                 goto            $-1
00C7   2???           00495                 goto            KeypadandLCD
                      00496                 
00C8                  00497 goback
00C8   0008           00498                 return  
                      00499         
                      00500 
                      00501 ;*******************************************************************************************************
                            *******************************************
                      00502 ;                                                                 MAIN CODE
                      00503 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
                      00504 
00C9                  00505 AVOIDCOLUMN
                      00506     
00C9   1287           00507     bcf     Std1                ;motor will stop move fwd
                      00508     
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA   1307           00509     bcf     Std2                ; start white thing fwd
00CB   2???           00510     call    HalfS
00CC   1D06           00511     btfss   SwitchWhite
00CD   2???           00512     goto    $-1
                      00513    
00CE   1707           00514     bsf     Std2                   ; stop white thing fwd
                      00515     
00CF   2???           00516      call    HalfS
00D0   2???           00517     call    HalfS
00D1   2???           00518      call    HalfS
00D2   2???           00519     call    HalfS
                      00520     
00D3   2???           00521     call    PWMFWD          ;start arm forward
00D4   2???           00522     call    lcdLongDelay
00D5   2???           00523     call    lcdLongDelay
00D6   1D86           00524     btfss   SwitchArm
00D7   2???           00525     goto    $-1
                      00526     
00D8   2???           00527     call    PWMFWD          ;stop arm forward
                      00528     
                      00529 ;-------------------------------------------------
                      00530     
00D9   1687           00531     bsf     Std1                ;move forward until no more column in the way
                      00532     
00DA   2???           00533     call    OneS
00DB   2???           00534     call    OneS
00DC   2???           00535     call    OneS
00DD   2???           00536     call    OneS
00DE   2???           00537     call    OneS
00DF   2???           00538     call    OneS
                      00539 
                      00540     
00E0   2???           00541     call    Read1_US            ;checks to see if column present
                      00542     
00E1   300F           00543     movlw   0xF         ; if column is not present, it'll go back to original form
00E2   028F           00544     subwf   TMR1H
00E3   1C03           00545     btfss   STATUS,C            
00E4   2???           00546     goto    $-6
                      00547     
00E5   1287           00548     bcf     Std1
                      00549     
                      00550     
00E6   2???           00551     call    RETURNFROMCOLUMN
                      00552     
00E7   0008           00553     return 
                      00554     
00E8                  00555 RETURNFROMCOLUMN
                      00556     
00E8   2???           00557     call    PWMBACK         ;start arm BACK
00E9   2???           00558     call    HalfS
00EA   1D86           00559     btfss   SwitchArm
00EB   2???           00560     goto    $-1
                      00561     
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EC   2???           00562     call    PWMBACK         ;stop arm BACK
                      00563     
                      00564     
00ED   2???           00565     call    HalfS
00EE   2???           00566     call    HalfS
                      00567     
00EF   1387           00568     bcf     Std2Backwards
00F0   2???           00569     call    HalfS
00F1   1D06           00570     btfss   SwitchWhite
00F2   2???           00571     goto    $-1 
                      00572     
00F3   1787           00573     bsf     Std2Backwards
                      00574     
00F4   0008           00575     return
                      00576     
                      00577 ;FINDBINA
                      00578 ;    
                      00579 ;    call    FINDBIN
                      00580 ;    call    FINDBIN
                      00581 ;    
                      00582 ;    goto    EXIT
                      00583 ;    
                      00584 ;FINDBIN
                      00585 ;    
                      00586 ;    ;call    set_rtc_time          ; resets RTC clock to zero
                      00587 ;    
                      00588 ;    bsf            Std1        ;move fwd
                      00589 ;
                      00590 ;    call    Read2_US           ;checks to see if bin present
                      00591 ;    
                      00592 ;    movlw   0x10               ; if column is not present, it'll go back to original form
                      00593 ;    subwf   TMR1H
                      00594 ;    btfsc   STATUS,C
                      00595 ;    goto    FINDBIN            ;set LED to know found bin
                      00596     
00F5                  00597 READBIN
                      00598 
                      00599     ;call    HalfS
00F5   1287           00600     bcf     Std1
                      00601     
00F6   2???           00602     call    AddBin              ;adds bin to list
                      00603     
00F7   2???           00604     call    Dist_Decoder        ; stores the distance
                      00605     Put_Dist_In_Reg     distreg
00F8   ???? ???? 2???     M         lcall   Dist_Decoder
00FB   086A               M         movfw   cm
00FC   00ED               M         movwf   distreg
                      00606     Display_Dist        distreg
00FD   01D2               M         clrf    NumL
00FE   01D1               M         clrf    NumH
00FF   086D               M         movfw   distreg
                          M         ;movfw  TMR0
0100   00D2               M         movwf   NumL
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0101   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
0102   0855               M         movfw       Hund
0103   2???               M         call        DectoChar
0104   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
0105   0856               M         movfw       Tens
0106   2???               M         call        DectoChar
0107   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
0108   0857               M         movfw       Ones
0109   2???               M         call        DectoChar
010A   2???               M         call        WR_DATA
010B   2???           00607     call    StoreThisDistance
                      00608     
010C   2???           00609     call    Clear_Display    
                      00610     
010D   2???           00611     call    StoreBW1            ;reads & stores first IR data
                      00612     
                      00613 ;*****THRESHHOLD TEST ON IR 1************
                      00614 ;    nothing in front: 02056
                      00615 ;    black in front: 10000-41000
                      00616 ;    white in front: >60000
                      00617     
                      00618     ;READ 2 ALGORITHM IMPLEMENT HERE
                      00619     
010E   2???           00620     call    HalfS
010F   2???           00621     call    HalfS
0110   2???           00622     call    HalfS
0111   2???           00623     call    HalfS
                      00624     
0112   2???           00625     call    Clear_Display
                      00626     
0113   2???           00627     call    StoreBW2
                      00628     
0114   2???           00629     call    HalfS
0115   2???           00630     call    HalfS
                      00631     
0116   1406           00632     bsf     LED
                      00633     
0117   0008           00634     return
                      00635     
0118   2???           00636     goto    EXIT    
                      00637      
                      00638     
0119                  00639 TOTAL
                      00640     
0119   2???           00641     call    Read1_US            ;warms up us sensors that was weird
011A   2???           00642     call    Read2_US
                      00643     
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00644     ;call    DisplayBlackWhiteIR2       ;warms up IR
                      00645     ;call    DisplayBlackWhiteIR1       ;warms up IR
                      00646     
011B                  00647 TOTAL1
                      00648     
011B   1687           00649     bsf     Std1                ;moving
011C   01EF           00650     clrf    count_highs         ;reset the high value counter
                      00651     
011D                  00652 COLREADINGSTART
011D   2???           00653     call    Read1_US            ;checks to see if column present
                      00654     
                      00655 ;********THRESHOLD CALCULATION FOR COLUMN**************:
                      00656 ;   At around cm from col, reading: 02303
                      00657 ;       So, this will be the max value.
                      00658 ;       To be safe, will minus 02603 from the TMR variables.
                      00659 ;       This means, subtract 0x4 from TMR1H 
                      00660 ;       Value before at integration was 0x14, now trying 0x4
                      00661 ;       THE FOLLOWING CODE COUNTS 3 HIGHS
                      00662     
011E   300F           00663     movlw   0xF         ; if column present, it'll move forward
011F   028F           00664     subwf   TMR1H
0120   1803           00665     btfsc   STATUS,C        
0121   2???           00666     goto    $+7
0122   0AEF           00667     incf    count_highs
0123   3003           00668     movlw   MAX_HIGHS
0124   026F           00669     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
0125   1D03           00670     btfss   STATUS,Z                ; if result is zero, Z bit is set.
0126   2???           00671     goto    COLREADINGSTART
0127   2???           00672     call    AVOIDCOLUMN
                      00673     
0128   01EF           00674     clrf    count_highs         ;reset the high value counter
                      00675     
0129                  00676 BINREADINGSTART
                      00677     
0129   2???           00678     call    Read2_US            ;checks to see if bin present
                      00679     
                      00680 ;********THRESHOLD CALCULATION FOR BIN**************:
                      00681 ;   At around 6cm from white bin, reading: 01103
                      00682 ;       So, this will be the max value.
                      00683 ;       To be safe, will minus 01210 from the TMR variables.
                      00684 ;       This means, subtract 0x4 from TMR1H 
                      00685 ;       Value before at integration was 0x14, now trying 0x4
                      00686 ;       CODE COUNTS 3 HIGHS
                      00687 
                      00688     
012A   3008           00689     movlw   0x8         ; read the bin
012B   028F           00690     subwf   TMR1H
012C   1803           00691     btfsc   STATUS,C
012D   2???           00692     goto    $+8
012E   0AEF           00693     incf    count_highs
012F   2???           00694     call    lcdLongDelay
0130   3003           00695     movlw   MAX_HIGHS
0131   026F           00696     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0132   1D03           00697     btfss   STATUS,Z                ; if result is zero, Z bit is set.
0133   2???           00698     goto    BINREADINGSTART
0134   2???           00699     call    DELAYEDREAD
                      00700 
0135   2???           00701     call    BINREADINGSTART
                      00702 
                      00703    
                      00704     
                      00705     
0136                  00706 DELAYEDREAD
                      00707     ;checks to see when the bin sensor is past bin
0136   2???           00708     call    Read2_US            ;checks to see if bin present
0137   3006           00709     movlw   0x6         ; read the bin
0138   028F           00710     subwf   TMR1H
0139   1C03           00711     btfss   STATUS,C
013A   2???           00712     goto    DELAYEDREAD
013B   2???           00713     call    READBIN
013C   1006           00714     bcf     LED                 ; turn off LED After reading
                      00715     
013D                  00716 ENDTHIS   
                      00717     
013D   3001           00718     movlw       0X1                     ;checks if max of 7 bins has been reached
013E   0260           00719     subwf       NumOfBins1,W            
013F   1903           00720     btfsc       STATUS,Z
0140   2???           00721     goto    EXIT
0141   2???           00722     goto TOTAL1
                      00723     
0142                  00724 CHECKSWITCH
                      00725     
                      00726     ;call    Clear_Display
                      00727     ;Display DectoChar
                      00728     
0142   2???           00729     call    PWMFWD
0143   2???           00730     call    DELAY1
0144   2???           00731     call    HalfS
0145   1D86           00732     btfss   SwitchArm
0146   2???           00733     goto    $-1
                      00734    
0147   2???           00735     call    PWMFWD
                      00736  
0148   2???           00737     call    PWMBACK
0149   2???           00738     call    DELAY1
014A   2???           00739     call    HalfS
014B   1D86           00740     btfss   SwitchArm
014C   2???           00741     goto    $-1 
                      00742     
014D   2???           00743     call    PWMBACK
                      00744     
014E   2???           00745     goto    CHECKSWITCH  
                      00746 
                      00747 
014F                  00748 EXIT
                      00749     
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014F   2???           00750     call        Clear_Display
                      00751     ;display final interface for choosing stuff
                      00752     Display     FinalMessage
  0000                    M                 local   loop_
  0000                    M                 local   end_
0150   01B3               M                 clrf    Table_Counter
0151   0103               M                 clrw            
0152   0833               M loop_   movf    Table_Counter,W
0153   2???               M                 call    FinalMessage
0154   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0155   1903               M                 btfsc   STATUS,Z
0156   2???               M                         goto    end_
0157   2???               M                 call    WR_DATA
0158   0AB3               M                 incf    Table_Counter,F
0159   2???               M                 goto    loop_
015A                      M end_
015A   2???           00753     call        Switch_Lines
                      00754     Display     Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
015B   01B3               M                 clrf    Table_Counter
015C   0103               M                 clrw            
015D   0833               M loop_   movf    Table_Counter,W
015E   2???               M                 call    Welcome_Msg2
015F   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0160   1903               M                 btfsc   STATUS,Z
0161   2???               M                         goto    end_
0162   2???               M                 call    WR_DATA
0163   0AB3               M                 incf    Table_Counter,F
0164   2???               M                 goto    loop_
0165                      M end_
                      00755     
0165   1287           00756     bcf         Std1
                      00757     ;bsf                Std1Backwards
                      00758     
0166   2???           00759     goto        EXITDISPLAY
                      00760     
0167                  00761 MOVEFWDFORABIT
                      00762     
0167   1687           00763     bsf         Std1
                      00764     
0168   2???           00765     call        OneS
0169   2???           00766     call        OneS
016A   2???           00767         call    OneS
016B   2???           00768     call        OneS
016C   2???           00769         call    OneS
016D   2???           00770     call        OneS
                      00771     
016E   1287           00772     bcf         Std1
                      00773     
016F   2???           00774     goto        EXITDISPLAY
                      00775     
0170   1C86           00776 EXITDISPLAY     btfss           PORTB,1     ;Wait until data is available from the keypad
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0171   2???           00777                 goto            $-1 
                      00778 
0172   0E06           00779                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0173   390F           00780                 andlw           0x0F
0174   00B9           00781                 movwf           temp
                      00782                 Key     0x00, show_RTC
0175   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0176   390F               M          andlw          0x0F
0177   3A00               M          xorlw          0x00
0178   1903               M          btfsc          STATUS, Z
0179   2???               M          call           show_RTC
                      00783                 Key     0x02, Stickers1
017A   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
017B   390F               M          andlw          0x0F
017C   3A02               M          xorlw          0x02
017D   1903               M          btfsc          STATUS, Z
017E   2???               M          call           Stickers1
                      00784                 Rotation        0x03
017F   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0180   390F               M          andlw          0x0F
0181   3A03               M          xorlw          0x03
0182   1903               M          btfsc          STATUS, Z
0183   2???               M          call           ShiftLeft
                      00785                 Key     0x04, ShowBins
0184   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0185   390F               M          andlw          0x0F
0186   3A04               M          xorlw          0x04
0187   1903               M          btfsc          STATUS, Z
0188   2???               M          call           ShowBins
                      00786                 Key     0x05, TotalDistance
0189   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
018A   390F               M          andlw          0x0F
018B   3A05               M          xorlw          0x05
018C   1903               M          btfsc          STATUS, Z
018D   2???               M          call           TotalDistance
                      00787                 Key     0x06, Locations
018E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
018F   390F               M          andlw          0x0F
0190   3A06               M          xorlw          0x06
0191   1903               M          btfsc          STATUS, Z
0192   2???               M          call           Locations
                      00788                 Key     0x07, AddBin
0193   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0194   390F               M          andlw          0x0F
0195   3A07               M          xorlw          0x07
0196   1903               M          btfsc          STATUS, Z
0197   2???               M          call           AddBin
0198   1886           00789                 btfsc           PORTB,1     ;Wait until key is released
0199   2???           00790                 goto            $-1
019A   2???           00791                 goto            EXITDISPLAY
                      00792     
                      00793     ;show location for every bin
                      00794     
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00795     
                      00796     ;show number of bins
                      00797     
                      00798     
                      00799     ;show dist travelled
                      00800     
                      00801     
                      00802     ;show time elapsed
                      00803     
                      00804     
                      00805     
019B   2???           00806     goto    EXIT
                      00807     
019C                  00808 MoveBackwards
                      00809     
019C   2???           00810     call    PWMSTOP
                      00811     
                      00812         
                      00813 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00814 
                      00815 ;*********************************************************
                      00816 ; A to D conversion with LCD display for IR sensor
                      00817 ;*********************************************************
                      00818         
                      00819 ;******************************************
                      00820 ;       Sticker Print Modules
                      00821 ;*****************************************
                      00822         
019D                  00823 BWScanModule1
                      00824 
019D   151F           00825         bsf     ADCON0,2                ;start conversion and wait for it to complete
019E   191F           00826         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
019F   2???           00827         goto    $-1
                      00828         
01A0   081E           00829         movf    ADRESH, W
01A1   00D1           00830         movwf   NumH
01A2   081E           00831         movf    ADRESL, W
01A3   00D2           00832         movwf   NumL
01A4   2???           00833         call    Clear_Display
01A5   2???           00834         call    bin16_BCD
                      00835         PrintNumber     TenK
                          M         ;movf       number ,W
01A6   0853               M         movfw       TenK
01A7   2???               M         call        DectoChar
01A8   2???               M         call        WR_DATA
                      00836         PrintNumber     Thou
                          M         ;movf       number ,W
01A9   0854               M         movfw       Thou
01AA   2???               M         call        DectoChar
01AB   2???               M         call        WR_DATA
                      00837         PrintNumber     Hund
                          M         ;movf       number ,W
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AC   0855               M         movfw       Hund
01AD   2???               M         call        DectoChar
01AE   2???               M         call        WR_DATA
                      00838         PrintNumber     Tens
                          M         ;movf       number ,W
01AF   0856               M         movfw       Tens
01B0   2???               M         call        DectoChar
01B1   2???               M         call        WR_DATA
                      00839         PrintNumber     Ones
                          M         ;movf       number ,W
01B2   0857               M         movfw       Ones
01B3   2???               M         call        DectoChar
01B4   2???               M         call        WR_DATA
01B5   0008           00840         return
01B6                  00841 BWStoreModule1
01B6   1383           00842         BCF     STATUS, IRP
01B7   3042           00843         movlw   0x42
01B8   0084           00844         movwf   FSR
01B9   3000           00845         movlw   0X0
01BA   0360           00846         decf    NumOfBins1,W            ;want bin number to be decreased when back checks it
01BB   0784           00847         addwf   FSR,F
01BC   3052           00848         movlw   0X52                    ; roughly 21000
01BD   02D1           00849         subwf   NumH
01BE   3000           00850         movlw   0x0
01BF   1803           00851         btfsc   STATUS, C
01C0   3001           00852         movlw   0x1
01C1   0080           00853         movwf   INDF
01C2   0008           00854         return  
                      00855         
01C3                  00856 BWScanModule2
                      00857 
01C3   151F           00858         bsf     ADCON0,2                ;start conversion and wait for it to complete
01C4   191F           00859         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01C5   2???           00860         goto    $-1
                      00861         
01C6   081E           00862         movf    ADRESH, W
01C7   00D1           00863         movwf   NumH
01C8   081E           00864         movf    ADRESL, W
01C9   00D2           00865         movwf   NumL
01CA   2???           00866         call    Clear_Display
01CB   2???           00867         call    bin16_BCD
                      00868         PrintNumber     TenK
                          M         ;movf       number ,W
01CC   0853               M         movfw       TenK
01CD   2???               M         call        DectoChar
01CE   2???               M         call        WR_DATA
                      00869         PrintNumber     Thou
                          M         ;movf       number ,W
01CF   0854               M         movfw       Thou
01D0   2???               M         call        DectoChar
01D1   2???               M         call        WR_DATA
                      00870         PrintNumber     Hund
                          M         ;movf       number ,W
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D2   0855               M         movfw       Hund
01D3   2???               M         call        DectoChar
01D4   2???               M         call        WR_DATA
                      00871         PrintNumber     Tens
                          M         ;movf       number ,W
01D5   0856               M         movfw       Tens
01D6   2???               M         call        DectoChar
01D7   2???               M         call        WR_DATA
                      00872         PrintNumber     Ones
                          M         ;movf       number ,W
01D8   0857               M         movfw       Ones
01D9   2???               M         call        DectoChar
01DA   2???               M         call        WR_DATA
01DB   0008           00873         return
01DC                  00874 BWStoreModule2
01DC   1383           00875         BCF     STATUS, IRP
01DD   3049           00876         movlw   0x49                    ;number 49 to try to get registers for back of bin
01DE   0084           00877         movwf   FSR
01DF   3000           00878         movlw   0X0
01E0   0360           00879         decf    NumOfBins1,W
01E1   0784           00880         addwf   FSR,F
01E2   3010           00881         movlw   0X10
01E3   02D1           00882         subwf   NumH
01E4   3000           00883         movlw   0x0
01E5   1803           00884         btfsc   STATUS, C
01E6   3001           00885         movlw   0x1
01E7   0080           00886         movwf   INDF
01E8   0008           00887         return  
                      00888         
                      00889 ;***************************************************
                      00890 ;       US Sensor Modules                           [TESTED]
                      00891 ;***************************************************
                      00892         
01E9                  00893 Read1_US                    
                      00894          
                      00895         ;call           Read1_US1 
                      00896          
                      00897         ReadUltrasonic  UST1,US1E1
01E9   018F               M     clrf        TMR1H
01EA   018E               M     clrf        TMR1L
                          M 
01EB   1008               M     bcf PORTD,   0                      ;make sure trigger is clear
01EC   2???               M     call lcdLongDelay
                          M 
01ED   1408               M     bsf PORTD,   0              ;trigger high, bottom sensor
01EE   2???               M     call lcdLongDelay           ;10us delay
01EF   1008               M     bcf PORTD,   0              ;trigger low
                          M 
01F0   1D05               M     btfss       PORTA, 2                ;wait for echo to go high
01F1   2???               M     goto        $-1
01F2   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
01F3   1905               M     btfsc       PORTA, 2                ;wait for echo to go low
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F4   2???               M     goto        $-1
                          M 
01F5   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00898         
01F6   2???           00899         call            Clear_Display
                      00900         
01F7   080F           00901         movf            TMR1H, W
01F8   00D1           00902         movwf           NumH
01F9   080E           00903         movf            TMR1L, W
01FA   00D2           00904         movwf           NumL
                      00905         
01FB   2???           00906         call            bin16_BCD
                      00907         
                      00908         PrintNumber     TenK
                          M         ;movf       number ,W
01FC   0853               M         movfw       TenK
01FD   2???               M         call        DectoChar
01FE   2???               M         call        WR_DATA
                      00909         PrintNumber     Thou
                          M         ;movf       number ,W
01FF   0854               M         movfw       Thou
0200   2???               M         call        DectoChar
0201   2???               M         call        WR_DATA
                      00910 ;       PrintNumber     Hund
                      00911 ;       PrintNumber     Tens
                      00912 ;       PrintNumber     Ones
                      00913         
0202   2???           00914         call            Clear_Display
0203   0008           00915         return
                      00916 
0204                  00917 Read2_US                    
                      00918          
                      00919         ;call           Read2_US1 
                      00920         
                      00921         ReadUltrasonic  UST2,US1E2
0204   018F               M     clrf        TMR1H
0205   018E               M     clrf        TMR1L
                          M 
0206   1088               M     bcf PORTD,   1                      ;make sure trigger is clear
0207   2???               M     call lcdLongDelay
                          M 
0208   1488               M     bsf PORTD,   1              ;trigger high, bottom sensor
0209   2???               M     call lcdLongDelay           ;10us delay
020A   1088               M     bcf PORTD,   1              ;trigger low
                          M 
020B   1D85               M     btfss       PORTA, 3                ;wait for echo to go high
020C   2???               M     goto        $-1
020D   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
020E   1985               M     btfsc       PORTA, 3                ;wait for echo to go low
020F   2???               M     goto        $-1
                          M 
0210   1010               M     bcf T1CON,TMR1ON    ;turn off timer
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00922          
0211   2???           00923         call            Clear_Display
                      00924         
0212   080F           00925         movf            TMR1H, W
0213   00D1           00926         movwf           NumH
0214   080E           00927         movf            TMR1L, W
0215   00D2           00928         movwf           NumL
                      00929         
0216   2???           00930         call            bin16_BCD
                      00931         
                      00932         PrintNumber     TenK
                          M         ;movf       number ,W
0217   0853               M         movfw       TenK
0218   2???               M         call        DectoChar
0219   2???               M         call        WR_DATA
                      00933         PrintNumber     Thou
                          M         ;movf       number ,W
021A   0854               M         movfw       Thou
021B   2???               M         call        DectoChar
021C   2???               M         call        WR_DATA
                      00934 ;       PrintNumber     Hund
                      00935 ;       PrintNumber     Tens
                      00936 ;       PrintNumber     Ones
                      00937         
                      00938         ;call           HalfS
                      00939         
021D   2???           00940         call            Clear_Display
021E   0008           00941         return
                      00942                 
                      00943 ;*******************************************************
                      00944 ; Dist_Decoder
                      00945 ;   input:  Timer0, cm, mm
                      00946 ;   output: Bin_Dist_reg
                      00947 ;   Desc:   Converts the count in the rotary encoder
                      00948 ;           into physical distance
                      00949 ;*******************************************************
021F                  00950 Dist_Decoder
                      00951         ; Initalize all registers
021F   01EA           00952         clrf    cm              ; Clear regs
0220   01EB           00953         clrf    mm
0221   0801           00954         movfw   TMR0            ; poll encoder for current state
0222   00B9           00955         movwf   temp
                      00956         ; Check if its already zero
0223   0839           00957         movfw   temp
0224   3C00           00958         sublw   D'0'
0225   1903           00959         btfsc   STATUS, Z
0226   0008           00960         return
                      00961         
0227                  00962 Decode_loop                     ; Assume each step is 1.01 cm
                      00963         ; Perform decode
                      00964         ADDL    cm, cm, D'2'
0227   3002               M     MOVLW  D'2'         ; move literal into working register
0228   076A               M     ADDWF   cm,W        ; W <- literal + reg
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0229   00EA               M     MOVWF   cm          ; Destination <- literal + reg
                      00965         ADDL    mm, mm, D'0'
022A   3000               M     MOVLW  D'0'         ; move literal into working register
022B   076B               M     ADDWF   mm,W        ; W <- literal + reg
022C   00EB               M     MOVWF   mm          ; Destination <- literal + reg
022D   03B9           00966         decf    temp
                      00967 
                      00968         ; Test if mm has overflowed! (mm >= 10)
022E   300A           00969         movlw   D'10'           
022F   026B           00970         subwf   mm, w           ; mm - 10 --> w (w = f - w, when d = 0) 
0230   1803           00971         btfsc   STATUS, C       ; Y = mm, w = 10, Y-w
0231   2???           00972         call    mm_overflow     ; Run overflow routine if it did overflow
                      00973 
0232                  00974 Decode_check_done       
                      00975         ; Test if done decoding
0232   0839           00976         movfw   temp
0233   3C00           00977         sublw   D'0'
                      00978         ;movf   temp, F
0234   1D03           00979         btfss   STATUS, Z       
0235   2???           00980         goto    Decode_loop
                      00981 ;       btfss   STATUS, C
                      00982 ;       call    Decode_loop
                      00983         ;Display            StandBy1
                      00984         ;goto       Dist_test
0236   0008           00985         return
                      00986         
0237                  00987 mm_overflow
0237   0AEA           00988         incf    cm              ; cm + 1 --> cm
0238   300A           00989         movlw   D'10'           ; 10 --> w
0239   02EB           00990         subwf   mm, f           ; mm - 10 --> mm (f = f - w, when d = 1) 
023A   2???           00991         goto    Decode_check_done       ; Continue decoding
                      00992         
023B                  00993 StoreThisDistance
023B   1383           00994         BCF     STATUS, IRP
023C   303B           00995         movlw   0x3B                    ;number 56 to try to get location registers in cblock
023D   0084           00996         movwf   FSR
023E   3000           00997         movlw   0X0
023F   0360           00998         decf    NumOfBins1,W
0240   0784           00999         addwf   FSR,F
                      01000         Put_Dist_In_Reg W               ;move the distance into the actual register
0241   ???? ???? 2???     M         lcall   Dist_Decoder
0244   086A               M         movfw   cm
0245   0080               M         movwf   W
0246   0080           01001         movwf   INDF
                      01002         
0247   0008           01003         return
                      01004 ;*********************************************
                      01005 ; Keypad Modules
                      01006 ;*******************************************
                      01007          
                      01008 
0248                  01009 ShiftLeft
0248   3018           01010         movlw           b'00011000'             ;Move to the left
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0249   2???           01011         call            WR_INS
024A   0008           01012         return
                      01013 
024B   2???           01014         goto    KeypadandLCD
                      01015         
024C                  01016 RTCDisplay
024C   2???           01017         call    show_RTC
                      01018         
024D   1886           01019         btfsc           PORTB,1     ;Wait until data is available from the keypad
024E   0008           01020         return
024F   1886           01021         btfsc           PORTB,1     ;Wait until data is available from the keypad
0250   0008           01022         return
0251   1886           01023         btfsc           PORTB,1     ;Wait until data is available from the keypad
0252   0008           01024         return
0253   1886           01025         btfsc           PORTB,1     ;Wait until data is available from the keypad
0254   0008           01026         return
0255   2???           01027         goto        RTCDisplay
                      01028         
0256                  01029 StoreBW1
0256   1283           01030         bcf     STATUS,RP0
0257   3005           01031         movlw   b'00000101'             
0258   009F           01032         movwf   ADCON0                  ;choose RA0
                      01033         
0259   2???           01034         call    BWScanModule1   
025A   2???           01035         call    BWStoreModule1
                      01036         
025B   0008           01037         return                          ; why was there not a return here before?
                      01038         
025C                  01039 StoreBW2
025C   1283           01040         bcf     STATUS,RP0
025D   3015           01041         movlw   b'00010101'             
025E   009F           01042         movwf   ADCON0                  ;choose RA1
                      01043         
025F   2???           01044         call    BWScanModule2
0260   2???           01045         call    BWStoreModule2
                      01046         
0261   0008           01047         return
                      01048         
0262                  01049 AddBin
0262   2???           01050         Call Clear_Display
0263   0AE0           01051         incf    NumOfBins1,F
                      01052         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
0264   0860               M         movfw       NumOfBins1
0265   2???               M         call        DectoChar
0266   2???               M         call        WR_DATA
0267   3007           01053         movlw   0X7                     ;checks if max of 7 bins has been reached
0268   0260           01054         subwf   NumOfBins1,W            
0269   1903           01055         btfsc   STATUS,Z
026A   2???           01056         goto    EXIT
026B   0008           01057         return
                      01058         
026C                  01059 ShowBins
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01060         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
026C   0860               M         movfw       NumOfBins1
026D   2???               M         call        DectoChar
026E   2???               M         call        WR_DATA
                      01061         
026F   0008           01062         return
                      01063         
0270                  01064 Stickers1                   ;TESTED
0270   2???           01065         call            Clear_Display
0271   3000           01066         movlw           0X0
0272   00DF           01067         movwf           counter
0273   1383           01068         BCF             STATUS, IRP
0274   3041           01069         movlw           0x41
0275   0084           01070         movwf           FSR
0276   0860           01071         movfw           NumOfBins1
0277   00DE           01072         movwf           countdown
                      01073         Display         FrontStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
0278   01B3               M                 clrf    Table_Counter
0279   0103               M                 clrw            
027A   0833               M loop_   movf    Table_Counter,W
027B   2???               M                 call    FrontStickers
027C   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
027D   1903               M                 btfsc   STATUS,Z
027E   2???               M                         goto    end_
027F   2???               M                 call    WR_DATA
0280   0AB3               M                 incf    Table_Counter,F
0281   2???               M                 goto    loop_
0282                      M end_
0282                  01074 FrontLoop1      
0282   0A84           01075         INCF            FSR,1
0283   0ADF           01076         incf            counter
                      01077         PrintNumber     counter
                          M         ;movf       number ,W
0284   085F               M         movfw       counter
0285   2???               M         call        DectoChar
0286   2???               M         call        WR_DATA
                      01078         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
0287   01B3               M                 clrf    Table_Counter
0288   0103               M                 clrw            
0289   0833               M loop_   movf    Table_Counter,W
028A   2???               M                 call    Colon
028B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
028C   1903               M                 btfsc   STATUS,Z
028D   2???               M                         goto    end_
028E   2???               M                 call    WR_DATA
028F   0AB3               M                 incf    Table_Counter,F
0290   2???               M                 goto    loop_
0291                      M end_
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0291   0800           01079         movfw           INDF
                      01080         PrintCol        W
0292   0800               M         movfw       W
0293   2???               M         call        StickerColours
0294   2???               M         call        WR_DATA
                      01081         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
0295   01B3               M                 clrf    Table_Counter
0296   0103               M                 clrw            
0297   0833               M loop_   movf    Table_Counter,W
0298   2???               M                 call    Spacee
0299   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
029A   1903               M                 btfsc   STATUS,Z
029B   2???               M                         goto    end_
029C   2???               M                 call    WR_DATA
029D   0AB3               M                 incf    Table_Counter,F
029E   2???               M                 goto    loop_
029F                      M end_
029F   0BDE           01082         decfsz          countdown,F
02A0   2???           01083         goto            FrontLoop1
                      01084         
02A1   2???           01085         call            Switch_Lines
                      01086         
02A2                  01087 Stickers2                       ;TESTED
                      01088         
02A2   3000           01089         movlw           0X0
02A3   00DF           01090         movwf           counter
02A4   1383           01091         BCF             STATUS, IRP
02A5   3048           01092         movlw           0x48
02A6   0084           01093         movwf           FSR
02A7   0860           01094         movfw           NumOfBins1
02A8   00DE           01095         movwf           countdown
                      01096         Display         BackStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02A9   01B3               M                 clrf    Table_Counter
02AA   0103               M                 clrw            
02AB   0833               M loop_   movf    Table_Counter,W
02AC   2???               M                 call    BackStickers
02AD   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02AE   1903               M                 btfsc   STATUS,Z
02AF   2???               M                         goto    end_
02B0   2???               M                 call    WR_DATA
02B1   0AB3               M                 incf    Table_Counter,F
02B2   2???               M                 goto    loop_
02B3                      M end_
02B3                  01097 FrontLoop2
02B3   0A84           01098         INCF            FSR,1
02B4   0ADF           01099         incf            counter
                      01100         PrintNumber     counter
                          M         ;movf       number ,W
02B5   085F               M         movfw       counter
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B6   2???               M         call        DectoChar
02B7   2???               M         call        WR_DATA
                      01101         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02B8   01B3               M                 clrf    Table_Counter
02B9   0103               M                 clrw            
02BA   0833               M loop_   movf    Table_Counter,W
02BB   2???               M                 call    Colon
02BC   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02BD   1903               M                 btfsc   STATUS,Z
02BE   2???               M                         goto    end_
02BF   2???               M                 call    WR_DATA
02C0   0AB3               M                 incf    Table_Counter,F
02C1   2???               M                 goto    loop_
02C2                      M end_
02C2   0800           01102         movfw           INDF
                      01103         PrintCol        W
02C3   0800               M         movfw       W
02C4   2???               M         call        StickerColours
02C5   2???               M         call        WR_DATA
                      01104         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02C6   01B3               M                 clrf    Table_Counter
02C7   0103               M                 clrw            
02C8   0833               M loop_   movf    Table_Counter,W
02C9   2???               M                 call    Spacee
02CA   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02CB   1903               M                 btfsc   STATUS,Z
02CC   2???               M                         goto    end_
02CD   2???               M                 call    WR_DATA
02CE   0AB3               M                 incf    Table_Counter,F
02CF   2???               M                 goto    loop_
02D0                      M end_
02D0   0BDE           01105         decfsz          countdown,F
02D1   2???           01106         goto            FrontLoop2
                      01107         
02D2   0008           01108         return
                      01109         
02D3                  01110 Locations                       ;TESTED
02D3   2???           01111         call            Clear_Display
02D4   3000           01112         movlw           0X0
02D5   00DF           01113         movwf           counter
02D6   1383           01114         BCF             STATUS, IRP
02D7   303A           01115         movlw           0x3A
02D8   0084           01116         movwf           FSR
02D9   0860           01117         movfw           NumOfBins1
02DA   00DE           01118         movwf           countdown
                      01119         Display         Distances
  0000                    M                 local   loop_
  0000                    M                 local   end_
02DB   01B3               M                 clrf    Table_Counter
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02DC   0103               M                 clrw            
02DD   0833               M loop_   movf    Table_Counter,W
02DE   2???               M                 call    Distances
02DF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02E0   1903               M                 btfsc   STATUS,Z
02E1   2???               M                         goto    end_
02E2   2???               M                 call    WR_DATA
02E3   0AB3               M                 incf    Table_Counter,F
02E4   2???               M                 goto    loop_
02E5                      M end_
02E5   2???           01120         call            Switch_Lines
02E6                  01121 FrontLoop       
02E6   0A84           01122         INCF            FSR,1
02E7   0ADF           01123         incf            counter
                      01124         PrintNumber     counter
                          M         ;movf       number ,W
02E8   085F               M         movfw       counter
02E9   2???               M         call        DectoChar
02EA   2???               M         call        WR_DATA
                      01125         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02EB   01B3               M                 clrf    Table_Counter
02EC   0103               M                 clrw            
02ED   0833               M loop_   movf    Table_Counter,W
02EE   2???               M                 call    Colon
02EF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02F0   1903               M                 btfsc   STATUS,Z
02F1   2???               M                         goto    end_
02F2   2???               M                 call    WR_DATA
02F3   0AB3               M                 incf    Table_Counter,F
02F4   2???               M                 goto    loop_
02F5                      M end_
02F5   0800           01126         movfw           INDF
                      01127         Display_Dist    W
02F6   01D2               M         clrf    NumL
02F7   01D1               M         clrf    NumH
02F8   0800               M         movfw   W
                          M         ;movfw  TMR0
02F9   00D2               M         movwf   NumL
02FA   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
02FB   0855               M         movfw       Hund
02FC   2???               M         call        DectoChar
02FD   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
02FE   0856               M         movfw       Tens
02FF   2???               M         call        DectoChar
0300   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0301   0857               M         movfw       Ones
0302   2???               M         call        DectoChar
0303   2???               M         call        WR_DATA
                      01128         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
0304   01B3               M                 clrf    Table_Counter
0305   0103               M                 clrw            
0306   0833               M loop_   movf    Table_Counter,W
0307   2???               M                 call    Spacee
0308   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0309   1903               M                 btfsc   STATUS,Z
030A   2???               M                         goto    end_
030B   2???               M                 call    WR_DATA
030C   0AB3               M                 incf    Table_Counter,F
030D   2???               M                 goto    loop_
030E                      M end_
030E   0BDE           01129         decfsz          countdown,F
030F   2???           01130         goto            FrontLoop
                      01131         
0310   0008           01132         return
                      01133         
0311                  01134 TotalDistance
                      01135         
0311   2???           01136     call    Dist_Decoder
                      01137     Put_Dist_In_Reg     distreg
0312   ???? ???? 2???     M         lcall   Dist_Decoder
0315   086A               M         movfw   cm
0316   00ED               M         movwf   distreg
                      01138     Display_Dist        distreg
0317   01D2               M         clrf    NumL
0318   01D1               M         clrf    NumH
0319   086D               M         movfw   distreg
                          M         ;movfw  TMR0
031A   00D2               M         movwf   NumL
031B   2???               M         call    bin16_BCD
                          M         PrintNumber     Hund
                          M         ;movf       number ,W
031C   0855               M         movfw       Hund
031D   2???               M         call        DectoChar
031E   2???               M         call        WR_DATA
                          M         PrintNumber     Tens
                          M         ;movf       number ,W
031F   0856               M         movfw       Tens
0320   2???               M         call        DectoChar
0321   2???               M         call        WR_DATA
                          M         PrintNumber     Ones
                          M         ;movf       number ,W
0322   0857               M         movfw       Ones
0323   2???               M         call        DectoChar
0324   2???               M         call        WR_DATA
                      01139    
0325   0008           01140     return
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01141 
                      01142                 
0326                  01143 LEDControlON
                      01144         
0326   1862           01145         btfsc       LEDcounter0,0
0327   2???           01146         goto        $+4
0328   1406           01147         bsf         LED
0329   1462           01148         bsf         LEDcounter0,0
032A   0008           01149         return
                      01150         
                      01151         
032B   1006           01152         bcf         LED
032C   1062           01153         bcf         LEDcounter0,0
032D   0008           01154         return
                      01155         
                      01156         
032E                  01157 DisplayBlackWhiteIR1
                      01158         
032E   30C5           01159         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
032F   009F           01160         movwf   ADCON0  
                      01161                 
0330   2???           01162         call            BWScanModule1   
                      01163 ;       movwf           Front1
                      01164 ;       PrintCol        Front1
                      01165 
0331   0008           01166         return
                      01167         
                      01168         
0332                  01169 DisplayBlackWhiteIR2
                      01170         
0332   30CD           01171         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra as the reader pin
0333   009F           01172         movwf   ADCON0  
                      01173         
0334   2???           01174         call            BWScanModule1   
                      01175 ;       movwf           Front1
                      01176 ;       PrintCol        Front1
                      01177         
0335   0008           01178         return
                      01179 
                      01180         
0336                  01181 DisplayUSSensor1
                      01182         
0336   2???           01183         call            Read1_US
                      01184 ;       call            ClrLCD
                      01185 ;       movwf           isBinThere                  ;sets the bin bit 1 or 0
                      01186 ;       call            HalfS
                      01187 ;       call            HalfS                       ;see if half second removes feedback
                      01188         
                      01189 
                      01190         
0337   2???           01191         goto            DisplayUSSensor1
                      01192         
0338                  01193 DisplayUSSensor2
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01194         
0338   2???           01195         call            Read2_US
                      01196         ;call           ClrLCD
                      01197         ;movwf          isColumnThere               ;sets the bin bit 1 or 0
                      01198         
0339   2???           01199         goto            DisplayUSSensor2
                      01200         
033A                  01201 StdRotation1
                      01202         
033A   1863           01203         btfsc       LEDcounter1,0
033B   2???           01204         goto        $+4
033C   1287           01205         bcf             Std1
033D   1463           01206         bsf         LEDcounter1,0
033E   0008           01207         return
                      01208         
033F   1687           01209         bsf             Std1
0340   1063           01210         bcf         LEDcounter1,0
0341   0008           01211         return
                      01212         
0342                  01213 StdRotation2
                      01214         
                      01215 ;       bcf     Std2
                      01216 ;       
0342   1864           01217         btfsc       LEDcounter2,0
0343   2???           01218         goto        $+4
                      01219         
0344   1307           01220         bcf             Std2
0345   1464           01221         bsf         LEDcounter2,0
0346   0008           01222         return
                      01223         
0347   1D06           01224         btfss       SwitchWhite
0348   1707           01225         bsf         Std2
                      01226         
0349   1707           01227         bsf             Std2
034A   1064           01228         bcf         LEDcounter2,0
                      01229 ;testingrotationfwd     
                      01230 ;       
                      01231 ;       btfsc   Switch
                      01232 ;       bsf     Std2
                      01233 ;       
                      01234 ;       goto    testingrotationfwd
                      01235         
034B   0008           01236         return
                      01237                 
034C                  01238 StdRotation1Backwards
                      01239         
034C   1866           01240         btfsc       LEDcounter4,0
034D   2???           01241         goto        $+4
034E   1407           01242         bsf             Std1Backwards
034F   1466           01243         bsf         LEDcounter4,0
0350   0008           01244         return
                      01245         
0351   1007           01246         bcf             Std1Backwards
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0352   1066           01247         bcf         LEDcounter4,0
0353   0008           01248         return
                      01249         
0354                  01250 StdRotation2Backwards
                      01251         
                      01252 ;       bcf         Std2Backwards
                      01253         
0354   1867           01254         btfsc       LEDcounter5,0
0355   2???           01255         goto        $+4
0356   1787           01256         bsf             Std2Backwards
0357   1467           01257         bsf         LEDcounter5,0
0358   0008           01258         return
                      01259         
0359   1D06           01260         btfss       SwitchWhite
035A   1707           01261         bsf         Std2
                      01262         
035B   1387           01263         bcf             Std2Backwards
035C   1067           01264         bcf         LEDcounter5,0
035D   0008           01265         return
                      01266         
                      01267 ;testingrotationback    
                      01268 ;       
                      01269 ;       
                      01270 ;       call    Clear_Display
                      01271 ;       btfsc   Switch
                      01272 ;       bsf     Std2Backwards
                      01273 ;       
                      01274 ;       goto    testingrotationback
                      01275         
035E                  01276 PWMFWD  
                      01277         
                      01278     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01279     
                      01280     ;save   pr2 value so that you can zero it after
                      01281     
035E   1868           01282     btfsc           LEDcounter7,0
035F   2???           01283     goto            $+4
0360   0197           01284     clrf            CCP1CON
0361   1468           01285     bsf             LEDcounter7,0
0362   0008           01286     return
                      01287     
0363   1683 1303      01288     BANKSEL TRISC
0365   1107           01289     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01290     
0366   0817           01291     MOVF     CCP1CON,W          ;set CCP1 as PWM
0367   39F0           01292     ANDLW    0xF0
0368   380C           01293     IORLW    0x0C
0369   0097           01294     MOVWF    CCP1CON
                      01295 
036A   0812           01296     movfw   PR2
036B   00D0           01297     movwf   pr2temp
                      01298     
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01299     ;11000011
036C   30C3           01300     MOVLW    b'11000011'        ;set highest PWM value
036D   1683 1303      01301     BANKSEL  PR2                
036F   0092           01302     MOVWF    PR2                
0370   1283 1303      01303     BANKSEL  TMR2               
                      01304     
0372   1492           01305     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01306     
0373   0195           01307     CLRF    CCPR1L              ;set PWM to zero
                      01308     
0374   1712           01309     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0375   1692           01310     BSF     T2CON, TOUTPS2
0376   1612           01311     BSF     T2CON, TOUTPS1
0377   1592           01312     BSF     T2CON, TOUTPS0
                      01313     
                      01314     ; SET PWM duty cycle
                      01315     ;01001110
0378   1697           01316     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
0379   1617           01317     BSF     CCP1CON, 4
                      01318     MOVLF   B'01100000', CCPR1L                 ; previous was 01101
037A   3060               M     MOVLW  B'01100000'  ; move literal into working register
037B   0095               M     MOVWF   CCPR1L      ; move working register into reg
037C   1597           01319     BSF     CCP1CON, 3
037D   1517           01320     BSF     CCP1CON, 2
                      01321     
037E   1512           01322     BSF     T2CON, TMR2ON       ;and start the timer running
                      01323  
037F   1068           01324     bcf             LEDcounter7,0
                      01325     
0380   0008           01326     return
                      01327     
0381                  01328 PWMBACK
                      01329     
                      01330     ;************ SECOND PWM - Positive one ******************************
                      01331     
0381   1869           01332     btfsc           LEDcounter8,0
0382   2???           01333     goto            $+4
0383   019D           01334     clrf            CCP2CON
                      01335     ;bcf                    PORTC,1
0384   1469           01336     bsf             LEDcounter8,0
0385   0008           01337     return
                      01338     
                      01339  
                      01340     
0386   1683 1303      01341     BANKSEL TRISC
0388   1087           01342     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01343     
0389   081D           01344     MOVF     CCP2CON,W          ;set CCP2 as PWM
038A   39F0           01345     ANDLW    0xF0
038B   380C           01346     IORLW    0x0C
038C   009D           01347     MOVWF    CCP2CON
                      01348     
                      01349     ;11000011
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

038D   30C3           01350     MOVLW    b'11000011'        ;set highest PWM value
038E   1683 1303      01351     BANKSEL  PR2                
0390   0092           01352     MOVWF    PR2                
0391   1283 1303      01353     BANKSEL  TMR2               
                      01354     
0393   1492           01355     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01356     
0394   019B           01357     CLRF    CCPR2L              ;set PWM to zero
                      01358     
0395   1712           01359     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0396   1692           01360     BSF     T2CON, TOUTPS2
0397   1612           01361     BSF     T2CON, TOUTPS1
0398   1592           01362     BSF     T2CON, TOUTPS0
                      01363     
                      01364     ; SET PWM duty cycle
                      01365     ;01001110
0399   169D           01366     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
039A   161D           01367     BSF     CCP2CON, 4
039B   3060           01368     MOVLW   B'01100000'                         ; good speed for moving the arm
039C   009B           01369     MOVWF   CCPR2L      
039D   159D           01370     BSF     CCP2CON, 3
039E   151D           01371     BSF     CCP2CON, 2
                      01372     
039F   1512           01373     BSF     T2CON, TMR2ON       ;and start the timer running
03A0   1283           01374     BCF     STATUS,RP0
                      01375     
                      01376     ;bsf                    PORTC,1
                      01377     
03A1   1069           01378     bcf             LEDcounter8,0
                      01379     
03A2   0008           01380     return
                      01381     
03A3                  01382 PWMSTOP
                      01383     
03A3   0197           01384     clrf   CCP1CON
03A4   019D           01385     clrf   CCP2CON
03A5   0850           01386     movfw   pr2temp
03A6   0092           01387     movwf   PR2
                      01388     
03A7   0008           01389     return
                      01390         
                      01391         
                      01392 ;***************************************
                      01393 ; LCD control
                      01394 ;***************************************
03A8                  01395 Switch_Lines
03A8   30C0           01396                 movlw   B'11000000'
03A9   2???           01397                 call    WR_INS
03AA   0008           01398                 return
                      01399 
03AB                  01400 Clear_Display
03AB   3001           01401                 movlw   B'00000001'
03AC   2???           01402                 call    WR_INS
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03AD   0008           01403                 return
                      01404 
                      01405 ;***************************************
                      01406 ; Delay 0.5s
                      01407 ;***************************************
03AE                  01408 HalfS   
  0000                01409         local   HalfS_0
03AE   3088           01410       movlw 0x88
03AF   00B0           01411       movwf COUNTH
03B0   30BD           01412       movlw 0xBD
03B1   00B1           01413       movwf COUNTM
03B2   3003           01414       movlw 0x03
03B3   00B2           01415       movwf COUNTL
                      01416 
03B4                  01417 HalfS_0
03B4   0BB0           01418       decfsz COUNTH, f
03B5   2???           01419       goto   $+2
03B6   0BB1           01420       decfsz COUNTM, f
03B7   2???           01421       goto   $+2
03B8   0BB2           01422       decfsz COUNTL, f
03B9   2???           01423       goto   HalfS_0
                      01424 
03BA   2???           01425       goto $+1
03BB   0000           01426       nop
03BC   0000           01427       nop
03BD   0008           01428                 return
                      01429                 
                      01430 ;***************************************
                      01431 ;***************************************
                      01432 ; Delay = 0.6 seconds
                      01433 ; Clock frequency = 4 MHz
03BE                  01434 DELAY1
                      01435                         ;599996 cycles
03BE   30D1           01436         movlw   0xD1
03BF   00B5           01437         movwf   lcd_d1
03C0   304F           01438         movlw   0x4F
03C1   00B6           01439         movwf   lcd_d2
03C2   3002           01440         movlw   0x02
03C3   00EE           01441         movwf   lcd_d1_2
03C4                  01442 Delay_0
03C4   0BB5           01443         decfsz  lcd_d1, f
03C5   2???           01444         goto    $+2
03C6   0BB6           01445         decfsz  lcd_d2, f
03C7   2???           01446         goto    $+2
03C8   0BEE           01447         decfsz  lcd_d1_2, f
03C9   2???           01448         goto    Delay_0
                      01449 
                      01450                         ;4 cycles
03CA   0008           01451         return
                      01452         
                      01453 ;0.25s delay    
                      01454         
03CB                  01455 DELAY2
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01456                         ;249998 cycles
03CB   304F           01457         movlw   0x4F
03CC   00B5           01458         movwf   lcd_d1
03CD   30C4           01459         movlw   0xC4
03CE   00B6           01460         movwf   lcd_d2
03CF                  01461 Delay_02
03CF   0BB5           01462         decfsz  lcd_d1, f
03D0   2???           01463         goto    $+2
03D1   0BB6           01464         decfsz  lcd_d2, f
03D2   2???           01465         goto    Delay_0
                      01466 
                      01467                         ;2 cycles
03D3   2???           01468         goto    $+1
                      01469         
Warning[203]: Found opcode in column 1. (return)
03D4   0008           01470 return
                      01471         
                      01472 ;***************************************
                      01473 ;Init_TMR0
                      01474 ;   Input:  RA4
                      01475 ;   Output: TMR0 register
                      01476 ;   desc:   Counts the clock pulses for the
                      01477 ;           rotary encoder
                      01478 ;****************************************
03D5                  01479 Init_TMR0                           ; INITIALIZE TIMER 0   
03D5   1683 1303      01480     BANKSEL OPTION_REG
                      01481     MOVLF   B'00101000', OPTION_REG
03D7   3028               M     MOVLW  B'00101000'  ; move literal into working register
03D8   0081               M     MOVWF   OPTION_REG  ; move working register into reg
                      01482     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01483     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
                      01484     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01485     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01486     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01487     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01488     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01489     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
03D9   1283 1303      01490     BANKSEL TMR0
03DB   0181           01491     CLRF   TMR0                     ; Clear timer 0
03DC   0008           01492     return  
                      01493     
                      01494 ;************************************
                      01495 ; RTC Sublabels
                      01496 ;************************************
                      01497     
03DD                  01498 show_RTC
                      01499                 ;clear LCD screen
03DD   3001           01500                 movlw   b'00000001'
03DE   2???           01501                 call    WR_INS
                      01502 
                      01503                 ;Get year
03DF   3032           01504                 movlw   "2"                             ;First line shows 20**/**/**
03E0   2???           01505                 call    WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E1   3030           01506                 movlw   "0"
03E2   2???           01507                 call    WR_DATA
                      01508                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03E3   3006               M         movlw   0x06
03E4   1283 1303          M         banksel 0x73
03E6   00F3               M         movwf   0x73
03E7   2???               M         call    read_rtc
03E8   1283 1303          M         banksel 0x75
03EA   0875               M         movf    0x75,w
03EB   2???               M         call    rtc_convert   
03EC   0877           01509                 movfw   0x77
03ED   2???           01510                 call    WR_DATA
03EE   0878           01511                 movfw   0x78
03EF   2???           01512                 call    WR_DATA
                      01513 
03F0   302F           01514                 movlw   "/"
03F1   2???           01515                 call    WR_DATA
                      01516 
                      01517                 ;Get month
                      01518                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03F2   3005               M         movlw   0x05
03F3   1283 1303          M         banksel 0x73
03F5   00F3               M         movwf   0x73
03F6   2???               M         call    read_rtc
03F7   1283 1303          M         banksel 0x75
03F9   0875               M         movf    0x75,w
03FA   2???               M         call    rtc_convert   
03FB   0877           01519                 movfw   0x77
03FC   2???           01520                 call    WR_DATA
03FD   0878           01521                 movfw   0x78
03FE   2???           01522                 call    WR_DATA
                      01523 
03FF   302F           01524                 movlw   "/"
0400   2???           01525                 call    WR_DATA
                      01526 
                      01527                 ;Get day
                      01528                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0401   3004               M         movlw   0x04
0402   1283 1303          M         banksel 0x73
0404   00F3               M         movwf   0x73
0405   2???               M         call    read_rtc
0406   1283 1303          M         banksel 0x75
0408   0875               M         movf    0x75,w
0409   2???               M         call    rtc_convert   
040A   0877           01529                 movfw   0x77
040B   2???           01530                 call    WR_DATA
040C   0878           01531                 movfw   0x78
040D   2???           01532                 call    WR_DATA
                      01533 
040E   30C0           01534                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
040F   2???           01535                 call    WR_INS
                      01536 
                      01537                 ;Get hour
                      01538                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0410   3002               M         movlw   0x02
0411   1283 1303          M         banksel 0x73
0413   00F3               M         movwf   0x73
0414   2???               M         call    read_rtc
0415   1283 1303          M         banksel 0x75
0417   0875               M         movf    0x75,w
0418   2???               M         call    rtc_convert   
0419   0877           01539                 movfw   0x77
041A   2???           01540                 call    WR_DATA
041B   0878           01541                 movfw   0x78
041C   2???           01542                 call    WR_DATA
041D   303A           01543                 movlw                   ":"
041E   2???           01544                 call    WR_DATA
                      01545 
                      01546                 ;Get minute             
                      01547                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
041F   3001               M         movlw   0x01
0420   1283 1303          M         banksel 0x73
0422   00F3               M         movwf   0x73
0423   2???               M         call    read_rtc
0424   1283 1303          M         banksel 0x75
0426   0875               M         movf    0x75,w
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0427   2???               M         call    rtc_convert   
0428   0877           01548                 movfw   0x77
0429   2???           01549                 call    WR_DATA
042A   0878           01550                 movfw   0x78
042B   2???           01551                 call    WR_DATA         
042C   303A           01552                 movlw                   ":"
042D   2???           01553                 call    WR_DATA
                      01554                 
                      01555                 ;Get seconds
                      01556                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
042E   3000               M         movlw   0x00
042F   1283 1303          M         banksel 0x73
0431   00F3               M         movwf   0x73
0432   2???               M         call    read_rtc
0433   1283 1303          M         banksel 0x75
0435   0875               M         movf    0x75,w
0436   2???               M         call    rtc_convert   
0437   0877           01557                 movfw   0x77
0438   2???           01558                 call    WR_DATA
0439   0878           01559                 movfw   0x78
043A   2???           01560                 call    WR_DATA
                      01561                 
043B   2???           01562                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
043C   0008           01563                 return
                      01564 
                      01565 ;***************************************
                      01566 ; Setup RTC with time defined by user
                      01567 ;***************************************
043D                  01568 set_rtc_time
                      01569 
                      01570                 ;rtc_resetAll   ;reset rtc
                      01571                 ;works up to here
                      01572 
                      01573                 ;rtc_set        0x00,   B'10000000'
                      01574                 ;works up to here
                      01575                 
                      01576                 ;set time 
                      01577 ;               rtc_set 0x06,   B'00010110'             ; Year
                      01578 ;               ;works up to here
                      01579 ;               rtc_set 0x05,   B'00000011'             ; Month
                      01580 ;               rtc_set 0x04,   B'00100000'             ; Date
                      01581                 ;works up to here
                      01582                 ;rtc_set        0x03,   B'00100010'             ; Day
                      01583                 ;stops working on this one^
                      01584                 ;seems like day is the one that crashes it
                      01585                 rtc_set 0x02,   B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
043D   1283 1303          M         banksel 0x73
043F   3002               M         movlw   0x02
0440   00F3               M         movwf   0x73
0441   1283 1303          M         banksel 0x74
0443   3000               M         movlw   B'00000000'
0444   00F4               M         movwf   0x74    
0445   2???               M         call    write_rtc
                      01586                 ;works on this one
                      01587                 rtc_set 0x01,   B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0446   1283 1303          M         banksel 0x73
0448   3001               M         movlw   0x01
0449   00F3               M         movwf   0x73
044A   1283 1303          M         banksel 0x74
044C   3000               M         movlw   B'00000000'
044D   00F4               M         movwf   0x74    
044E   2???               M         call    write_rtc
                      01588                 ;works on this one
                      01589                 rtc_set 0x00,   B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
044F   1283 1303          M         banksel 0x73
0451   3000               M         movlw   0x00
0452   00F3               M         movwf   0x73
0453   1283 1303          M         banksel 0x74
0455   3000               M         movlw   B'00000000'
0456   00F4               M         movwf   0x74    
0457   2???               M         call    write_rtc
                      01590                 ;works on this one
0458   0008           01591                 return
                      01592 
                      01593 ;***************************************
                      01594 ; Delay 1s
                      01595 ;***************************************
0459                  01596 OneS
  0000                01597                 local   OneS_0
0459   3010           01598       movlw 0x10
045A   00B0           01599       movwf COUNTH
045B   307A           01600       movlw 0x7A
045C   00B1           01601       movwf COUNTM
045D   3006           01602       movlw 0x06
045E   00B2           01603       movwf COUNTL
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01604 
045F                  01605 OneS_0
045F   0BB0           01606       decfsz COUNTH, f
0460   2???           01607       goto   $+2
0461   0BB1           01608       decfsz COUNTM, f
0462   2???           01609       goto   $+2
0463   0BB2           01610       decfsz COUNTL, f
0464   2???           01611       goto   OneS_0
                      01612 
0465   2???           01613       goto $+1
0466   0000           01614       nop
0467   0000           01615       nop
0468   0008           01616                 return
                      01617 
0469                  01618 lcdLongDelay
0469   3014           01619     movlw d'20'
046A   00B6           01620     movwf lcd_d2
046B                  01621 LLD_LOOP
                      01622     LCD_DELAY
046B   30FF               M         movlw   0xFF
046C   00B5               M         movwf   lcd_d1
046D   0BB5               M         decfsz  lcd_d1,f
046E   2???               M         goto    $-1
046F   0BB6           01623     decfsz lcd_d2,f
0470   2???           01624     goto LLD_LOOP
0471   0008           01625     return
                      01626     
                      01627 ;***************************************
                      01628 ; Look up table
                      01629 ;***************************************
                      01630     
0472                  01631 Welcome_Msg
                      01632         
                      01633         ;Change Page
0472   00BA           01634         movwf   Temp
0473   30??           01635         movlw   HIGH Welcome_MsgEntries
0474   008A           01636         movwf   PCLATH
0475   083A           01637         movf    Temp,w
0476   3E??           01638         addlw   LOW Welcome_MsgEntries
0477   1803           01639         btfsc   STATUS,C
0478   0A8A           01640             incf    PCLATH,f
0479   0082           01641         movwf   PCL     
047A   0782           01642         addwf    PCL,F
047B                  01643 Welcome_MsgEntries
047B   3431 343A 3453 01644         dt        "1:Simulation|#/D:PWM|*/0:Std1&Std2|3:B/W", 0
       3469 346D 3475 
       346C 3461 3474 
       3469 346F 346E 
       347C 3423 342F 
       3444 343A 3450 
       3457 344D 347C 
       342A 342F 3430 
       343A 3453 3474 
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3464 3431 3426 
       3453 3474 3464 
       3432 347C 3433 
       343A 3442 342F 
       3457 3400 
                      01645         
04A4                  01646 Welcome_Msg2
                      01647         
                      01648         ;Change Page
04A4   00BA           01649         movwf   Temp
04A5   30??           01650         movlw   HIGH Welcome_Msg2Entries
04A6   008A           01651         movwf   PCLATH
04A7   083A           01652         movf    Temp,w
04A8   3E??           01653         addlw   LOW Welcome_Msg2Entries
04A9   1803           01654         btfsc   STATUS,C
04AA   0A8A           01655             incf    PCLATH,f
04AB   0082           01656         movwf   PCL     
04AC   0782           01657         addwf    PCL,F
04AD                  01658 Welcome_Msg2Entries
04AD   3435 3444 3469 01659         dt        "5Distance 6Locations", 0
       3473 3474 3461 
       346E 3463 3465 
       3420 3436 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01660         
04C2                  01661 FinalMessage
                      01662         
                      01663         ;Change Page
04C2   00BA           01664         movwf    Temp
04C3   30??           01665         movlw   HIGH FinalMessageEntries
04C4   008A           01666         movwf   PCLATH
04C5   083A           01667         movf    Temp,w
04C6   3E??           01668         addlw   LOW FinalMessageEntries
04C7   1803           01669         btfsc   STATUS,C
04C8   0A8A           01670             incf    PCLATH,f
04C9   0082           01671         movwf   PCL
04CA   0782           01672         addwf    PCL,F
04CB                  01673 FinalMessageEntries
04CB   3431 3454 3469 01674         dt        "1Time 3Stickers 4#Bins",0
       346D 3465 3420 
       3433 3453 3474 
       3469 3463 346B 
       3465 3472 3473 
       3420 3434 3423 
       3442 3469 346E 
       3473 3400 
                      01675         
04E2                  01676 DectoChar
                      01677         
                      01678         ;Change Page
04E2   00BA           01679         movwf   Temp
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04E3   30??           01680         movlw   HIGH DectoCharEntries
04E4   008A           01681         movwf   PCLATH
04E5   083A           01682         movf    Temp,w
04E6   3E??           01683         addlw   LOW DectoCharEntries
04E7   1803           01684         btfsc   STATUS,C
04E8   0A8A           01685             incf    PCLATH,f
04E9   0082           01686         movwf   PCL     
04EA   0782           01687         addwf    PCL,F
04EB                  01688 DectoCharEntries
04EB   3430 3431 3432 01689         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01690         
04F6                  01691 StickerColours
                      01692         
                      01693         ;Change Page
04F6   00BA           01694         movwf   Temp
04F7   30??           01695         movlw   HIGH StickerColoursEntries
04F8   008A           01696         movwf   PCLATH
04F9   083A           01697         movf    Temp,w
04FA   3E??           01698         addlw   LOW StickerColoursEntries
04FB   1803           01699         btfsc   STATUS,C
04FC   0A8A           01700             incf    PCLATH,f
04FD   0082           01701         movwf   PCL     
04FE   0782           01702         addwf    PCL,F
04FF                  01703 StickerColoursEntries
04FF   3442 3457 3400 01704         dt        "BW",  0
                      01705         
0502                  01706 FrontStickers
                      01707 
                      01708         ;Change Page
0502   00BA           01709         movwf   Temp
0503   30??           01710         movlw   HIGH FrontStickersEntries
0504   008A           01711         movwf   PCLATH
0505   083A           01712         movf    Temp,w
0506   3E??           01713         addlw   LOW FrontStickersEntries
0507   1803           01714         btfsc   STATUS,C
0508   0A8A           01715             incf    PCLATH,f
0509   0082           01716         movwf   PCL     
050A   0782           01717         addwf    PCL,F
050B                  01718 FrontStickersEntries
050B   3446 3472 346F 01719         dt        "Front",  0
       346E 3474 3400 
                      01720         
0511                  01721 BackStickers
                      01722 
                      01723         ;Change Page
0511   00BA           01724         movwf   Temp
0512   30??           01725         movlw   HIGH BackStickersEntries
0513   008A           01726         movwf   PCLATH
0514   083A           01727         movf    Temp,w
0515   3E??           01728         addlw   LOW BackStickersEntries
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0516   1803           01729         btfsc   STATUS,C
0517   0A8A           01730             incf    PCLATH,f
0518   0082           01731         movwf   PCL     
0519   0782           01732         addwf    PCL,F
051A                  01733 BackStickersEntries
051A   3442 3461 3463 01734         dt        "Back",  0
       346B 3400 
                      01735         
051F                  01736 Spacee
                      01737 
                      01738         ;Change Page
051F   00BA           01739         movwf   Temp
0520   30??           01740         movlw   HIGH SpaceeEntries
0521   008A           01741         movwf   PCLATH
0522   083A           01742         movf    Temp,w
0523   3E??           01743         addlw   LOW SpaceeEntries
0524   1803           01744         btfsc   STATUS,C
0525   0A8A           01745             incf    PCLATH,f
0526   0082           01746         movwf   PCL     
0527   0782           01747         addwf    PCL,F
0528                  01748 SpaceeEntries
0528   3420 3400      01749         dt        " ",  0
                      01750         
052A                  01751 Colon
                      01752 
                      01753         ;Change Page
052A   00BA           01754         movwf   Temp
052B   30??           01755         movlw   HIGH ColonEntries
052C   008A           01756         movwf   PCLATH
052D   083A           01757         movf    Temp,w
052E   3E??           01758         addlw   LOW ColonEntries
052F   1803           01759         btfsc   STATUS,C
0530   0A8A           01760             incf    PCLATH,f
0531   0082           01761         movwf   PCL     
0532   0782           01762         addwf    PCL,F
0533                  01763 ColonEntries
0533   343A 3400      01764         dt        ":",  0
                      01765         
0535                  01766 Distances
                      01767 
                      01768         ;Change Page
0535   00BA           01769         movwf   Temp
0536   30??           01770         movlw   HIGH DistancesEntries
0537   008A           01771         movwf   PCLATH
0538   083A           01772         movf    Temp,w
0539   3E??           01773         addlw   LOW DistancesEntries
053A   1803           01774         btfsc   STATUS,C
053B   0A8A           01775             incf    PCLATH,f
053C   0082           01776         movwf   PCL     
053D   0782           01777         addwf    PCL,F
053E                  01778 DistancesEntries
053E   3444 3469 3473 01779         dt        "Dist (cm)",  0
       3474 3420 3428 
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3463 346D 3429 
       3400 
                      01780             
3F72                  01781         END
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AVOIDCOLUMN                       000000C9
AddBin                            00000262
BANK0                             
BANK1                             
BANK2                             
BANK3                             
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BINREADINGSTART                   00000129
BRGH                              00000002
BWScanModule1                     0000019D
BWScanModule2                     000001C3
BWStoreModule1                    000001B6
BWStoreModule2                    000001DC
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BackStickers                      00000511
BackStickersEntries               0000051A
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHECKSWITCH                       00000142
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COLREADINGSTART                   0000011D
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Clear_Display                     000003AB
ClrLCD                            00000000
ColMotor                          PORTC,7
Colon                             0000052A
ColonEntries                      00000533
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DELAY1                            000003BE
DELAY2                            000003CB
DELAYEDREAD                       00000136
D_A                               00000005
D_NOT_A                           00000005
Decode_check_done                 00000232
Decode_loop                       00000227
DectoChar                         000004E2
DectoCharEntries                  000004EB
Delay_0                           000003C4
Delay_02                          000003CF
Display                           
DisplayBlackWhiteIR1              0000032E
DisplayBlackWhiteIR2              00000332
DisplayUSSensor1                  00000336
DisplayUSSensor2                  00000338
Display_Dist                      
Dist_Decoder                      0000021F
Distances                         00000535
DistancesEntries                  0000053E
E                                 PORTD,3
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENDTHIS                           0000013D
EXIT                              0000014F
EXITDISPLAY                       00000170
F                                 00000001
FERR                              00000002
FSR                               00000004
FinalMessage                      000004C2
FinalMessageEntries               000004CB
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         000002E6
FrontLoop1                        00000282
FrontLoop2                        000002B3
FrontStickers                     00000502
FrontStickersEntries              0000050B
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000003AE
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         000003D5
Key                               
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

KeypadandLCD                      00000075
LCD_DELAY                         
LED                               PORTB,0
LEDControlON                      00000326
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter7                       00000068
LEDcounter8                       00000069
LLD_LOOP                          0000046B
Lb1                               00000022
Lb2                               00000026
Lb3                               0000002A
Lb4                               0000002E
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
Locations                         000002D3
MAX_HIGHS                         0x3
MOV                               
MOVEFWDFORABIT                    00000167
MOVLF                             
MoveBackwards                     0000019C
NOTPWMBACK                        PORTC,1
NOTPWMFWD                         PORTC,2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              00000051
NumL                              00000052
NumOfBins1                        00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              00000459
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

Ones                              00000057
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           00000381
PWMFWD                            0000035E
PWMSTOP                           000003A3
PrintCol                          
PrintNumber                       
Put_Dist_In_Reg                   
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READBIN                           000000F5
READ_WRITE                        00000002
RETURNFROMCOLUMN                  000000E8
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        0000024C
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          000001E9
Read2_US                          00000204
ReadUltrasonic                    
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         00000248
ShowBins                          0000026C
Spacee                            0000051F
SpaceeEntries                     00000528
Std1                              PORTC,5
Std1Backwards                     PORTC,0
Std2                              PORTC,6
Std2Backwards                     PORTC,7
StdRotation1                      0000033A
StdRotation1Backwards             0000034C
StdRotation2                      00000342
StdRotation2Backwards             00000354
StickerColours                    000004F6
StickerColoursEntries             000004FF
Stickers1                         00000270
Stickers2                         000002A2
StoreBW1                          00000256
StoreBW2                          0000025C
StoreThisDistance                 0000023B
SwitchArm                         PORTB,3
SwitchWhite                       PORTB,2
Switch_Lines                      000003A8
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTAL                             00000119
TOTAL1                            0000011B
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
TotalDistance                     00000311
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
Welcome_Msg                       00000472
Welcome_Msg2                      000004A4
Welcome_Msg2Entries               000004AD
Welcome_MsgEntries                0000047B
Z                                 00000002
_.org_0_0076                      00000076
_.org_0_00C6                      000000C6
_.org_0_00CD                      000000CD
_.org_0_00D7                      000000D7
_.org_0_00E4                      000000E4
_.org_0_00EB                      000000EB
_.org_0_00F2                      000000F2
_.org_0_0121                      00000121
_.org_0_012D                      0000012D
_.org_0_0146                      00000146
_.org_0_014C                      0000014C
_.org_0_0171                      00000171
_.org_0_0199                      00000199
_.org_0_019F                      0000019F
_.org_0_01C5                      000001C5
_.org_0_01F1                      000001F1
_.org_0_01F4                      000001F4
_.org_0_020C                      0000020C
_.org_0_020F                      0000020F
_.org_0_0327                      00000327
_.org_0_033B                      0000033B
_.org_0_0343                      00000343
_.org_0_034D                      0000034D
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_0355                      00000355
_.org_0_035F                      0000035F
_.org_0_0382                      00000382
_.org_0_03B5                      000003B5
_.org_0_03B7                      000003B7
_.org_0_03BA                      000003BA
_.org_0_03C5                      000003C5
_.org_0_03C7                      000003C7
_.org_0_03D0                      000003D0
_.org_0_03D3                      000003D3
_.org_0_0460                      00000460
_.org_0_0462                      00000462
_.org_0_0465                      00000465
_.org_0_046E                      0000046E
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
MPASM 5.65                          MAIN.ASM   4-3-2016  18:52:42         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

backstickerValues                 0000005C
bin16_BCD                         00000001
binCounter                        0000005D
cm                                0000006A
com                               00000037
count_highs                       0000006F
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay3                            00000061
distanceMoved                     00000058
distreg                           0000006D
frontstickerValues                0000005B
goback                            000000C8
i2c_common_setup                  00000000
init                              00000034
isBinThere                        0000005A
isColumnThere                     00000059
lcdLongDelay                      00000469
lcd_d1                            00000035
lcd_d1_2                          0000006E
lcd_d2                            00000036
lcd_tmp                           00000034
m                                 0000006C
mm                                0000006B
mm_overflow                       00000237
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      0000043D
show_RTC                          000003DD
temp                              00000039
write_rtc                         00000000

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :     0 reported,    30 suppressed

