MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1       ;3B PC
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5       
  00000040            00038                 Location6       ;40 PC
  00000041            00039                 Location7
  00000042            00040                 Front1          ;42 PC7
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ; 49 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7           ;50
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins1                      
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0, LEDcounter1,LEDcounter2,LEDcounter3,LEDcounter4,LEDcounter5,LEDcounter7,LED
                            counter8
  0000006A            00073                 cm
  0000006B            00074                 mm
  0000006C            00075                 m
  0000006D            00076                 distreg
  0000006E            00077                 lcd_d1_2
  0000006F            00078                 count_highs             ;the number of consecutive high counter for the US sensor
  00000070            00079                 temp_2
  00000071            00080                 hour1,hour2,min1,min2,sec1,sec2
                      00081         endc    
                      00082 
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083         ;Declare constants for pin assignments (LCD on PORTD)
                      00084                 #define RS      PORTD,2
                      00085                 #define E       PORTD,3
                      00086                 #define IR1     PORTA,0
                      00087                 #define IR2     PORTA,1
                      00088                 #define ColMotor PORTC,7
                      00089                 #define UST1    PORTD,0
                      00090                 #define US1E1   PORTA,2
                      00091                 #define UST2    PORTD,1
                      00092                 #define US1E2   PORTA,3
                      00093                 #define LED     PORTB,0
                      00094                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00095                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00096                 #define Std1Backwards   PORTC,0
                      00097                 #define Std2Backwards   PORTC,7
                      00098                 #define SwitchWhite             PORTB,2     ; or gated switch to stop motor motion
                      00099                 #define SwitchArm               PORTB,3
                      00100                 #define NOTPWMFWD               PORTC,2
                      00101                 #define NOTPWMBACK              PORTC,1
                      00102                 #define MAX_HIGHS       0x3                 ; number of consecutive highs we want to det
                            ect US
                      00103                 #define MAX_TICKS       d'200'              ; number of ticks where it reaches 4 metres
                      00104                 ;SHAFTIR is PORTA,4
                      00105                 ;PWMFWD is RC2
                      00106                 ;PWMBACK is RC1
                      00107                 
                      00108 
                      00109          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00110          goto      init       ;Just jump to the main code section.
                      00111 
                      00112 ;*******************************************************************************
                      00113 ; MACROS
                      00114 ;*******************************************************************************
                      00115 Key      macro  value, subroutine
                      00116          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00117          andlw          0x0F
                      00118          xorlw          value
                      00119          btfsc          STATUS, Z
                      00120          call           subroutine
                      00121         endm
                      00122 
                      00123 Rotation macro  value
                      00124          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00125          andlw          0x0F
                      00126          xorlw          value
                      00127          btfsc          STATUS, Z
                      00128          call           ShiftLeft
                      00129         endm
                      00130 ;***************************************
                      00131 ; Delay: ~160us macro
                      00132 ;***************************************
                      00133 LCD_DELAY macro
                      00134         movlw   0xFF
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00135         movwf   lcd_d1
                      00136         decfsz  lcd_d1,f
                      00137         goto    $-1
                      00138         endm
                      00139         
                      00140 ;***************************************
                      00141 ; Display macro
                      00142 ;***************************************
                      00143 Display macro   Message
                      00144                 local   loop_
                      00145                 local   end_
                      00146                 clrf    Table_Counter
                      00147                 clrw            
                      00148 loop_   movf    Table_Counter,W
                      00149                 call    Message
                      00150                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00151                 btfsc   STATUS,Z
                      00152                         goto    end_
                      00153                 call    WR_DATA
                      00154                 incf    Table_Counter,F
                      00155                 goto    loop_
                      00156 end_
                      00157                 endm
                      00158                 
                      00159 ;***************************************
                      00160 ; MOVLF macro   [TESTED]
                      00161 ;***************************************
                      00162 MOVLF   Macro   literal, reg
                      00163     MOVLW  literal      ; move literal into working register
                      00164     MOVWF   reg         ; move working register into reg
                      00165     endm
                      00166 
                      00167 ;***************************************
                      00168 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00169 ;***************************************
                      00170 MOV     Macro   reg1, reg2
                      00171     MOVF  reg1,W        ; move reg1 into working register
                      00172     MOVWF   reg2        ; reg2 <- reg1
                      00173     endm
                      00174     
                      00175 ;***************************************
                      00176 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00177 ;***************************************
                      00178 ADDL    Macro   Destination, reg, literal
                      00179     MOVLW  literal      ; move literal into working register
                      00180     ADDWF   reg,W       ; W <- literal + reg
                      00181     MOVWF   Destination ; Destination <- literal + reg
                      00182     endm
                      00183     
                      00184 ;***************************************
                      00185 ; ADD macro, Adds two registers together    [TESTED]
                      00186 ;***************************************
                      00187 ADD     Macro   Destination, reg1, reg2
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00188     MOVF    reg1,W      ; move literal into working register
                      00189     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00190     MOVWF   Destination ; Destination <- reg1 + reg2
                      00191     endm
                      00192 ;***************************************
                      00193 ; Number to Printable
                      00194 ;***************************************
                      00195 PrintNumber macro       number
                      00196         ;movf       number ,W
                      00197         movfw       number
                      00198         call        DectoChar
                      00199         call        WR_DATA
                      00200         endm
                      00201 ;***************************************
                      00202 ; Store_Dist macro --> Stores current
                      00203 ;   distance and stores it in Bin_Dist_reg
                      00204 ;***************************************                
                      00205 Put_Dist_In_Reg macro    Bin_Dist_reg
                      00206         lcall   Dist_Decoder
                      00207         movfw   cm
                      00208         movwf   Bin_Dist_reg
                      00209     endm
                      00210     
                      00211 ;***************************************
                      00212 ; Display_Dist macro --> Takes value in Bin_Dist_reg
                      00213 ;   and converts it into a BCD and prints it
                      00214 ;   To the LCD
                      00215 ;***************************************                
                      00216 Display_Dist macro    Bin_Dist_reg
                      00217     MOV     Bin_Dist_reg, temp  ; Bin_Dist_reg --> temp
                      00218     call    Distance_Display
                      00219     endm
                      00220 ;*********************************************************
                      00221 ;   Distance_Display            
                      00222 ;   input:      temp
                      00223 ;   Output:     LCD
                      00224 ;   desc:       Decodes the distance and prints to the LCD
                      00225 ;*********************************************************      
0001                  00226 Distance_Display
0001   2???           00227         call    Dist_Decoder        ; outputs m and cm regs to display
                      00228         PrintNumber     m
                          M         ;movf       number ,W
0002   086C               M         movfw       m
0003   2???               M         call        DectoChar
0004   2???               M         call        WR_DATA
0005   01D2           00229         clrf    NumL
0006   01D1           00230         clrf    NumH
                      00231         MOV     cm, NumL
0007   086A               M     MOVF  cm,W          ; move reg1 into working register
0008   00D2               M     MOVWF   NumL        ; reg2 <- reg1
0009   2???           00232         call    bin16_BCD
                      00233         PrintNumber     Tens        ; Print cm
                          M         ;movf       number ,W
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A   0856               M         movfw       Tens
000B   2???               M         call        DectoChar
000C   2???               M         call        WR_DATA
                      00234         PrintNumber     Ones
                          M         ;movf       number ,W
000D   0857               M         movfw       Ones
000E   2???               M         call        DectoChar
000F   2???               M         call        WR_DATA
0010   0008           00235         return
                      00236 ;***************************************
                      00237 ; Number to Colour
                      00238 ;***************************************
                      00239 PrintCol macro      number
                      00240         movfw       number
                      00241         call        StickerColours
                      00242         call        WR_DATA
                      00243         endm    
                      00244 
                      00245 ;***************************************
                      00246 ;           US READ MACRO
                      00247 ;****************************************
                      00248 ReadUltrasonic macro    trigger, trigger_bit, echo, echo_bit
                      00249     clrf        TMR1H
                      00250     clrf        TMR1L
                      00251 
                      00252     bcf trigger, trigger_bit            ;make sure trigger is clear
                      00253     call lcdLongDelay
                      00254 
                      00255     bsf trigger, trigger_bit    ;trigger high, bottom sensor
                      00256     call lcdLongDelay           ;10us delay
                      00257     bcf trigger, trigger_bit    ;trigger low
                      00258 
                      00259     btfss       echo, echo_bit          ;wait for echo to go high
                      00260     goto        $-1
                      00261     bsf T1CON,TMR1ON    ;turn on timer
                      00262 
                      00263     btfsc       echo, echo_bit          ;wait for echo to go low
                      00264     goto        $-1
                      00265 
                      00266     bcf T1CON,TMR1ON    ;turn off timer
                      00267     endm
                      00268         
                      00269 ;*******************************************************
                      00270 ;******             BCD                 ****************
                      00271 ;*******************************************************
                      00272         
                      00273 ;---------------- Binary (16-bit) to BCD -----------------------
                      00274 ;
                      00275 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00276 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00277                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00278 ;
                      00279 ; Uses variables
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00280 ; NumH, NumL
                      00281 ; TenK, Thou, Hund, Tens, Ones
                      00282                 
                      00283 ;BCD    macro   NumH, NumL
                      00284 
0011                  00285 bin16_BCD
0011   0E51           00286         swapf   NumH, W
0012   390F           00287         andlw   0x0F
0013   3EF0           00288         addlw   0xF0
0014   00D4           00289         movwf   Thou 
0015   07D4           00290         addwf   Thou, F 
0016   3EE2           00291         addlw   0xE2 
0017   00D5           00292         movwf   Hund 
0018   3E32           00293         addlw   0x32 
0019   00D7           00294         movwf   Ones 
                      00295 
001A   0851           00296         movf    NumH, W 
001B   390F           00297         andlw   0x0F 
001C   07D5           00298         addwf   Hund, F 
001D   07D5           00299         addwf   Hund, F 
001E   07D7           00300         addwf   Ones, F 
001F   3EE9           00301         addlw   0xE9 
0020   00D6           00302         movwf   Tens 
0021   07D6           00303         addwf   Tens, F 
0022   07D6           00304         addwf   Tens, F 
                      00305 
0023   0E52           00306         swapf   NumL, W 
0024   390F           00307         andlw   0x0F 
0025   07D6           00308         addwf   Tens, F 
0026   07D7           00309         addwf   Ones, F 
                      00310 
0027   0DD6           00311         rlf    Tens, F 
0028   0DD7           00312         rlf    Ones, F 
0029   09D7           00313         comf    Ones, F 
002A   0DD7           00314         rlf    Ones, F 
                      00315 
002B   0852           00316         movf    NumL, W 
002C   390F           00317         andlw   0x0F 
002D   07D7           00318         addwf   Ones, F 
002E   0DD4           00319         rlf    Thou,F 
                      00320 
002F   3007           00321         movlw   0x07 
0030   00D3           00322         movwf   TenK 
                      00323 
0031   300A           00324         movlw   0x0A
0032                  00325 Lb1
0032   03D6           00326         decf    Tens, F 
0033   07D7           00327         addwf   Ones, F 
0034   1C03           00328         btfss   STATUS, C 
0035   2???           00329         goto            Lb1 
0036                  00330 Lb2
0036   03D5           00331         decf    Hund, F 
0037   07D6           00332         addwf   Tens, F 
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0038   1C03           00333         btfss   STATUS,C 
0039   2???           00334         goto            Lb2 
003A                  00335 Lb3
003A   03D4           00336         decf    Thou, F 
003B   07D5           00337         addwf   Hund, F 
003C   1C03           00338         btfss   STATUS,C
003D   2???           00339         goto            Lb3 
003E                  00340 Lb4
003E   03D3           00341         decf    TenK, F 
003F   07D4           00342         addwf   Thou, F 
0040   1C03           00343         btfss   STATUS,C 
0041   2???           00344         goto            Lb4 
                      00345 
0042   3400           00346         retlw   0
0043   0008           00347         return
                      00348 ;***************************************
                      00349 ; Initialize
                      00350 ;***************************************
0044                  00351 init
0044   018B           00352          clrf      INTCON         ; No interrupts
                      00353 
0045   1683           00354          bsf       STATUS,RP0     ; select bank 1
0046   30FF           00355          movlw      0xFF            ; need to make A input
0047   0085           00356          movwf      TRISA          ; All port A is input
0048   30FE           00357          movlw     b'11111110'    ; Set required keypad inputs
0049   0086           00358          movwf     TRISB
004A   0187           00359          clrf      TRISC          ; All port C is output
004B   0188           00360          clrf      TRISD          ; All port D is output
004C   0189           00361          clrf      TRISE        
                      00362          
                      00363                   ;Set SDA and SCL to high-Z first as required for I2C
004D   1607           00364                  bsf       TRISC,4                
004E   1587           00365                  bsf       TRISC,3
                      00366 
004F   1283           00367          bcf       STATUS,RP0     ; select bank 0
0050   0185           00368          clrf      PORTA
0051   0186           00369          clrf      PORTB
0052   0187           00370          clrf      PORTC
0053   0188           00371          clrf      PORTD
0054   0189           00372          clrf      PORTE
                      00373          
                      00374         ;Set up I2C for communication
                      00375                  
0055   2???           00376         call       i2c_common_setup
                      00377 ;*******************************************************************************
                      00378 ;        UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00379         rtc_resetAll                                    ;works;\
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0056   1283 1303          M         banksel         0x74
0058   01F4               M         clrf            0x74
0059   1283 1303          M         banksel         0x73
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005B   01F3               M         clrf            0x73
005C   2???               M     call        write_rtc               ;Write 0 to Seconds
005D   1283 1303          M         banksel         0x73
005F   0AF3               M     incf        0x73                    ;Set register address to 1
0060   2???               M         call            write_rtc
0061   1283 1303          M         banksel         0x73
0063   0AF3               M     incf        0x73                    ;Set register address to 2
0064   2???               M         call            write_rtc
0065   1283 1303          M         banksel         0x73
0067   0AF3               M     incf        0x73                    ;Set register address to 3
0068   2???               M         call            write_rtc
0069   1283 1303          M         banksel         0x73
006B   0AF3               M     incf        0x73                    ;Set register address to 4
006C   2???               M         call            write_rtc
006D   1283 1303          M         banksel         0x73
006F   0AF3               M     incf        0x73                    ;Set register address to 5
0070   2???               M         call            write_rtc
0071   1283 1303          M         banksel         0x73
0073   0AF3               M     incf        0x73                    ;Set register address to 6
0074   2???               M         call            write_rtc
0075   2???           00380         call set_rtc_time
                      00381 ;*******************************************************************************          
0076   2???           00382          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00383          ;A/D converter attempt
                      00384                  
                      00385         ; Set ADCON1 to use RA0 as analog input 
0077   1303           00386         bcf     STATUS,RP1
0078   1683           00387         bsf     STATUS,RP0      ;Select bank 1
0079   3006           00388         movlw   b'00000110'     ;left justified, all inputs digital
007A   009F           00389         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00390 
                      00391         ;ADCON0
007B   1283           00392         bcf     STATUS,RP0      
                      00393 ;***************************************************
                      00394 ; Initialize variables and Displays
                      00395 ;****************************************************
                      00396         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
007C   01B3               M                 clrf    Table_Counter
007D   0103               M                 clrw            
007E   0833               M loop_   movf    Table_Counter,W
007F   2???               M                 call    Welcome_Msg
0080   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0081   1903               M                 btfsc   STATUS,Z
0082   2???               M                         goto    end_
0083   2???               M                 call    WR_DATA
0084   0AB3               M                 incf    Table_Counter,F
0085   2???               M                 goto    loop_
0086                      M end_
0086   2???           00397         call            Switch_Lines
                      00398         Display         Welcome_Msg2
  0000                    M                 local   loop_
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_
0087   01B3               M                 clrf    Table_Counter
0088   0103               M                 clrw            
0089   0833               M loop_   movf    Table_Counter,W
008A   2???               M                 call    Welcome_Msg2
008B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
008C   1903               M                 btfsc   STATUS,Z
008D   2???               M                         goto    end_
008E   2???               M                 call    WR_DATA
008F   0AB3               M                 incf    Table_Counter,F
0090   2???               M                 goto    loop_
0091                      M end_
0091   01E0           00399         clrf            NumOfBins1
0092   01ED           00400         clrf            distreg             ; clear register for distance
0093   2???           00401         call            Init_TMR0           ; Initialize shaft encoder
0094   1408           00402         bsf             PORTD,0
0095   1462           00403         bsf             LEDcounter0,0               ;counter for LED
0096   1463           00404         bsf             LEDcounter1,0               ;forward motor counters
0097   1464           00405         bsf             LEDcounter2,0
0098   1465           00406         bsf             LEDcounter3,0               
0099   1466           00407         bsf             LEDcounter4,0               ;backward motor counters
009A   1467           00408         bsf             LEDcounter5,0       
009B   1468           00409         bsf             LEDcounter7,0               ;pwm counters
009C   1469           00410         bsf             LEDcounter8,0               
                      00411         
009D   01F1           00412         clrf            hour1
009E   01F2           00413         clrf            hour2
009F   01F3           00414         clrf            min1
00A0   01F4           00415         clrf            min2
00A1   01F5           00416         clrf            sec1
00A2   01F6           00417         clrf            sec2
                      00418         
00A3   1287           00419         bcf             Std1                        ;use this one for negative for when need to move ful
                            l motor                 
00A4   1707           00420         bsf             Std2
00A5   1007           00421         bcf             Std1Backwards
00A6   1787           00422         bsf             Std2Backwards
00A7   1507           00423         bsf             PORTC,2             
00A8   1487           00424         bsf             PORTC,1                 ; PWM now negative, so start by clearing
                      00425         
                      00426         ;trying to fix the switch bs
00A9   1106           00427         bcf             SwitchWhite
00AA   1186           00428         bcf             SwitchArm
                      00429 
                      00430 ;*************************************
                      00431 ;       Keypad and LCD forms        
                      00432 ;*************************************
                      00433         
00AB   1C86           00434 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
00AC   2???           00435                 goto            $-1 
                      00436 
00AD   0E06           00437                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
00AE   390F           00438                 andlw           0x0F
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AF   00B9           00439                 movwf           temp
                      00440                 
                      00441                 Key     0x00, TOTAL
00B0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B1   390F               M          andlw          0x0F
00B2   3A00               M          xorlw          0x00
00B3   1903               M          btfsc          STATUS, Z
00B4   2???               M          call           TOTAL
                      00442                 Key     0x01, DisplayBlackWhiteIR1
00B5   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B6   390F               M          andlw          0x0F
00B7   3A01               M          xorlw          0x01
00B8   1903               M          btfsc          STATUS, Z
00B9   2???               M          call           DisplayBlackWhiteIR1
                      00443                 Key     0x02, DisplayBlackWhiteIR2
00BA   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BB   390F               M          andlw          0x0F
00BC   3A02               M          xorlw          0x02
00BD   1903               M          btfsc          STATUS, Z
00BE   2???               M          call           DisplayBlackWhiteIR2
                      00444                 Rotation        0x03
00BF   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C0   390F               M          andlw          0x0F
00C1   3A03               M          xorlw          0x03
00C2   1903               M          btfsc          STATUS, Z
00C3   2???               M          call           ShiftLeft
                      00445                 Key     0x04, EXIT
00C4   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C5   390F               M          andlw          0x0F
00C6   3A04               M          xorlw          0x04
00C7   1903               M          btfsc          STATUS, Z
00C8   2???               M          call           EXIT
                      00446                 Key     0x05, Read1_US
00C9   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00CA   390F               M          andlw          0x0F
00CB   3A05               M          xorlw          0x05
00CC   1903               M          btfsc          STATUS, Z
00CD   2???               M          call           Read1_US
                      00447                 Key     0x06, Read2_US
00CE   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00CF   390F               M          andlw          0x0F
00D0   3A06               M          xorlw          0x06
00D1   1903               M          btfsc          STATUS, Z
00D2   2???               M          call           Read2_US
                      00448                 Key     0x07, set_rtc_time
00D3   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D4   390F               M          andlw          0x0F
00D5   3A07               M          xorlw          0x07
00D6   1903               M          btfsc          STATUS, Z
00D7   2???               M          call           set_rtc_time
                      00449                 Key     0x08, Stickers1
00D8   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D9   390F               M          andlw          0x0F
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DA   3A08               M          xorlw          0x08
00DB   1903               M          btfsc          STATUS, Z
00DC   2???               M          call           Stickers1
                      00450                 Key     0x09, LEDControlON
00DD   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00DE   390F               M          andlw          0x0F
00DF   3A09               M          xorlw          0x09
00E0   1903               M          btfsc          STATUS, Z
00E1   2???               M          call           LEDControlON
                      00451                 Key     0x0A, CHECKSWITCH               
00E2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00E3   390F               M          andlw          0x0F
00E4   3A0A               M          xorlw          0x0A
00E5   1903               M          btfsc          STATUS, Z
00E6   2???               M          call           CHECKSWITCH
                      00452                 Key     0x0C, StdRotation2
00E7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00E8   390F               M          andlw          0x0F
00E9   3A0C               M          xorlw          0x0C
00EA   1903               M          btfsc          STATUS, Z
00EB   2???               M          call           StdRotation2
                      00453                 Key     0x0D, StdRotation2Backwards
00EC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00ED   390F               M          andlw          0x0F
00EE   3A0D               M          xorlw          0x0D
00EF   1903               M          btfsc          STATUS, Z
00F0   2???               M          call           StdRotation2Backwards
                      00454                 Key     0x0E, PWMFWD
00F1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00F2   390F               M          andlw          0x0F
00F3   3A0E               M          xorlw          0x0E
00F4   1903               M          btfsc          STATUS, Z
00F5   2???               M          call           PWMFWD
                      00455                 Key     0x0F, PWMBACK
00F6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00F7   390F               M          andlw          0x0F
00F8   3A0F               M          xorlw          0x0F
00F9   1903               M          btfsc          STATUS, Z
00FA   2???               M          call           PWMBACK
00FB   1886           00456                 btfsc           PORTB,1     ;Wait until key is released
00FC   2???           00457                 goto            $-1
00FD   2???           00458                 goto            KeypadandLCD
                      00459                 
00FE                  00460 goback
00FE   0008           00461                 return  
                      00462         
                      00463 
                      00464 ;*******************************************************************************************************
                            *******************************************
                      00465 ;                                                                 MAIN CODE
                      00466 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
                      00467 
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00FF                  00468 AVOIDCOLUMN
                      00469     
00FF   1287           00470     bcf     Std1                ;motor will stop move fwd
                      00471     
0100   1307           00472     bcf     Std2                ; start white thing fwd
0101   2???           00473     call    HalfS
0102   1D06           00474     btfss   SwitchWhite
0103   2???           00475     goto    $-1
                      00476    
0104   1707           00477     bsf     Std2                   ; stop white thing fwd
                      00478     
0105   2???           00479      call    HalfS
0106   2???           00480     call    HalfS
0107   2???           00481      call    HalfS
0108   2???           00482     call    HalfS
                      00483     
0109   2???           00484     call    PWMFWD          ;start arm forward
010A   2???           00485     call    lcdLongDelay
010B   2???           00486     call    lcdLongDelay
010C   1D86           00487     btfss   SwitchArm
010D   2???           00488     goto    $-1
                      00489     
010E   2???           00490     call    PWMFWD          ;stop arm forward
                      00491     
                      00492 ;-------------------------------------------------
                      00493     
010F   1687           00494     bsf     Std1                ;move forward until no more column in the way
                      00495     
0110   2???           00496     call    OneS
0111   2???           00497     call    OneS
0112   2???           00498     call    OneS
0113   2???           00499     call    OneS
0114   2???           00500     call    OneS
0115   2???           00501     call    OneS
                      00502     
0116   2???           00503     call    Read1_US            ;checks to see if column present
                      00504     
0117   300F           00505     movlw   0xF         ; if column is not present, it'll go back to original form
0118   028F           00506     subwf   TMR1H
0119   1C03           00507     btfss   STATUS,C            
011A   2???           00508     goto    $-6
011B   2???           00509     call    OneS
                      00510     
011C   1287           00511     bcf     Std1
                      00512     
011D   2???           00513     call    RETURNFROMCOLUMN
                      00514     
011E   2???           00515     goto    BINREADINGSTART 
                      00516     
011F                  00517 RETURNFROMCOLUMN
                      00518     
011F   2???           00519     call    PWMBACK         ;start arm BACK
0120   2???           00520     call    HalfS
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0121   1D86           00521     btfss   SwitchArm
0122   2???           00522     goto    $-1
                      00523     
0123   2???           00524     call    PWMBACK         ;stop arm BACK
                      00525         
0124   2???           00526     call    HalfS
0125   2???           00527     call    HalfS
                      00528     
0126   1387           00529     bcf     Std2Backwards
0127   2???           00530     call    HalfS
0128   1D06           00531     btfss   SwitchWhite
0129   2???           00532     goto    $-1 
                      00533     
012A   1787           00534     bsf     Std2Backwards
                      00535     
012B   0008           00536     return
                      00537     
012C                  00538 READBIN
012C   1287           00539     bcf     Std1
012D   2???           00540     call    AddBin              ;adds bin to list
                      00541     
012E   2???           00542     call    Dist_Decoder        ; stores the distance
                      00543     Put_Dist_In_Reg     distreg
012F   ???? ???? 2???     M         lcall   Dist_Decoder
0132   086A               M         movfw   cm
0133   00ED               M         movwf   distreg
                      00544     Display_Dist        distreg
                          M     MOV     distreg,      temp  ; Bin_Dist_reg --> temp
0134   086D               M     MOVF  distreg,W     ; move reg1 into working register
0135   00B9               M     MOVWF   temp        ; reg2 <- reg1
0136   2???               M     call    Distance_Display
0137   2???           00545     call    StoreThisTick
                      00546     
0138   2???           00547     call    Clear_Display    
                      00548     
                      00549         
0139   2???           00550     call    DisplayBlackWhiteIR1        ;warms up IR
013A   2???           00551     call    DisplayBlackWhiteIR1        ;warms up IR  
013B   2???           00552     call    StoreBW1            ;reads & stores first IR data
                      00553     
                      00554 ;*****THRESHHOLD TEST ON IR 1************
                      00555 ;    nothing in front: 02056
                      00556 ;    black in front: 10000-41000
                      00557 ;    white in front: >60000
                      00558     
                      00559     ;READ 2 ALGORITHM IMPLEMENT HERE
                      00560     
013C   2???           00561     call    HalfS
013D   2???           00562     call    HalfS
013E   2???           00563     call    HalfS
013F   2???           00564     call    HalfS
                      00565     
0140   2???           00566     call    Clear_Display
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00567     
0141   2???           00568     call    DisplayBlackWhiteIR2        ;warms up IR
0142   2???           00569     call    DisplayBlackWhiteIR2        ;warms up IR
0143   2???           00570     call    StoreBW2
                      00571     
0144   2???           00572     call    HalfS
0145   2???           00573     call    HalfS
                      00574     
0146   1406           00575     bsf     LED
                      00576     
0147   0008           00577     return
                      00578     
                      00579     ;goto    EXIT    
                      00580      
                      00581     
0148                  00582 TOTAL
                      00583     
0148   2???           00584     call    Read1_US            ;warms up us sensors that was weird
0149   2???           00585     call    Read2_US
                      00586    
014A                  00587 TOTAL1
                      00588     
014A   1687           00589     bsf     Std1                ;moving
014B   01EF           00590     clrf    count_highs         ;reset the high value counter
                      00591     
014C                  00592 COLREADINGSTART
014C   2???           00593     call    Read1_US            ;checks to see if column present
                      00594     
                      00595 ;********THRESHOLD CALCULATION FOR COLUMN**************:
                      00596 ;   At around cm from col, reading: 02303
                      00597 ;       So, this will be the max value.
                      00598 ;       To be safe, will minus 02603 from the TMR variables.
                      00599 ;       This means, subtract 0x4 from TMR1H 
                      00600 ;       Value before at integration was 0x14, now trying 0x4
                      00601 ;       THE FOLLOWING CODE COUNTS 3 HIGHS
                      00602     
014D   300F           00603     movlw   0xF         ; if column present, it'll move forward
014E   028F           00604     subwf   TMR1H
014F   1803           00605     btfsc   STATUS,C        
0150   2???           00606     goto    $+8
0151   0AEF           00607     incf    count_highs
0152   3003           00608     movlw   MAX_HIGHS
0153   026F           00609     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
0154   1D03           00610     btfss   STATUS,Z                ; if result is zero, Z bit is set.
0155   2???           00611     goto    COLREADINGSTART
0156   2???           00612     call    AVOIDCOLUMN
                      00613     
0157   01EF           00614     clrf    count_highs         ;reset the high value counter
                      00615  
0158                  00616 BINREADINGSTART
                      00617     
0158   2???           00618     call    Read2_US            ;checks to see if bin present
                      00619     
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00620 ;********THRESHOLD CALCULATION FOR BIN**************:
                      00621 ;   At around 6cm from white bin, reading: 01103
                      00622 ;       So, this will be the max value.
                      00623 ;       To be safe, will minus 01210 from the TMR variables.
                      00624 ;       This means, subtract 0x4 from TMR1H 
                      00625 ;       Value before at integration was 0x14, now trying 0x4
                      00626 ;       CODE COUNTS 3 HIGHS
                      00627 
                      00628     
0159   3008           00629     movlw   0x8         ; read the bin
015A   028F           00630     subwf   TMR1H
015B   1803           00631     btfsc   STATUS,C
015C   2???           00632     goto    $+8
015D   0AEF           00633     incf    count_highs
015E   2???           00634     call    lcdLongDelay
015F   3003           00635     movlw   MAX_HIGHS
0160   026F           00636     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
0161   1D03           00637     btfss   STATUS,Z                ; if result is zero, Z bit is set.
0162   2???           00638     goto    BINREADINGSTART
0163   2???           00639     call    DELAYEDREAD
                      00640 
0164   2???           00641     goto    ENDTHIS   
                      00642     
0165                  00643 DELAYEDREAD
0165   2???           00644     call    DELAY1              ; do a 0.25s delay in order to move it forward a lil
0166   2???           00645     call    Read2_US            ;checks to see if bin present
0167   3006           00646     movlw   0x6         ; read the bin
0168   028F           00647     subwf   TMR1H
0169   1C03           00648     btfss   STATUS,C
016A   2???           00649     goto    DELAYEDREAD
016B   2???           00650     call    READBIN
016C   1006           00651     bcf     LED                 ; turn off LED After reading    
016D                  00652 ENDTHIS       
016D   3003           00653     movlw       0X3                     ;checks if max of 7 bins has been reached
016E   0260           00654     subwf       NumOfBins1,W            
016F   1903           00655     btfsc       STATUS,Z
0170   2???           00656     goto        EXIT
                      00657     
0171   0801           00658     movfw       TMR0                    ;checks if max ticks has been reached
0172   0248           00659     subwf       MAX_TICKS,W
0173   1903           00660     btfsc       STATUS,Z
0174   2???           00661     goto        EXIT
                      00662     
0175   2???           00663     goto        TOTAL1    
0176                  00664 CHECKSWITCH
0176   2???           00665     call    PWMFWD
0177   2???           00666     call    DELAY1
0178   2???           00667     call    HalfS
0179   1D86           00668     btfss   SwitchArm
017A   2???           00669     goto    $-1
                      00670    
017B   2???           00671     call    PWMFWD
                      00672  
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017C   2???           00673     call    PWMBACK
017D   2???           00674     call    DELAY1
017E   2???           00675     call    HalfS
017F   1D86           00676     btfss   SwitchArm
0180   2???           00677     goto    $-1 
                      00678     
0181   2???           00679     call    PWMBACK
                      00680     
0182   2???           00681     goto    CHECKSWITCH  
                      00682 
0183                  00683 EXIT
                      00684 
0183   2???           00685     call        Clear_Display
                      00686     Display     FinalMessage     ;display final interface for choosing stuff
  0000                    M                 local   loop_
  0000                    M                 local   end_
0184   01B3               M                 clrf    Table_Counter
0185   0103               M                 clrw            
0186   0833               M loop_   movf    Table_Counter,W
0187   2???               M                 call    FinalMessage
0188   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0189   1903               M                 btfsc   STATUS,Z
018A   2???               M                         goto    end_
018B   2???               M                 call    WR_DATA
018C   0AB3               M                 incf    Table_Counter,F
018D   2???               M                 goto    loop_
018E                      M end_
018E   2???           00687     call        Switch_Lines
018F   2???           00688     call        show_RTC
                      00689     
0190   1287           00690     bcf         Std1
0191   1407           00691     bsf         Std1Backwards
0192   2???           00692     goto        EXITDISPLAY
                      00693 
0193   1C86           00694 EXITDISPLAY     btfss           PORTB,1     ;Wait until data is available from the keypad
0194   2???           00695                 goto            $-1 
                      00696 
0195   0E06           00697                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0196   390F           00698                 andlw           0x0F
0197   00B9           00699                 movwf           temp
                      00700                 Key     0x00, Stickers1
0198   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0199   390F               M          andlw          0x0F
019A   3A00               M          xorlw          0x00
019B   1903               M          btfsc          STATUS, Z
019C   2???               M          call           Stickers1
                      00701                 Key     0x01, ShowBins
019D   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
019E   390F               M          andlw          0x0F
019F   3A01               M          xorlw          0x01
01A0   1903               M          btfsc          STATUS, Z
01A1   2???               M          call           ShowBins
                      00702                 Key     0x02, Locations
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01A3   390F               M          andlw          0x0F
01A4   3A02               M          xorlw          0x02
01A5   1903               M          btfsc          STATUS, Z
01A6   2???               M          call           Locations
                      00703                 Rotation        0x03
01A7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01A8   390F               M          andlw          0x0F
01A9   3A03               M          xorlw          0x03
01AA   1903               M          btfsc          STATUS, Z
01AB   2???               M          call           ShiftLeft
                      00704                 Key     0x04, show_RTC
01AC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01AD   390F               M          andlw          0x0F
01AE   3A04               M          xorlw          0x04
01AF   1903               M          btfsc          STATUS, Z
01B0   2???               M          call           show_RTC
01B1   1886           00705                 btfsc           PORTB,1     ;Wait until key is released
01B2   2???           00706                 goto            $-1
01B3   2???           00707                 goto            EXITDISPLAY
                      00708 
01B4   2???           00709     goto    EXIT
                      00710     
01B5                  00711 MoveBackwards
                      00712     
01B5   2???           00713     call    PWMSTOP
                      00714     
                      00715         
                      00716 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00717 
                      00718 ;*********************************************************
                      00719 ; A to D conversion with LCD display for IR sensor
                      00720 ;*********************************************************
                      00721         
                      00722 ;******************************************
                      00723 ;       Sticker Print Modules
                      00724 ;*****************************************
                      00725         
01B6                  00726 BWScanModule1
                      00727 
01B6   151F           00728         bsf     ADCON0,2                ;start conversion and wait for it to complete
01B7   191F           00729         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01B8   2???           00730         goto    $-1
                      00731         
01B9   081E           00732         movf    ADRESH, W
01BA   00D1           00733         movwf   NumH
01BB   081E           00734         movf    ADRESL, W
01BC   00D2           00735         movwf   NumL
01BD   2???           00736         call    Clear_Display
01BE   2???           00737         call    bin16_BCD
                      00738         PrintNumber     TenK
                          M         ;movf       number ,W
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BF   0853               M         movfw       TenK
01C0   2???               M         call        DectoChar
01C1   2???               M         call        WR_DATA
                      00739         PrintNumber     Thou
                          M         ;movf       number ,W
01C2   0854               M         movfw       Thou
01C3   2???               M         call        DectoChar
01C4   2???               M         call        WR_DATA
                      00740         PrintNumber     Hund
                          M         ;movf       number ,W
01C5   0855               M         movfw       Hund
01C6   2???               M         call        DectoChar
01C7   2???               M         call        WR_DATA
                      00741         PrintNumber     Tens
                          M         ;movf       number ,W
01C8   0856               M         movfw       Tens
01C9   2???               M         call        DectoChar
01CA   2???               M         call        WR_DATA
                      00742         PrintNumber     Ones
                          M         ;movf       number ,W
01CB   0857               M         movfw       Ones
01CC   2???               M         call        DectoChar
01CD   2???               M         call        WR_DATA
01CE   0008           00743         return
01CF                  00744 BWStoreModule1
01CF   1383           00745         BCF     STATUS, IRP
01D0   3042           00746         movlw   0x42
01D1   0084           00747         movwf   FSR
01D2   3000           00748         movlw   0X0
01D3   0360           00749         decf    NumOfBins1,W            ;want bin number to be decreased when back checks it
01D4   0784           00750         addwf   FSR,F
01D5   3055           00751         movlw   0X55                    ; roughly 21000
01D6   02D1           00752         subwf   NumH
01D7   3000           00753         movlw   0x0
01D8   1803           00754         btfsc   STATUS, C
01D9   3001           00755         movlw   0x1
01DA   0080           00756         movwf   INDF
01DB   0008           00757         return  
                      00758         
01DC                  00759 BWScanModule2
                      00760 
01DC   151F           00761         bsf     ADCON0,2                ;start conversion and wait for it to complete
01DD   191F           00762         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01DE   2???           00763         goto    $-1
                      00764         
01DF   081E           00765         movf    ADRESH, W
01E0   00D1           00766         movwf   NumH
01E1   081E           00767         movf    ADRESL, W
01E2   00D2           00768         movwf   NumL
01E3   2???           00769         call    Clear_Display
01E4   2???           00770         call    bin16_BCD
                      00771         PrintNumber     TenK
                          M         ;movf       number ,W
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E5   0853               M         movfw       TenK
01E6   2???               M         call        DectoChar
01E7   2???               M         call        WR_DATA
                      00772         PrintNumber     Thou
                          M         ;movf       number ,W
01E8   0854               M         movfw       Thou
01E9   2???               M         call        DectoChar
01EA   2???               M         call        WR_DATA
                      00773         PrintNumber     Hund
                          M         ;movf       number ,W
01EB   0855               M         movfw       Hund
01EC   2???               M         call        DectoChar
01ED   2???               M         call        WR_DATA
                      00774         PrintNumber     Tens
                          M         ;movf       number ,W
01EE   0856               M         movfw       Tens
01EF   2???               M         call        DectoChar
01F0   2???               M         call        WR_DATA
                      00775         PrintNumber     Ones
                          M         ;movf       number ,W
01F1   0857               M         movfw       Ones
01F2   2???               M         call        DectoChar
01F3   2???               M         call        WR_DATA
01F4   0008           00776         return
01F5                  00777 BWStoreModule2
01F5   1383           00778         BCF     STATUS, IRP
01F6   3049           00779         movlw   0x49                    ;number 49 to try to get registers for back of bin
01F7   0084           00780         movwf   FSR
01F8   3000           00781         movlw   0X0
01F9   0360           00782         decf    NumOfBins1,W
01FA   0784           00783         addwf   FSR,F
01FB   3003           00784         movlw   0X3
01FC   02D1           00785         subwf   NumH
01FD   3000           00786         movlw   0x0
01FE   1803           00787         btfsc   STATUS, C
01FF   3001           00788         movlw   0x1
0200   0080           00789         movwf   INDF
0201   0008           00790         return  
                      00791         
                      00792 ;***************************************************
                      00793 ;       US Sensor Modules                           [TESTED]
                      00794 ;***************************************************
                      00795         
0202                  00796 Read1_US                    
                      00797          
                      00798         ;call           Read1_US1 
                      00799          
                      00800         ReadUltrasonic  UST1,US1E1
0202   018F               M     clrf        TMR1H
0203   018E               M     clrf        TMR1L
                          M 
0204   1008               M     bcf PORTD,   0                      ;make sure trigger is clear
0205   2???               M     call lcdLongDelay
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0206   1408               M     bsf PORTD,   0              ;trigger high, bottom sensor
0207   2???               M     call lcdLongDelay           ;10us delay
0208   1008               M     bcf PORTD,   0              ;trigger low
                          M 
0209   1D05               M     btfss       PORTA, 2                ;wait for echo to go high
020A   2???               M     goto        $-1
020B   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
020C   1905               M     btfsc       PORTA, 2                ;wait for echo to go low
020D   2???               M     goto        $-1
                          M 
020E   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00801         
020F   2???           00802         call            Clear_Display
                      00803         
0210   080F           00804         movf            TMR1H, W
0211   00D1           00805         movwf           NumH
0212   080E           00806         movf            TMR1L, W
0213   00D2           00807         movwf           NumL
                      00808         
0214   2???           00809         call            bin16_BCD
                      00810         
                      00811         PrintNumber     TenK
                          M         ;movf       number ,W
0215   0853               M         movfw       TenK
0216   2???               M         call        DectoChar
0217   2???               M         call        WR_DATA
                      00812         PrintNumber     Thou
                          M         ;movf       number ,W
0218   0854               M         movfw       Thou
0219   2???               M         call        DectoChar
021A   2???               M         call        WR_DATA
                      00813 ;       PrintNumber     Hund
                      00814 ;       PrintNumber     Tens
                      00815 ;       PrintNumber     Ones
021B   2???           00816         call            Clear_Display
021C   0008           00817         return
                      00818 
021D                  00819 Read2_US                    
                      00820          
                      00821         ;call           Read2_US1 
                      00822         
                      00823         ReadUltrasonic  UST2,US1E2
021D   018F               M     clrf        TMR1H
021E   018E               M     clrf        TMR1L
                          M 
021F   1088               M     bcf PORTD,   1                      ;make sure trigger is clear
0220   2???               M     call lcdLongDelay
                          M 
0221   1488               M     bsf PORTD,   1              ;trigger high, bottom sensor
0222   2???               M     call lcdLongDelay           ;10us delay
0223   1088               M     bcf PORTD,   1              ;trigger low
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0224   1D85               M     btfss       PORTA, 3                ;wait for echo to go high
0225   2???               M     goto        $-1
0226   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
0227   1985               M     btfsc       PORTA, 3                ;wait for echo to go low
0228   2???               M     goto        $-1
                          M 
0229   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00824          
022A   2???           00825         call            Clear_Display
                      00826         
022B   080F           00827         movf            TMR1H, W
022C   00D1           00828         movwf           NumH
022D   080E           00829         movf            TMR1L, W
022E   00D2           00830         movwf           NumL
                      00831         
022F   2???           00832         call            bin16_BCD
                      00833         
                      00834         PrintNumber     TenK
                          M         ;movf       number ,W
0230   0853               M         movfw       TenK
0231   2???               M         call        DectoChar
0232   2???               M         call        WR_DATA
                      00835         PrintNumber     Thou
                          M         ;movf       number ,W
0233   0854               M         movfw       Thou
0234   2???               M         call        DectoChar
0235   2???               M         call        WR_DATA
                      00836 ;       PrintNumber     Hund
                      00837 ;       PrintNumber     Tens
                      00838 ;       PrintNumber     Ones
0236   2???           00839         call            Clear_Display
0237   0008           00840         return
                      00841                 
                      00842 ;*******************************************************
                      00843 ; Dist_Decoder
                      00844 ;   input:  temp (holds bin_dist_reg)
                      00845 ;   output: cm, mm, m
                      00846 ;   Desc:   Converts the count in the rotary encoder
                      00847 ;           into physical distance
                      00848 ;*******************************************************
0238                  00849 Dist_Decoder
                      00850         ; Initalize all registers
0238   01EA           00851         clrf    cm              
0239   01EB           00852         clrf    mm
023A   01EC           00853         clrf    m
                      00854 
                      00855         ; Check if its already zero
023B   0839           00856         movfw   temp
023C   3C00           00857         sublw   D'0'
023D   1903           00858         btfsc   STATUS, Z
023E   0008           00859         return
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00860         
023F                  00861 Decode_loop                     ; Assume each step is 3.6 cm
                      00862         ; Perform decode
                      00863         ADDL    cm, cm, D'6'        ;perimeter of 2*pi
023F   3006               M     MOVLW  D'6'         ; move literal into working register
0240   076A               M     ADDWF   cm,W        ; W <- literal + reg
0241   00EA               M     MOVWF   cm          ; Destination <- literal + reg
                      00864         ADDL    mm, mm, D'3'
0242   3003               M     MOVLW  D'3'         ; move literal into working register
0243   076B               M     ADDWF   mm,W        ; W <- literal + reg
0244   00EB               M     MOVWF   mm          ; Destination <- literal + reg
0245   03B9           00865         decf    temp
                      00866         
0246                  00867 Check_mm_overflow
                      00868         ; Test if mm has overflowed! (mm >= 10)
0246   300A           00869         movlw   D'10'
0247   026B           00870         subwf   mm, w           ; mm - 10 --> w (w = f - w, when d = 0) 
0248   1803           00871         btfsc   STATUS, C       ; Y = mm, w = 10, Y-w
0249   2???           00872         goto    mm_overflow     ; Run overflow routine if it did overflow
                      00873         
024A                  00874 Check_cm_overflow       
                      00875         ; Test if cm has overflowed! (cm >= 100)
024A   086A           00876         movfw   cm
024B   00F0           00877         movwf   temp_2
024C   3064           00878         movlw   D'100'
024D   0270           00879         subwf   temp_2, w       ; cm - 100 --> w (w = f - w, when d = 0) 
024E   1803           00880         btfsc   STATUS, C       ; Y = cm, w = 100, Y-w
024F   2???           00881         goto    cm_overflow     ; Run overflow routine if it did overflow
                      00882 
0250                  00883 Decode_check_done       
                      00884         ; Test if done decoding 
0250   0839           00885         movfw   temp
0251   3C00           00886         sublw   D'0'            ; MAKE THIS A LARGER NUMBER TO ACCOUNT FOR 
0252   1D03           00887         btfss   STATUS, Z       ; DIFFERENCE IN DISTANCE
0253   2???           00888         goto    Decode_loop
0254   0008           00889         return  
                      00890         
0255                  00891 mm_overflow
0255   0AEA           00892         incf    cm              ; cm + 1 --> cm
0256   300A           00893         movlw   D'10'           ; 10 --> w
0257   02EB           00894         subwf   mm, f           ; mm - 10 --> mm (f = f - w, when d = 1) 
0258   2???           00895         goto    Decode_check_done       ; Check cm overflow
                      00896         
0259                  00897 cm_overflow
0259   0AEC           00898         incf    m               ; m + 1 --> m
025A   3064           00899         movlw   D'100'          ; 100 --> w
025B   02EA           00900         subwf   cm, f           ; cm - 100 --> cm (f = f - w, when d = 1) 
025C   2???           00901         goto    Decode_check_done       ; Continue decoding
                      00902         
025D                  00903 StoreThisTick
025D   1383           00904         BCF     STATUS, IRP
025E   303B           00905         movlw   0x3B                    ;number 56 to try to get location registers in cblock
025F   0084           00906         movwf   FSR
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0260   3000           00907         movlw   0X0
0261   0360           00908         decf    NumOfBins1,W
0262   0784           00909         addwf   FSR,F
0263   0801           00910         movfw   TMR0            ; poll encoder for current state
0264   00B9           00911         movwf   temp
0265   0080           00912         movwf   INDF
                      00913         
0266   0008           00914         return
                      00915 ;*********************************************
                      00916 ; Keypad Modules
                      00917 ;*******************************************
                      00918          
                      00919 
0267                  00920 ShiftLeft
0267   3018           00921         movlw           b'00011000'             ;Move to the left
0268   2???           00922         call            WR_INS
0269   0008           00923         return
                      00924 
026A   2???           00925         goto    KeypadandLCD
                      00926         
026B                  00927 RTCDisplay
026B   2???           00928         call    show_RTC
                      00929         
026C   1886           00930         btfsc           PORTB,1     ;Wait until data is available from the keypad
026D   0008           00931         return
026E   1886           00932         btfsc           PORTB,1     ;Wait until data is available from the keypad
026F   0008           00933         return
0270   1886           00934         btfsc           PORTB,1     ;Wait until data is available from the keypad
0271   0008           00935         return
0272   1886           00936         btfsc           PORTB,1     ;Wait until data is available from the keypad
0273   0008           00937         return
0274   2???           00938         goto        RTCDisplay
                      00939         
0275                  00940 StoreBW1
0275   1283           00941         bcf     STATUS,RP0
0276   30C5           00942         movlw   b'11000101'             
0277   009F           00943         movwf   ADCON0                  ;choose RA0
                      00944         
0278   2???           00945         call    BWScanModule1   
0279   2???           00946         call    BWStoreModule1
                      00947         
027A   0008           00948         return                          ; why was there not a return here before?
                      00949         
027B                  00950 StoreBW2
027B   1283           00951         bcf     STATUS,RP0
027C   30CD           00952         movlw   b'11001101'             
027D   009F           00953         movwf   ADCON0                  ;choose RA1
                      00954         
027E   2???           00955         call    BWScanModule2
027F   2???           00956         call    BWStoreModule2
                      00957         
0280   0008           00958         return
                      00959         
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0281                  00960 AddBin
0281   2???           00961         Call Clear_Display
0282   0AE0           00962         incf    NumOfBins1,F
                      00963         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
0283   0860               M         movfw       NumOfBins1
0284   2???               M         call        DectoChar
0285   2???               M         call        WR_DATA
0286   3008           00964         movlw   0X8                     ;checks if max of 7 bins has been reached
0287   0260           00965         subwf   NumOfBins1,W            
0288   1903           00966         btfsc   STATUS,Z
0289   2???           00967         goto    EXIT
028A   0008           00968         return
                      00969         
028B                  00970 ShowBins
                      00971         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
028B   0860               M         movfw       NumOfBins1
028C   2???               M         call        DectoChar
028D   2???               M         call        WR_DATA
028E   0008           00972         return
                      00973         
028F                  00974 Stickers1                   ;TESTED
028F   2???           00975         call            Clear_Display
0290   3000           00976         movlw           0X0
0291   00DF           00977         movwf           counter
0292   1383           00978         BCF             STATUS, IRP
0293   3041           00979         movlw           0x41
0294   0084           00980         movwf           FSR
0295   0860           00981         movfw           NumOfBins1
0296   00DE           00982         movwf           countdown
                      00983         Display         FrontStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
0297   01B3               M                 clrf    Table_Counter
0298   0103               M                 clrw            
0299   0833               M loop_   movf    Table_Counter,W
029A   2???               M                 call    FrontStickers
029B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
029C   1903               M                 btfsc   STATUS,Z
029D   2???               M                         goto    end_
029E   2???               M                 call    WR_DATA
029F   0AB3               M                 incf    Table_Counter,F
02A0   2???               M                 goto    loop_
02A1                      M end_
02A1                  00984 FrontLoop1      
02A1   0A84           00985         INCF            FSR,1
02A2   0ADF           00986         incf            counter
                      00987         PrintNumber     counter
                          M         ;movf       number ,W
02A3   085F               M         movfw       counter
02A4   2???               M         call        DectoChar
02A5   2???               M         call        WR_DATA
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00988         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02A6   01B3               M                 clrf    Table_Counter
02A7   0103               M                 clrw            
02A8   0833               M loop_   movf    Table_Counter,W
02A9   2???               M                 call    Colon
02AA   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02AB   1903               M                 btfsc   STATUS,Z
02AC   2???               M                         goto    end_
02AD   2???               M                 call    WR_DATA
02AE   0AB3               M                 incf    Table_Counter,F
02AF   2???               M                 goto    loop_
02B0                      M end_
02B0   0800           00989         movfw           INDF
                      00990         PrintCol        W
02B1   0800               M         movfw       W
02B2   2???               M         call        StickerColours
02B3   2???               M         call        WR_DATA
                      00991         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02B4   01B3               M                 clrf    Table_Counter
02B5   0103               M                 clrw            
02B6   0833               M loop_   movf    Table_Counter,W
02B7   2???               M                 call    Spacee
02B8   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02B9   1903               M                 btfsc   STATUS,Z
02BA   2???               M                         goto    end_
02BB   2???               M                 call    WR_DATA
02BC   0AB3               M                 incf    Table_Counter,F
02BD   2???               M                 goto    loop_
02BE                      M end_
02BE   0BDE           00992         decfsz          countdown,F
02BF   2???           00993         goto            FrontLoop1
                      00994         
02C0   2???           00995         call            Switch_Lines
                      00996         
02C1                  00997 Stickers2                       ;TESTED
                      00998         
02C1   3000           00999         movlw           0X0
02C2   00DF           01000         movwf           counter
02C3   1383           01001         BCF             STATUS, IRP
02C4   3048           01002         movlw           0x48
02C5   0084           01003         movwf           FSR
02C6   0860           01004         movfw           NumOfBins1
02C7   00DE           01005         movwf           countdown
                      01006         Display         BackStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02C8   01B3               M                 clrf    Table_Counter
02C9   0103               M                 clrw            
02CA   0833               M loop_   movf    Table_Counter,W
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02CB   2???               M                 call    BackStickers
02CC   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02CD   1903               M                 btfsc   STATUS,Z
02CE   2???               M                         goto    end_
02CF   2???               M                 call    WR_DATA
02D0   0AB3               M                 incf    Table_Counter,F
02D1   2???               M                 goto    loop_
02D2                      M end_
02D2                  01007 FrontLoop2
02D2   0A84           01008         INCF            FSR,1
02D3   0ADF           01009         incf            counter
                      01010         PrintNumber     counter
                          M         ;movf       number ,W
02D4   085F               M         movfw       counter
02D5   2???               M         call        DectoChar
02D6   2???               M         call        WR_DATA
                      01011         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02D7   01B3               M                 clrf    Table_Counter
02D8   0103               M                 clrw            
02D9   0833               M loop_   movf    Table_Counter,W
02DA   2???               M                 call    Colon
02DB   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02DC   1903               M                 btfsc   STATUS,Z
02DD   2???               M                         goto    end_
02DE   2???               M                 call    WR_DATA
02DF   0AB3               M                 incf    Table_Counter,F
02E0   2???               M                 goto    loop_
02E1                      M end_
02E1   0800           01012         movfw           INDF
                      01013         PrintCol        W
02E2   0800               M         movfw       W
02E3   2???               M         call        StickerColours
02E4   2???               M         call        WR_DATA
                      01014         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02E5   01B3               M                 clrf    Table_Counter
02E6   0103               M                 clrw            
02E7   0833               M loop_   movf    Table_Counter,W
02E8   2???               M                 call    Spacee
02E9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02EA   1903               M                 btfsc   STATUS,Z
02EB   2???               M                         goto    end_
02EC   2???               M                 call    WR_DATA
02ED   0AB3               M                 incf    Table_Counter,F
02EE   2???               M                 goto    loop_
02EF                      M end_
02EF   0BDE           01015         decfsz          countdown,F
02F0   2???           01016         goto            FrontLoop2
                      01017         
02F1   0008           01018         return
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01019         
02F2                  01020 Locations                       ;TESTED
02F2   2???           01021         call            Clear_Display
02F3   3000           01022         movlw           0X0
02F4   00DF           01023         movwf           counter
02F5   1383           01024         BCF             STATUS, IRP
02F6   303A           01025         movlw           0x3A
02F7   0084           01026         movwf           FSR
02F8   0860           01027         movfw           NumOfBins1
02F9   00DE           01028         movwf           countdown
                      01029         Display         Distances
  0000                    M                 local   loop_
  0000                    M                 local   end_
02FA   01B3               M                 clrf    Table_Counter
02FB   0103               M                 clrw            
02FC   0833               M loop_   movf    Table_Counter,W
02FD   2???               M                 call    Distances
02FE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02FF   1903               M                 btfsc   STATUS,Z
0300   2???               M                         goto    end_
0301   2???               M                 call    WR_DATA
0302   0AB3               M                 incf    Table_Counter,F
0303   2???               M                 goto    loop_
0304                      M end_
0304   2???           01030         call            Switch_Lines
0305                  01031 FrontLoop       
0305   0A84           01032         INCF            FSR,1
0306   0ADF           01033         incf            counter
                      01034         PrintNumber     counter
                          M         ;movf       number ,W
0307   085F               M         movfw       counter
0308   2???               M         call        DectoChar
0309   2???               M         call        WR_DATA
                      01035         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
030A   01B3               M                 clrf    Table_Counter
030B   0103               M                 clrw            
030C   0833               M loop_   movf    Table_Counter,W
030D   2???               M                 call    Colon
030E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
030F   1903               M                 btfsc   STATUS,Z
0310   2???               M                         goto    end_
0311   2???               M                 call    WR_DATA
0312   0AB3               M                 incf    Table_Counter,F
0313   2???               M                 goto    loop_
0314                      M end_
                      01036         Display_Dist    INDF
                          M     MOV     INDF,         temp  ; Bin_Dist_reg --> temp
0314   0800               M     MOVF  INDF,W        ; move reg1 into working register
0315   00B9               M     MOVWF   temp        ; reg2 <- reg1
0316   2???               M     call    Distance_Display
                      01037         Display         Spacee
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_
  0000                    M                 local   end_
0317   01B3               M                 clrf    Table_Counter
0318   0103               M                 clrw            
0319   0833               M loop_   movf    Table_Counter,W
031A   2???               M                 call    Spacee
031B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
031C   1903               M                 btfsc   STATUS,Z
031D   2???               M                         goto    end_
031E   2???               M                 call    WR_DATA
031F   0AB3               M                 incf    Table_Counter,F
0320   2???               M                 goto    loop_
0321                      M end_
0321   0BDE           01038         decfsz          countdown,F
0322   2???           01039         goto            FrontLoop
                      01040         
0323   0008           01041         return
                      01042         
0324                  01043 LEDControlON
                      01044         
0324   1862           01045         btfsc       LEDcounter0,0
0325   2???           01046         goto        $+4
0326   1406           01047         bsf         LED
0327   1462           01048         bsf         LEDcounter0,0
0328   0008           01049         return
                      01050         
                      01051         
0329   1006           01052         bcf         LED
032A   1062           01053         bcf         LEDcounter0,0
032B   0008           01054         return
                      01055         
                      01056         
032C                  01057 DisplayBlackWhiteIR1
                      01058         
032C   30C5           01059         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
032D   009F           01060         movwf   ADCON0  
                      01061                 
032E   2???           01062         call            BWScanModule1   
032F   0008           01063         return
                      01064         
                      01065         
0330                  01066 DisplayBlackWhiteIR2
                      01067         
0330   30CD           01068         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra as the reader pin
0331   009F           01069         movwf   ADCON0  
                      01070         
0332   2???           01071         call            BWScanModule1   
0333   0008           01072         return
                      01073 
                      01074         
0334                  01075 StdRotation1
                      01076         
0334   1863           01077         btfsc       LEDcounter1,0
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0335   2???           01078         goto        $+4
0336   1287           01079         bcf             Std1
0337   1463           01080         bsf         LEDcounter1,0
0338   0008           01081         return
                      01082         
0339   1687           01083         bsf             Std1
033A   1063           01084         bcf         LEDcounter1,0
033B   0008           01085         return
                      01086         
033C                  01087 StdRotation2
                      01088 
033C   1864           01089         btfsc       LEDcounter2,0
033D   2???           01090         goto        $+4
                      01091         
033E   1307           01092         bcf             Std2
033F   1464           01093         bsf         LEDcounter2,0
0340   0008           01094         return
                      01095         
0341   1D06           01096         btfss       SwitchWhite
0342   1707           01097         bsf         Std2
                      01098         
0343   1707           01099         bsf             Std2
0344   1064           01100         bcf         LEDcounter2,0
                      01101 
0345   0008           01102         return
                      01103                 
0346                  01104 StdRotation1Backwards
                      01105         
0346   1866           01106         btfsc       LEDcounter4,0
0347   2???           01107         goto        $+4
0348   1407           01108         bsf             Std1Backwards
0349   1466           01109         bsf         LEDcounter4,0
034A   0008           01110         return
                      01111         
034B   1007           01112         bcf             Std1Backwards
034C   1066           01113         bcf         LEDcounter4,0
034D   0008           01114         return
                      01115         
034E                  01116 StdRotation2Backwards
                      01117 
034E   1867           01118         btfsc       LEDcounter5,0
034F   2???           01119         goto        $+4
0350   1787           01120         bsf             Std2Backwards
0351   1467           01121         bsf         LEDcounter5,0
0352   0008           01122         return
                      01123         
0353   1D06           01124         btfss       SwitchWhite
0354   1707           01125         bsf         Std2
                      01126         
0355   1387           01127         bcf             Std2Backwards
0356   1067           01128         bcf         LEDcounter5,0
0357   0008           01129         return
                      01130 
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0358                  01131 PWMFWD  
                      01132         
                      01133     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01134     
                      01135     ;save   pr2 value so that you can zero it after
                      01136     
0358   1868           01137     btfsc           LEDcounter7,0
0359   2???           01138     goto            $+4
035A   0197           01139     clrf            CCP1CON
035B   1468           01140     bsf             LEDcounter7,0
035C   0008           01141     return
                      01142     
035D   1683 1303      01143     BANKSEL TRISC
035F   1107           01144     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01145     
0360   0817           01146     MOVF     CCP1CON,W          ;set CCP1 as PWM
0361   39F0           01147     ANDLW    0xF0
0362   380C           01148     IORLW    0x0C
0363   0097           01149     MOVWF    CCP1CON
                      01150 
0364   0812           01151     movfw   PR2
0365   00D0           01152     movwf   pr2temp
                      01153     
                      01154     ;11000011
0366   30C3           01155     MOVLW    b'11000011'        ;set highest PWM value
0367   1683 1303      01156     BANKSEL  PR2                
0369   0092           01157     MOVWF    PR2                
036A   1283 1303      01158     BANKSEL  TMR2               
                      01159     
036C   1492           01160     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01161     
036D   0195           01162     CLRF    CCPR1L              ;set PWM to zero
                      01163     
036E   1712           01164     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
036F   1692           01165     BSF     T2CON, TOUTPS2
0370   1612           01166     BSF     T2CON, TOUTPS1
0371   1592           01167     BSF     T2CON, TOUTPS0
                      01168     
                      01169     ; SET PWM duty cycle
                      01170     ;01001110
0372   1697           01171     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
0373   1617           01172     BSF     CCP1CON, 4
                      01173     MOVLF   B'01100000', CCPR1L                 ; previous was 01101
0374   3060               M     MOVLW  B'01100000'  ; move literal into working register
0375   0095               M     MOVWF   CCPR1L      ; move working register into reg
0376   1597           01174     BSF     CCP1CON, 3
0377   1517           01175     BSF     CCP1CON, 2
                      01176     
0378   1512           01177     BSF     T2CON, TMR2ON       ;and start the timer running
                      01178  
0379   1068           01179     bcf             LEDcounter7,0
                      01180     
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

037A   0008           01181     return
                      01182     
037B                  01183 PWMBACK
                      01184     
                      01185     ;************ SECOND PWM - Positive one ******************************
                      01186     
037B   1869           01187     btfsc           LEDcounter8,0
037C   2???           01188     goto            $+4
037D   019D           01189     clrf            CCP2CON
                      01190     ;bcf                    PORTC,1
037E   1469           01191     bsf             LEDcounter8,0
037F   0008           01192     return
                      01193     
                      01194  
                      01195     
0380   1683 1303      01196     BANKSEL TRISC
0382   1087           01197     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01198     
0383   081D           01199     MOVF     CCP2CON,W          ;set CCP2 as PWM
0384   39F0           01200     ANDLW    0xF0
0385   380C           01201     IORLW    0x0C
0386   009D           01202     MOVWF    CCP2CON
                      01203     
                      01204     ;11000011
0387   30C3           01205     MOVLW    b'11000011'        ;set highest PWM value
0388   1683 1303      01206     BANKSEL  PR2                
038A   0092           01207     MOVWF    PR2                
038B   1283 1303      01208     BANKSEL  TMR2               
                      01209     
038D   1492           01210     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01211     
038E   019B           01212     CLRF    CCPR2L              ;set PWM to zero
                      01213     
038F   1712           01214     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0390   1692           01215     BSF     T2CON, TOUTPS2
0391   1612           01216     BSF     T2CON, TOUTPS1
0392   1592           01217     BSF     T2CON, TOUTPS0
                      01218     
                      01219     ; SET PWM duty cycle
                      01220     ;01001110
0393   169D           01221     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
0394   161D           01222     BSF     CCP2CON, 4
0395   3060           01223     MOVLW   B'01100000'                         ; good speed for moving the arm
0396   009B           01224     MOVWF   CCPR2L      
0397   159D           01225     BSF     CCP2CON, 3
0398   151D           01226     BSF     CCP2CON, 2
                      01227     
0399   1512           01228     BSF     T2CON, TMR2ON       ;and start the timer running
039A   1283           01229     BCF     STATUS,RP0
                      01230     
                      01231     ;bsf                    PORTC,1
                      01232     
039B   1069           01233     bcf             LEDcounter8,0
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01234     
039C   0008           01235     return
                      01236     
039D                  01237 PWMSTOP
                      01238     
039D   0197           01239     clrf   CCP1CON
039E   019D           01240     clrf   CCP2CON
039F   0850           01241     movfw   pr2temp
03A0   0092           01242     movwf   PR2
                      01243     
03A1   0008           01244     return
                      01245         
                      01246         
                      01247 ;***************************************
                      01248 ; LCD control
                      01249 ;***************************************
03A2                  01250 Switch_Lines
03A2   30C0           01251                 movlw   B'11000000'
03A3   2???           01252                 call    WR_INS
03A4   0008           01253                 return
                      01254 
03A5                  01255 Clear_Display
03A5   3001           01256                 movlw   B'00000001'
03A6   2???           01257                 call    WR_INS
03A7   0008           01258                 return
                      01259 
                      01260 ;***************************************
                      01261 ; Delay 0.5s
                      01262 ;***************************************
03A8                  01263 HalfS   
  0000                01264         local   HalfS_0
03A8   3088           01265       movlw 0x88
03A9   00B0           01266       movwf COUNTH
03AA   30BD           01267       movlw 0xBD
03AB   00B1           01268       movwf COUNTM
03AC   3003           01269       movlw 0x03
03AD   00B2           01270       movwf COUNTL
                      01271 
03AE                  01272 HalfS_0
03AE   0BB0           01273       decfsz COUNTH, f
03AF   2???           01274       goto   $+2
03B0   0BB1           01275       decfsz COUNTM, f
03B1   2???           01276       goto   $+2
03B2   0BB2           01277       decfsz COUNTL, f
03B3   2???           01278       goto   HalfS_0
                      01279 
03B4   2???           01280       goto $+1
03B5   0000           01281       nop
03B6   0000           01282       nop
03B7   0008           01283                 return
                      01284                 
                      01285 ;***************************************
                      01286 ;***************************************
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01287 ; Delay = 0.6 seconds
                      01288 ; Clock frequency = 4 MHz
03B8                  01289 DELAY1
                      01290                         ;599996 cycles
03B8   30D1           01291         movlw   0xD1
03B9   00B5           01292         movwf   lcd_d1
03BA   304F           01293         movlw   0x4F
03BB   00B6           01294         movwf   lcd_d2
03BC   3002           01295         movlw   0x02
03BD   00EE           01296         movwf   lcd_d1_2
03BE                  01297 Delay_0
03BE   0BB5           01298         decfsz  lcd_d1, f
03BF   2???           01299         goto    $+2
03C0   0BB6           01300         decfsz  lcd_d2, f
03C1   2???           01301         goto    $+2
03C2   0BEE           01302         decfsz  lcd_d1_2, f
03C3   2???           01303         goto    Delay_0
                      01304 
                      01305                         ;4 cycles
03C4   0008           01306         return
                      01307         
                      01308 ;0.25s delay    
                      01309         
03C5                  01310 DELAY2
                      01311                         ;249998 cycles
03C5   304F           01312         movlw   0x4F
03C6   00B5           01313         movwf   lcd_d1
03C7   30C4           01314         movlw   0xC4
03C8   00B6           01315         movwf   lcd_d2
03C9                  01316 Delay_02
03C9   0BB5           01317         decfsz  lcd_d1, f
03CA   2???           01318         goto    $+2
03CB   0BB6           01319         decfsz  lcd_d2, f
03CC   2???           01320         goto    Delay_0
                      01321 
                      01322                         ;2 cycles
03CD   2???           01323         goto    $+1
                      01324         
Warning[203]: Found opcode in column 1. (return)
03CE   0008           01325 return
                      01326         
                      01327 ;***************************************
                      01328 ;Init_TMR0
                      01329 ;   Input:  RA4
                      01330 ;   Output: TMR0 register
                      01331 ;   desc:   Counts the clock pulses for the
                      01332 ;           rotary encoder
                      01333 ;****************************************
03CF                  01334 Init_TMR0                           ; INITIALIZE TIMER 0   
03CF   1683 1303      01335     BANKSEL OPTION_REG
                      01336     MOVLF   B'00101000', OPTION_REG
03D1   3028               M     MOVLW  B'00101000'  ; move literal into working register
03D2   0081               M     MOVWF   OPTION_REG  ; move working register into reg
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01337     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01338     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
                      01339     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01340     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01341     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01342     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01343     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01344     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
03D3   1283 1303      01345     BANKSEL TMR0
03D5   0181           01346     CLRF   TMR0                     ; Clear timer 0
03D6   0008           01347     return  
                      01348     
                      01349 ;************************************
                      01350 ; RTC Sublabels
                      01351 ;************************************
                      01352     
03D7                  01353 show_RTC
                      01354 ;               ;clear LCD screen
                      01355 ;               movlw   b'00000001'
                      01356 ;               call    WR_INS
                      01357 ;
                      01358 ;               ;Get year
                      01359 ;               movlw   "2"                             ;First line shows 20**/**/**
                      01360 ;               call    WR_DATA
                      01361 ;               movlw   "0"
                      01362 ;               call    WR_DATA
                      01363 ;               rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                      01364 ;               movfw   0x77
                      01365 ;               call    WR_DATA
                      01366 ;               movfw   0x78
                      01367 ;               call    WR_DATA
                      01368 ;
                      01369 ;               movlw   "/"
                      01370 ;               call    WR_DATA
                      01371 ;
                      01372 ;               ;Get month
                      01373 ;               rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                      01374 ;               movfw   0x77
                      01375 ;               call    WR_DATA
                      01376 ;               movfw   0x78
                      01377 ;               call    WR_DATA
                      01378 ;
                      01379 ;               movlw   "/"
                      01380 ;               call    WR_DATA
                      01381 ;
                      01382 ;               ;Get day
                      01383 ;               rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                      01384 ;               movfw   0x77
                      01385 ;               call    WR_DATA
                      01386 ;               movfw   0x78
                      01387 ;               call    WR_DATA
                      01388 ;
                      01389 ;               movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01390 ;               call    WR_INS
                      01391 ;               ONLY GONNA DISPLAY THE TIME HAHA
                      01392                 ;Get hour
                      01393                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03D7   3002               M         movlw   0x02
03D8   1283 1303          M         banksel 0x73
03DA   00F3               M         movwf   0x73
03DB   2???               M         call    read_rtc
03DC   1283 1303          M         banksel 0x75
03DE   0875               M         movf    0x75,w
03DF   2???               M         call    rtc_convert   
03E0   0877           01394                 movfw   0x77
03E1   2???           01395                 call    WR_DATA
03E2   0878           01396                 movfw   0x78
03E3   2???           01397                 call    WR_DATA
03E4   303A           01398                 movlw                   ":"
03E5   2???           01399                 call    WR_DATA
                      01400 
                      01401                 ;Get minute             
                      01402                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03E6   3001               M         movlw   0x01
03E7   1283 1303          M         banksel 0x73
03E9   00F3               M         movwf   0x73
03EA   2???               M         call    read_rtc
03EB   1283 1303          M         banksel 0x75
03ED   0875               M         movf    0x75,w
03EE   2???               M         call    rtc_convert   
03EF   0877           01403                 movfw   0x77
03F0   2???           01404                 call    WR_DATA
03F1   0878           01405                 movfw   0x78
03F2   2???           01406                 call    WR_DATA         
03F3   303A           01407                 movlw                   ":"
03F4   2???           01408                 call    WR_DATA
                      01409                 
                      01410                 ;Get seconds
                      01411                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       0x77 and the ones digit is placed in 0x78
03F5   3000               M         movlw   0x00
03F6   1283 1303          M         banksel 0x73
03F8   00F3               M         movwf   0x73
03F9   2???               M         call    read_rtc
03FA   1283 1303          M         banksel 0x75
03FC   0875               M         movf    0x75,w
03FD   2???               M         call    rtc_convert   
03FE   0877           01412                 movfw   0x77
03FF   2???           01413                 call    WR_DATA
0400   0878           01414                 movfw   0x78
0401   2???           01415                 call    WR_DATA
                      01416                 
0402   2???           01417                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
0403   0008           01418                 return
                      01419 
                      01420 ;***************************************
                      01421 ; Setup RTC with time defined by user
                      01422 ;***************************************
0404                  01423 set_rtc_time
                      01424 
                      01425                 ;rtc_resetAll   ;reset rtc
                      01426                 ;works up to here
                      01427 
                      01428                 ;rtc_set        0x00,   B'10000000'
                      01429                 ;works up to here
                      01430                 
                      01431                 ;set time 
                      01432 ;               rtc_set 0x06,   B'00010110'             ; Year
                      01433 ;               ;works up to here
                      01434 ;               rtc_set 0x05,   B'00000011'             ; Month
                      01435 ;               rtc_set 0x04,   B'00100000'             ; Date
                      01436                 ;works up to here
                      01437                 ;rtc_set        0x03,   B'00100010'             ; Day
                      01438                 ;stops working on this one^
                      01439                 ;seems like day is the one that crashes it
                      01440                 rtc_set 0x02,   B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0404   1283 1303          M         banksel 0x73
0406   3002               M         movlw   0x02
0407   00F3               M         movwf   0x73
0408   1283 1303          M         banksel 0x74
040A   3000               M         movlw   B'00000000'
040B   00F4               M         movwf   0x74    
040C   2???               M         call    write_rtc
                      01441                 ;works on this one
                      01442                 rtc_set 0x01,   B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
040D   1283 1303          M         banksel 0x73
040F   3001               M         movlw   0x01
0410   00F3               M         movwf   0x73
0411   1283 1303          M         banksel 0x74
0413   3000               M         movlw   B'00000000'
0414   00F4               M         movwf   0x74    
0415   2???               M         call    write_rtc
                      01443                 ;works on this one
                      01444                 rtc_set 0x00,   B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0416   1283 1303          M         banksel 0x73
0418   3000               M         movlw   0x00
0419   00F3               M         movwf   0x73
041A   1283 1303          M         banksel 0x74
041C   3000               M         movlw   B'00000000'
041D   00F4               M         movwf   0x74    
041E   2???               M         call    write_rtc
                      01445                 ;works on this one
041F   0008           01446                 return
                      01447 
                      01448 ;***************************************
                      01449 ; Delay 1s
                      01450 ;***************************************
0420                  01451 OneS
  0000                01452                 local   OneS_0
0420   3010           01453       movlw 0x10
0421   00B0           01454       movwf COUNTH
0422   307A           01455       movlw 0x7A
0423   00B1           01456       movwf COUNTM
0424   3006           01457       movlw 0x06
0425   00B2           01458       movwf COUNTL
                      01459 
0426                  01460 OneS_0
0426   0BB0           01461       decfsz COUNTH, f
0427   2???           01462       goto   $+2
0428   0BB1           01463       decfsz COUNTM, f
0429   2???           01464       goto   $+2
042A   0BB2           01465       decfsz COUNTL, f
042B   2???           01466       goto   OneS_0
                      01467 
042C   2???           01468       goto $+1
042D   0000           01469       nop
042E   0000           01470       nop
042F   0008           01471                 return
                      01472                 
0430                  01473 lcdLongDelay
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0430   3014           01474     movlw d'20'
0431   00B6           01475     movwf lcd_d2
0432                  01476 LLD_LOOP
                      01477     LCD_DELAY
0432   30FF               M         movlw   0xFF
0433   00B5               M         movwf   lcd_d1
0434   0BB5               M         decfsz  lcd_d1,f
0435   2???               M         goto    $-1
0436   0BB6           01478     decfsz lcd_d2,f
0437   2???           01479     goto LLD_LOOP
0438   0008           01480     return
                      01481     
                      01482 ;***************************************
                      01483 ; Look up table
                      01484 ;***************************************
                      01485     
0439                  01486 Welcome_Msg
                      01487         
                      01488         ;Change Page
0439   00BA           01489         movwf   Temp
043A   30??           01490         movlw   HIGH Welcome_MsgEntries
043B   008A           01491         movwf   PCLATH
043C   083A           01492         movf    Temp,w
043D   3E??           01493         addlw   LOW Welcome_MsgEntries
043E   1803           01494         btfsc   STATUS,C
043F   0A8A           01495             incf    PCLATH,f
0440   0082           01496         movwf   PCL     
0441   0782           01497         addwf    PCL,F
0442                  01498 Welcome_MsgEntries
0442   3431 343A 3453 01499         dt        "1:Simulation|#/D:PWM|*/0:Std1&Std2|3:B/W", 0
       3469 346D 3475 
       346C 3461 3474 
       3469 346F 346E 
       347C 3423 342F 
       3444 343A 3450 
       3457 344D 347C 
       342A 342F 3430 
       343A 3453 3474 
       3464 3431 3426 
       3453 3474 3464 
       3432 347C 3433 
       343A 3442 342F 
       3457 3400 
                      01500         
046B                  01501 Welcome_Msg2
                      01502         
                      01503         ;Change Page
046B   00BA           01504         movwf   Temp
046C   30??           01505         movlw   HIGH Welcome_Msg2Entries
046D   008A           01506         movwf   PCLATH
046E   083A           01507         movf    Temp,w
046F   3E??           01508         addlw   LOW Welcome_Msg2Entries
0470   1803           01509         btfsc   STATUS,C
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0471   0A8A           01510             incf    PCLATH,f
0472   0082           01511         movwf   PCL     
0473   0782           01512         addwf    PCL,F
0474                  01513 Welcome_Msg2Entries
0474   3435 3444 3469 01514         dt        "5Distance 6Locations", 0
       3473 3474 3461 
       346E 3463 3465 
       3420 3436 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01515         
0489                  01516 FinalMessage
                      01517         
                      01518         ;Change Page
0489   00BA           01519         movwf    Temp
048A   30??           01520         movlw   HIGH FinalMessageEntries
048B   008A           01521         movwf   PCLATH
048C   083A           01522         movf    Temp,w
048D   3E??           01523         addlw   LOW FinalMessageEntries
048E   1803           01524         btfsc   STATUS,C
048F   0A8A           01525             incf    PCLATH,f
0490   0082           01526         movwf   PCL
0491   0782           01527         addwf    PCL,F
0492                  01528 FinalMessageEntries
0492   3431 3453 3474 01529         dt        "1Stickers 2Bins 3Locations",0
       3469 3463 346B 
       3465 3472 3473 
       3420 3432 3442 
       3469 346E 3473 
       3420 3433 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01530         
04AD                  01531 DectoChar
                      01532         
                      01533         ;Change Page
04AD   00BA           01534         movwf   Temp
04AE   30??           01535         movlw   HIGH DectoCharEntries
04AF   008A           01536         movwf   PCLATH
04B0   083A           01537         movf    Temp,w
04B1   3E??           01538         addlw   LOW DectoCharEntries
04B2   1803           01539         btfsc   STATUS,C
04B3   0A8A           01540             incf    PCLATH,f
04B4   0082           01541         movwf   PCL     
04B5   0782           01542         addwf    PCL,F
04B6                  01543 DectoCharEntries
04B6   3430 3431 3432 01544         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01545         
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04C1                  01546 StickerColours
                      01547         
                      01548         ;Change Page
04C1   00BA           01549         movwf   Temp
04C2   30??           01550         movlw   HIGH StickerColoursEntries
04C3   008A           01551         movwf   PCLATH
04C4   083A           01552         movf    Temp,w
04C5   3E??           01553         addlw   LOW StickerColoursEntries
04C6   1803           01554         btfsc   STATUS,C
04C7   0A8A           01555             incf    PCLATH,f
04C8   0082           01556         movwf   PCL     
04C9   0782           01557         addwf    PCL,F
04CA                  01558 StickerColoursEntries
04CA   3442 3457 3400 01559         dt        "BW",  0
                      01560         
04CD                  01561 FrontStickers
                      01562 
                      01563         ;Change Page
04CD   00BA           01564         movwf   Temp
04CE   30??           01565         movlw   HIGH FrontStickersEntries
04CF   008A           01566         movwf   PCLATH
04D0   083A           01567         movf    Temp,w
04D1   3E??           01568         addlw   LOW FrontStickersEntries
04D2   1803           01569         btfsc   STATUS,C
04D3   0A8A           01570             incf    PCLATH,f
04D4   0082           01571         movwf   PCL     
04D5   0782           01572         addwf    PCL,F
04D6                  01573 FrontStickersEntries
04D6   3446 3472 346F 01574         dt        "Front",  0
       346E 3474 3400 
                      01575         
04DC                  01576 BackStickers
                      01577 
                      01578         ;Change Page
04DC   00BA           01579         movwf   Temp
04DD   30??           01580         movlw   HIGH BackStickersEntries
04DE   008A           01581         movwf   PCLATH
04DF   083A           01582         movf    Temp,w
04E0   3E??           01583         addlw   LOW BackStickersEntries
04E1   1803           01584         btfsc   STATUS,C
04E2   0A8A           01585             incf    PCLATH,f
04E3   0082           01586         movwf   PCL     
04E4   0782           01587         addwf    PCL,F
04E5                  01588 BackStickersEntries
04E5   3442 3461 3463 01589         dt        "Back",  0
       346B 3400 
                      01590         
04EA                  01591 Spacee
                      01592 
                      01593         ;Change Page
04EA   00BA           01594         movwf   Temp
04EB   30??           01595         movlw   HIGH SpaceeEntries
04EC   008A           01596         movwf   PCLATH
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04ED   083A           01597         movf    Temp,w
04EE   3E??           01598         addlw   LOW SpaceeEntries
04EF   1803           01599         btfsc   STATUS,C
04F0   0A8A           01600             incf    PCLATH,f
04F1   0082           01601         movwf   PCL     
04F2   0782           01602         addwf    PCL,F
04F3                  01603 SpaceeEntries
04F3   3420 3400      01604         dt        " ",  0
                      01605         
04F5                  01606 Colon
                      01607 
                      01608         ;Change Page
04F5   00BA           01609         movwf   Temp
04F6   30??           01610         movlw   HIGH ColonEntries
04F7   008A           01611         movwf   PCLATH
04F8   083A           01612         movf    Temp,w
04F9   3E??           01613         addlw   LOW ColonEntries
04FA   1803           01614         btfsc   STATUS,C
04FB   0A8A           01615             incf    PCLATH,f
04FC   0082           01616         movwf   PCL     
04FD   0782           01617         addwf    PCL,F
04FE                  01618 ColonEntries
04FE   343A 3400      01619         dt        ":",  0
                      01620         
0500                  01621 Distances
                      01622 
                      01623         ;Change Page
0500   00BA           01624         movwf   Temp
0501   30??           01625         movlw   HIGH DistancesEntries
0502   008A           01626         movwf   PCLATH
0503   083A           01627         movf    Temp,w
0504   3E??           01628         addlw   LOW DistancesEntries
0505   1803           01629         btfsc   STATUS,C
0506   0A8A           01630             incf    PCLATH,f
0507   0082           01631         movwf   PCL     
0508   0782           01632         addwf    PCL,F
0509                  01633 DistancesEntries
0509   3444 3469 3473 01634         dt        "Dist (cm)",  0
       3474 3420 3428 
       3463 346D 3429 
       3400 
                      01635             
3F72                  01636         END
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AVOIDCOLUMN                       000000FF
AddBin                            00000281
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BINREADINGSTART                   00000158
BRGH                              00000002
BWScanModule1                     000001B6
BWScanModule2                     000001DC
BWStoreModule1                    000001CF
BWStoreModule2                    000001F5
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BackStickers                      000004DC
BackStickersEntries               000004E5
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHECKSWITCH                       00000176
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COLREADINGSTART                   0000014C
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Check_cm_overflow                 0000024A
Check_mm_overflow                 00000246
Clear_Display                     000003A5
ClrLCD                            00000000
ColMotor                          PORTC,7
Colon                             000004F5
ColonEntries                      000004FE
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DELAY1                            000003B8
DELAY2                            000003C5
DELAYEDREAD                       00000165
D_A                               00000005
D_NOT_A                           00000005
Decode_check_done                 00000250
Decode_loop                       0000023F
DectoChar                         000004AD
DectoCharEntries                  000004B6
Delay_0                           000003BE
Delay_02                          000003C9
Display                           
DisplayBlackWhiteIR1              0000032C
DisplayBlackWhiteIR2              00000330
Display_Dist                      
Dist_Decoder                      00000238
Distance_Display                  00000001
Distances                         00000500
DistancesEntries                  00000509
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENDTHIS                           0000016D
EXIT                              00000183
EXITDISPLAY                       00000193
F                                 00000001
FERR                              00000002
FSR                               00000004
FinalMessage                      00000489
FinalMessageEntries               00000492
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         00000305
FrontLoop1                        000002A1
FrontLoop2                        000002D2
FrontStickers                     000004CD
FrontStickersEntries              000004D6
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000003A8
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         000003CF
Key                               
KeypadandLCD                      000000AB
LCD_DELAY                         
LED                               PORTB,0
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

LEDControlON                      00000324
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter7                       00000068
LEDcounter8                       00000069
LLD_LOOP                          00000432
Lb1                               00000032
Lb2                               00000036
Lb3                               0000003A
Lb4                               0000003E
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
Locations                         000002F2
MAX_HIGHS                         0x3
MAX_TICKS                         d'200'
MOV                               
MOVLF                             
MoveBackwards                     000001B5
NOTPWMBACK                        PORTC,1
NOTPWMFWD                         PORTC,2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              00000051
NumL                              00000052
NumOfBins1                        00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              00000420
Ones                              00000057
P                                 00000004
PCFG0                             00000000
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           0000037B
PWMFWD                            00000358
PWMSTOP                           0000039D
PrintCol                          
PrintNumber                       
Put_Dist_In_Reg                   
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READBIN                           0000012C
READ_WRITE                        00000002
RETURNFROMCOLUMN                  0000011F
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        0000026B
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          00000202
Read2_US                          0000021D
ReadUltrasonic                    
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         00000267
ShowBins                          0000028B
Spacee                            000004EA
SpaceeEntries                     000004F3
Std1                              PORTC,5
Std1Backwards                     PORTC,0
Std2                              PORTC,6
Std2Backwards                     PORTC,7
StdRotation1                      00000334
StdRotation1Backwards             00000346
StdRotation2                      0000033C
StdRotation2Backwards             0000034E
StickerColours                    000004C1
StickerColoursEntries             000004CA
Stickers1                         0000028F
Stickers2                         000002C1
StoreBW1                          00000275
StoreBW2                          0000027B
StoreThisTick                     0000025D
SwitchArm                         PORTB,3
SwitchWhite                       PORTB,2
Switch_Lines                      000003A2
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTAL                             00000148
TOTAL1                            0000014A
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
Welcome_Msg                       00000439
Welcome_Msg2                      0000046B
Welcome_Msg2Entries               00000474
Welcome_MsgEntries                00000442
Z                                 00000002
_.org_0_00AC                      000000AC
_.org_0_00FC                      000000FC
_.org_0_0103                      00000103
_.org_0_010D                      0000010D
_.org_0_011A                      0000011A
_.org_0_0122                      00000122
_.org_0_0129                      00000129
_.org_0_0150                      00000150
_.org_0_015C                      0000015C
_.org_0_017A                      0000017A
_.org_0_0180                      00000180
_.org_0_0194                      00000194
_.org_0_01B2                      000001B2
_.org_0_01B8                      000001B8
_.org_0_01DE                      000001DE
_.org_0_020A                      0000020A
_.org_0_020D                      0000020D
_.org_0_0225                      00000225
_.org_0_0228                      00000228
_.org_0_0325                      00000325
_.org_0_0335                      00000335
_.org_0_033D                      0000033D
_.org_0_0347                      00000347
_.org_0_034F                      0000034F
_.org_0_0359                      00000359
_.org_0_037C                      0000037C
_.org_0_03AF                      000003AF
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_03B1                      000003B1
_.org_0_03B4                      000003B4
_.org_0_03BF                      000003BF
_.org_0_03C1                      000003C1
_.org_0_03CA                      000003CA
_.org_0_03CD                      000003CD
_.org_0_0427                      00000427
_.org_0_0429                      00000429
_.org_0_042C                      0000042C
_.org_0_0435                      00000435
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
backstickerValues                 0000005C
bin16_BCD                         00000011
binCounter                        0000005D
cm                                0000006A
MPASM 5.65                          MAIN.ASM   4-4-2016  0:43:24         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

cm_overflow                       00000259
com                               00000037
count_highs                       0000006F
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay3                            00000061
distanceMoved                     00000058
distreg                           0000006D
frontstickerValues                0000005B
goback                            000000FE
hour1                             00000071
hour2                             00000072
i2c_common_setup                  00000000
init                              00000044
isBinThere                        0000005A
isColumnThere                     00000059
lcdLongDelay                      00000430
lcd_d1                            00000035
lcd_d1_2                          0000006E
lcd_d2                            00000036
lcd_tmp                           00000034
m                                 0000006C
min1                              00000073
min2                              00000074
mm                                0000006B
mm_overflow                       00000255
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
sec1                              00000075
sec2                              00000076
set_rtc_time                      00000404
show_RTC                          000003D7
temp                              00000039
temp_2                            00000070
write_rtc                         00000000

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :     0 reported,    38 suppressed

