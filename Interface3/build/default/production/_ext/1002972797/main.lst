MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1       ;3B PC
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5       
  00000040            00038                 Location6       ;40 PC
  00000041            00039                 Location7
  00000042            00040                 Front1          ;42 PC7
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ; 49 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7           ;50
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins1                      
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0, LEDcounter1,LEDcounter2,LEDcounter3,LEDcounter4,LEDcounter5,LEDcounter7,LED
                            counter8
  0000006A            00073                 cm
  0000006B            00074                 mm
  0000006C            00075                 m
  0000006D            00076                 distreg
  0000006E            00077                 lcd_d1_2
  0000006F            00078                 count_highs             ;the number of consecutive high counter for the US sensor
  00000070            00079                 temp_2
  00000071            00080                 hour1,hour2,min1,min2,sec1,sec2
                      00081         endc    
                      00082 
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083         ;Declare constants for pin assignments (LCD on PORTD)
                      00084                 #define RS      PORTD,2
                      00085                 #define E       PORTD,3
                      00086                 #define IR1     PORTA,0
                      00087                 #define IR2     PORTA,1
                      00088                 #define ColMotor PORTC,7
                      00089                 #define UST1    PORTD,0
                      00090                 #define US1E1   PORTA,2
                      00091                 #define UST2    PORTD,1
                      00092                 #define US1E2   PORTA,3
                      00093                 #define LED     PORTB,0
                      00094                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00095                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00096                 #define Std1Backwards   PORTC,0
                      00097                 #define Std2Backwards   PORTC,7
                      00098                 #define SwitchWhite             PORTB,2     ; or gated switch to stop motor motion
                      00099                 #define SwitchArm               PORTB,3
                      00100                 #define NOTPWMFWD               PORTC,2
                      00101                 #define NOTPWMBACK              PORTC,1
                      00102                 #define MAX_HIGHS       0x3                 ; number of consecutive highs we want to det
                            ect US
                      00103                 #define MAX_TICKS       d'200'              ; number of ticks where it reaches 4 metres
                      00104                 ;SHAFTIR is PORTA,4
                      00105                 ;PWMFWD is RC2
                      00106                 ;PWMBACK is RC1
                      00107                 
                      00108 
                      00109          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00110          goto      init       ;Just jump to the main code section.
                      00111 
                      00112 ;*******************************************************************************
                      00113 ; MACROS
                      00114 ;*******************************************************************************
                      00115 Key      macro  value, subroutine
                      00116          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00117          andlw          0x0F
                      00118          xorlw          value
                      00119          btfsc          STATUS, Z
                      00120          call           subroutine
                      00121         endm
                      00122 
                      00123 Rotation macro  value
                      00124          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00125          andlw          0x0F
                      00126          xorlw          value
                      00127          btfsc          STATUS, Z
                      00128          call           ShiftLeft
                      00129         endm
                      00130 ;***************************************
                      00131 ; Delay: ~160us macro
                      00132 ;***************************************
                      00133 LCD_DELAY macro
                      00134         movlw   0xFF
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00135         movwf   lcd_d1
                      00136         decfsz  lcd_d1,f
                      00137         goto    $-1
                      00138         endm
                      00139         
                      00140 ;***************************************
                      00141 ; Display macro
                      00142 ;***************************************
                      00143 Display macro   Message
                      00144                 local   loop_
                      00145                 local   end_
                      00146                 clrf    Table_Counter
                      00147                 clrw            
                      00148 loop_   movf    Table_Counter,W
                      00149                 call    Message
                      00150                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00151                 btfsc   STATUS,Z
                      00152                         goto    end_
                      00153                 call    WR_DATA
                      00154                 incf    Table_Counter,F
                      00155                 goto    loop_
                      00156 end_
                      00157                 endm
                      00158                 
                      00159 ;***************************************
                      00160 ; MOVLF macro   [TESTED]
                      00161 ;***************************************
                      00162 MOVLF   Macro   literal, reg
                      00163     MOVLW  literal      ; move literal into working register
                      00164     MOVWF   reg         ; move working register into reg
                      00165     endm
                      00166 
                      00167 ;***************************************
                      00168 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00169 ;***************************************
                      00170 MOV     Macro   reg1, reg2
                      00171     MOVF  reg1,W        ; move reg1 into working register
                      00172     MOVWF   reg2        ; reg2 <- reg1
                      00173     endm
                      00174     
                      00175 ;***************************************
                      00176 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00177 ;***************************************
                      00178 ADDL    Macro   Destination, reg, literal
                      00179     MOVLW  literal      ; move literal into working register
                      00180     ADDWF   reg,W       ; W <- literal + reg
                      00181     MOVWF   Destination ; Destination <- literal + reg
                      00182     endm
                      00183     
                      00184 ;***************************************
                      00185 ; ADD macro, Adds two registers together    [TESTED]
                      00186 ;***************************************
                      00187 ADD     Macro   Destination, reg1, reg2
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00188     MOVF    reg1,W      ; move literal into working register
                      00189     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00190     MOVWF   Destination ; Destination <- reg1 + reg2
                      00191     endm
                      00192 ;***************************************
                      00193 ; Number to Printable
                      00194 ;***************************************
                      00195 PrintNumber macro       number
                      00196         ;movf       number ,W
                      00197         movfw       number
                      00198         call        DectoChar
                      00199         call        WR_DATA
                      00200         endm
                      00201 ;***************************************
                      00202 ; Store_Dist macro --> Stores current
                      00203 ;   distance and stores it in Bin_Dist_reg
                      00204 ;***************************************                
                      00205 Put_Dist_In_Reg macro    Bin_Dist_reg
                      00206         lcall   Dist_Decoder
                      00207         movfw   cm
                      00208         movwf   Bin_Dist_reg
                      00209     endm
                      00210     
                      00211 ;***************************************
                      00212 ; Display_Dist macro --> Takes value in Bin_Dist_reg
                      00213 ;   and converts it into a BCD and prints it
                      00214 ;   To the LCD
                      00215 ;***************************************                
                      00216 Display_Dist macro    Bin_Dist_reg
                      00217     MOV     Bin_Dist_reg, temp  ; Bin_Dist_reg --> temp
                      00218     call    Distance_Display
                      00219     endm
                      00220 ;*********************************************************
                      00221 ;   Distance_Display            
                      00222 ;   input:      temp
                      00223 ;   Output:     LCD
                      00224 ;   desc:       Decodes the distance and prints to the LCD
                      00225 ;*********************************************************      
0001                  00226 Distance_Display
0001   2???           00227         call    Dist_Decoder        ; outputs m and cm regs to display
                      00228         PrintNumber     m
                          M         ;movf       number ,W
0002   086C               M         movfw       m
0003   2???               M         call        DectoChar
0004   2???               M         call        WR_DATA
0005   01D2           00229         clrf    NumL
0006   01D1           00230         clrf    NumH
                      00231         MOV     cm, NumL
0007   086A               M     MOVF  cm,W          ; move reg1 into working register
0008   00D2               M     MOVWF   NumL        ; reg2 <- reg1
0009   2???           00232         call    bin16_BCD
                      00233         PrintNumber     Tens        ; Print cm
                          M         ;movf       number ,W
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A   0856               M         movfw       Tens
000B   2???               M         call        DectoChar
000C   2???               M         call        WR_DATA
                      00234         PrintNumber     Ones
                          M         ;movf       number ,W
000D   0857               M         movfw       Ones
000E   2???               M         call        DectoChar
000F   2???               M         call        WR_DATA
0010   0008           00235         return
                      00236 ;***************************************
                      00237 ; Number to Colour
                      00238 ;***************************************
                      00239 PrintCol macro      number
                      00240         movfw       number
                      00241         call        StickerColours
                      00242         call        WR_DATA
                      00243         endm    
                      00244 
                      00245 ;***************************************
                      00246 ;           US READ MACRO
                      00247 ;****************************************
                      00248 ReadUltrasonic macro    trigger, trigger_bit, echo, echo_bit
                      00249     clrf        TMR1H
                      00250     clrf        TMR1L
                      00251 
                      00252     bcf trigger, trigger_bit            ;make sure trigger is clear
                      00253     call lcdLongDelay
                      00254 
                      00255     bsf trigger, trigger_bit    ;trigger high, bottom sensor
                      00256     call lcdLongDelay           ;10us delay
                      00257     bcf trigger, trigger_bit    ;trigger low
                      00258 
                      00259     btfss       echo, echo_bit          ;wait for echo to go high
                      00260     goto        $-1
                      00261     bsf T1CON,TMR1ON    ;turn on timer
                      00262 
                      00263     btfsc       echo, echo_bit          ;wait for echo to go low
                      00264     goto        $-1
                      00265 
                      00266     bcf T1CON,TMR1ON    ;turn off timer
                      00267     endm
                      00268         
                      00269 ;*******************************************************
                      00270 ;******             BCD                 ****************
                      00271 ;*******************************************************
                      00272         
                      00273 ;---------------- Binary (16-bit) to BCD -----------------------
                      00274 ;
                      00275 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00276 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00277                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00278 ;
                      00279 ; Uses variables
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00280 ; NumH, NumL
                      00281 ; TenK, Thou, Hund, Tens, Ones
                      00282                 
                      00283 ;BCD    macro   NumH, NumL
                      00284 
0011                  00285 bin16_BCD
0011   0E51           00286         swapf   NumH, W
0012   390F           00287         andlw   0x0F
0013   3EF0           00288         addlw   0xF0
0014   00D4           00289         movwf   Thou 
0015   07D4           00290         addwf   Thou, F 
0016   3EE2           00291         addlw   0xE2 
0017   00D5           00292         movwf   Hund 
0018   3E32           00293         addlw   0x32 
0019   00D7           00294         movwf   Ones 
                      00295 
001A   0851           00296         movf    NumH, W 
001B   390F           00297         andlw   0x0F 
001C   07D5           00298         addwf   Hund, F 
001D   07D5           00299         addwf   Hund, F 
001E   07D7           00300         addwf   Ones, F 
001F   3EE9           00301         addlw   0xE9 
0020   00D6           00302         movwf   Tens 
0021   07D6           00303         addwf   Tens, F 
0022   07D6           00304         addwf   Tens, F 
                      00305 
0023   0E52           00306         swapf   NumL, W 
0024   390F           00307         andlw   0x0F 
0025   07D6           00308         addwf   Tens, F 
0026   07D7           00309         addwf   Ones, F 
                      00310 
0027   0DD6           00311         rlf    Tens, F 
0028   0DD7           00312         rlf    Ones, F 
0029   09D7           00313         comf    Ones, F 
002A   0DD7           00314         rlf    Ones, F 
                      00315 
002B   0852           00316         movf    NumL, W 
002C   390F           00317         andlw   0x0F 
002D   07D7           00318         addwf   Ones, F 
002E   0DD4           00319         rlf    Thou,F 
                      00320 
002F   3007           00321         movlw   0x07 
0030   00D3           00322         movwf   TenK 
                      00323 
0031   300A           00324         movlw   0x0A
0032                  00325 Lb1
0032   03D6           00326         decf    Tens, F 
0033   07D7           00327         addwf   Ones, F 
0034   1C03           00328         btfss   STATUS, C 
0035   2???           00329         goto            Lb1 
0036                  00330 Lb2
0036   03D5           00331         decf    Hund, F 
0037   07D6           00332         addwf   Tens, F 
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0038   1C03           00333         btfss   STATUS,C 
0039   2???           00334         goto            Lb2 
003A                  00335 Lb3
003A   03D4           00336         decf    Thou, F 
003B   07D5           00337         addwf   Hund, F 
003C   1C03           00338         btfss   STATUS,C
003D   2???           00339         goto            Lb3 
003E                  00340 Lb4
003E   03D3           00341         decf    TenK, F 
003F   07D4           00342         addwf   Thou, F 
0040   1C03           00343         btfss   STATUS,C 
0041   2???           00344         goto            Lb4 
                      00345 
0042   3400           00346         retlw   0
0043   0008           00347         return
                      00348 ;***************************************
                      00349 ; Initialize
                      00350 ;***************************************
0044                  00351 init
0044   018B           00352          clrf      INTCON         ; No interrupts
                      00353 
0045   1683           00354          bsf       STATUS,RP0     ; select bank 1
0046   30FF           00355          movlw      0xFF            ; need to make A input
0047   0085           00356          movwf      TRISA          ; All port A is input
0048   30FE           00357          movlw     b'11111110'    ; Set required keypad inputs
0049   0086           00358          movwf     TRISB
004A   0187           00359          clrf      TRISC          ; All port C is output
004B   0188           00360          clrf      TRISD          ; All port D is output
004C   0189           00361          clrf      TRISE        
                      00362          
                      00363                   ;Set SDA and SCL to high-Z first as required for I2C
004D   1607           00364                  bsf       TRISC,4                
004E   1587           00365                  bsf       TRISC,3
                      00366 
004F   1283           00367          bcf       STATUS,RP0     ; select bank 0
0050   0185           00368          clrf      PORTA
0051   0186           00369          clrf      PORTB
0052   0187           00370          clrf      PORTC
0053   0188           00371          clrf      PORTD
0054   0189           00372          clrf      PORTE
                      00373          
                      00374         ;Set up I2C for communication
                      00375                  
0055   2???           00376         call       i2c_common_setup
                      00377 ;*******************************************************************************
                      00378 ;        UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00379 ;       rtc_resetAll                                    ;works;\
                      00380 ;       call set_rtc_time
                      00381 ;*******************************************************************************          
0056   2???           00382          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00383          ;A/D converter attempt
                      00384                  
                      00385         ; Set ADCON1 to use RA0 as analog input 
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0057   1303           00386         bcf     STATUS,RP1
0058   1683           00387         bsf     STATUS,RP0      ;Select bank 1
0059   3006           00388         movlw   b'00000110'     ;left justified, all inputs digital
005A   009F           00389         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00390 
                      00391         ;ADCON0
005B   1283           00392         bcf     STATUS,RP0      
                      00393 ;***************************************************
                      00394 ; Initialize variables and Displays
                      00395 ;****************************************************
                      00396         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
005C   01B3               M                 clrf    Table_Counter
005D   0103               M                 clrw            
005E   0833               M loop_   movf    Table_Counter,W
005F   2???               M                 call    Welcome_Msg
0060   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0061   1903               M                 btfsc   STATUS,Z
0062   2???               M                         goto    end_
0063   2???               M                 call    WR_DATA
0064   0AB3               M                 incf    Table_Counter,F
0065   2???               M                 goto    loop_
0066                      M end_
0066   2???           00397         call            Switch_Lines
                      00398         Display         Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
0067   01B3               M                 clrf    Table_Counter
0068   0103               M                 clrw            
0069   0833               M loop_   movf    Table_Counter,W
006A   2???               M                 call    Welcome_Msg2
006B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
006C   1903               M                 btfsc   STATUS,Z
006D   2???               M                         goto    end_
006E   2???               M                 call    WR_DATA
006F   0AB3               M                 incf    Table_Counter,F
0070   2???               M                 goto    loop_
0071                      M end_
0071   01E0           00399         clrf            NumOfBins1
0072   01ED           00400         clrf            distreg             ; clear register for distance
0073   2???           00401         call            Init_TMR0           ; Initialize shaft encoder
0074   1408           00402         bsf             PORTD,0
0075   1462           00403         bsf             LEDcounter0,0               ;counter for LED
0076   1463           00404         bsf             LEDcounter1,0               ;forward motor counters
0077   1464           00405         bsf             LEDcounter2,0
0078   1465           00406         bsf             LEDcounter3,0               
0079   1466           00407         bsf             LEDcounter4,0               ;backward motor counters
007A   1467           00408         bsf             LEDcounter5,0       
007B   1468           00409         bsf             LEDcounter7,0               ;pwm counters
007C   1469           00410         bsf             LEDcounter8,0               
                      00411         
007D   1287           00412         bcf             Std1                        ;use this one for negative for when need to move ful
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            l motor                 
007E   1707           00413         bsf             Std2
007F   1007           00414         bcf             Std1Backwards
0080   1787           00415         bsf             Std2Backwards
0081   1507           00416         bsf             PORTC,2             
0082   1487           00417         bsf             PORTC,1                 ; PWM now negative, so start by clearing
                      00418         
                      00419         ;trying to fix the switch bs
0083   1106           00420         bcf             SwitchWhite
0084   1186           00421         bcf             SwitchArm
                      00422 
                      00423 ;*************************************
                      00424 ;       Keypad and LCD forms        
                      00425 ;*************************************
                      00426         
0085   1C86           00427 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
0086   2???           00428                 goto            $-1 
                      00429 
0087   0E06           00430                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
0088   390F           00431                 andlw           0x0F
0089   00B9           00432                 movwf           temp
                      00433                 
                      00434                 Key     0x00, TOTAL
008A   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008B   390F               M          andlw          0x0F
008C   3A00               M          xorlw          0x00
008D   1903               M          btfsc          STATUS, Z
008E   2???               M          call           TOTAL
                      00435                 Key     0x01, DisplayBlackWhiteIR1
008F   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0090   390F               M          andlw          0x0F
0091   3A01               M          xorlw          0x01
0092   1903               M          btfsc          STATUS, Z
0093   2???               M          call           DisplayBlackWhiteIR1
                      00436                 Key     0x02, DisplayBlackWhiteIR2
0094   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0095   390F               M          andlw          0x0F
0096   3A02               M          xorlw          0x02
0097   1903               M          btfsc          STATUS, Z
0098   2???               M          call           DisplayBlackWhiteIR2
                      00437                 Rotation        0x03
0099   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009A   390F               M          andlw          0x0F
009B   3A03               M          xorlw          0x03
009C   1903               M          btfsc          STATUS, Z
009D   2???               M          call           ShiftLeft
                      00438                 Key     0x04, EXIT
009E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009F   390F               M          andlw          0x0F
00A0   3A04               M          xorlw          0x04
00A1   1903               M          btfsc          STATUS, Z
00A2   2???               M          call           EXIT
                      00439                 Key     0x05, Read1_US
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A3   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A4   390F               M          andlw          0x0F
00A5   3A05               M          xorlw          0x05
00A6   1903               M          btfsc          STATUS, Z
00A7   2???               M          call           Read1_US
                      00440                 Key     0x06, Read2_US
00A8   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A9   390F               M          andlw          0x0F
00AA   3A06               M          xorlw          0x06
00AB   1903               M          btfsc          STATUS, Z
00AC   2???               M          call           Read2_US
                      00441                 Key     0x07, set_rtc_time
00AD   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00AE   390F               M          andlw          0x0F
00AF   3A07               M          xorlw          0x07
00B0   1903               M          btfsc          STATUS, Z
00B1   2???               M          call           set_rtc_time
                      00442                 Key     0x08, Stickers1
00B2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B3   390F               M          andlw          0x0F
00B4   3A08               M          xorlw          0x08
00B5   1903               M          btfsc          STATUS, Z
00B6   2???               M          call           Stickers1
                      00443                 Key     0x09, LEDControlON
00B7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B8   390F               M          andlw          0x0F
00B9   3A09               M          xorlw          0x09
00BA   1903               M          btfsc          STATUS, Z
00BB   2???               M          call           LEDControlON
                      00444                 Key     0x0A, CHECKSWITCH               
00BC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BD   390F               M          andlw          0x0F
00BE   3A0A               M          xorlw          0x0A
00BF   1903               M          btfsc          STATUS, Z
00C0   2???               M          call           CHECKSWITCH
                      00445                 Key     0x0C, StdRotation2
00C1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C2   390F               M          andlw          0x0F
00C3   3A0C               M          xorlw          0x0C
00C4   1903               M          btfsc          STATUS, Z
00C5   2???               M          call           StdRotation2
                      00446                 Key     0x0D, StdRotation2Backwards
00C6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C7   390F               M          andlw          0x0F
00C8   3A0D               M          xorlw          0x0D
00C9   1903               M          btfsc          STATUS, Z
00CA   2???               M          call           StdRotation2Backwards
                      00447                 Key     0x0E, PWMFWD
00CB   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00CC   390F               M          andlw          0x0F
00CD   3A0E               M          xorlw          0x0E
00CE   1903               M          btfsc          STATUS, Z
00CF   2???               M          call           PWMFWD
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00448                 Key     0x0F, PWMBACK
00D0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D1   390F               M          andlw          0x0F
00D2   3A0F               M          xorlw          0x0F
00D3   1903               M          btfsc          STATUS, Z
00D4   2???               M          call           PWMBACK
00D5   1886           00449                 btfsc           PORTB,1     ;Wait until key is released
00D6   2???           00450                 goto            $-1
00D7   2???           00451                 goto            KeypadandLCD
                      00452                 
00D8                  00453 goback
00D8   0008           00454                 return  
                      00455         
                      00456 
                      00457 ;*******************************************************************************************************
                            *******************************************
                      00458 ;                                                                 MAIN CODE
                      00459 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
                      00460 
00D9                  00461 AVOIDCOLUMN
                      00462     
00D9   1287           00463     bcf     Std1                ;motor will stop move fwd
                      00464     
00DA   1307           00465     bcf     Std2                ; start white thing fwd
00DB   2???           00466     call    HalfS
00DC   1D06           00467     btfss   SwitchWhite
00DD   2???           00468     goto    $-1
                      00469    
00DE   1707           00470     bsf     Std2                   ; stop white thing fwd
                      00471     
00DF   2???           00472      call    HalfS
00E0   2???           00473     call    HalfS
00E1   2???           00474      call    HalfS
00E2   2???           00475     call    HalfS
                      00476     
00E3   2???           00477     call    PWMFWD          ;start arm forward
00E4   2???           00478     call    lcdLongDelay
00E5   2???           00479     call    lcdLongDelay
00E6   1D86           00480     btfss   SwitchArm
00E7   2???           00481     goto    $-1
                      00482     
00E8   2???           00483     call    PWMFWD          ;stop arm forward
                      00484     
                      00485 ;-------------------------------------------------
                      00486     
00E9   1687           00487     bsf     Std1                ;move forward until no more column in the way
                      00488     
00EA   2???           00489     call    OneS
00EB   2???           00490     call    OneS
00EC   2???           00491     call    OneS
00ED   2???           00492     call    OneS
00EE   2???           00493     call    OneS
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EF   2???           00494     call    OneS
                      00495     
00F0   2???           00496     call    Read1_US            ;checks to see if column present
                      00497     
00F1   300F           00498     movlw   0xF         ; if column is not present, it'll go back to original form
00F2   028F           00499     subwf   TMR1H
00F3   1C03           00500     btfss   STATUS,C            
00F4   2???           00501     goto    $-6
00F5   2???           00502     call    OneS
                      00503     
00F6   1287           00504     bcf     Std1
                      00505     
00F7   2???           00506     call    RETURNFROMCOLUMN
                      00507     
00F8   2???           00508     goto    BINREADINGSTART 
                      00509     
00F9                  00510 RETURNFROMCOLUMN
                      00511     
00F9   2???           00512     call    PWMBACK         ;start arm BACK
00FA   2???           00513     call    HalfS
00FB   1D86           00514     btfss   SwitchArm
00FC   2???           00515     goto    $-1
                      00516     
00FD   2???           00517     call    PWMBACK         ;stop arm BACK
                      00518         
00FE   2???           00519     call    HalfS
00FF   2???           00520     call    HalfS
                      00521     
0100   1387           00522     bcf     Std2Backwards
0101   2???           00523     call    HalfS
0102   1D06           00524     btfss   SwitchWhite
0103   2???           00525     goto    $-1 
                      00526     
0104   1787           00527     bsf     Std2Backwards
                      00528     
0105   0008           00529     return
                      00530     
0106                  00531 READBIN
                      00532 
                      00533     ;call    HalfS
0106   1287           00534     bcf     Std1
                      00535     
0107   2???           00536     call    AddBin              ;adds bin to list
                      00537     
0108   2???           00538     call    Dist_Decoder        ; stores the distance
                      00539     Put_Dist_In_Reg     distreg
0109   ???? ???? 2???     M         lcall   Dist_Decoder
010C   086A               M         movfw   cm
010D   00ED               M         movwf   distreg
                      00540     Display_Dist        distreg
                          M     MOV     distreg,      temp  ; Bin_Dist_reg --> temp
010E   086D               M     MOVF  distreg,W     ; move reg1 into working register
010F   00B9               M     MOVWF   temp        ; reg2 <- reg1
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0110   2???               M     call    Distance_Display
0111   2???           00541     call    StoreThisTick
                      00542     
0112   2???           00543     call    Clear_Display    
                      00544     
                      00545         
0113   2???           00546     call    DisplayBlackWhiteIR1        ;warms up IR
0114   2???           00547     call    DisplayBlackWhiteIR1        ;warms up IR  
0115   2???           00548     call    StoreBW1            ;reads & stores first IR data
                      00549     
                      00550 ;*****THRESHHOLD TEST ON IR 1************
                      00551 ;    nothing in front: 02056
                      00552 ;    black in front: 10000-41000
                      00553 ;    white in front: >60000
                      00554     
                      00555     ;READ 2 ALGORITHM IMPLEMENT HERE
                      00556     
0116   2???           00557     call    HalfS
0117   2???           00558     call    HalfS
0118   2???           00559     call    HalfS
0119   2???           00560     call    HalfS
                      00561     
011A   2???           00562     call    Clear_Display
                      00563     
011B   2???           00564     call    DisplayBlackWhiteIR2        ;warms up IR
011C   2???           00565     call    DisplayBlackWhiteIR2        ;warms up IR
011D   2???           00566     call    StoreBW2
                      00567     
011E   2???           00568     call    HalfS
011F   2???           00569     call    HalfS
                      00570     
0120   1406           00571     bsf     LED
                      00572     
0121   0008           00573     return
                      00574     
                      00575     ;goto    EXIT    
                      00576      
                      00577     
0122                  00578 TOTAL
                      00579     
0122   2???           00580     call    Read1_US            ;warms up us sensors that was weird
0123   2???           00581     call    Read2_US
                      00582    
0124                  00583 TOTAL1
                      00584     
0124   1687           00585     bsf     Std1                ;moving
0125   01EF           00586     clrf    count_highs         ;reset the high value counter
                      00587     
0126                  00588 COLREADINGSTART
0126   2???           00589     call    Read1_US            ;checks to see if column present
                      00590     
                      00591 ;********THRESHOLD CALCULATION FOR COLUMN**************:
                      00592 ;   At around cm from col, reading: 02303
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00593 ;       So, this will be the max value.
                      00594 ;       To be safe, will minus 02603 from the TMR variables.
                      00595 ;       This means, subtract 0x4 from TMR1H 
                      00596 ;       Value before at integration was 0x14, now trying 0x4
                      00597 ;       THE FOLLOWING CODE COUNTS 3 HIGHS
                      00598     
0127   300F           00599     movlw   0xF         ; if column present, it'll move forward
0128   028F           00600     subwf   TMR1H
0129   1803           00601     btfsc   STATUS,C        
012A   2???           00602     goto    $+8
012B   0AEF           00603     incf    count_highs
012C   3003           00604     movlw   MAX_HIGHS
012D   026F           00605     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
012E   1D03           00606     btfss   STATUS,Z                ; if result is zero, Z bit is set.
012F   2???           00607     goto    COLREADINGSTART
0130   2???           00608     call    AVOIDCOLUMN
                      00609     
0131   01EF           00610     clrf    count_highs         ;reset the high value counter
                      00611  
0132                  00612 BINREADINGSTART
                      00613     
0132   2???           00614     call    Read2_US            ;checks to see if bin present
                      00615     
                      00616 ;********THRESHOLD CALCULATION FOR BIN**************:
                      00617 ;   At around 6cm from white bin, reading: 01103
                      00618 ;       So, this will be the max value.
                      00619 ;       To be safe, will minus 01210 from the TMR variables.
                      00620 ;       This means, subtract 0x4 from TMR1H 
                      00621 ;       Value before at integration was 0x14, now trying 0x4
                      00622 ;       CODE COUNTS 3 HIGHS
                      00623 
                      00624     
0133   3008           00625     movlw   0x8         ; read the bin
0134   028F           00626     subwf   TMR1H
0135   1803           00627     btfsc   STATUS,C
0136   2???           00628     goto    $+8
0137   0AEF           00629     incf    count_highs
0138   2???           00630     call    lcdLongDelay
0139   3003           00631     movlw   MAX_HIGHS
013A   026F           00632     subwf   count_highs,W           ; will always be negative UNTIL the high count is the one we want
013B   1D03           00633     btfss   STATUS,Z                ; if result is zero, Z bit is set.
013C   2???           00634     goto    BINREADINGSTART
013D   2???           00635     call    DELAYEDREAD
                      00636 
013E   2???           00637     goto    ENDTHIS   
                      00638     
013F                  00639 DELAYEDREAD
013F   2???           00640     call    DELAY1              ; do a 0.25s delay in order to move it forward a lil
0140   2???           00641     call    Read2_US            ;checks to see if bin present
0141   3006           00642     movlw   0x6         ; read the bin
0142   028F           00643     subwf   TMR1H
0143   1C03           00644     btfss   STATUS,C
0144   2???           00645     goto    DELAYEDREAD
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0145   2???           00646     call    READBIN
0146   1006           00647     bcf     LED                 ; turn off LED After reading    
0147                  00648 ENDTHIS       
0147   3007           00649     movlw       0X7                     ;checks if max of 7 bins has been reached
0148   0260           00650     subwf       NumOfBins1,W            
0149   1903           00651     btfsc       STATUS,Z
014A   2???           00652     goto        EXIT
                      00653     
014B   0801           00654     movfw       TMR0                    ;checks if max ticks has been reached
014C   0248           00655     subwf       MAX_TICKS,W
014D   1903           00656     btfsc       STATUS,Z
014E   2???           00657     goto        EXIT
                      00658     
014F   2???           00659     goto        TOTAL1    
0150                  00660 CHECKSWITCH
0150   2???           00661     call    PWMFWD
0151   2???           00662     call    DELAY1
0152   2???           00663     call    HalfS
0153   1D86           00664     btfss   SwitchArm
0154   2???           00665     goto    $-1
                      00666    
0155   2???           00667     call    PWMFWD
                      00668  
0156   2???           00669     call    PWMBACK
0157   2???           00670     call    DELAY1
0158   2???           00671     call    HalfS
0159   1D86           00672     btfss   SwitchArm
015A   2???           00673     goto    $-1 
                      00674     
015B   2???           00675     call    PWMBACK
                      00676     
015C   2???           00677     goto    CHECKSWITCH  
                      00678 
015D                  00679 EXIT
                      00680     
015D   2???           00681     call        OneS
015E   2???           00682     call        OneS
015F   2???           00683     call        OneS
0160   2???           00684     call        OneS
                      00685     
0161   2???           00686     call        Clear_Display
                      00687     Display     FinalMessage     ;display final interface for choosing stuff
  0000                    M                 local   loop_
  0000                    M                 local   end_
0162   01B3               M                 clrf    Table_Counter
0163   0103               M                 clrw            
0164   0833               M loop_   movf    Table_Counter,W
0165   2???               M                 call    FinalMessage
0166   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0167   1903               M                 btfsc   STATUS,Z
0168   2???               M                         goto    end_
0169   2???               M                 call    WR_DATA
016A   0AB3               M                 incf    Table_Counter,F
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016B   2???               M                 goto    loop_
016C                      M end_
016C   2???           00688     call        Switch_Lines
                      00689     Display     Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
016D   01B3               M                 clrf    Table_Counter
016E   0103               M                 clrw            
016F   0833               M loop_   movf    Table_Counter,W
0170   2???               M                 call    Welcome_Msg2
0171   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0172   1903               M                 btfsc   STATUS,Z
0173   2???               M                         goto    end_
0174   2???               M                 call    WR_DATA
0175   0AB3               M                 incf    Table_Counter,F
0176   2???               M                 goto    loop_
0177                      M end_
                      00690     
                      00691     ;saving elapsed time    
                      00692     rtc_read    0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0177   3002               M         movlw   0x02
0178   1283 1303          M         banksel 0x73
017A   00F3               M         movwf   0x73
017B   2???               M         call    read_rtc
017C   1283 1303          M         banksel 0x75
017E   0875               M         movf    0x75,w
017F   2???               M         call    rtc_convert   
0180   0877           00693     movf        0x77,W
0181   00F1           00694     movwf       hour1
0182   0878           00695     movf        0x78,W
0183   00F2           00696     movwf       hour2           
                      00697     rtc_read    0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0184   3001               M         movlw   0x01
0185   1283 1303          M         banksel 0x73
0187   00F3               M         movwf   0x73
0188   2???               M         call    read_rtc
0189   1283 1303          M         banksel 0x75
018B   0875               M         movf    0x75,w
018C   2???               M         call    rtc_convert   
018D   0877           00698     movf        0x77,W
018E   00F3           00699     movwf       min1
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018F   0878           00700     movf        0x78,W
0190   00F4           00701     movwf       min2            
                      00702     rtc_read    0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0191   3000               M         movlw   0x00
0192   1283 1303          M         banksel 0x73
0194   00F3               M         movwf   0x73
0195   2???               M         call    read_rtc
0196   1283 1303          M         banksel 0x75
0198   0875               M         movf    0x75,w
0199   2???               M         call    rtc_convert   
019A   0877           00703     movf        0x77,W
019B   00F5           00704     movwf       sec1
019C   0878           00705     movf        0x78,W
019D   00F6           00706     movwf       sec2
                      00707     
019E   1287           00708     bcf         Std1
                      00709     ;bsf                Std1Backwards
019F   2???           00710     goto        EXITDISPLAY
                      00711 
01A0   1C86           00712 EXITDISPLAY     btfss           PORTB,1     ;Wait until data is available from the keypad
01A1   2???           00713                 goto            $-1 
                      00714 
01A2   0E06           00715                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
01A3   390F           00716                 andlw           0x0F
01A4   00B9           00717                 movwf           temp
                      00718                 Key     0x00, show_RTC
01A5   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01A6   390F               M          andlw          0x0F
01A7   3A00               M          xorlw          0x00
01A8   1903               M          btfsc          STATUS, Z
01A9   2???               M          call           show_RTC
                      00719                 Key     0x02, Stickers1
01AA   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01AB   390F               M          andlw          0x0F
01AC   3A02               M          xorlw          0x02
01AD   1903               M          btfsc          STATUS, Z
01AE   2???               M          call           Stickers1
                      00720                 Rotation        0x03
01AF   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01B0   390F               M          andlw          0x0F
01B1   3A03               M          xorlw          0x03
01B2   1903               M          btfsc          STATUS, Z
01B3   2???               M          call           ShiftLeft
                      00721                 Key     0x04, ShowBins
01B4   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01B5   390F               M          andlw          0x0F
01B6   3A04               M          xorlw          0x04
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B7   1903               M          btfsc          STATUS, Z
01B8   2???               M          call           ShowBins
                      00722                 ;Key    0x05, TotalDistance
                      00723                 Key     0x06, Locations
01B9   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01BA   390F               M          andlw          0x0F
01BB   3A06               M          xorlw          0x06
01BC   1903               M          btfsc          STATUS, Z
01BD   2???               M          call           Locations
                      00724                 Key     0x07, AddBin
01BE   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
01BF   390F               M          andlw          0x0F
01C0   3A07               M          xorlw          0x07
01C1   1903               M          btfsc          STATUS, Z
01C2   2???               M          call           AddBin
01C3   1886           00725                 btfsc           PORTB,1     ;Wait until key is released
01C4   2???           00726                 goto            $-1
01C5   2???           00727                 goto            EXITDISPLAY
                      00728 
01C6   2???           00729     goto    EXIT
                      00730     
01C7                  00731 MoveBackwards
                      00732     
01C7   2???           00733     call    PWMSTOP
                      00734     
                      00735         
                      00736 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00737 
                      00738 ;*********************************************************
                      00739 ; A to D conversion with LCD display for IR sensor
                      00740 ;*********************************************************
                      00741         
                      00742 ;******************************************
                      00743 ;       Sticker Print Modules
                      00744 ;*****************************************
                      00745         
01C8                  00746 BWScanModule1
                      00747 
01C8   151F           00748         bsf     ADCON0,2                ;start conversion and wait for it to complete
01C9   191F           00749         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01CA   2???           00750         goto    $-1
                      00751         
01CB   081E           00752         movf    ADRESH, W
01CC   00D1           00753         movwf   NumH
01CD   081E           00754         movf    ADRESL, W
01CE   00D2           00755         movwf   NumL
01CF   2???           00756         call    Clear_Display
01D0   2???           00757         call    bin16_BCD
                      00758         PrintNumber     TenK
                          M         ;movf       number ,W
01D1   0853               M         movfw       TenK
01D2   2???               M         call        DectoChar
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D3   2???               M         call        WR_DATA
                      00759         PrintNumber     Thou
                          M         ;movf       number ,W
01D4   0854               M         movfw       Thou
01D5   2???               M         call        DectoChar
01D6   2???               M         call        WR_DATA
                      00760         PrintNumber     Hund
                          M         ;movf       number ,W
01D7   0855               M         movfw       Hund
01D8   2???               M         call        DectoChar
01D9   2???               M         call        WR_DATA
                      00761         PrintNumber     Tens
                          M         ;movf       number ,W
01DA   0856               M         movfw       Tens
01DB   2???               M         call        DectoChar
01DC   2???               M         call        WR_DATA
                      00762         PrintNumber     Ones
                          M         ;movf       number ,W
01DD   0857               M         movfw       Ones
01DE   2???               M         call        DectoChar
01DF   2???               M         call        WR_DATA
01E0   0008           00763         return
01E1                  00764 BWStoreModule1
01E1   1383           00765         BCF     STATUS, IRP
01E2   3042           00766         movlw   0x42
01E3   0084           00767         movwf   FSR
01E4   3000           00768         movlw   0X0
01E5   0360           00769         decf    NumOfBins1,W            ;want bin number to be decreased when back checks it
01E6   0784           00770         addwf   FSR,F
01E7   3055           00771         movlw   0X55                    ; roughly 21000
01E8   02D1           00772         subwf   NumH
01E9   3000           00773         movlw   0x0
01EA   1803           00774         btfsc   STATUS, C
01EB   3001           00775         movlw   0x1
01EC   0080           00776         movwf   INDF
01ED   0008           00777         return  
                      00778         
01EE                  00779 BWScanModule2
                      00780 
01EE   151F           00781         bsf     ADCON0,2                ;start conversion and wait for it to complete
01EF   191F           00782         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
01F0   2???           00783         goto    $-1
                      00784         
01F1   081E           00785         movf    ADRESH, W
01F2   00D1           00786         movwf   NumH
01F3   081E           00787         movf    ADRESL, W
01F4   00D2           00788         movwf   NumL
01F5   2???           00789         call    Clear_Display
01F6   2???           00790         call    bin16_BCD
                      00791         PrintNumber     TenK
                          M         ;movf       number ,W
01F7   0853               M         movfw       TenK
01F8   2???               M         call        DectoChar
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F9   2???               M         call        WR_DATA
                      00792         PrintNumber     Thou
                          M         ;movf       number ,W
01FA   0854               M         movfw       Thou
01FB   2???               M         call        DectoChar
01FC   2???               M         call        WR_DATA
                      00793         PrintNumber     Hund
                          M         ;movf       number ,W
01FD   0855               M         movfw       Hund
01FE   2???               M         call        DectoChar
01FF   2???               M         call        WR_DATA
                      00794         PrintNumber     Tens
                          M         ;movf       number ,W
0200   0856               M         movfw       Tens
0201   2???               M         call        DectoChar
0202   2???               M         call        WR_DATA
                      00795         PrintNumber     Ones
                          M         ;movf       number ,W
0203   0857               M         movfw       Ones
0204   2???               M         call        DectoChar
0205   2???               M         call        WR_DATA
0206   0008           00796         return
0207                  00797 BWStoreModule2
0207   1383           00798         BCF     STATUS, IRP
0208   3049           00799         movlw   0x49                    ;number 49 to try to get registers for back of bin
0209   0084           00800         movwf   FSR
020A   3000           00801         movlw   0X0
020B   0360           00802         decf    NumOfBins1,W
020C   0784           00803         addwf   FSR,F
020D   3003           00804         movlw   0X3
020E   02D1           00805         subwf   NumH
020F   3000           00806         movlw   0x0
0210   1803           00807         btfsc   STATUS, C
0211   3001           00808         movlw   0x1
0212   0080           00809         movwf   INDF
0213   0008           00810         return  
                      00811         
                      00812 ;***************************************************
                      00813 ;       US Sensor Modules                           [TESTED]
                      00814 ;***************************************************
                      00815         
0214                  00816 Read1_US                    
                      00817          
                      00818         ;call           Read1_US1 
                      00819          
                      00820         ReadUltrasonic  UST1,US1E1
0214   018F               M     clrf        TMR1H
0215   018E               M     clrf        TMR1L
                          M 
0216   1008               M     bcf PORTD,   0                      ;make sure trigger is clear
0217   2???               M     call lcdLongDelay
                          M 
0218   1408               M     bsf PORTD,   0              ;trigger high, bottom sensor
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0219   2???               M     call lcdLongDelay           ;10us delay
021A   1008               M     bcf PORTD,   0              ;trigger low
                          M 
021B   1D05               M     btfss       PORTA, 2                ;wait for echo to go high
021C   2???               M     goto        $-1
021D   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
021E   1905               M     btfsc       PORTA, 2                ;wait for echo to go low
021F   2???               M     goto        $-1
                          M 
0220   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00821         
0221   2???           00822         call            Clear_Display
                      00823         
0222   080F           00824         movf            TMR1H, W
0223   00D1           00825         movwf           NumH
0224   080E           00826         movf            TMR1L, W
0225   00D2           00827         movwf           NumL
                      00828         
0226   2???           00829         call            bin16_BCD
                      00830         
                      00831         PrintNumber     TenK
                          M         ;movf       number ,W
0227   0853               M         movfw       TenK
0228   2???               M         call        DectoChar
0229   2???               M         call        WR_DATA
                      00832         PrintNumber     Thou
                          M         ;movf       number ,W
022A   0854               M         movfw       Thou
022B   2???               M         call        DectoChar
022C   2???               M         call        WR_DATA
                      00833 ;       PrintNumber     Hund
                      00834 ;       PrintNumber     Tens
                      00835 ;       PrintNumber     Ones
022D   2???           00836         call            Clear_Display
022E   0008           00837         return
                      00838 
022F                  00839 Read2_US                    
                      00840          
                      00841         ;call           Read2_US1 
                      00842         
                      00843         ReadUltrasonic  UST2,US1E2
022F   018F               M     clrf        TMR1H
0230   018E               M     clrf        TMR1L
                          M 
0231   1088               M     bcf PORTD,   1                      ;make sure trigger is clear
0232   2???               M     call lcdLongDelay
                          M 
0233   1488               M     bsf PORTD,   1              ;trigger high, bottom sensor
0234   2???               M     call lcdLongDelay           ;10us delay
0235   1088               M     bcf PORTD,   1              ;trigger low
                          M 
0236   1D85               M     btfss       PORTA, 3                ;wait for echo to go high
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0237   2???               M     goto        $-1
0238   1410               M     bsf T1CON,TMR1ON    ;turn on timer
                          M 
0239   1985               M     btfsc       PORTA, 3                ;wait for echo to go low
023A   2???               M     goto        $-1
                          M 
023B   1010               M     bcf T1CON,TMR1ON    ;turn off timer
                      00844          
023C   2???           00845         call            Clear_Display
                      00846         
023D   080F           00847         movf            TMR1H, W
023E   00D1           00848         movwf           NumH
023F   080E           00849         movf            TMR1L, W
0240   00D2           00850         movwf           NumL
                      00851         
0241   2???           00852         call            bin16_BCD
                      00853         
                      00854         PrintNumber     TenK
                          M         ;movf       number ,W
0242   0853               M         movfw       TenK
0243   2???               M         call        DectoChar
0244   2???               M         call        WR_DATA
                      00855         PrintNumber     Thou
                          M         ;movf       number ,W
0245   0854               M         movfw       Thou
0246   2???               M         call        DectoChar
0247   2???               M         call        WR_DATA
                      00856 ;       PrintNumber     Hund
                      00857 ;       PrintNumber     Tens
                      00858 ;       PrintNumber     Ones
0248   2???           00859         call            Clear_Display
0249   0008           00860         return
                      00861                 
                      00862 ;*******************************************************
                      00863 ; Dist_Decoder
                      00864 ;   input:  temp (holds bin_dist_reg)
                      00865 ;   output: cm, mm, m
                      00866 ;   Desc:   Converts the count in the rotary encoder
                      00867 ;           into physical distance
                      00868 ;*******************************************************
024A                  00869 Dist_Decoder
                      00870         ; Initalize all registers
024A   01EA           00871         clrf    cm              
024B   01EB           00872         clrf    mm
024C   01EC           00873         clrf    m
                      00874 
                      00875         ; Check if its already zero
024D   0839           00876         movfw   temp
024E   3C00           00877         sublw   D'0'
024F   1903           00878         btfsc   STATUS, Z
0250   0008           00879         return
                      00880         
0251                  00881 Decode_loop                     ; Assume each step is 3.6 cm
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00882         ; Perform decode
                      00883         ADDL    cm, cm, D'6'        ;perimeter of 2*pi
0251   3006               M     MOVLW  D'6'         ; move literal into working register
0252   076A               M     ADDWF   cm,W        ; W <- literal + reg
0253   00EA               M     MOVWF   cm          ; Destination <- literal + reg
                      00884         ADDL    mm, mm, D'3'
0254   3003               M     MOVLW  D'3'         ; move literal into working register
0255   076B               M     ADDWF   mm,W        ; W <- literal + reg
0256   00EB               M     MOVWF   mm          ; Destination <- literal + reg
0257   03B9           00885         decf    temp
                      00886         
0258                  00887 Check_mm_overflow
                      00888         ; Test if mm has overflowed! (mm >= 10)
0258   300A           00889         movlw   D'10'
0259   026B           00890         subwf   mm, w           ; mm - 10 --> w (w = f - w, when d = 0) 
025A   1803           00891         btfsc   STATUS, C       ; Y = mm, w = 10, Y-w
025B   2???           00892         goto    mm_overflow     ; Run overflow routine if it did overflow
                      00893         
025C                  00894 Check_cm_overflow       
                      00895         ; Test if cm has overflowed! (cm >= 100)
025C   086A           00896         movfw   cm
025D   00F0           00897         movwf   temp_2
025E   3064           00898         movlw   D'100'
025F   0270           00899         subwf   temp_2, w       ; cm - 100 --> w (w = f - w, when d = 0) 
0260   1803           00900         btfsc   STATUS, C       ; Y = cm, w = 100, Y-w
0261   2???           00901         goto    cm_overflow     ; Run overflow routine if it did overflow
                      00902 
0262                  00903 Decode_check_done       
                      00904         ; Test if done decoding 
0262   0839           00905         movfw   temp
0263   3C00           00906         sublw   D'0'            ; MAKE THIS A LARGER NUMBER TO ACCOUNT FOR 
0264   1D03           00907         btfss   STATUS, Z       ; DIFFERENCE IN DISTANCE
0265   2???           00908         goto    Decode_loop
0266   0008           00909         return  
                      00910         
0267                  00911 mm_overflow
0267   0AEA           00912         incf    cm              ; cm + 1 --> cm
0268   300A           00913         movlw   D'10'           ; 10 --> w
0269   02EB           00914         subwf   mm, f           ; mm - 10 --> mm (f = f - w, when d = 1) 
026A   2???           00915         goto    Decode_check_done       ; Check cm overflow
                      00916         
026B                  00917 cm_overflow
026B   0AEC           00918         incf    m               ; m + 1 --> m
026C   3064           00919         movlw   D'100'          ; 100 --> w
026D   02EA           00920         subwf   cm, f           ; cm - 100 --> cm (f = f - w, when d = 1) 
026E   2???           00921         goto    Decode_check_done       ; Continue decoding
                      00922         
026F                  00923 StoreThisTick
026F   1383           00924         BCF     STATUS, IRP
0270   303B           00925         movlw   0x3B                    ;number 56 to try to get location registers in cblock
0271   0084           00926         movwf   FSR
0272   3000           00927         movlw   0X0
0273   0360           00928         decf    NumOfBins1,W
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0274   0784           00929         addwf   FSR,F
0275   0801           00930         movfw   TMR0            ; poll encoder for current state
0276   00B9           00931         movwf   temp
0277   0080           00932         movwf   INDF
                      00933         
0278   0008           00934         return
                      00935 ;*********************************************
                      00936 ; Keypad Modules
                      00937 ;*******************************************
                      00938          
                      00939 
0279                  00940 ShiftLeft
0279   3018           00941         movlw           b'00011000'             ;Move to the left
027A   2???           00942         call            WR_INS
027B   0008           00943         return
                      00944 
027C   2???           00945         goto    KeypadandLCD
                      00946         
027D                  00947 RTCDisplay
027D   2???           00948         call    show_RTC
                      00949         
027E   1886           00950         btfsc           PORTB,1     ;Wait until data is available from the keypad
027F   0008           00951         return
0280   1886           00952         btfsc           PORTB,1     ;Wait until data is available from the keypad
0281   0008           00953         return
0282   1886           00954         btfsc           PORTB,1     ;Wait until data is available from the keypad
0283   0008           00955         return
0284   1886           00956         btfsc           PORTB,1     ;Wait until data is available from the keypad
0285   0008           00957         return
0286   2???           00958         goto        RTCDisplay
                      00959         
0287                  00960 StoreBW1
0287   1283           00961         bcf     STATUS,RP0
0288   30C5           00962         movlw   b'11000101'             
0289   009F           00963         movwf   ADCON0                  ;choose RA0
                      00964         
028A   2???           00965         call    BWScanModule1   
028B   2???           00966         call    BWStoreModule1
                      00967         
028C   0008           00968         return                          ; why was there not a return here before?
                      00969         
028D                  00970 StoreBW2
028D   1283           00971         bcf     STATUS,RP0
028E   30CD           00972         movlw   b'11001101'             
028F   009F           00973         movwf   ADCON0                  ;choose RA1
                      00974         
0290   2???           00975         call    BWScanModule2
0291   2???           00976         call    BWStoreModule2
                      00977         
0292   0008           00978         return
                      00979         
0293                  00980 AddBin
0293   2???           00981         Call Clear_Display
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0294   0AE0           00982         incf    NumOfBins1,F
                      00983         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
0295   0860               M         movfw       NumOfBins1
0296   2???               M         call        DectoChar
0297   2???               M         call        WR_DATA
0298   3002           00984         movlw   0X2                     ;checks if max of 7 bins has been reached
0299   0260           00985         subwf   NumOfBins1,W            
029A   1903           00986         btfsc   STATUS,Z
029B   2???           00987         goto    EXIT
029C   0008           00988         return
                      00989         
029D                  00990 ShowBins
                      00991         PrintNumber     NumOfBins1
                          M         ;movf       number ,W
029D   0860               M         movfw       NumOfBins1
029E   2???               M         call        DectoChar
029F   2???               M         call        WR_DATA
02A0   0008           00992         return
                      00993         
02A1                  00994 Stickers1                   ;TESTED
02A1   2???           00995         call            Clear_Display
02A2   3000           00996         movlw           0X0
02A3   00DF           00997         movwf           counter
02A4   1383           00998         BCF             STATUS, IRP
02A5   3041           00999         movlw           0x41
02A6   0084           01000         movwf           FSR
02A7   0860           01001         movfw           NumOfBins1
02A8   00DE           01002         movwf           countdown
                      01003         Display         FrontStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02A9   01B3               M                 clrf    Table_Counter
02AA   0103               M                 clrw            
02AB   0833               M loop_   movf    Table_Counter,W
02AC   2???               M                 call    FrontStickers
02AD   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02AE   1903               M                 btfsc   STATUS,Z
02AF   2???               M                         goto    end_
02B0   2???               M                 call    WR_DATA
02B1   0AB3               M                 incf    Table_Counter,F
02B2   2???               M                 goto    loop_
02B3                      M end_
02B3                  01004 FrontLoop1      
02B3   0A84           01005         INCF            FSR,1
02B4   0ADF           01006         incf            counter
                      01007         PrintNumber     counter
                          M         ;movf       number ,W
02B5   085F               M         movfw       counter
02B6   2???               M         call        DectoChar
02B7   2???               M         call        WR_DATA
                      01008         Display         Colon
  0000                    M                 local   loop_
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_
02B8   01B3               M                 clrf    Table_Counter
02B9   0103               M                 clrw            
02BA   0833               M loop_   movf    Table_Counter,W
02BB   2???               M                 call    Colon
02BC   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02BD   1903               M                 btfsc   STATUS,Z
02BE   2???               M                         goto    end_
02BF   2???               M                 call    WR_DATA
02C0   0AB3               M                 incf    Table_Counter,F
02C1   2???               M                 goto    loop_
02C2                      M end_
02C2   0800           01009         movfw           INDF
                      01010         PrintCol        W
02C3   0800               M         movfw       W
02C4   2???               M         call        StickerColours
02C5   2???               M         call        WR_DATA
                      01011         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02C6   01B3               M                 clrf    Table_Counter
02C7   0103               M                 clrw            
02C8   0833               M loop_   movf    Table_Counter,W
02C9   2???               M                 call    Spacee
02CA   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02CB   1903               M                 btfsc   STATUS,Z
02CC   2???               M                         goto    end_
02CD   2???               M                 call    WR_DATA
02CE   0AB3               M                 incf    Table_Counter,F
02CF   2???               M                 goto    loop_
02D0                      M end_
02D0   0BDE           01012         decfsz          countdown,F
02D1   2???           01013         goto            FrontLoop1
                      01014         
02D2   2???           01015         call            Switch_Lines
                      01016         
02D3                  01017 Stickers2                       ;TESTED
                      01018         
02D3   3000           01019         movlw           0X0
02D4   00DF           01020         movwf           counter
02D5   1383           01021         BCF             STATUS, IRP
02D6   3048           01022         movlw           0x48
02D7   0084           01023         movwf           FSR
02D8   0860           01024         movfw           NumOfBins1
02D9   00DE           01025         movwf           countdown
                      01026         Display         BackStickers
  0000                    M                 local   loop_
  0000                    M                 local   end_
02DA   01B3               M                 clrf    Table_Counter
02DB   0103               M                 clrw            
02DC   0833               M loop_   movf    Table_Counter,W
02DD   2???               M                 call    BackStickers
02DE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02DF   1903               M                 btfsc   STATUS,Z
02E0   2???               M                         goto    end_
02E1   2???               M                 call    WR_DATA
02E2   0AB3               M                 incf    Table_Counter,F
02E3   2???               M                 goto    loop_
02E4                      M end_
02E4                  01027 FrontLoop2
02E4   0A84           01028         INCF            FSR,1
02E5   0ADF           01029         incf            counter
                      01030         PrintNumber     counter
                          M         ;movf       number ,W
02E6   085F               M         movfw       counter
02E7   2???               M         call        DectoChar
02E8   2???               M         call        WR_DATA
                      01031         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
02E9   01B3               M                 clrf    Table_Counter
02EA   0103               M                 clrw            
02EB   0833               M loop_   movf    Table_Counter,W
02EC   2???               M                 call    Colon
02ED   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02EE   1903               M                 btfsc   STATUS,Z
02EF   2???               M                         goto    end_
02F0   2???               M                 call    WR_DATA
02F1   0AB3               M                 incf    Table_Counter,F
02F2   2???               M                 goto    loop_
02F3                      M end_
02F3   0800           01032         movfw           INDF
                      01033         PrintCol        W
02F4   0800               M         movfw       W
02F5   2???               M         call        StickerColours
02F6   2???               M         call        WR_DATA
                      01034         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
02F7   01B3               M                 clrf    Table_Counter
02F8   0103               M                 clrw            
02F9   0833               M loop_   movf    Table_Counter,W
02FA   2???               M                 call    Spacee
02FB   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02FC   1903               M                 btfsc   STATUS,Z
02FD   2???               M                         goto    end_
02FE   2???               M                 call    WR_DATA
02FF   0AB3               M                 incf    Table_Counter,F
0300   2???               M                 goto    loop_
0301                      M end_
0301   0BDE           01035         decfsz          countdown,F
0302   2???           01036         goto            FrontLoop2
                      01037         
0303   0008           01038         return
                      01039         
0304                  01040 Locations                       ;TESTED
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0304   2???           01041         call            Clear_Display
0305   3000           01042         movlw           0X0
0306   00DF           01043         movwf           counter
0307   1383           01044         BCF             STATUS, IRP
0308   303A           01045         movlw           0x3A
0309   0084           01046         movwf           FSR
030A   0860           01047         movfw           NumOfBins1
030B   00DE           01048         movwf           countdown
                      01049         Display         Distances
  0000                    M                 local   loop_
  0000                    M                 local   end_
030C   01B3               M                 clrf    Table_Counter
030D   0103               M                 clrw            
030E   0833               M loop_   movf    Table_Counter,W
030F   2???               M                 call    Distances
0310   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0311   1903               M                 btfsc   STATUS,Z
0312   2???               M                         goto    end_
0313   2???               M                 call    WR_DATA
0314   0AB3               M                 incf    Table_Counter,F
0315   2???               M                 goto    loop_
0316                      M end_
0316   2???           01050         call            Switch_Lines
0317                  01051 FrontLoop       
0317   0A84           01052         INCF            FSR,1
0318   0ADF           01053         incf            counter
                      01054         PrintNumber     counter
                          M         ;movf       number ,W
0319   085F               M         movfw       counter
031A   2???               M         call        DectoChar
031B   2???               M         call        WR_DATA
                      01055         Display         Colon
  0000                    M                 local   loop_
  0000                    M                 local   end_
031C   01B3               M                 clrf    Table_Counter
031D   0103               M                 clrw            
031E   0833               M loop_   movf    Table_Counter,W
031F   2???               M                 call    Colon
0320   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0321   1903               M                 btfsc   STATUS,Z
0322   2???               M                         goto    end_
0323   2???               M                 call    WR_DATA
0324   0AB3               M                 incf    Table_Counter,F
0325   2???               M                 goto    loop_
0326                      M end_
                      01056         Display_Dist    INDF
                          M     MOV     INDF,         temp  ; Bin_Dist_reg --> temp
0326   0800               M     MOVF  INDF,W        ; move reg1 into working register
0327   00B9               M     MOVWF   temp        ; reg2 <- reg1
0328   2???               M     call    Distance_Display
                      01057         Display         Spacee
  0000                    M                 local   loop_
  0000                    M                 local   end_
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0329   01B3               M                 clrf    Table_Counter
032A   0103               M                 clrw            
032B   0833               M loop_   movf    Table_Counter,W
032C   2???               M                 call    Spacee
032D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
032E   1903               M                 btfsc   STATUS,Z
032F   2???               M                         goto    end_
0330   2???               M                 call    WR_DATA
0331   0AB3               M                 incf    Table_Counter,F
0332   2???               M                 goto    loop_
0333                      M end_
0333   0BDE           01058         decfsz          countdown,F
0334   2???           01059         goto            FrontLoop
                      01060         
0335   0008           01061         return
                      01062         
0336                  01063 LEDControlON
                      01064         
0336   1862           01065         btfsc       LEDcounter0,0
0337   2???           01066         goto        $+4
0338   1406           01067         bsf         LED
0339   1462           01068         bsf         LEDcounter0,0
033A   0008           01069         return
                      01070         
                      01071         
033B   1006           01072         bcf         LED
033C   1062           01073         bcf         LEDcounter0,0
033D   0008           01074         return
                      01075         
                      01076         
033E                  01077 DisplayBlackWhiteIR1
                      01078         
033E   30C5           01079         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
033F   009F           01080         movwf   ADCON0  
                      01081                 
0340   2???           01082         call            BWScanModule1   
0341   0008           01083         return
                      01084         
                      01085         
0342                  01086 DisplayBlackWhiteIR2
                      01087         
0342   30CD           01088         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra as the reader pin
0343   009F           01089         movwf   ADCON0  
                      01090         
0344   2???           01091         call            BWScanModule1   
0345   0008           01092         return
                      01093 
                      01094         
0346                  01095 StdRotation1
                      01096         
0346   1863           01097         btfsc       LEDcounter1,0
0347   2???           01098         goto        $+4
0348   1287           01099         bcf             Std1
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0349   1463           01100         bsf         LEDcounter1,0
034A   0008           01101         return
                      01102         
034B   1687           01103         bsf             Std1
034C   1063           01104         bcf         LEDcounter1,0
034D   0008           01105         return
                      01106         
034E                  01107 StdRotation2
                      01108 
034E   1864           01109         btfsc       LEDcounter2,0
034F   2???           01110         goto        $+4
                      01111         
0350   1307           01112         bcf             Std2
0351   1464           01113         bsf         LEDcounter2,0
0352   0008           01114         return
                      01115         
0353   1D06           01116         btfss       SwitchWhite
0354   1707           01117         bsf         Std2
                      01118         
0355   1707           01119         bsf             Std2
0356   1064           01120         bcf         LEDcounter2,0
                      01121 
0357   0008           01122         return
                      01123                 
0358                  01124 StdRotation1Backwards
                      01125         
0358   1866           01126         btfsc       LEDcounter4,0
0359   2???           01127         goto        $+4
035A   1407           01128         bsf             Std1Backwards
035B   1466           01129         bsf         LEDcounter4,0
035C   0008           01130         return
                      01131         
035D   1007           01132         bcf             Std1Backwards
035E   1066           01133         bcf         LEDcounter4,0
035F   0008           01134         return
                      01135         
0360                  01136 StdRotation2Backwards
                      01137 
0360   1867           01138         btfsc       LEDcounter5,0
0361   2???           01139         goto        $+4
0362   1787           01140         bsf             Std2Backwards
0363   1467           01141         bsf         LEDcounter5,0
0364   0008           01142         return
                      01143         
0365   1D06           01144         btfss       SwitchWhite
0366   1707           01145         bsf         Std2
                      01146         
0367   1387           01147         bcf             Std2Backwards
0368   1067           01148         bcf         LEDcounter5,0
0369   0008           01149         return
                      01150 
036A                  01151 PWMFWD  
                      01152         
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01153     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      01154     
                      01155     ;save   pr2 value so that you can zero it after
                      01156     
036A   1868           01157     btfsc           LEDcounter7,0
036B   2???           01158     goto            $+4
036C   0197           01159     clrf            CCP1CON
036D   1468           01160     bsf             LEDcounter7,0
036E   0008           01161     return
                      01162     
036F   1683 1303      01163     BANKSEL TRISC
0371   1107           01164     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01165     
0372   0817           01166     MOVF     CCP1CON,W          ;set CCP1 as PWM
0373   39F0           01167     ANDLW    0xF0
0374   380C           01168     IORLW    0x0C
0375   0097           01169     MOVWF    CCP1CON
                      01170 
0376   0812           01171     movfw   PR2
0377   00D0           01172     movwf   pr2temp
                      01173     
                      01174     ;11000011
0378   30C3           01175     MOVLW    b'11000011'        ;set highest PWM value
0379   1683 1303      01176     BANKSEL  PR2                
037B   0092           01177     MOVWF    PR2                
037C   1283 1303      01178     BANKSEL  TMR2               
                      01179     
037E   1492           01180     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01181     
037F   0195           01182     CLRF    CCPR1L              ;set PWM to zero
                      01183     
0380   1712           01184     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0381   1692           01185     BSF     T2CON, TOUTPS2
0382   1612           01186     BSF     T2CON, TOUTPS1
0383   1592           01187     BSF     T2CON, TOUTPS0
                      01188     
                      01189     ; SET PWM duty cycle
                      01190     ;01001110
0384   1697           01191     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
0385   1617           01192     BSF     CCP1CON, 4
                      01193     MOVLF   B'01100000', CCPR1L                 ; previous was 01101
0386   3060               M     MOVLW  B'01100000'  ; move literal into working register
0387   0095               M     MOVWF   CCPR1L      ; move working register into reg
0388   1597           01194     BSF     CCP1CON, 3
0389   1517           01195     BSF     CCP1CON, 2
                      01196     
038A   1512           01197     BSF     T2CON, TMR2ON       ;and start the timer running
                      01198  
038B   1068           01199     bcf             LEDcounter7,0
                      01200     
038C   0008           01201     return
                      01202     
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

038D                  01203 PWMBACK
                      01204     
                      01205     ;************ SECOND PWM - Positive one ******************************
                      01206     
038D   1869           01207     btfsc           LEDcounter8,0
038E   2???           01208     goto            $+4
038F   019D           01209     clrf            CCP2CON
                      01210     ;bcf                    PORTC,1
0390   1469           01211     bsf             LEDcounter8,0
0391   0008           01212     return
                      01213     
                      01214  
                      01215     
0392   1683 1303      01216     BANKSEL TRISC
0394   1087           01217     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01218     
0395   081D           01219     MOVF     CCP2CON,W          ;set CCP2 as PWM
0396   39F0           01220     ANDLW    0xF0
0397   380C           01221     IORLW    0x0C
0398   009D           01222     MOVWF    CCP2CON
                      01223     
                      01224     ;11000011
0399   30C3           01225     MOVLW    b'11000011'        ;set highest PWM value
039A   1683 1303      01226     BANKSEL  PR2                
039C   0092           01227     MOVWF    PR2                
039D   1283 1303      01228     BANKSEL  TMR2               
                      01229     
039F   1492           01230     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01231     
03A0   019B           01232     CLRF    CCPR2L              ;set PWM to zero
                      01233     
03A1   1712           01234     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
03A2   1692           01235     BSF     T2CON, TOUTPS2
03A3   1612           01236     BSF     T2CON, TOUTPS1
03A4   1592           01237     BSF     T2CON, TOUTPS0
                      01238     
                      01239     ; SET PWM duty cycle
                      01240     ;01001110
03A5   169D           01241     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
03A6   161D           01242     BSF     CCP2CON, 4
03A7   3060           01243     MOVLW   B'01100000'                         ; good speed for moving the arm
03A8   009B           01244     MOVWF   CCPR2L      
03A9   159D           01245     BSF     CCP2CON, 3
03AA   151D           01246     BSF     CCP2CON, 2
                      01247     
03AB   1512           01248     BSF     T2CON, TMR2ON       ;and start the timer running
03AC   1283           01249     BCF     STATUS,RP0
                      01250     
                      01251     ;bsf                    PORTC,1
                      01252     
03AD   1069           01253     bcf             LEDcounter8,0
                      01254     
03AE   0008           01255     return
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01256     
03AF                  01257 PWMSTOP
                      01258     
03AF   0197           01259     clrf   CCP1CON
03B0   019D           01260     clrf   CCP2CON
03B1   0850           01261     movfw   pr2temp
03B2   0092           01262     movwf   PR2
                      01263     
03B3   0008           01264     return
                      01265         
                      01266         
                      01267 ;***************************************
                      01268 ; LCD control
                      01269 ;***************************************
03B4                  01270 Switch_Lines
03B4   30C0           01271                 movlw   B'11000000'
03B5   2???           01272                 call    WR_INS
03B6   0008           01273                 return
                      01274 
03B7                  01275 Clear_Display
03B7   3001           01276                 movlw   B'00000001'
03B8   2???           01277                 call    WR_INS
03B9   0008           01278                 return
                      01279 
                      01280 ;***************************************
                      01281 ; Delay 0.5s
                      01282 ;***************************************
03BA                  01283 HalfS   
  0000                01284         local   HalfS_0
03BA   3088           01285       movlw 0x88
03BB   00B0           01286       movwf COUNTH
03BC   30BD           01287       movlw 0xBD
03BD   00B1           01288       movwf COUNTM
03BE   3003           01289       movlw 0x03
03BF   00B2           01290       movwf COUNTL
                      01291 
03C0                  01292 HalfS_0
03C0   0BB0           01293       decfsz COUNTH, f
03C1   2???           01294       goto   $+2
03C2   0BB1           01295       decfsz COUNTM, f
03C3   2???           01296       goto   $+2
03C4   0BB2           01297       decfsz COUNTL, f
03C5   2???           01298       goto   HalfS_0
                      01299 
03C6   2???           01300       goto $+1
03C7   0000           01301       nop
03C8   0000           01302       nop
03C9   0008           01303                 return
                      01304                 
                      01305 ;***************************************
                      01306 ;***************************************
                      01307 ; Delay = 0.6 seconds
                      01308 ; Clock frequency = 4 MHz
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03CA                  01309 DELAY1
                      01310                         ;599996 cycles
03CA   30D1           01311         movlw   0xD1
03CB   00B5           01312         movwf   lcd_d1
03CC   304F           01313         movlw   0x4F
03CD   00B6           01314         movwf   lcd_d2
03CE   3002           01315         movlw   0x02
03CF   00EE           01316         movwf   lcd_d1_2
03D0                  01317 Delay_0
03D0   0BB5           01318         decfsz  lcd_d1, f
03D1   2???           01319         goto    $+2
03D2   0BB6           01320         decfsz  lcd_d2, f
03D3   2???           01321         goto    $+2
03D4   0BEE           01322         decfsz  lcd_d1_2, f
03D5   2???           01323         goto    Delay_0
                      01324 
                      01325                         ;4 cycles
03D6   0008           01326         return
                      01327         
                      01328 ;0.25s delay    
                      01329         
03D7                  01330 DELAY2
                      01331                         ;249998 cycles
03D7   304F           01332         movlw   0x4F
03D8   00B5           01333         movwf   lcd_d1
03D9   30C4           01334         movlw   0xC4
03DA   00B6           01335         movwf   lcd_d2
03DB                  01336 Delay_02
03DB   0BB5           01337         decfsz  lcd_d1, f
03DC   2???           01338         goto    $+2
03DD   0BB6           01339         decfsz  lcd_d2, f
03DE   2???           01340         goto    Delay_0
                      01341 
                      01342                         ;2 cycles
03DF   2???           01343         goto    $+1
                      01344         
Warning[203]: Found opcode in column 1. (return)
03E0   0008           01345 return
                      01346         
                      01347 ;***************************************
                      01348 ;Init_TMR0
                      01349 ;   Input:  RA4
                      01350 ;   Output: TMR0 register
                      01351 ;   desc:   Counts the clock pulses for the
                      01352 ;           rotary encoder
                      01353 ;****************************************
03E1                  01354 Init_TMR0                           ; INITIALIZE TIMER 0   
03E1   1683 1303      01355     BANKSEL OPTION_REG
                      01356     MOVLF   B'00101000', OPTION_REG
03E3   3028               M     MOVLW  B'00101000'  ; move literal into working register
03E4   0081               M     MOVWF   OPTION_REG  ; move working register into reg
                      01357     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01358     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01359     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01360     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01361     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01362     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01363     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01364     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
03E5   1283 1303      01365     BANKSEL TMR0
03E7   0181           01366     CLRF   TMR0                     ; Clear timer 0
03E8   0008           01367     return  
                      01368     
                      01369 ;************************************
                      01370 ; RTC Sublabels
                      01371 ;************************************
                      01372     
03E9                  01373 show_RTC
                      01374                 ;clear LCD screen
03E9   3001           01375                 movlw   b'00000001'
03EA   2???           01376                 call    WR_INS
                      01377 
                      01378                 ;Get year
03EB   3032           01379                 movlw   "2"                             ;First line shows 20**/**/**
03EC   2???           01380                 call    WR_DATA
03ED   3030           01381                 movlw   "0"
03EE   2???           01382                 call    WR_DATA
                      01383                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
03EF   3006               M         movlw   0x06
03F0   1283 1303          M         banksel 0x73
03F2   00F3               M         movwf   0x73
03F3   2???               M         call    read_rtc
03F4   1283 1303          M         banksel 0x75
03F6   0875               M         movf    0x75,w
03F7   2???               M         call    rtc_convert   
03F8   0877           01384                 movfw   0x77
03F9   2???           01385                 call    WR_DATA
03FA   0878           01386                 movfw   0x78
03FB   2???           01387                 call    WR_DATA
                      01388 
03FC   302F           01389                 movlw   "/"
03FD   2???           01390                 call    WR_DATA
                      01391 
                      01392                 ;Get month
                      01393                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       0x77 and the ones digit is placed in 0x78
03FE   3005               M         movlw   0x05
03FF   1283 1303          M         banksel 0x73
0401   00F3               M         movwf   0x73
0402   2???               M         call    read_rtc
0403   1283 1303          M         banksel 0x75
0405   0875               M         movf    0x75,w
0406   2???               M         call    rtc_convert   
0407   0877           01394                 movfw   0x77
0408   2???           01395                 call    WR_DATA
0409   0878           01396                 movfw   0x78
040A   2???           01397                 call    WR_DATA
                      01398 
040B   302F           01399                 movlw   "/"
040C   2???           01400                 call    WR_DATA
                      01401 
                      01402                 ;Get day
                      01403                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
040D   3004               M         movlw   0x04
040E   1283 1303          M         banksel 0x73
0410   00F3               M         movwf   0x73
0411   2???               M         call    read_rtc
0412   1283 1303          M         banksel 0x75
0414   0875               M         movf    0x75,w
0415   2???               M         call    rtc_convert   
0416   0877           01404                 movfw   0x77
0417   2???           01405                 call    WR_DATA
0418   0878           01406                 movfw   0x78
0419   2???           01407                 call    WR_DATA
                      01408 
041A   30C0           01409                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
041B   2???           01410                 call    WR_INS
                      01411 
                      01412                 ;Get hour
                      01413                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
041C   3002               M         movlw   0x02
041D   1283 1303          M         banksel 0x73
041F   00F3               M         movwf   0x73
0420   2???               M         call    read_rtc
0421   1283 1303          M         banksel 0x75
0423   0875               M         movf    0x75,w
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0424   2???               M         call    rtc_convert   
0425   0871           01414                 movfw   hour1           ;0x77
0426   2???           01415                 call    WR_DATA
0427   0872           01416                 movfw   hour2           ;0x78
0428   2???           01417                 call    WR_DATA
0429   303A           01418                 movlw                   ":"
042A   2???           01419                 call    WR_DATA
                      01420 
                      01421                 ;Get minute             
                      01422                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
042B   3001               M         movlw   0x01
042C   1283 1303          M         banksel 0x73
042E   00F3               M         movwf   0x73
042F   2???               M         call    read_rtc
0430   1283 1303          M         banksel 0x75
0432   0875               M         movf    0x75,w
0433   2???               M         call    rtc_convert   
0434   0873           01423                 movfw   min1            ;0x77
0435   2???           01424                 call    WR_DATA
0436   0874           01425                 movfw   min2            ;0x78
0437   2???           01426                 call    WR_DATA         
0438   303A           01427                 movlw                   ":"
0439   2???           01428                 call    WR_DATA
                      01429                 
                      01430                 ;Get seconds
                      01431                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
043A   3000               M         movlw   0x00
043B   1283 1303          M         banksel 0x73
043D   00F3               M         movwf   0x73
043E   2???               M         call    read_rtc
043F   1283 1303          M         banksel 0x75
0441   0875               M         movf    0x75,w
0442   2???               M         call    rtc_convert   
0443   0875           01432                 movfw   sec1        ;0x77
0444   2???           01433                 call    WR_DATA
0445   0876           01434                 movfw   sec2        ;0x78
0446   2???           01435                 call    WR_DATA
                      01436                 
0447   2???           01437                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
0448   0008           01438                 return
                      01439 
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01440 ;***************************************
                      01441 ; Setup RTC with time defined by user
                      01442 ;***************************************
0449                  01443 set_rtc_time
                      01444 
                      01445                 ;rtc_resetAll   ;reset rtc
                      01446                 ;works up to here
                      01447 
                      01448                 ;rtc_set        0x00,   B'10000000'
                      01449                 ;works up to here
                      01450                 
                      01451                 ;set time 
                      01452 ;               rtc_set 0x06,   B'00010110'             ; Year
                      01453 ;               ;works up to here
                      01454 ;               rtc_set 0x05,   B'00000011'             ; Month
                      01455 ;               rtc_set 0x04,   B'00100000'             ; Date
                      01456                 ;works up to here
                      01457                 ;rtc_set        0x03,   B'00100010'             ; Day
                      01458                 ;stops working on this one^
                      01459                 ;seems like day is the one that crashes it
                      01460                 rtc_set 0x02,   B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0449   1283 1303          M         banksel 0x73
044B   3002               M         movlw   0x02
044C   00F3               M         movwf   0x73
044D   1283 1303          M         banksel 0x74
044F   3000               M         movlw   B'00000000'
0450   00F4               M         movwf   0x74    
0451   2???               M         call    write_rtc
                      01461                 ;works on this one
                      01462                 rtc_set 0x01,   B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0452   1283 1303          M         banksel 0x73
0454   3001               M         movlw   0x01
0455   00F3               M         movwf   0x73
0456   1283 1303          M         banksel 0x74
0458   3000               M         movlw   B'00000000'
0459   00F4               M         movwf   0x74    
045A   2???               M         call    write_rtc
                      01463                 ;works on this one
                      01464                 rtc_set 0x00,   B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       address specified by addliteral in the RTC
045B   1283 1303          M         banksel 0x73
045D   3000               M         movlw   0x00
045E   00F3               M         movwf   0x73
045F   1283 1303          M         banksel 0x74
0461   3000               M         movlw   B'00000000'
0462   00F4               M         movwf   0x74    
0463   2???               M         call    write_rtc
                      01465                 ;works on this one
0464   0008           01466                 return
                      01467 
                      01468 ;***************************************
                      01469 ; Delay 1s
                      01470 ;***************************************
0465                  01471 OneS
  0000                01472                 local   OneS_0
0465   3010           01473       movlw 0x10
0466   00B0           01474       movwf COUNTH
0467   307A           01475       movlw 0x7A
0468   00B1           01476       movwf COUNTM
0469   3006           01477       movlw 0x06
046A   00B2           01478       movwf COUNTL
                      01479 
046B                  01480 OneS_0
046B   0BB0           01481       decfsz COUNTH, f
046C   2???           01482       goto   $+2
046D   0BB1           01483       decfsz COUNTM, f
046E   2???           01484       goto   $+2
046F   0BB2           01485       decfsz COUNTL, f
0470   2???           01486       goto   OneS_0
                      01487 
0471   2???           01488       goto $+1
0472   0000           01489       nop
0473   0000           01490       nop
0474   0008           01491                 return
                      01492                 
0475                  01493 lcdLongDelay
0475   3014           01494     movlw d'20'
0476   00B6           01495     movwf lcd_d2
0477                  01496 LLD_LOOP
                      01497     LCD_DELAY
0477   30FF               M         movlw   0xFF
0478   00B5               M         movwf   lcd_d1
0479   0BB5               M         decfsz  lcd_d1,f
047A   2???               M         goto    $-1
047B   0BB6           01498     decfsz lcd_d2,f
047C   2???           01499     goto LLD_LOOP
047D   0008           01500     return
                      01501     
                      01502 ;***************************************
                      01503 ; Look up table
                      01504 ;***************************************
                      01505     
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

047E                  01506 Welcome_Msg
                      01507         
                      01508         ;Change Page
047E   00BA           01509         movwf   Temp
047F   30??           01510         movlw   HIGH Welcome_MsgEntries
0480   008A           01511         movwf   PCLATH
0481   083A           01512         movf    Temp,w
0482   3E??           01513         addlw   LOW Welcome_MsgEntries
0483   1803           01514         btfsc   STATUS,C
0484   0A8A           01515             incf    PCLATH,f
0485   0082           01516         movwf   PCL     
0486   0782           01517         addwf    PCL,F
0487                  01518 Welcome_MsgEntries
0487   3431 343A 3453 01519         dt        "1:Simulation|#/D:PWM|*/0:Std1&Std2|3:B/W", 0
       3469 346D 3475 
       346C 3461 3474 
       3469 346F 346E 
       347C 3423 342F 
       3444 343A 3450 
       3457 344D 347C 
       342A 342F 3430 
       343A 3453 3474 
       3464 3431 3426 
       3453 3474 3464 
       3432 347C 3433 
       343A 3442 342F 
       3457 3400 
                      01520         
04B0                  01521 Welcome_Msg2
                      01522         
                      01523         ;Change Page
04B0   00BA           01524         movwf   Temp
04B1   30??           01525         movlw   HIGH Welcome_Msg2Entries
04B2   008A           01526         movwf   PCLATH
04B3   083A           01527         movf    Temp,w
04B4   3E??           01528         addlw   LOW Welcome_Msg2Entries
04B5   1803           01529         btfsc   STATUS,C
04B6   0A8A           01530             incf    PCLATH,f
04B7   0082           01531         movwf   PCL     
04B8   0782           01532         addwf    PCL,F
04B9                  01533 Welcome_Msg2Entries
04B9   3435 3444 3469 01534         dt        "5Distance 6Locations", 0
       3473 3474 3461 
       346E 3463 3465 
       3420 3436 344C 
       346F 3463 3461 
       3474 3469 346F 
       346E 3473 3400 
                      01535         
04CE                  01536 FinalMessage
                      01537         
                      01538         ;Change Page
04CE   00BA           01539         movwf    Temp
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04CF   30??           01540         movlw   HIGH FinalMessageEntries
04D0   008A           01541         movwf   PCLATH
04D1   083A           01542         movf    Temp,w
04D2   3E??           01543         addlw   LOW FinalMessageEntries
04D3   1803           01544         btfsc   STATUS,C
04D4   0A8A           01545             incf    PCLATH,f
04D5   0082           01546         movwf   PCL
04D6   0782           01547         addwf    PCL,F
04D7                  01548 FinalMessageEntries
04D7   3431 3454 3469 01549         dt        "1Time 3Stickers 4#Bins",0
       346D 3465 3420 
       3433 3453 3474 
       3469 3463 346B 
       3465 3472 3473 
       3420 3434 3423 
       3442 3469 346E 
       3473 3400 
                      01550         
04EE                  01551 DectoChar
                      01552         
                      01553         ;Change Page
04EE   00BA           01554         movwf   Temp
04EF   30??           01555         movlw   HIGH DectoCharEntries
04F0   008A           01556         movwf   PCLATH
04F1   083A           01557         movf    Temp,w
04F2   3E??           01558         addlw   LOW DectoCharEntries
04F3   1803           01559         btfsc   STATUS,C
04F4   0A8A           01560             incf    PCLATH,f
04F5   0082           01561         movwf   PCL     
04F6   0782           01562         addwf    PCL,F
04F7                  01563 DectoCharEntries
04F7   3430 3431 3432 01564         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01565         
0502                  01566 StickerColours
                      01567         
                      01568         ;Change Page
0502   00BA           01569         movwf   Temp
0503   30??           01570         movlw   HIGH StickerColoursEntries
0504   008A           01571         movwf   PCLATH
0505   083A           01572         movf    Temp,w
0506   3E??           01573         addlw   LOW StickerColoursEntries
0507   1803           01574         btfsc   STATUS,C
0508   0A8A           01575             incf    PCLATH,f
0509   0082           01576         movwf   PCL     
050A   0782           01577         addwf    PCL,F
050B                  01578 StickerColoursEntries
050B   3442 3457 3400 01579         dt        "BW",  0
                      01580         
050E                  01581 FrontStickers
                      01582 
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01583         ;Change Page
050E   00BA           01584         movwf   Temp
050F   30??           01585         movlw   HIGH FrontStickersEntries
0510   008A           01586         movwf   PCLATH
0511   083A           01587         movf    Temp,w
0512   3E??           01588         addlw   LOW FrontStickersEntries
0513   1803           01589         btfsc   STATUS,C
0514   0A8A           01590             incf    PCLATH,f
0515   0082           01591         movwf   PCL     
0516   0782           01592         addwf    PCL,F
0517                  01593 FrontStickersEntries
0517   3446 3472 346F 01594         dt        "Front",  0
       346E 3474 3400 
                      01595         
051D                  01596 BackStickers
                      01597 
                      01598         ;Change Page
051D   00BA           01599         movwf   Temp
051E   30??           01600         movlw   HIGH BackStickersEntries
051F   008A           01601         movwf   PCLATH
0520   083A           01602         movf    Temp,w
0521   3E??           01603         addlw   LOW BackStickersEntries
0522   1803           01604         btfsc   STATUS,C
0523   0A8A           01605             incf    PCLATH,f
0524   0082           01606         movwf   PCL     
0525   0782           01607         addwf    PCL,F
0526                  01608 BackStickersEntries
0526   3442 3461 3463 01609         dt        "Back",  0
       346B 3400 
                      01610         
052B                  01611 Spacee
                      01612 
                      01613         ;Change Page
052B   00BA           01614         movwf   Temp
052C   30??           01615         movlw   HIGH SpaceeEntries
052D   008A           01616         movwf   PCLATH
052E   083A           01617         movf    Temp,w
052F   3E??           01618         addlw   LOW SpaceeEntries
0530   1803           01619         btfsc   STATUS,C
0531   0A8A           01620             incf    PCLATH,f
0532   0082           01621         movwf   PCL     
0533   0782           01622         addwf    PCL,F
0534                  01623 SpaceeEntries
0534   3420 3400      01624         dt        " ",  0
                      01625         
0536                  01626 Colon
                      01627 
                      01628         ;Change Page
0536   00BA           01629         movwf   Temp
0537   30??           01630         movlw   HIGH ColonEntries
0538   008A           01631         movwf   PCLATH
0539   083A           01632         movf    Temp,w
053A   3E??           01633         addlw   LOW ColonEntries
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

053B   1803           01634         btfsc   STATUS,C
053C   0A8A           01635             incf    PCLATH,f
053D   0082           01636         movwf   PCL     
053E   0782           01637         addwf    PCL,F
053F                  01638 ColonEntries
053F   343A 3400      01639         dt        ":",  0
                      01640         
0541                  01641 Distances
                      01642 
                      01643         ;Change Page
0541   00BA           01644         movwf   Temp
0542   30??           01645         movlw   HIGH DistancesEntries
0543   008A           01646         movwf   PCLATH
0544   083A           01647         movf    Temp,w
0545   3E??           01648         addlw   LOW DistancesEntries
0546   1803           01649         btfsc   STATUS,C
0547   0A8A           01650             incf    PCLATH,f
0548   0082           01651         movwf   PCL     
0549   0782           01652         addwf    PCL,F
054A                  01653 DistancesEntries
054A   3444 3469 3473 01654         dt        "Dist (cm)",  0
       3474 3420 3428 
       3463 346D 3429 
       3400 
                      01655             
3F72                  01656         END
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AVOIDCOLUMN                       000000D9
AddBin                            00000293
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BINREADINGSTART                   00000132
BRGH                              00000002
BWScanModule1                     000001C8
BWScanModule2                     000001EE
BWStoreModule1                    000001E1
BWStoreModule2                    00000207
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BackStickers                      0000051D
BackStickersEntries               00000526
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHECKSWITCH                       00000150
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COLREADINGSTART                   00000126
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Check_cm_overflow                 0000025C
Check_mm_overflow                 00000258
Clear_Display                     000003B7
ClrLCD                            00000000
ColMotor                          PORTC,7
Colon                             00000536
ColonEntries                      0000053F
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DELAY1                            000003CA
DELAY2                            000003D7
DELAYEDREAD                       0000013F
D_A                               00000005
D_NOT_A                           00000005
Decode_check_done                 00000262
Decode_loop                       00000251
DectoChar                         000004EE
DectoCharEntries                  000004F7
Delay_0                           000003D0
Delay_02                          000003DB
Display                           
DisplayBlackWhiteIR1              0000033E
DisplayBlackWhiteIR2              00000342
Display_Dist                      
Dist_Decoder                      0000024A
Distance_Display                  00000001
Distances                         00000541
DistancesEntries                  0000054A
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENDTHIS                           00000147
EXIT                              0000015D
EXITDISPLAY                       000001A0
F                                 00000001
FERR                              00000002
FSR                               00000004
FinalMessage                      000004CE
FinalMessageEntries               000004D7
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         00000317
FrontLoop1                        000002B3
FrontLoop2                        000002E4
FrontStickers                     0000050E
FrontStickersEntries              00000517
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000003BA
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         000003E1
Key                               
KeypadandLCD                      00000085
LCD_DELAY                         
LED                               PORTB,0
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

LEDControlON                      00000336
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter7                       00000068
LEDcounter8                       00000069
LLD_LOOP                          00000477
Lb1                               00000032
Lb2                               00000036
Lb3                               0000003A
Lb4                               0000003E
Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
Locations                         00000304
MAX_HIGHS                         0x3
MAX_TICKS                         d'200'
MOV                               
MOVLF                             
MoveBackwards                     000001C7
NOTPWMBACK                        PORTC,1
NOTPWMFWD                         PORTC,2
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NumH                              00000051
NumL                              00000052
NumOfBins1                        00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              00000465
Ones                              00000057
P                                 00000004
PCFG0                             00000000
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           0000038D
PWMFWD                            0000036A
PWMSTOP                           000003AF
PrintCol                          
PrintNumber                       
Put_Dist_In_Reg                   
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READBIN                           00000106
READ_WRITE                        00000002
RETURNFROMCOLUMN                  000000F9
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        0000027D
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          00000214
Read2_US                          0000022F
ReadUltrasonic                    
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
ShiftLeft                         00000279
ShowBins                          0000029D
Spacee                            0000052B
SpaceeEntries                     00000534
Std1                              PORTC,5
Std1Backwards                     PORTC,0
Std2                              PORTC,6
Std2Backwards                     PORTC,7
StdRotation1                      00000346
StdRotation1Backwards             00000358
StdRotation2                      0000034E
StdRotation2Backwards             00000360
StickerColours                    00000502
StickerColoursEntries             0000050B
Stickers1                         000002A1
Stickers2                         000002D3
StoreBW1                          00000287
StoreBW2                          0000028D
StoreThisTick                     0000026F
SwitchArm                         PORTB,3
SwitchWhite                       PORTB,2
Switch_Lines                      000003B4
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOTAL                             00000122
TOTAL1                            00000124
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
Welcome_Msg                       0000047E
Welcome_Msg2                      000004B0
Welcome_Msg2Entries               000004B9
Welcome_MsgEntries                00000487
Z                                 00000002
_.org_0_0086                      00000086
_.org_0_00D6                      000000D6
_.org_0_00DD                      000000DD
_.org_0_00E7                      000000E7
_.org_0_00F4                      000000F4
_.org_0_00FC                      000000FC
_.org_0_0103                      00000103
_.org_0_012A                      0000012A
_.org_0_0136                      00000136
_.org_0_0154                      00000154
_.org_0_015A                      0000015A
_.org_0_01A1                      000001A1
_.org_0_01C4                      000001C4
_.org_0_01CA                      000001CA
_.org_0_01F0                      000001F0
_.org_0_021C                      0000021C
_.org_0_021F                      0000021F
_.org_0_0237                      00000237
_.org_0_023A                      0000023A
_.org_0_0337                      00000337
_.org_0_0347                      00000347
_.org_0_034F                      0000034F
_.org_0_0359                      00000359
_.org_0_0361                      00000361
_.org_0_036B                      0000036B
_.org_0_038E                      0000038E
_.org_0_03C1                      000003C1
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_03C3                      000003C3
_.org_0_03C6                      000003C6
_.org_0_03D1                      000003D1
_.org_0_03D3                      000003D3
_.org_0_03DC                      000003DC
_.org_0_03DF                      000003DF
_.org_0_046C                      0000046C
_.org_0_046E                      0000046E
_.org_0_0471                      00000471
_.org_0_047A                      0000047A
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
backstickerValues                 0000005C
bin16_BCD                         00000011
binCounter                        0000005D
cm                                0000006A
MPASM 5.65                          MAIN.ASM   4-4-2016  0:10:01         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

cm_overflow                       0000026B
com                               00000037
count_highs                       0000006F
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay3                            00000061
distanceMoved                     00000058
distreg                           0000006D
frontstickerValues                0000005B
goback                            000000D8
hour1                             00000071
hour2                             00000072
i2c_common_setup                  00000000
init                              00000044
isBinThere                        0000005A
isColumnThere                     00000059
lcdLongDelay                      00000475
lcd_d1                            00000035
lcd_d1_2                          0000006E
lcd_d2                            00000036
lcd_tmp                           00000034
m                                 0000006C
min1                              00000073
min2                              00000074
mm                                0000006B
mm_overflow                       00000267
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
sec1                              00000075
sec2                              00000076
set_rtc_time                      00000449
show_RTC                          000003E9
temp                              00000039
temp_2                            00000070
write_rtc                         00000000

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :     0 reported,    32 suppressed

