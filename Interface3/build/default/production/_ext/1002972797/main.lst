MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************************
                      00002 ; Keypad/LCD Test Code
                      00003 ; Assembler : mpasm.exe
                      00004 ; Linker    : mplink.exe
                      00005 ; Written By : Kevin Lam
                      00006 ;*******************************************************************
                      00007 
                      00008       list p=16f877               ; list directive to define processor
                      00009       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00010       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00011       Errorlevel -302               ; switches off message [302] Register in operand not in bank 0
                      00012       Errorlevel -305
                      00013 
                      00014       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00015         #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00016 
                      00017         udata_shr
                      00018 
                      00019       
                      00020       
                      00021         cblock  0x30
  00000030            00022                 COUNTH
  00000031            00023                 COUNTM  
  00000032            00024                 COUNTL  
  00000033            00025                 Table_Counter
  00000034            00026                 lcd_tmp 
  00000035            00027                 lcd_d1
  00000036            00028                 lcd_d2
  00000037            00029                 com     
  00000038            00030                 dat
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000039            00031                 temp
  0000003A            00032                 Temp
  0000003B            00033                 Location1
  0000003C            00034                 Location2
  0000003D            00035                 Location3
  0000003E            00036                 Location4
  0000003F            00037                 Location5
  00000040            00038                 Location6
  00000041            00039                 Location7
  00000042            00040                 Front1          ;51 PC
  00000043            00041                 Front2
  00000044            00042                 Front3
  00000045            00043                 Front4
  00000046            00044                 Front5
  00000047            00045                 Front6
  00000048            00046                 Front7
  00000049            00047                 Back1           ;58 PC
  0000004A            00048                 Back2
  0000004B            00049                 Back3
  0000004C            00050                 Back4
  0000004D            00051                 Back5
  0000004E            00052                 Back6
  0000004F            00053                 Back7
  00000050            00054                 pr2temp 
  00000051            00055                 NumH
  00000052            00056                 NumL
  00000053            00057                 TenK
  00000054            00058                 Thou
  00000055            00059                 Hund
  00000056            00060                 Tens
  00000057            00061                 Ones
  00000058            00062                 distanceMoved
  00000059            00063                 isColumnThere
  0000005A            00064                 isBinThere
  0000005B            00065                 frontstickerValues
  0000005C            00066                 backstickerValues
  0000005D            00067                 binCounter
  0000005E            00068                 countdown
  0000005F            00069                 counter
  00000060            00070                 NumOfBins
  00000061            00071                 delay3
  00000062            00072                 LEDcounter0
  00000063            00073                 LEDcounter1
  00000064            00074                 LEDcounter2
  00000065            00075                 LEDcounter3
  00000066            00076                 LEDcounter4
  00000067            00077                 LEDcounter5
  00000068            00078                 LEDcounter6
  00000069            00079                 LEDcounter7
  0000006A            00080                 LEDcounter8
                      00081         endc    
                      00082 
                      00083         ;Declare constants for pin assignments (LCD on PORTD)
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00084                 #define RS      PORTD,2
                      00085                 #define E       PORTD,3
                      00086                 #define IR1     PORTA,0
                      00087                 #define IR2     PORTA,1
                      00088                 #define backwardsDCMotor        PORTC,5
                      00089                 #define DCMotor PORTC,6
                      00090                 #define ColMotor PORTC,7
                      00091                 #define UST1    PORTD,0
                      00092                 #define US1E1   PORTA,2
                      00093                 #define UST2    PORTD,1
                      00094                 #define US1E2   PORTA,3
                      00095                 #define LED     PORTB,0
                      00096                 #define Std1    PORTC,5             ;std stands for standard motor (not pwm)
                      00097                 #define Std2    PORTC,6             ;Std1 is the negative one
                      00098                 #define Std3    PORTC,7
                      00099                 #define Std1Backwards   PORTB,2
                      00100                 #define Std2Backwards   PORTB,3
                      00101                 #define Std3Backwards   PORTC,0
                      00102                 ;SHAFTIR is PORTA,4
                      00103                 
                      00104                 
                      00105 ;distanceMoved  equ     b'0'
                      00106 
                      00107          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00108          goto      init       ;Just jump to the main code section.
                      00109          
                      00110          ;ORG      0x100        ;this command is sketchy
                      00111          
                      00112 ;*******************************************************************************
                      00113 ; MACROS
                      00114 ;*******************************************************************************
                      00115          
                      00116 Key      macro  value, subroutine
                      00117          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00118          andlw          0x0F
                      00119          xorlw          value
                      00120          btfsc          STATUS, Z
                      00121          call           subroutine
                      00122         endm
                      00123 
                      00124 Rotation macro  value
                      00125          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
                      00126          andlw          0x0F
                      00127          xorlw          value
                      00128          btfsc          STATUS, Z
                      00129          call           ShiftLeft
                      00130         endm
                      00131 
                      00132 ;***************************************
                      00133 ; Delay: ~160us macro
                      00134 ;***************************************
                      00135 LCD_DELAY macro
                      00136         movlw   0xFF
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00137         movwf   lcd_d1
                      00138         decfsz  lcd_d1,f
                      00139         goto    $-1
                      00140         endm
                      00141         
                      00142 ;***************************************
                      00143 ; Display macro
                      00144 ;***************************************
                      00145 Display macro   Message
                      00146                 local   loop_
                      00147                 local   end_
                      00148                 clrf    Table_Counter
                      00149                 clrw            
                      00150 loop_   movf    Table_Counter,W
                      00151                 call    Message
                      00152                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00153                 btfsc   STATUS,Z
                      00154                         goto    end_
                      00155                 call    WR_DATA
                      00156                 incf    Table_Counter,F
                      00157                 goto    loop_
                      00158 end_
                      00159                 endm
                      00160                 
                      00161 ;***************************************
                      00162 ; BANK0 macro   [TESTED]
                      00163 ;***************************************
                      00164 BANK0 Macro
                      00165     bcf STATUS,RP0 
                      00166     bcf STATUS,RP1
                      00167     endm
                      00168 ;***************************************
                      00169 ; BANK1 macro   [TESTED]
                      00170 ;***************************************
                      00171 BANK1 Macro
                      00172     bsf STATUS,RP0 
                      00173     bcf STATUS,RP1
                      00174     endm
                      00175         
                      00176 ;***************************************
                      00177 ; BANK2 macro   [TESTED]
                      00178 ;***************************************
                      00179 BANK2 Macro
                      00180     bsf STATUS,RP0 
                      00181     bsf STATUS,RP1
                      00182     endm
                      00183     
                      00184 ;***************************************
                      00185 ; BANK3 macro   [TESTED]
                      00186 ;***************************************
                      00187 BANK3 Macro
                      00188     bcf STATUS,RP0 
                      00189     bsf STATUS,RP1
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00190     endm
                      00191     
                      00192 ;***************************************
                      00193 ; MOVLF macro   [TESTED]
                      00194 ;***************************************
                      00195 MOVLF   Macro   literal, reg
                      00196     MOVLW  literal      ; move literal into working register
                      00197     MOVWF   reg         ; move working register into reg
                      00198     endm
                      00199 
                      00200 ;***************************************
                      00201 ; MOV   macro  reg2 <- reg1             [TESTED]        
                      00202 ;***************************************
                      00203 MOV     Macro   reg1, reg2
                      00204     MOVF  reg1,W        ; move reg1 into working register
                      00205     MOVWF   reg2        ; reg2 <- reg1
                      00206     endm
                      00207     
                      00208 ;***************************************
                      00209 ; ADDL macro, Adds literal and a reg    [TESTED]
                      00210 ;***************************************
                      00211 ADDL    Macro   Destination, reg, literal
                      00212     MOVLW  literal      ; move literal into working register
                      00213     ADDWF   reg,W       ; W <- literal + reg
                      00214     MOVWF   Destination ; Destination <- literal + reg
                      00215     endm
                      00216     
                      00217 ;***************************************
                      00218 ; ADD macro, Adds two registers together    [TESTED]
                      00219 ;***************************************
                      00220 ADD     Macro   Destination, reg1, reg2
                      00221     MOVF    reg1,W      ; move literal into working register
                      00222     ADDWF   reg2,W      ; W <- reg1 + reg2
                      00223     MOVWF   Destination ; Destination <- reg1 + reg2
                      00224     endm
                      00225                 
                      00226 ;***************************************
                      00227 ; Number to Printable
                      00228 ;***************************************
                      00229 PrintNumber macro       number
                      00230         ;movf       number ,W
                      00231         movfw       number
                      00232         call        DectoChar
                      00233         call        WR_DATA
                      00234         endm
                      00235         
                      00236 ;***************************************
                      00237 ; Number to Colour
                      00238 ;***************************************
                      00239 PrintCol macro      number
                      00240         movfw       number
                      00241         call        StickerColours
                      00242         call        WR_DATA
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00243         endm    
                      00244 
                      00245 PrintYN macro       number
                      00246         movfw       number
                      00247         call        ColumnValues
                      00248         call        WR_DATA
                      00249         endm    
                      00250 ;*******************************************************
                      00251 ;******             BCD                 ****************
                      00252 ;*******************************************************
                      00253         
                      00254 ;---------------- Binary (16-bit) to BCD -----------------------
                      00255 ;
                      00256 ;bin8_BCD:      ; --- Takes Binary.number in      NumL
                      00257 ;bin16_BCD:     ; --- Takes Binary.number in NumH:NumL 
                      00258                 ; --> Returns decimal.form  in TenK:Thou:Hund:Tens:Ones
                      00259 ;
                      00260 ; Uses variables
                      00261 ; NumH, NumL
                      00262 ; TenK, Thou, Hund, Tens, Ones
                      00263                 
                      00264 ;BCD    macro   NumH, NumL
                      00265 
0001                  00266 bin16_BCD
0001   0E51           00267         swapf   NumH, W
0002   390F           00268         andlw   0x0F
0003   3EF0           00269         addlw   0xF0
0004   00D4           00270         movwf   Thou 
0005   07D4           00271         addwf   Thou, F 
0006   3EE2           00272         addlw   0xE2 
0007   00D5           00273         movwf   Hund 
0008   3E32           00274         addlw   0x32 
0009   00D7           00275         movwf   Ones 
                      00276 
000A   0851           00277         movf    NumH, W 
000B   390F           00278         andlw   0x0F 
000C   07D5           00279         addwf   Hund, F 
000D   07D5           00280         addwf   Hund, F 
000E   07D7           00281         addwf   Ones, F 
000F   3EE9           00282         addlw   0xE9 
0010   00D6           00283         movwf   Tens 
0011   07D6           00284         addwf   Tens, F 
0012   07D6           00285         addwf   Tens, F 
                      00286 
0013   0E52           00287         swapf   NumL, W 
0014   390F           00288         andlw   0x0F 
0015   07D6           00289         addwf   Tens, F 
0016   07D7           00290         addwf   Ones, F 
                      00291 
0017   0DD6           00292         rlf    Tens, F 
0018   0DD7           00293         rlf    Ones, F 
0019   09D7           00294         comf    Ones, F 
001A   0DD7           00295         rlf    Ones, F 
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00296 
001B   0852           00297         movf    NumL, W 
001C   390F           00298         andlw   0x0F 
001D   07D7           00299         addwf   Ones, F 
001E   0DD4           00300         rlf    Thou,F 
                      00301 
001F   3007           00302         movlw   0x07 
0020   00D3           00303         movwf   TenK 
                      00304 
0021   300A           00305         movlw   0x0A
0022                  00306 Lb1
0022   03D6           00307         decf    Tens, F 
0023   07D7           00308         addwf   Ones, F 
0024   1C03           00309         btfss   STATUS, C 
0025   2???           00310         goto            Lb1 
0026                  00311 Lb2
0026   03D5           00312         decf    Hund, F 
0027   07D6           00313         addwf   Tens, F 
0028   1C03           00314         btfss   STATUS,C 
0029   2???           00315         goto            Lb2 
002A                  00316 Lb3
002A   03D4           00317         decf    Thou, F 
002B   07D5           00318         addwf   Hund, F 
002C   1C03           00319         btfss   STATUS,C
002D   2???           00320         goto            Lb3 
002E                  00321 Lb4
002E   03D3           00322         decf    TenK, F 
002F   07D4           00323         addwf   Thou, F 
0030   1C03           00324         btfss   STATUS,C 
0031   2???           00325         goto            Lb4 
                      00326 
0032   3400           00327         retlw   0
0033   0008           00328         return
                      00329 ;endm
                      00330 
                      00331 ;***************************************
                      00332 ; Initialize
                      00333 ;***************************************
0034                  00334 init
0034   018B           00335          clrf      INTCON         ; No interrupts
                      00336 
0035   1683           00337          bsf       STATUS,RP0     ; select bank 1
0036   30FF           00338          movlw      0xFF            ; need to make A input for US sensors
0037   0085           00339          movwf      TRISA          ; All port A is input
0038   30F2           00340          movlw     b'11110010'    ; Set required keypad inputs
0039   0086           00341          movwf     TRISB
003A   0187           00342          clrf      TRISC          ; All port C is output
003B   0188           00343          clrf      TRISD          ; All port D is output
003C   0189           00344          clrf      TRISE
                      00345          
                      00346                   ;Set SDA and SCL to high-Z first as required for I2C
003D   1607           00347                  bsf       TRISC,4                
003E   1587           00348                  bsf       TRISC,3
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00349 
003F   1283           00350          bcf       STATUS,RP0     ; select bank 0
0040   0185           00351          clrf      PORTA
0041   0186           00352          clrf      PORTB
0042   0187           00353          clrf      PORTC
0043   0188           00354          clrf      PORTD
0044   0189           00355          clrf       PORTE
                      00356          
                      00357         ;Set up I2C for communication
                      00358                  
0045   2???           00359         call       i2c_common_setup
                      00360 ;*******************************************************************************
                      00361         ; UNCOMMENT IF YOU WANT TO CHANGE THE TIME
                      00362         ;rtc_resetAll
                      00363         ;call set_rtc_time
                      00364 ;*******************************************************************************
                      00365                  
                      00366                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00367                  ;call     set_rtc_time
                      00368           
0046   2???           00369          call      InitLCD        ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00370           ;A/D converter attempt
                      00371          
0047   1303           00372          bcf    STATUS,RP1
0048   1683           00373          bsf    STATUS,RP0      ;Select bank 1
                      00374          
0049   1405           00375          bsf    IR1             ;makes RA0 an input
004A   1283           00376          bcf    STATUS,RP0      ; go back to bank 0
                      00377          
                      00378         ;bsf    PORTC,2         ; gives RC2 5 volts
                      00379          
                      00380         ; Set ADCON1 to use RA0 as analog input
                      00381         
                      00382         
004B   1683           00383         bsf     STATUS,RP0      ;Select bank 1
004C   3006           00384         movlw   b'00000110'     ;left justified, all inputs digital
004D   009F           00385         movwf   ADCON1                  ;All digital input, reference voltage Vdd Vss
                      00386 
                      00387         ;ADCON0
004E   1283           00388         bcf     STATUS,RP0
004F   30C5           00389         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
0050   009F           00390         movwf   ADCON0
                      00391         
                      00392 ;***************************************************
                      00393 ; Initialize variables and Displays
                      00394 ;****************************************************   
                      00395         Display         Welcome_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
0051   01B3               M                 clrf    Table_Counter
0052   0103               M                 clrw            
0053   0833               M loop_   movf    Table_Counter,W
0054   2???               M                 call    Welcome_Msg
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0055   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0056   1903               M                 btfsc   STATUS,Z
0057   2???               M                         goto    end_
0058   2???               M                 call    WR_DATA
0059   0AB3               M                 incf    Table_Counter,F
005A   2???               M                 goto    loop_
005B                      M end_
005B   2???           00396         call            Switch_Lines
                      00397         Display         Welcome_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
005C   01B3               M                 clrf    Table_Counter
005D   0103               M                 clrw            
005E   0833               M loop_   movf    Table_Counter,W
005F   2???               M                 call    Welcome_Msg2
0060   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0061   1903               M                 btfsc   STATUS,Z
0062   2???               M                         goto    end_
0063   2???               M                 call    WR_DATA
0064   0AB3               M                 incf    Table_Counter,F
0065   2???               M                 goto    loop_
0066                      M end_
0066   1408           00398         bsf             PORTD,0
0067   3000           00399         movlw           0X00
0068   00E0           00400         movwf           NumOfBins   ;shivs bin counter init
0069   1462           00401         bsf             LEDcounter0,0               ;counter for LED
006A   1463           00402         bsf             LEDcounter1,0               ;forward motor counters
006B   1464           00403         bsf             LEDcounter2,0
006C   1465           00404         bsf             LEDcounter3,0               
006D   1466           00405         bsf             LEDcounter4,0               ;backward motor counters
006E   1467           00406         bsf             LEDcounter5,0
006F   1468           00407         bsf             LEDcounter6,0               
0070   1469           00408         bsf             LEDcounter7,0               ;pwm counters
0071   146A           00409         bsf             LEDcounter8,0               
                      00410         
0072   1287           00411         bcf             Std1                    ;std motor 1 is the positive one
0073   1707           00412         bsf             Std2
0074   1787           00413         bsf             Std3
0075   1106           00414         bcf             Std1Backwards
0076   1586           00415         bsf             Std2Backwards
0077   1407           00416         bsf             Std3Backwards
0078   1507           00417         bsf             PORTC,2             
0079   1487           00418         bsf             PORTC,1             
                      00419 
                      00420 ;*************************************
                      00421 ;       Keypad and LCD forms        
                      00422 ;*************************************
                      00423         
007A   1C86           00424 KeypadandLCD    btfss           PORTB,1     ;Wait until data is available from the keypad
007B   2???           00425                 goto            $-1 
                      00426 
007C   0E06           00427                 swapf           PORTB,W     ;Read PortB<7:4> into W<3:0>
007D   390F           00428                 andlw           0x0F
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007E   00B9           00429                 movwf           temp
                      00430                 ;Key    0x00, OperationDisplay
                      00431                 Key     0x00, StartMove
007F   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0080   390F               M          andlw          0x0F
0081   3A00               M          xorlw          0x00
0082   1903               M          btfsc          STATUS, Z
0083   2???               M          call           StartMove
                      00432                 ;Key    0x01, pollColumnSensor          ;TESTED
                      00433                 Key     0x02, DisplayBlackWhiteIR1
0084   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0085   390F               M          andlw          0x0F
0086   3A02               M          xorlw          0x02
0087   1903               M          btfsc          STATUS, Z
0088   2???               M          call           DisplayBlackWhiteIR1
                      00434                 Rotation        0x03
0089   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008A   390F               M          andlw          0x0F
008B   3A03               M          xorlw          0x03
008C   1903               M          btfsc          STATUS, Z
008D   2???               M          call           ShiftLeft
                      00435                 Key     0x04, DisplayBlackWhiteIR2
008E   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
008F   390F               M          andlw          0x0F
0090   3A04               M          xorlw          0x04
0091   1903               M          btfsc          STATUS, Z
0092   2???               M          call           DisplayBlackWhiteIR2
                      00436                 Key     0x05, LEDControlON
0093   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0094   390F               M          andlw          0x0F
0095   3A05               M          xorlw          0x05
0096   1903               M          btfsc          STATUS, Z
0097   2???               M          call           LEDControlON
                      00437                 Key     0x06, DisplayUSSensor1
0098   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0099   390F               M          andlw          0x0F
009A   3A06               M          xorlw          0x06
009B   1903               M          btfsc          STATUS, Z
009C   2???               M          call           DisplayUSSensor1
                      00438                 Key     0x07, AddBin
009D   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
009E   390F               M          andlw          0x0F
009F   3A07               M          xorlw          0x07
00A0   1903               M          btfsc          STATUS, Z
00A1   2???               M          call           AddBin
                      00439                 Key     0x08, Stickers
00A2   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00A3   390F               M          andlw          0x0F
00A4   3A08               M          xorlw          0x08
00A5   1903               M          btfsc          STATUS, Z
00A6   2???               M          call           Stickers
                      00440                 Key     0x09, LCDConversionFront
00A7   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A8   390F               M          andlw          0x0F
00A9   3A09               M          xorlw          0x09
00AA   1903               M          btfsc          STATUS, Z
00AB   2???               M          call           LCDConversionFront
                      00441                 Key     0x0A, StdRotation2Backwards
00AC   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00AD   390F               M          andlw          0x0F
00AE   3A0A               M          xorlw          0x0A
00AF   1903               M          btfsc          STATUS, Z
00B0   2???               M          call           StdRotation2Backwards
                      00442                 Key     0x0B, ShaftIR
00B1   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B2   390F               M          andlw          0x0F
00B3   3A0B               M          xorlw          0x0B
00B4   1903               M          btfsc          STATUS, Z
00B5   2???               M          call           ShaftIR
                      00443                 Key     0x0C, StdRotation1
00B6   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00B7   390F               M          andlw          0x0F
00B8   3A0C               M          xorlw          0x0C
00B9   1903               M          btfsc          STATUS, Z
00BA   2???               M          call           StdRotation1
                      00444                 Key     0x0D, StdRotation2
00BB   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00BC   390F               M          andlw          0x0F
00BD   3A0D               M          xorlw          0x0D
00BE   1903               M          btfsc          STATUS, Z
00BF   2???               M          call           StdRotation2
                      00445                 Key     0x0E, PWMFWD
00C0   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C1   390F               M          andlw          0x0F
00C2   3A0E               M          xorlw          0x0E
00C3   1903               M          btfsc          STATUS, Z
00C4   2???               M          call           PWMFWD
                      00446                 Key     0x0F, PWMBACK
00C5   0E06               M          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00C6   390F               M          andlw          0x0F
00C7   3A0F               M          xorlw          0x0F
00C8   1903               M          btfsc          STATUS, Z
00C9   2???               M          call           PWMBACK
00CA   1886           00447                 btfsc           PORTB,1     ;Wait until key is released
00CB   2???           00448                 goto            $-1
00CC   2???           00449                 goto            KeypadandLCD
                      00450                 
00CD                  00451 goback
00CD   0008           00452                 return  
                      00453         
                      00454 
                      00455 ;*******************************************************************************************************
                            *******************************************
                      00456 ;                                                                 MAIN CODE
                      00457 ;-------------------------------------------------------------------------------------------------------
                            ---------------------------------------
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CE                  00458 StartInit
                      00459                 
                      00460 ; WAIT FOR INITIAL INPUT
00CE   3000           00461         movlw   b'00'
00CF   00DD           00462         movwf   binCounter      ;initialize bincounter with 0
00D0   00D8           00463         movwf   distanceMoved   ;initialize distance moved with 0
00D1   3000           00464         movlw           0X00
00D2   00E0           00465         movwf           NumOfBins   ;shivs bin counter init
                      00466 
                      00467 ;    goto    getTimeRTC     ; gets time from RTC clock
                      00468 
00D3                  00469 StartMove
                      00470 ;   MOTOR ON
                      00471     
00D3   2???           00472     call    PWMFWD
                      00473     ADDL    distanceMoved, distanceMoved, b'1'      ;increase distance moved
00D4   3001               M     MOVLW  b'1'         ; move literal into working register
00D5   0758               M     ADDWF   distanceMoved,W ; W <- literal + reg
00D6   00D8               M     MOVWF   distanceMoved ; Destination <- literal + reg
                      00474     
00D7   3004           00475     movlw               0x4                     ;checking whether distance moved is 4
00D8   02D8           00476     subwf               distanceMoved
00D9   3000           00477     movlw               0x0
00DA   1803           00478     btfsc               STATUS,C
00DB   3001           00479     movlw               0x1
00DC   1800           00480     btfsc               W,0
                      00481 ;    btfsc              distanceMoved,3         ;count seven
00DD   2???           00482     call                MoveBackwards
                      00483 
                      00484 ;    bsf            DCMotor                 ; begin forward movement, set appropriate bit to 1
                      00485 ;    movlw   b'1'
                      00486 ;    addwf  distanceMoved,f     ; increments distanceMoved by 1 (will experimentally find binary value f
                            or 4 m)
                      00487     
                      00488     
                      00489     
                      00490     
                      00491 ;;   CHECK COLUMN
                      00492 
                      00493     ;call    ChooseIR1          ;selects IR1 for data conversion
00DE   2???           00494     call    DisplayBlackWhiteIR1        ;checks to see if column present
00DF   1C42           00495     btfss   Front1,0
00E0   2???           00496     goto    StartMove
00E1   2???           00497     call    PWMFWD              ;stops motor from moving forward
00E2   2???           00498     call    HalfS
00E3   1687           00499     bsf    Std1         ;starts motor to move arm
00E4   2???           00500     call    Clear_Display
                      00501     Display OperationTime
  0000                    M                 local   loop_
  0000                    M                 local   end_
00E5   01B3               M                 clrf    Table_Counter
00E6   0103               M                 clrw            
00E7   0833               M loop_   movf    Table_Counter,W
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E8   2???               M                 call    OperationTime
00E9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00EA   1903               M                 btfsc   STATUS,Z
00EB   2???               M                         goto    end_
00EC   2???               M                 call    WR_DATA
00ED   0AB3               M                 incf    Table_Counter,F
00EE   2???               M                 goto    loop_
00EF                      M end_
00EF   2???           00502     call    HalfS
00F0   2???           00503     call    HalfS
00F1   2???           00504     call    HalfS               ;emulates arm movement
00F2   1287           00505     bcf    Std1         ;turns off motor to move arm
00F3   2???           00506     goto    StartMove
                      00507     
                      00508 ;   CHECK IF AT THE END OF BUCKET Line
                      00509     
                      00510 
                      00511     
                      00512     
                      00513 ;    call    pollUSsensor       ; call ultrasonic sensor
                      00514 ;    btfsc   nothingAhead,0     ;   checks if there is nothing ahead
                      00515 ;    goto    Finalize
                      00516     
                      00517 ;;   CHECK IF CONTAINER IS THERE
                      00518 ;    
                      00519 ;    btfss   withinDetectionRange,0  ; checks whether container ahead is within detection range
                      00520 ;    goto    Main
                      00521 ;   call start arm motor
                      00522 ;   call other motor
                      00523 ;    call    frontscanContainer     ; label to begin container scanning
                      00524 ;    call    backscanContainer      ; label to begin container scanning
                      00525 ;    movlw  b'1'
                      00526 ;    addwf   frontbinCounter,f      ;increment the bin counters
                      00527 ;    addwf   backbinCounter,f
00F4   2???           00528     goto    Finalize
                      00529     
00F5                  00530 MoveBackwards
                      00531     
00F5   2???           00532     call    PWMSTOP
                      00533     
00F6   2???           00534     goto    Finalize            
                      00535 ;-----------------------------------------------------------------------------------------------------  
                                    
                      00536 
                      00537 ;*********************************************************
                      00538 ; A to D conversion with LCD display for IR sensor
                      00539 ;*********************************************************
                      00540         
                      00541 ;******************************************
                      00542 ;       Sticker Print Modules
                      00543 ;*****************************************
                      00544         
00F7                  00545 LCDConversionFront
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F7   1283           00546         bcf     STATUS,RP0
00F8   3015           00547         movlw   b'00010101'             ;RA0
                      00548         
00F9   009F           00549         movwf   ADCON0                  ;RA1
00FA   151F           00550         bsf     ADCON0,2                ;start conversion and wait for it to complete
00FB   191F           00551         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
00FC   2???           00552         goto    $-1
                      00553         
00FD   081E           00554         movf    ADRESH, W
00FE   00D1           00555         movwf   NumH
00FF   081E           00556         movf    ADRESL, W
0100   00D2           00557         movwf   NumL
0101   2???           00558         call    Clear_Display
0102   2???           00559         Call    bin16_BCD
                      00560         PrintNumber     TenK
                          M         ;movf       number ,W
0103   0853               M         movfw       TenK
0104   2???               M         call        DectoChar
0105   2???               M         call        WR_DATA
                      00561         PrintNumber     Thou
                          M         ;movf       number ,W
0106   0854               M         movfw       Thou
0107   2???               M         call        DectoChar
0108   2???               M         call        WR_DATA
                      00562         PrintNumber     Hund
                          M         ;movf       number ,W
0109   0855               M         movfw       Hund
010A   2???               M         call        DectoChar
010B   2???               M         call        WR_DATA
                      00563         PrintNumber     Tens
                          M         ;movf       number ,W
010C   0856               M         movfw       Tens
010D   2???               M         call        DectoChar
010E   2???               M         call        WR_DATA
                      00564         PrintNumber     Ones
                          M         ;movf       number ,W
010F   0857               M         movfw       Ones
0110   2???               M         call        DectoChar
0111   2???               M         call        WR_DATA
0112   2???           00565         call            HalfS           ;wait half a second to display
0113   1383           00566         BCF     STATUS, IRP
0114   3042           00567         movlw   0x42
0115   0084           00568         movwf   FSR
0116   3000           00569         movlw   0X0
0117   0360           00570         decf    NumOfBins,W
0118   0784           00571         addwf   FSR,F
0119   3001           00572         movlw   0X1
011A   02D3           00573         subwf   TenK
011B   3000           00574         movlw   0x0
011C   1803           00575         btfsc   STATUS, C
011D   3001           00576         movlw   0x1
011E   0080           00577         movwf   INDF
011F   0008           00578         return  
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00579         
0120                  00580 ReadBW
                      00581                         
0120   151F           00582         bsf     ADCON0,2                ;start conversion and wait for it to complete
0121   191F           00583         btfsc   ADCON0,2                ;LCD CONVERSION MODULE
0122   2???           00584         goto    $-1
                      00585         
0123   081E           00586         movf    ADRESH, W
0124   00D1           00587         movwf   NumH
0125   081E           00588         movf    ADRESL, W
0126   00D2           00589         movwf   NumL
                      00590         
0127   2???           00591         call            Clear_Display
0128   2???           00592         call            bin16_BCD
                      00593         PrintNumber     TenK
                          M         ;movf       number ,W
0129   0853               M         movfw       TenK
012A   2???               M         call        DectoChar
012B   2???               M         call        WR_DATA
                      00594         PrintNumber     Thou
                          M         ;movf       number ,W
012C   0854               M         movfw       Thou
012D   2???               M         call        DectoChar
012E   2???               M         call        WR_DATA
                      00595         PrintNumber     Hund
                          M         ;movf       number ,W
012F   0855               M         movfw       Hund
0130   2???               M         call        DectoChar
0131   2???               M         call        WR_DATA
                      00596         PrintNumber     Tens
                          M         ;movf       number ,W
0132   0856               M         movfw       Tens
0133   2???               M         call        DectoChar
0134   2???               M         call        WR_DATA
                      00597         PrintNumber     Ones
                          M         ;movf       number ,W
0135   0857               M         movfw       Ones
0136   2???               M         call        DectoChar
0137   2???               M         call        WR_DATA
0138   2???           00598         call            HalfS
0139   2???           00599         call            Clear_Display
                      00600         
013A   3001           00601         movlw           0x1
013B   02D3           00602         subwf           TenK
013C   3000           00603         movlw           0x0
013D   1803           00604         btfsc           STATUS,C
013E   3001           00605         movlw           0x1
                      00606         
013F   0008           00607         return
                      00608                 
0140                  00609 ShaftIR
                      00610 
0140   2???           00611         call    Clear_Display
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0141   0801           00612     movfw       TMR0
0142   3C02           00613     sublw       2               ; Skip if 
0143   1903           00614     btfsc       STATUS, Z       ; WREG is zero
0144   1687           00615     bsf         PORTC,5         ; set random pin to check if done
0145   2???           00616     call        ShaftIR
                      00617     
                      00618 ;***************************************************
                      00619 ;       US Sensor Modules                           [TESTED]
                      00620 ;***************************************************
                      00621         
0146                  00622 Read1_US                    
                      00623          
0146   2???           00624         call            Read1_US1 
                      00625          
0147   2???           00626         call            Clear_Display
                      00627         
0148   080F           00628         movf            TMR1H, W
0149   00D1           00629         movwf           NumH
014A   080E           00630         movf            TMR1L, W
014B   00D2           00631         movwf           NumL
                      00632         
014C   2???           00633         call            bin16_BCD
                      00634         
                      00635         PrintNumber     TenK
                          M         ;movf       number ,W
014D   0853               M         movfw       TenK
014E   2???               M         call        DectoChar
014F   2???               M         call        WR_DATA
                      00636         PrintNumber     Thou
                          M         ;movf       number ,W
0150   0854               M         movfw       Thou
0151   2???               M         call        DectoChar
0152   2???               M         call        WR_DATA
                      00637         PrintNumber     Hund
                          M         ;movf       number ,W
0153   0855               M         movfw       Hund
0154   2???               M         call        DectoChar
0155   2???               M         call        WR_DATA
                      00638         PrintNumber     Tens
                          M         ;movf       number ,W
0156   0856               M         movfw       Tens
0157   2???               M         call        DectoChar
0158   2???               M         call        WR_DATA
                      00639         PrintNumber     Ones
                          M         ;movf       number ,W
0159   0857               M         movfw       Ones
015A   2???               M         call        DectoChar
015B   2???               M         call        WR_DATA
                      00640         
015C   2???           00641         call            HalfS
                      00642         
015D   2???           00643         call            Clear_Display
                      00644         
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015E   3001           00645         movlw           0x1
015F   02D3           00646         subwf           TenK
0160   3001           00647         movlw           0x1
0161   1803           00648         btfsc           STATUS,C
0162   3000           00649         movlw           0x0
                      00650         
                      00651 
0163   0008           00652         return
                      00653         
0164                  00654 Read1_US1
                      00655                 
0164   018F           00656                 clrf    TMR1H
0165   018E           00657                 clrf    TMR1L
                      00658                 
0166   1008           00659                 bcf     UST1            ;make sure trigger is clear
0167   2???           00660                 call    DELAY1
                      00661                 ;Delay_5ms
                      00662                 
0168   1408           00663                 bsf     UST1            ;trigger high, bottom sensor
0169   2???           00664                 call    delay10us               ;10us delay
016A   1008           00665                 bcf     UST1            ;trigger low
                      00666                 
016B   1D05           00667                 btfss   US1E1           ;wait for echo to go high
016C   2???           00668                 goto    $-1
016D   1410           00669                 bsf     T1CON,TMR1ON    ;turn on timer
                      00670                 
016E   1905           00671                 btfsc   US1E1           ;wait for echo to go low
016F   2???           00672                 goto    $-1
                      00673                 
0170   1010           00674                 bcf     T1CON,TMR1ON    ;turn off timer
0171   0008           00675                 return
                      00676                 
0172                  00677 Read2_US                    
                      00678          
0172   2???           00679         call            Read2_US1 
                      00680          
0173   2???           00681         call            Clear_Display
                      00682         
0174   080F           00683         movf            TMR1H, W
0175   00D1           00684         movwf           NumH
0176   080E           00685         movf            TMR1L, W
0177   00D2           00686         movwf           NumL
                      00687         
0178   2???           00688         call            bin16_BCD
                      00689         
                      00690         PrintNumber     TenK
                          M         ;movf       number ,W
0179   0853               M         movfw       TenK
017A   2???               M         call        DectoChar
017B   2???               M         call        WR_DATA
                      00691         PrintNumber     Thou
                          M         ;movf       number ,W
017C   0854               M         movfw       Thou
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017D   2???               M         call        DectoChar
017E   2???               M         call        WR_DATA
                      00692         PrintNumber     Hund
                          M         ;movf       number ,W
017F   0855               M         movfw       Hund
0180   2???               M         call        DectoChar
0181   2???               M         call        WR_DATA
                      00693         PrintNumber     Tens
                          M         ;movf       number ,W
0182   0856               M         movfw       Tens
0183   2???               M         call        DectoChar
0184   2???               M         call        WR_DATA
                      00694         PrintNumber     Ones
                          M         ;movf       number ,W
0185   0857               M         movfw       Ones
0186   2???               M         call        DectoChar
0187   2???               M         call        WR_DATA
                      00695         
0188   2???           00696         call            HalfS
                      00697         
0189   2???           00698         call            Clear_Display
                      00699         
018A   3001           00700         movlw           0x1
018B   02D3           00701         subwf           TenK
018C   3001           00702         movlw           0x1
018D   1803           00703         btfsc           STATUS,C
018E   3000           00704         movlw           0x0
                      00705         
                      00706 
018F   0008           00707         return
                      00708         
0190                  00709 Read2_US1
                      00710                 
0190   018F           00711                 clrf    TMR1H
0191   018E           00712                 clrf    TMR1L
                      00713                 
0192   1008           00714                 bcf     UST1            ;make sure trigger is clear
0193   2???           00715                 call    DELAY1
                      00716                 ;Delay_5ms
                      00717                 
0194   1408           00718                 bsf     UST1            ;trigger high, bottom sensor
0195   2???           00719                 call    delay10us               ;10us delay
0196   1008           00720                 bcf     UST1            ;trigger low
                      00721                 
0197   1D05           00722                 btfss   US1E1           ;wait for echo to go high
0198   2???           00723                 goto    $-1
0199   1410           00724                 bsf     T1CON,TMR1ON    ;turn on timer
                      00725                 
019A   1905           00726                 btfsc   US1E1           ;wait for echo to go low
019B   2???           00727                 goto    $-1
                      00728                 
019C   1010           00729                 bcf     T1CON,TMR1ON    ;turn off timer
019D   0008           00730                 return
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00731                 
                      00732 
                      00733 ;*********************************************
                      00734 ; Keypad Modules
                      00735 ;*******************************************
                      00736          
                      00737 
019E                  00738 Finalize
019E   2???           00739         call        Clear_Display
                      00740         Display     WantResults
  0000                    M                 local   loop_
  0000                    M                 local   end_
019F   01B3               M                 clrf    Table_Counter
01A0   0103               M                 clrw            
01A1   0833               M loop_   movf    Table_Counter,W
01A2   2???               M                 call    WantResults
01A3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01A4   1903               M                 btfsc   STATUS,Z
01A5   2???               M                         goto    end_
01A6   2???               M                 call    WR_DATA
01A7   0AB3               M                 incf    Table_Counter,F
01A8   2???               M                 goto    loop_
01A9                      M end_
01A9   2???           00741         call        Switch_Lines
                      00742         Display     WantRotate
  0000                    M                 local   loop_
  0000                    M                 local   end_
01AA   01B3               M                 clrf    Table_Counter
01AB   0103               M                 clrw            
01AC   0833               M loop_   movf    Table_Counter,W
01AD   2???               M                 call    WantRotate
01AE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01AF   1903               M                 btfsc   STATUS,Z
01B0   2???               M                         goto    end_
01B1   2???               M                 call    WR_DATA
01B2   0AB3               M                 incf    Table_Counter,F
01B3   2???               M                 goto    loop_
01B4                      M end_
                      00743         
                      00744         
01B4   2???           00745         goto        KeypadandLCD
                      00746         
01B5                  00747 ListDisplay
01B5   2???           00748         call        Clear_Display
                      00749         Display     Results1
  0000                    M                 local   loop_
  0000                    M                 local   end_
01B6   01B3               M                 clrf    Table_Counter
01B7   0103               M                 clrw            
01B8   0833               M loop_   movf    Table_Counter,W
01B9   2???               M                 call    Results1
01BA   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01BB   1903               M                 btfsc   STATUS,Z
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BC   2???               M                         goto    end_
01BD   2???               M                 call    WR_DATA
01BE   0AB3               M                 incf    Table_Counter,F
01BF   2???               M                 goto    loop_
01C0                      M end_
01C0   2???           00750         call        Switch_Lines
                      00751         Display     Results2
  0000                    M                 local   loop_
  0000                    M                 local   end_
01C1   01B3               M                 clrf    Table_Counter
01C2   0103               M                 clrw            
01C3   0833               M loop_   movf    Table_Counter,W
01C4   2???               M                 call    Results2
01C5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01C6   1903               M                 btfsc   STATUS,Z
01C7   2???               M                         goto    end_
01C8   2???               M                 call    WR_DATA
01C9   0AB3               M                 incf    Table_Counter,F
01CA   2???               M                 goto    loop_
01CB                      M end_
                      00752         
01CB   0008           00753         return
                      00754                 
01CC                  00755 BinsDisplay
01CC   2???           00756         call        Clear_Display
                      00757         Display     Bins
  0000                    M                 local   loop_
  0000                    M                 local   end_
01CD   01B3               M                 clrf    Table_Counter
01CE   0103               M                 clrw            
01CF   0833               M loop_   movf    Table_Counter,W
01D0   2???               M                 call    Bins
01D1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01D2   1903               M                 btfsc   STATUS,Z
01D3   2???               M                         goto    end_
01D4   2???               M                 call    WR_DATA
01D5   0AB3               M                 incf    Table_Counter,F
01D6   2???               M                 goto    loop_
01D7                      M end_
                      00758                 
01D7   0008           00759         return
                      00760         
01D8                  00761 BinLocationsDisplay
01D8   2???           00762         call        Clear_Display
                      00763         Display     BinLocations
  0000                    M                 local   loop_
  0000                    M                 local   end_
01D9   01B3               M                 clrf    Table_Counter
01DA   0103               M                 clrw            
01DB   0833               M loop_   movf    Table_Counter,W
01DC   2???               M                 call    BinLocations
01DD   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01DE   1903               M                 btfsc   STATUS,Z
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DF   2???               M                         goto    end_
01E0   2???               M                 call    WR_DATA
01E1   0AB3               M                 incf    Table_Counter,F
01E2   2???               M                 goto    loop_
01E3                      M end_
                      00764                 
01E3   0008           00765         return
                      00766 
01E4                  00767 OperationTimeDisplay
01E4   2???           00768         call        Clear_Display
                      00769         Display     OperationTime
  0000                    M                 local   loop_
  0000                    M                 local   end_
01E5   01B3               M                 clrf    Table_Counter
01E6   0103               M                 clrw            
01E7   0833               M loop_   movf    Table_Counter,W
01E8   2???               M                 call    OperationTime
01E9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01EA   1903               M                 btfsc   STATUS,Z
01EB   2???               M                         goto    end_
01EC   2???               M                 call    WR_DATA
01ED   0AB3               M                 incf    Table_Counter,F
01EE   2???               M                 goto    loop_
01EF                      M end_
                      00770                 
01EF   0008           00771         return
                      00772         
01F0                  00773 ShiftLeft
01F0   3018           00774         movlw           b'00011000'             ;Move to the left
01F1   2???           00775         call            WR_INS
01F2   0008           00776         return
                      00777 
01F3   2???           00778         goto    KeypadandLCD
                      00779         
01F4                  00780 RTCDisplay
01F4   2???           00781         call    show_RTC
                      00782         
01F5   1886           00783         btfsc           PORTB,1     ;Wait until data is available from the keypad
01F6   0008           00784         return
01F7   1886           00785         btfsc           PORTB,1     ;Wait until data is available from the keypad
01F8   0008           00786         return
01F9   1886           00787         btfsc           PORTB,1     ;Wait until data is available from the keypad
01FA   0008           00788         return
01FB   1886           00789         btfsc           PORTB,1     ;Wait until data is available from the keypad
01FC   0008           00790         return
01FD   2???           00791         goto        RTCDisplay
                      00792         
01FE                  00793 AddBin
01FE   2???           00794         Call Clear_Display
01FF   0AE0           00795         incf    NumOfBins,F
                      00796         PrintNumber     NumOfBins
                          M         ;movf       number ,W
0200   0860               M         movfw       NumOfBins
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0201   2???               M         call        DectoChar
0202   2???               M         call        WR_DATA
0203   2???           00797         Call        HalfS
0204   3007           00798         movlw   0X7                     ;checks if max of 7 bins has been reached
0205   0260           00799         subwf   NumOfBins,W             
0206   1903           00800         btfsc   STATUS,Z
0207   2???           00801         goto    Finalize
0208   0008           00802         return
                      00803         
0209                  00804 Stickers
0209   2???           00805         call            Clear_Display
020A   3000           00806         movlw           0X0
020B   00DF           00807         movwf           counter
020C   1383           00808         BCF             STATUS, IRP
020D   3041           00809         movlw           0x41
020E   0084           00810         movwf           FSR
020F   0860           00811         movfw           NumOfBins
0210   00DE           00812         movwf           countdown
0211                  00813 FrontLoop       
0211   0A84           00814         INCF            FSR,1
0212   0ADF           00815         incf            counter 
                      00816         PrintNumber     counter
                          M         ;movf       number ,W
0213   085F               M         movfw       counter
0214   2???               M         call        DectoChar
0215   2???               M         call        WR_DATA
0216   2???           00817         call            HalfS
0217   0800           00818         movfw           INDF
                      00819         PrintCol        W
0218   0800               M         movfw       W
0219   2???               M         call        StickerColours
021A   2???               M         call        WR_DATA
021B   0BDE           00820         decfsz          countdown,F
021C   2???           00821         goto            FrontLoop
021D   0008           00822 Next    return
                      00823                 
021E                  00824 LEDControlON
                      00825         
021E   1862           00826         btfsc       LEDcounter0,0
021F   2???           00827         goto        $+4
0220   1406           00828         bsf         LED
0221   1462           00829         bsf         LEDcounter0,0
0222   0008           00830         return
                      00831         
                      00832         
0223   1006           00833         bcf         LED
0224   1062           00834         bcf         LEDcounter0,0
0225   0008           00835         return
                      00836         
                      00837         
0226                  00838 DisplayBlackWhiteIR1
                      00839         
0226   30C5           00840         movlw   b'11000101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0227   009F           00841         movwf   ADCON0  
                      00842                 
0228   2???           00843         call            ReadBW  
0229   00C2           00844         movwf           Front1
                      00845         PrintCol        Front1
022A   0842               M         movfw       Front1
022B   2???               M         call        StickerColours
022C   2???               M         call        WR_DATA
022D   2???           00846         call            HalfS
022E   2???           00847         call            HalfS
                      00848         
022F   2???           00849         goto            DisplayBlackWhiteIR1
                      00850         
0230                  00851 DisplayBlackWhiteIR2
                      00852         
0230   30CD           00853         movlw   b'11001101'     ;movlw  b'11000101' selects the clock and ra0 as the reader pin
0231   009F           00854         movwf   ADCON0  
                      00855         
0232   2???           00856         call            ReadBW  
0233   00C2           00857         movwf           Front1
                      00858         PrintCol        Front1
0234   0842               M         movfw       Front1
0235   2???               M         call        StickerColours
0236   2???               M         call        WR_DATA
0237   2???           00859         call            HalfS
0238   2???           00860         call            HalfS
                      00861         
0239   0008           00862         return
                      00863 
                      00864         
023A                  00865 DisplayUSSensor1
                      00866         
023A   2???           00867         call            Read1_US
023B   2???           00868         call            ClrLCD
023C   00DA           00869         movwf           isBinThere                  ;sets the bin bit 1 or 0
                      00870         PrintYN         isBinThere
023D   085A               M         movfw       isBinThere
023E   2???               M         call        ColumnValues
023F   2???               M         call        WR_DATA
0240   2???           00871         call            HalfS
0241   2???           00872         call            HalfS
                      00873         
0242   0008           00874         return
                      00875         
0243                  00876 DisplayUSSensor2
                      00877         
0243   2???           00878         call            Read2_US
0244   2???           00879         call            ClrLCD
0245   00D9           00880         movwf           isColumnThere               ;sets the bin bit 1 or 0
                      00881         PrintYN         isColumnThere
0246   0859               M         movfw       isColumnThere
0247   2???               M         call        ColumnValues
0248   2???               M         call        WR_DATA
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0249   2???           00882         call            HalfS
024A   2???           00883         call            HalfS
                      00884         
024B   0008           00885         return
                      00886         
024C                  00887 StdRotation1
                      00888         
024C   1863           00889         btfsc       LEDcounter1,0
024D   2???           00890         goto        $+4
024E   1287           00891         bcf             Std1
024F   1463           00892         bsf         LEDcounter1,0
0250   0008           00893         return
                      00894         
0251   1687           00895         bsf             Std1
0252   1063           00896         bcf         LEDcounter1,0
0253   0008           00897         return
                      00898         
0254                  00899 StdRotation2
                      00900         
0254   1864           00901         btfsc       LEDcounter2,0
0255   2???           00902         goto        $+4
0256   1707           00903         bsf             Std2
0257   1464           00904         bsf         LEDcounter2,0
0258   0008           00905         return
                      00906         
                      00907         
0259   1307           00908         bcf             Std2
025A   1064           00909         bcf         LEDcounter2,0
025B   0008           00910         return
                      00911         
025C                  00912 StdRotation3
                      00913         
025C   1865           00914         btfsc       LEDcounter3,0
025D   2???           00915         goto        $+4
025E   1787           00916         bsf             Std3
025F   1465           00917         bsf         LEDcounter3,0
0260   0008           00918         return
                      00919         
                      00920         
0261   1387           00921         bcf             Std3
0262   1065           00922         bcf         LEDcounter3,0
0263   0008           00923         return
                      00924         
0264                  00925 StdRotation1Backwards
                      00926         
0264   1866           00927         btfsc       LEDcounter4,0
0265   2???           00928         goto        $+4
0266   1506           00929         bsf             Std1Backwards
0267   1466           00930         bsf         LEDcounter4,0
0268   0008           00931         return
                      00932         
0269   1106           00933         bcf             Std1Backwards
026A   1066           00934         bcf         LEDcounter4,0
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026B   0008           00935         return
                      00936         
026C                  00937 StdRotation2Backwards
                      00938         
026C   1867           00939         btfsc       LEDcounter5,0
026D   2???           00940         goto        $+4
026E   1586           00941         bsf             Std2Backwards
026F   1467           00942         bsf         LEDcounter5,0
0270   0008           00943         return
                      00944         
0271   1186           00945         bcf             Std2Backwards
0272   1067           00946         bcf         LEDcounter5,0
0273   0008           00947         return
                      00948 
0274                  00949 StdRotation3Backwards
                      00950         
0274   1868           00951         btfsc       LEDcounter6,0
0275   2???           00952         goto        $+4
0276   1407           00953         bsf             Std3Backwards
0277   1468           00954         bsf         LEDcounter6,0
0278   0008           00955         return
                      00956         
0279   1007           00957         bcf             Std3Backwards
027A   1068           00958         bcf         LEDcounter6,0
027B   0008           00959         return
                      00960         
                      00961         
027C                  00962 PWMFWD  
                      00963         
                      00964     ;************ FIRST PWM - Negative one******************************                    To stop it, 
                            clear CCP1RL and/or CCPR2L 
                      00965     
                      00966     ;save   pr2 value so that you can zero it after
                      00967     
                      00968  
                      00969     
027C   1869           00970     btfsc           LEDcounter7,0
027D   2???           00971     goto            $+4
027E   0197           00972     clrf            CCP1CON
027F   1469           00973     bsf             LEDcounter7,0
0280   0008           00974     return
                      00975     
0281   1683 1303      00976     BANKSEL TRISC
0283   1107           00977     BCF     TRISC, 2            ;set CCP1 as output             ;CCP1 is RC2 and CCP2 is RC1
                      00978     
0284   0817           00979     MOVF     CCP1CON,W          ;set CCP1 as PWM
0285   39F0           00980     ANDLW    0xF0
0286   380C           00981     IORLW    0x0C
0287   0097           00982     MOVWF    CCP1CON
                      00983 
0288   0812           00984     movfw   PR2
0289   00D0           00985     movwf   pr2temp
                      00986     
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00987     ;11000011
028A   30C3           00988     MOVLW    b'11000011'        ;set highest PWM value
028B   1683 1303      00989     BANKSEL  PR2                
028D   0092           00990     MOVWF    PR2                
028E   1283 1303      00991     BANKSEL  TMR2               
                      00992     
0290   1492           00993     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      00994     
0291   0195           00995     CLRF    CCPR1L              ;set PWM to zero
                      00996     
0292   1712           00997     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
0293   1692           00998     BSF     T2CON, TOUTPS2
0294   1612           00999     BSF     T2CON, TOUTPS1
0295   1592           01000     BSF     T2CON, TOUTPS0
                      01001     
                      01002     ; SET PWM duty cycle
                      01003     ;01001110
0296   1697           01004     BSF     CCP1CON, 5                          ; change 1s here to 2 to get two pwm bro
0297   1617           01005     BSF     CCP1CON, 4
                      01006     MOVLF   B'01100001', CCPR1L                 ; previous was 01101
0298   3061               M     MOVLW  B'01100001'  ; move literal into working register
0299   0095               M     MOVWF   CCPR1L      ; move working register into reg
029A   1597           01007     BSF     CCP1CON, 3
029B   1517           01008     BSF     CCP1CON, 2
                      01009     
029C   1512           01010     BSF     T2CON, TMR2ON       ;and start the timer running
                      01011     
029D   1069           01012     bcf             LEDcounter7,0
                      01013     
029E   0008           01014     return
                      01015     
029F                  01016 PWMBACK
                      01017     
                      01018     ;************ SECOND PWM - Positive one ******************************
                      01019     
029F   1C6A           01020     btfss           LEDcounter8,0
02A0   2???           01021     goto            $+4
02A1   019D           01022     clrf            CCP2CON
                      01023     ;bcf                    PORTC,1
02A2   106A           01024     bcf             LEDcounter8,0
02A3   0008           01025     return
                      01026     
                      01027  
                      01028     
02A4   1683 1303      01029     BANKSEL TRISC
02A6   1087           01030     BCF     TRISC, 1            ;set CCP2 as output             ;CCP1 is RC2 and CCP2 is RC1
                      01031     
02A7   081D           01032     MOVF     CCP2CON,W          ;set CCP2 as PWM
02A8   39F0           01033     ANDLW    0xF0
02A9   380C           01034     IORLW    0x0C
02AA   009D           01035     MOVWF    CCP2CON
                      01036     
                      01037     ;11000011
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02AB   30C3           01038     MOVLW    b'11000011'        ;set highest PWM value
02AC   1683 1303      01039     BANKSEL  PR2                
02AE   0092           01040     MOVWF    PR2                
02AF   1283 1303      01041     BANKSEL  TMR2               
                      01042     
02B1   1492           01043     BSF     T2CON,T2CKPS1       ;set prescaler to 16
                      01044     
02B2   019B           01045     CLRF    CCPR2L              ;set PWM to zero
                      01046     
02B3   1712           01047     BSF     T2CON, TOUTPS3      ; Set Postscale to 16
02B4   1692           01048     BSF     T2CON, TOUTPS2
02B5   1612           01049     BSF     T2CON, TOUTPS1
02B6   1592           01050     BSF     T2CON, TOUTPS0
                      01051     
                      01052     ; SET PWM duty cycle
                      01053     ;01001110
02B7   169D           01054     BSF     CCP2CON, 5                          ; change 1s here to 2 to get two pwm bro
02B8   161D           01055     BSF     CCP2CON, 4
02B9   3061           01056     MOVLW   B'01100001'
02BA   009B           01057     MOVWF   CCPR2L      
02BB   159D           01058     BSF     CCP2CON, 3
02BC   151D           01059     BSF     CCP2CON, 2
                      01060     
02BD   1512           01061     BSF     T2CON, TMR2ON       ;and start the timer running
02BE   1283           01062     BCF     STATUS,RP0
                      01063     
                      01064     ;bsf                    PORTC,1
                      01065     
02BF   146A           01066     bsf             LEDcounter8,0
                      01067     
02C0   0008           01068     return
                      01069     
02C1                  01070 PWMSTOP
                      01071     
02C1   0197           01072     clrf   CCP1CON
02C2   019D           01073     clrf   CCP2CON
02C3   0850           01074     movfw   pr2temp
02C4   0092           01075     movwf   PR2
                      01076     
02C5   0008           01077     return
                      01078         
                      01079         
                      01080 ;***************************************
                      01081 ; LCD control
                      01082 ;***************************************
02C6                  01083 Switch_Lines
02C6   30C0           01084                 movlw   B'11000000'
02C7   2???           01085                 call    WR_INS
02C8   0008           01086                 return
                      01087 
02C9                  01088 Clear_Display
02C9   3001           01089                 movlw   B'00000001'
02CA   2???           01090                 call    WR_INS
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02CB   0008           01091                 return
                      01092 
                      01093 ;***************************************
                      01094 ; Delay 0.5s
                      01095 ;***************************************
02CC                  01096 HalfS   
  0000                01097         local   HalfS_0
02CC   3088           01098       movlw 0x88
02CD   00B0           01099       movwf COUNTH
02CE   30BD           01100       movlw 0xBD
02CF   00B1           01101       movwf COUNTM
02D0   3003           01102       movlw 0x03
02D1   00B2           01103       movwf COUNTL
                      01104 
02D2                  01105 HalfS_0
02D2   0BB0           01106       decfsz COUNTH, f
02D3   2???           01107       goto   $+2
02D4   0BB1           01108       decfsz COUNTM, f
02D5   2???           01109       goto   $+2
02D6   0BB2           01110       decfsz COUNTL, f
02D7   2???           01111       goto   HalfS_0
                      01112 
02D8   2???           01113       goto $+1
02D9   0000           01114       nop
02DA   0000           01115       nop
02DB   0008           01116                 return
                      01117                 
                      01118 ;***************************************
                      01119 ; Delay: ~ 5ms
                      01120 ;***************************************
02DC                  01121 DELAY1 
                      01122                                 ;4998 cycles
02DC   30E7           01123         movlw   0xE7
02DD   00B5           01124         movwf   lcd_d1
02DE   3004           01125         movlw   0x04
02DF   00B6           01126         movwf   lcd_d2
02E0                  01127 Delay_0
02E0   0BB5           01128         decfsz  lcd_d1, f
02E1   2???           01129         goto    $+2
02E2   0BB6           01130         decfsz  lcd_d2, f
02E3   2???           01131         goto    Delay_0
                      01132 
                      01133                         ;2 cycles
02E4   2???           01134         goto    $+1
02E5   0008           01135         return
                      01136         
                      01137 ;***************************************
                      01138 ; Delay: ~10us
                      01139 ;***************************************
02E6                  01140 delay10us
02E6   3014           01141     movlw       d'20'
02E7   00E1           01142     movwf       delay3
02E8                  01143 Delay10usLoop
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E8   0BE1           01144     decfsz      delay3, f
02E9   2???           01145     goto        Delay10usLoop
02EA   0008           01146     return
                      01147 
                      01148 ;***************************************
                      01149 ;Init_TMR0
                      01150 ;   Input:  RA4
                      01151 ;   Output: TMR0 register
                      01152 ;   desc:   Counts the clock pulses for the
                      01153 ;           rotary encoder
                      01154 ;****************************************
02EB                  01155 Init_TMR0                           ; INITIALIZE TIMER 0   
02EB   1683 1303      01156     BANKSEL OPTION_REG
                      01157     MOVLF   B'00101000', OPTION_REG
02ED   3028               M     MOVLW  B'00101000'  ; move literal into working register
02EE   0081               M     MOVWF   OPTION_REG  ; move working register into reg
                      01158     ;       B'0xxxxxxx'     RBPU - Set pull ups (0-enabled, 1-disabled)
                      01159     ;       B'x1xxxxxx'     INTEDG - Interupt on rising edge
                      01160     ;       B'xx1xxxxx'     T0CS - External clock on Pin RA4
                      01161     ;       B'xxx0xxxx'     T0SE - 0-Increment on low-to-high transition on T0CKI pin
                      01162     ;       B'xxxx1xxx'     PSA - Prescaler assigned to WDT
                      01163     ;       B'xxxxx0xx'     PS2 - Prescaler of 1:1
                      01164     ;       B'xxxxxx0x'     PS1 - Prescaler of 1:1
                      01165     ;       B'xxxxxxx0'     PS0 - Prescaler of 1:1
02EF   1283 1303      01166     BANKSEL TMR0
02F1   0181           01167     CLRF   TMR0                     ; Clear timer 0
02F2   0008           01168     return  
                      01169     
                      01170 ;************************************
                      01171 ; RTC Sublabels
                      01172 ;************************************
                      01173     
02F3                  01174 show_RTC
                      01175                 ;clear LCD screen
02F3   3001           01176                 movlw   b'00000001'
02F4   2???           01177                 call    WR_INS
                      01178 
                      01179                 ;Get year
02F5   3032           01180                 movlw   "2"                             ;First line shows 20**/**/**
02F6   2???           01181                 call    WR_DATA
02F7   3030           01182                 movlw   "0"
02F8   2???           01183                 call    WR_DATA
                      01184                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
02F9   3006               M         movlw   0x06
02FA   1283 1303          M         banksel 0x73
02FC   00F3               M         movwf   0x73
02FD   2???               M         call    read_rtc
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02FE   1283 1303          M         banksel 0x75
0300   0875               M         movf    0x75,w
0301   2???               M         call    rtc_convert   
0302   0877           01185                 movfw   0x77
0303   2???           01186                 call    WR_DATA
0304   0878           01187                 movfw   0x78
0305   2???           01188                 call    WR_DATA
                      01189 
0306   302F           01190                 movlw   "/"
0307   2???           01191                 call    WR_DATA
                      01192 
                      01193                 ;Get month
                      01194                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0308   3005               M         movlw   0x05
0309   1283 1303          M         banksel 0x73
030B   00F3               M         movwf   0x73
030C   2???               M         call    read_rtc
030D   1283 1303          M         banksel 0x75
030F   0875               M         movf    0x75,w
0310   2???               M         call    rtc_convert   
0311   0877           01195                 movfw   0x77
0312   2???           01196                 call    WR_DATA
0313   0878           01197                 movfw   0x78
0314   2???           01198                 call    WR_DATA
                      01199 
0315   302F           01200                 movlw   "/"
0316   2???           01201                 call    WR_DATA
                      01202 
                      01203                 ;Get day
                      01204                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0317   3004               M         movlw   0x04
0318   1283 1303          M         banksel 0x73
031A   00F3               M         movwf   0x73
031B   2???               M         call    read_rtc
031C   1283 1303          M         banksel 0x75
031E   0875               M         movf    0x75,w
031F   2???               M         call    rtc_convert   
0320   0877           01205                 movfw   0x77
0321   2???           01206                 call    WR_DATA
0322   0878           01207                 movfw   0x78
0323   2???           01208                 call    WR_DATA
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01209 
0324   30C0           01210                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
0325   2???           01211                 call    WR_INS
                      01212 
                      01213                 ;Get hour
                      01214                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0326   3002               M         movlw   0x02
0327   1283 1303          M         banksel 0x73
0329   00F3               M         movwf   0x73
032A   2???               M         call    read_rtc
032B   1283 1303          M         banksel 0x75
032D   0875               M         movf    0x75,w
032E   2???               M         call    rtc_convert   
032F   0877           01215                 movfw   0x77
0330   2???           01216                 call    WR_DATA
0331   0878           01217                 movfw   0x78
0332   2???           01218                 call    WR_DATA
0333   303A           01219                 movlw                   ":"
0334   2???           01220                 call    WR_DATA
                      01221 
                      01222                 ;Get minute             
                      01223                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0335   3001               M         movlw   0x01
0336   1283 1303          M         banksel 0x73
0338   00F3               M         movwf   0x73
0339   2???               M         call    read_rtc
033A   1283 1303          M         banksel 0x75
033C   0875               M         movf    0x75,w
033D   2???               M         call    rtc_convert   
033E   0877           01224                 movfw   0x77
033F   2???           01225                 call    WR_DATA
0340   0878           01226                 movfw   0x78
0341   2???           01227                 call    WR_DATA         
0342   303A           01228                 movlw                   ":"
0343   2???           01229                 call    WR_DATA
                      01230                 
                      01231                 ;Get seconds
                      01232                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0344   3000               M         movlw   0x00
0345   1283 1303          M         banksel 0x73
0347   00F3               M         movwf   0x73
0348   2???               M         call    read_rtc
0349   1283 1303          M         banksel 0x75
034B   0875               M         movf    0x75,w
034C   2???               M         call    rtc_convert   
034D   0877           01233                 movfw   0x77
034E   2???           01234                 call    WR_DATA
034F   0878           01235                 movfw   0x78
0350   2???           01236                 call    WR_DATA
                      01237                 
0351   2???           01238                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
                      01239                 ;goto   show_RTC                ;use return instead to check for key press
0352   0008           01240                 return
                      01241 
                      01242 ;***************************************
                      01243 ; Setup RTC with time defined by user
                      01244 ;***************************************
0353                  01245 set_rtc_time
                      01246 
                      01247                 rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0353   1283 1303          M         banksel         0x74
0355   01F4               M         clrf            0x74
0356   1283 1303          M         banksel         0x73
0358   01F3               M         clrf            0x73
0359   2???               M     call        write_rtc               ;Write 0 to Seconds
035A   1283 1303          M         banksel         0x73
035C   0AF3               M     incf        0x73                    ;Set register address to 1
035D   2???               M         call            write_rtc
035E   1283 1303          M         banksel         0x73
0360   0AF3               M     incf        0x73                    ;Set register address to 2
0361   2???               M         call            write_rtc
0362   1283 1303          M         banksel         0x73
0364   0AF3               M     incf        0x73                    ;Set register address to 3
0365   2???               M         call            write_rtc
0366   1283 1303          M         banksel         0x73
0368   0AF3               M     incf        0x73                    ;Set register address to 4
0369   2???               M         call            write_rtc
036A   1283 1303          M         banksel         0x73
036C   0AF3               M     incf        0x73                    ;Set register address to 5
036D   2???               M         call            write_rtc
036E   1283 1303          M         banksel         0x73
0370   0AF3               M     incf        0x73                    ;Set register address to 6
0371   2???               M         call            write_rtc
                      01248 
                      01249                 rtc_set 0x00,   B'10000000'
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0372   1283 1303          M         banksel 0x73
0374   3000               M         movlw   0x00
0375   00F3               M         movwf   0x73
0376   1283 1303          M         banksel 0x74
0378   3080               M         movlw   B'10000000'
0379   00F4               M         movwf   0x74    
037A   2???               M         call    write_rtc
                      01250 
                      01251                 ;set time 
                      01252                 rtc_set 0x06,   B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
037B   1283 1303          M         banksel 0x73
037D   3006               M         movlw   0x06
037E   00F3               M         movwf   0x73
037F   1283 1303          M         banksel 0x74
0381   3016               M         movlw   B'00010110'
0382   00F4               M         movwf   0x74    
0383   2???               M         call    write_rtc
                      01253                 rtc_set 0x05,   B'00000010'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0384   1283 1303          M         banksel 0x73
0386   3005               M         movlw   0x05
0387   00F3               M         movwf   0x73
0388   1283 1303          M         banksel 0x74
038A   3002               M         movlw   B'00000010'
038B   00F4               M         movwf   0x74    
038C   2???               M         call    write_rtc
                      01254                 rtc_set 0x04,   B'00010110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
038D   1283 1303          M         banksel 0x73
038F   3004               M         movlw   0x04
0390   00F3               M         movwf   0x73
0391   1283 1303          M         banksel 0x74
0393   3016               M         movlw   B'00010110'
0394   00F4               M         movwf   0x74    
0395   2???               M         call    write_rtc
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01255                 rtc_set 0x03,   B'00100001'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0396   1283 1303          M         banksel 0x73
0398   3003               M         movlw   0x03
0399   00F3               M         movwf   0x73
039A   1283 1303          M         banksel 0x74
039C   3021               M         movlw   B'00100001'
039D   00F4               M         movwf   0x74    
039E   2???               M         call    write_rtc
                      01256                 rtc_set 0x02,   B'00000001'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
039F   1283 1303          M         banksel 0x73
03A1   3002               M         movlw   0x02
03A2   00F3               M         movwf   0x73
03A3   1283 1303          M         banksel 0x74
03A5   3001               M         movlw   B'00000001'
03A6   00F4               M         movwf   0x74    
03A7   2???               M         call    write_rtc
                      01257                 rtc_set 0x01,   B'00110101'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03A8   1283 1303          M         banksel 0x73
03AA   3001               M         movlw   0x01
03AB   00F3               M         movwf   0x73
03AC   1283 1303          M         banksel 0x74
03AE   3035               M         movlw   B'00110101'
03AF   00F4               M         movwf   0x74    
03B0   2???               M         call    write_rtc
                      01258                 rtc_set 0x00,   B'01010000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
03B1   1283 1303          M         banksel 0x73
03B3   3000               M         movlw   0x00
03B4   00F3               M         movwf   0x73
03B5   1283 1303          M         banksel 0x74
03B7   3050               M         movlw   B'01010000'
03B8   00F4               M         movwf   0x74    
03B9   2???               M         call    write_rtc
03BA   0008           01259                 return
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01260 
                      01261 
                      01262 ;***************************************
                      01263 ; Delay 1s
                      01264 ;***************************************
03BB                  01265 OneS
  0000                01266                 local   OneS_0
03BB   3010           01267       movlw 0x10
03BC   00B0           01268       movwf COUNTH
03BD   307A           01269       movlw 0x7A
03BE   00B1           01270       movwf COUNTM
03BF   3006           01271       movlw 0x06
03C0   00B2           01272       movwf COUNTL
                      01273 
03C1                  01274 OneS_0
03C1   0BB0           01275       decfsz COUNTH, f
03C2   2???           01276       goto   $+2
03C3   0BB1           01277       decfsz COUNTM, f
03C4   2???           01278       goto   $+2
03C5   0BB2           01279       decfsz COUNTL, f
03C6   2???           01280       goto   OneS_0
                      01281 
03C7   2???           01282       goto $+1
03C8   0000           01283       nop
03C9   0000           01284       nop
03CA   0008           01285                 return
                      01286 
                      01287 ;***************************************
                      01288 ; Print sticker values
                      01289 ;***************************************
03CB                  01290 PrintBlackSticker
03CB   3000           01291         movlw       b'0'
03CC   2???           01292         call        StickerColours
03CD   2???           01293         call        WR_DATA
03CE   0008           01294         return
                      01295 
03CF                  01296 PrintWhiteSticker
03CF   3001           01297         movlw       b'1'
03D0   2???           01298         call        StickerColours
03D1   2???           01299         call        WR_DATA
03D2   0008           01300         return
                      01301         
                      01302 ;***************************************
                      01303 ; Look up table
                      01304 ;***************************************
                      01305     
03D3                  01306 Welcome_Msg
                      01307         
                      01308         ;Change Page
03D3   00BA           01309         movwf   Temp
03D4   30??           01310         movlw   HIGH Welcome_MsgEntries
03D5   008A           01311         movwf   PCLATH
03D6   083A           01312         movf    Temp,w
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D7   3E??           01313         addlw   LOW Welcome_MsgEntries
03D8   1803           01314         btfsc   STATUS,C
03D9   0A8A           01315             incf    PCLATH,f
03DA   0082           01316         movwf   PCL     
03DB   0782           01317         addwf    PCL,F
03DC                  01318 Welcome_MsgEntries
03DC   3431 343A 3453 01319         dt        "1:Start|#/D:PWM|2:Col|3:B/W", 0
       3474 3461 3472 
       3474 347C 3423 
       342F 3444 343A 
       3450 3457 344D 
       347C 3432 343A 
       3443 346F 346C 
       347C 3433 343A 
       3442 342F 3457 
       3400 
                      01320         
03F8                  01321 Welcome_Msg2
                      01322         
                      01323         ;Change Page
03F8   00BA           01324         movwf   Temp
03F9   30??           01325         movlw   HIGH Welcome_Msg2Entries
03FA   008A           01326         movwf   PCLATH
03FB   083A           01327         movf    Temp,w
03FC   3E??           01328         addlw   LOW Welcome_Msg2Entries
03FD   1803           01329         btfsc   STATUS,C
03FE   0A8A           01330             incf    PCLATH,f
03FF   0082           01331         movwf   PCL     
0400   0782           01332         addwf    PCL,F
0401                  01333 Welcome_Msg2Entries
0401   3435 343A 3441 01334         dt        "5:AddBin|6:Stickers|7:B/Wstore", 0
       3464 3464 3442 
       3469 346E 347C 
       3436 343A 3453 
       3474 3469 3463 
       346B 3465 3472 
       3473 347C 3437 
       343A 3442 342F 
       3457 3473 3474 
       346F 3472 3465 
       3400 
                      01335         
0420                  01336 Operation
                      01337         
                      01338         ;Change Page
0420   00BA           01339         movwf    Temp
0421   30??           01340         movlw   HIGH OperationEntries
0422   008A           01341         movwf   PCLATH
0423   083A           01342         movf    Temp,w
0424   3E??           01343         addlw   LOW OperationEntries
0425   1803           01344         btfsc   STATUS,C
0426   0A8A           01345             incf    PCLATH,f
0427   0082           01346         movwf   PCL
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0428   0782           01347         addwf    PCL,F
0429                  01348 OperationEntries
0429   344F 3470 3465 01349         dt        "Operating...",0
       3472 3461 3474 
       3469 346E 3467 
       342E 342E 342E 
       3400 
                      01350 
0436                  01351 WantResults
                      01352         
                      01353         ;Change Page
0436   00BA           01354         movwf    Temp
0437   30??           01355         movlw   HIGH WantResultsEntries
0438   008A           01356         movwf   PCLATH
0439   083A           01357         movf    Temp,w
043A   3E??           01358         addlw   LOW WantResultsEntries
043B   1803           01359         btfsc   STATUS,C
043C   0A8A           01360             incf    PCLATH,f
043D   0082           01361         movwf   PCL
043E   0782           01362         addwf    PCL,F
043F                  01363 WantResultsEntries
043F   3450 3472 3465 01364         dt        "Press 2 to display results",0
       3473 3473 3420 
       3432 3420 3474 
       346F 3420 3464 
       3469 3473 3470 
       346C 3461 3479 
       3420 3472 3465 
       3473 3475 346C 
       3474 3473 3400 
                      01365 
                      01366 
045A                  01367 WantRotate
                      01368                 
                      01369         ;Change Page
045A   00BA           01370         movwf    Temp
045B   30??           01371         movlw   HIGH WantRotateEntries
045C   008A           01372         movwf   PCLATH
045D   083A           01373         movf    Temp,w
045E   3E??           01374         addlw   LOW WantRotateEntries
045F   1803           01375         btfsc   STATUS,C
0460   0A8A           01376             incf    PCLATH,f
0461   0082           01377         movwf   PCL
0462   0782           01378         addwf    PCL,F
0463                  01379 WantRotateEntries
0463   3450 3472 3465 01380         dt        "Press A to rotate screen",0
       3473 3473 3420 
       3441 3420 3474 
       346F 3420 3472 
       346F 3474 3461 
       3474 3465 3420 
       3473 3463 3472 
       3465 3465 346E 
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3400 
                      01381         
047C                  01382 Results1 
                      01383                 
                      01384         ;Change Page
047C   00BA           01385         movwf    Temp
047D   30??           01386         movlw   HIGH Results1Entries
047E   008A           01387         movwf   PCLATH
047F   083A           01388         movf    Temp,w
0480   3E??           01389         addlw   LOW Results1Entries
0481   1803           01390         btfsc   STATUS,C
0482   0A8A           01391             incf    PCLATH,f
0483   0082           01392         movwf   PCL
0484   0782           01393         addwf    PCL,F
0485                  01394 Results1Entries 
0485   3433 343A 3420 01395         dt        "3: PWM test, 4: Sensor Test",0
       3450 3457 344D 
       3420 3474 3465 
       3473 3474 342C 
       3420 3434 343A 
       3420 3453 3465 
       346E 3473 346F 
       3472 3420 3454 
       3465 3473 3474 
       3400 
                      01396         
04A1                  01397 Results2
                      01398         
                      01399         ;Change Page
04A1   00BA           01400         movwf    Temp
04A2   30??           01401         movlw   HIGH Results2Entries
04A3   008A           01402         movwf   PCLATH
04A4   083A           01403         movf    Temp,w
04A5   3E??           01404         addlw   LOW Results2Entries
04A6   1803           01405         btfsc   STATUS,C
04A7   0A8A           01406             incf    PCLATH,f
04A8   0082           01407         movwf   PCL     
04A9   0782           01408         addwf    PCL,F
04AA                  01409 Results2Entries 
04AA   3436 343A 3420 01410         dt        "6: bin locations, 8: operation time",0
       3462 3469 346E 
       3420 346C 346F 
       3463 3461 3474 
       3469 346F 346E 
       3473 342C 3420 
       3438 343A 3420 
       346F 3470 3465 
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
       346D 3465 3400 
                      01411         
04CE                  01412 Bins
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01413         ;Change Page
04CE   00BA           01414         movwf    Temp
04CF   30??           01415         movlw   HIGH BinsEntries
04D0   008A           01416         movwf   PCLATH
04D1   083A           01417         movf    Temp,w
04D2   3E??           01418         addlw   LOW BinsEntries
04D3   1803           01419         btfsc   STATUS,C
04D4   0A8A           01420             incf    PCLATH,f
04D5   0082           01421         movwf   PCL     
04D6   0782           01422         addwf    PCL,F
04D7                  01423 BinsEntries
04D7   3434 3420 3462 01424         dt        "4 bins in total",0
       3469 346E 3473 
       3420 3469 346E 
       3420 3474 346F 
       3474 3461 346C 
       3400 
                      01425         
04E7                  01426 StickerStatus
                      01427         
                      01428         ;Change Page
04E7   00BA           01429         movwf    Temp
04E8   30??           01430         movlw   HIGH StickerStatusEntries
04E9   008A           01431         movwf   PCLATH
04EA   083A           01432         movf    Temp,w
04EB   3E??           01433         addlw   LOW StickerStatusEntries
04EC   1803           01434         btfsc   STATUS,C
04ED   0A8A           01435             incf    PCLATH,f
04EE   0082           01436         movwf   PCL     
04EF   0782           01437         addwf    PCL,F
04F0                  01438 StickerStatusEntries
04F0   3442 3442 3457 01439         dt        "BBWBWWWB",0
       3442 3457 3457 
       3457 3442 3400 
                      01440         
04F9                  01441 BinLocations
                      01442         ;Change Page
04F9   00BA           01443         movwf    Temp
04FA   30??           01444         movlw   HIGH BinLocationsEntries
04FB   008A           01445         movwf   PCLATH
04FC   083A           01446         movf    Temp,w
04FD   3E??           01447         addlw   LOW BinLocationsEntries
04FE   1803           01448         btfsc   STATUS,C
04FF   0A8A           01449             incf    PCLATH,f
0500   0082           01450         movwf   PCL     
0501   0782           01451         addwf    PCL,F
0502                  01452 BinLocationsEntries
0502   3430 342E 3433 01453         dt        "0.35,0.56,0.79",0
       3435 342C 3430 
       342E 3435 3436 
       342C 3430 342E 
       3437 3439 3400 
                      01454         
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0511                  01455 OperationTime
                      01456         ;Change Page
0511   00BA           01457         movwf    Temp
0512   30??           01458         movlw   HIGH OperationTimeEntries
0513   008A           01459         movwf   PCLATH
0514   083A           01460         movf    Temp,w
0515   3E??           01461         addlw   LOW OperationTimeEntries
0516   1803           01462         btfsc   STATUS,C
0517   0A8A           01463             incf    PCLATH,f
0518   0082           01464         movwf   PCL     
0519   0782           01465         addwf    PCL,F
051A                  01466 OperationTimeEntries
051A   344D 346F 3476 01467         dt        "Moving Arm",0
       3469 346E 3467 
       3420 3441 3472 
       346D 3400 
                      01468         
0525                  01469 ReceivedInput
                      01470         ;Change Page
0525   00BA           01471         movwf    Temp
0526   30??           01472         movlw   HIGH ReceivedInputEntries
0527   008A           01473         movwf   PCLATH
0528   083A           01474         movf    Temp,w
0529   3E??           01475         addlw   LOW ReceivedInputEntries
052A   1803           01476         btfsc   STATUS,C
052B   0A8A           01477             incf    PCLATH,f
052C   0082           01478         movwf   PCL     
052D   0782           01479         addwf    PCL,F
052E                  01480 ReceivedInputEntries
052E   3474 3461 346B 01481         dt        "takin in large value",0
       3469 346E 3420 
       3469 346E 3420 
       346C 3461 3472 
       3467 3465 3420 
       3476 3461 346C 
       3475 3465 3400 
                      01482         
0543                  01483 SmallValueInput
                      01484         ;Change Page
0543   00BA           01485         movwf    Temp
0544   30??           01486         movlw   HIGH SmallValueInputEntries
0545   008A           01487         movwf   PCLATH
0546   083A           01488         movf    Temp,w
0547   3E??           01489         addlw   LOW SmallValueInputEntries
0548   1803           01490         btfsc   STATUS,C
0549   0A8A           01491             incf    PCLATH,f
054A   0082           01492         movwf   PCL     
054B   0782           01493         addwf    PCL,F
054C                  01494 SmallValueInputEntries
054C   3473 346D 3461 01495         dt        "small value",0
       346C 346C 3420 
       3476 3461 346C 
       3475 3465 3400 
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01496         
0558                  01497 DectoChar
                      01498         
                      01499         ;Change Page
0558   00BA           01500         movwf   Temp
0559   30??           01501         movlw   HIGH DectoCharEntries
055A   008A           01502         movwf   PCLATH
055B   083A           01503         movf    Temp,w
055C   3E??           01504         addlw   LOW DectoCharEntries
055D   1803           01505         btfsc   STATUS,C
055E   0A8A           01506             incf    PCLATH,f
055F   0082           01507         movwf   PCL     
0560   0782           01508         addwf    PCL,F
0561                  01509 DectoCharEntries
0561   3430 3431 3432 01510         dt        "0123456789",  0
       3433 3434 3435 
       3436 3437 3438 
       3439 3400 
                      01511         
056C                  01512 StickerColours
                      01513         
                      01514         ;Change Page
056C   00BA           01515         movwf   Temp
056D   30??           01516         movlw   HIGH StickerColoursEntries
056E   008A           01517         movwf   PCLATH
056F   083A           01518         movf    Temp,w
0570   3E??           01519         addlw   LOW StickerColoursEntries
0571   1803           01520         btfsc   STATUS,C
0572   0A8A           01521             incf    PCLATH,f
0573   0082           01522         movwf   PCL     
0574   0782           01523         addwf    PCL,F
0575                  01524 StickerColoursEntries
0575   3442 3457 3400 01525         dt        "BW",  0
                      01526         
0578                  01527 ColumnValues
                      01528         
                      01529         ;Change Page
0578   00BA           01530         movwf   Temp
0579   30??           01531         movlw   HIGH ColumnValuesEntries
057A   008A           01532         movwf   PCLATH
057B   083A           01533         movf    Temp,w
057C   3E??           01534         addlw   LOW ColumnValuesEntries
057D   1803           01535         btfsc   STATUS,C
057E   0A8A           01536             incf    PCLATH,f
057F   0082           01537         movwf   PCL     
0580   0782           01538         addwf    PCL,F
0581                  01539 ColumnValuesEntries
0581   344E 3459 3400 01540         dt        "NY",  0
                      01541 
                      01542     
3F72                  01543         END
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               
ADDEN                             00000003
ADDL                              
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AddBin                            000001FE
BANK0                             
BANK1                             
BANK2                             
BANK3                             
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
Back1                             00000049
Back2                             0000004A
Back3                             0000004B
Back4                             0000004C
Back5                             0000004D
Back6                             0000004E
Back7                             0000004F
BinLocations                      000004F9
BinLocationsDisplay               000001D8
BinLocationsEntries               00000502
Bins                              000004CE
BinsDisplay                       000001CC
BinsEntries                       000004D7
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000030
COUNTL                            00000032
COUNTM                            00000031
CREN                              00000004
CSRC                              00000007
Clear_Display                     000002C9
ClrLCD                            00000000
ColMotor                          PORTC,7
ColumnValues                      00000578
ColumnValuesEntries               00000581
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DCMotor                           PORTC,6
DELAY1                            000002DC
D_A                               00000005
D_NOT_A                           00000005
DectoChar                         00000558
DectoCharEntries                  00000561
Delay10usLoop                     000002E8
Delay_0                           000002E0
Display                           
DisplayBlackWhiteIR1              00000226
DisplayBlackWhiteIR2              00000230
DisplayUSSensor1                  0000023A
DisplayUSSensor2                  00000243
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

FSR                               00000004
Finalize                          0000019E
Front1                            00000042
Front2                            00000043
Front3                            00000044
Front4                            00000045
Front5                            00000046
Front6                            00000047
Front7                            00000048
FrontLoop                         00000211
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000002CC
Hund                              00000055
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IR1                               PORTA,0
IR2                               PORTA,1
IRP                               00000007
InitLCD                           00000000
Init_TMR0                         000002EB
Key                               
KeypadandLCD                      0000007A
LCDConversionFront                000000F7
LCD_DELAY                         
LED                               PORTB,0
LEDControlON                      0000021E
LEDcounter0                       00000062
LEDcounter1                       00000063
LEDcounter2                       00000064
LEDcounter3                       00000065
LEDcounter4                       00000066
LEDcounter5                       00000067
LEDcounter6                       00000068
LEDcounter7                       00000069
LEDcounter8                       0000006A
Lb1                               00000022
Lb2                               00000026
Lb3                               0000002A
Lb4                               0000002E
ListDisplay                       000001B5
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

Location1                         0000003B
Location2                         0000003C
Location3                         0000003D
Location4                         0000003E
Location5                         0000003F
Location6                         00000040
Location7                         00000041
MOV                               
MOVLF                             
MoveBackwards                     000000F5
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
Next                              0000021D
NumH                              00000051
NumL                              00000052
NumOfBins                         00000060
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              000003BB
Ones                              00000057
Operation                         00000420
OperationEntries                  00000429
OperationTime                     00000511
OperationTimeDisplay              000001E4
OperationTimeEntries              0000051A
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWMBACK                           0000029F
PWMFWD                            0000027C
PWMSTOP                           000002C1
PrintBlackSticker                 000003CB
PrintCol                          
PrintNumber                       
PrintWhiteSticker                 000003CF
PrintYN                           
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RTCDisplay                        000001F4
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Read1_US                          00000146
Read1_US1                         00000164
Read2_US                          00000172
Read2_US1                         00000190
ReadBW                            00000120
ReceivedInput                     00000525
ReceivedInputEntries              0000052E
Results1                          0000047C
Results1Entries                   00000485
Results2                          000004A1
Results2Entries                   000004AA
Rotation                          
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

STATUS                            00000003
SYNC                              00000004
ShaftIR                           00000140
ShiftLeft                         000001F0
SmallValueInput                   00000543
SmallValueInputEntries            0000054C
StartInit                         000000CE
StartMove                         000000D3
Std1                              PORTC,5
Std1Backwards                     PORTB,2
Std2                              PORTC,6
Std2Backwards                     PORTB,3
Std3                              PORTC,7
Std3Backwards                     PORTC,0
StdRotation1                      0000024C
StdRotation1Backwards             00000264
StdRotation2                      00000254
StdRotation2Backwards             0000026C
StdRotation3                      0000025C
StdRotation3Backwards             00000274
StickerColours                    0000056C
StickerColoursEntries             00000575
StickerStatus                     000004E7
StickerStatusEntries              000004F0
Stickers                          00000209
Switch_Lines                      000002C6
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000033
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

Temp                              0000003A
TenK                              00000053
Tens                              00000056
Thou                              00000054
UA                                00000001
US1E1                             PORTA,2
US1E2                             PORTA,3
UST1                              PORTD,0
UST2                              PORTD,1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
WantResults                       00000436
WantResultsEntries                0000043F
WantRotate                        0000045A
WantRotateEntries                 00000463
Welcome_Msg                       000003D3
Welcome_Msg2                      000003F8
Welcome_Msg2Entries               00000401
Welcome_MsgEntries                000003DC
Z                                 00000002
_.org_0_007B                      0000007B
_.org_0_00CB                      000000CB
_.org_0_00FC                      000000FC
_.org_0_0122                      00000122
_.org_0_016C                      0000016C
_.org_0_016F                      0000016F
_.org_0_0198                      00000198
_.org_0_019B                      0000019B
_.org_0_021F                      0000021F
_.org_0_024D                      0000024D
_.org_0_0255                      00000255
_.org_0_025D                      0000025D
_.org_0_0265                      00000265
_.org_0_026D                      0000026D
_.org_0_0275                      00000275
_.org_0_027D                      0000027D
_.org_0_02A0                      000002A0
_.org_0_02D3                      000002D3
_.org_0_02D5                      000002D5
_.org_0_02D8                      000002D8
_.org_0_02E1                      000002E1
_.org_0_02E4                      000002E4
_.org_0_03C2                      000003C2
_.org_0_03C4                      000003C4
_.org_0_03C7                      000003C7
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
backstickerValues                 0000005C
backwardsDCMotor                  PORTC,5
bin16_BCD                         00000001
binCounter                        0000005D
com                               00000037
countdown                         0000005E
counter                           0000005F
dat                               00000038
delay10us                         000002E6
delay3                            00000061
distanceMoved                     00000058
frontstickerValues                0000005B
goback                            000000CD
i2c_common_setup                  00000000
init                              00000034
isBinThere                        0000005A
isColumnThere                     00000059
MPASM 5.65                          MAIN.ASM   3-15-2016  17:16:17         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

lcd_d1                            00000035
lcd_d2                            00000036
lcd_tmp                           00000034
pr2temp                           00000050
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      00000353
show_RTC                          000002F3
temp                              00000039
write_rtc                         00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    29 suppressed

